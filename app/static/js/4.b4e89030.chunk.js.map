{"version":3,"sources":["fabric/eig-util.ts","fabric/tensegrity-types.ts","fabric/tensegrity-optimizer.ts","bridge/bridge-logic.ts","fabric/fabric-instance.ts","gotchi/island-geometry.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/tensegrity-builder.ts","fabric/tenscript.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/life.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/patch.ts","gotchi/island.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","view/orbit.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/life-stage-button.tsx","view/shape-tab.tsx","view/feature-panel.tsx","view/realize-tab.tsx","view/strain-tab.tsx","view/tenscript-tab.tsx","view/view-tab.tsx","view/control-tabs.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","intervalRole","IntervalRole","NexusPush","ColumnPush","Triangle","Ring","Cross","BowMid","BowEnd","RibbonPush","RibbonShort","RibbonLong","RibbonHanger","FaceConnector","FaceDistancer","FaceAnchor","SpherePush","SpherePull","Version","ADJUSTABLE_INTERVAL_ROLES","role","isPushInterval","fabricFeatureIntervalRole","worldFeature","NexusPushLength","ColumnPushLength","TriangleLength","RingLength","CrossLength","BowMidLength","BowEndLength","RibbonPushLength","RibbonShortLength","RibbonLongLength","RibbonHangerLength","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","Ray","PushEnd","DEFAULT_PUSH_LENGTH","Math","sqrt","TRIANGLES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","rayVector","ray","v","Vector3","XP","setX","XN","YP","setY","YN","ZP","setZ","ZN","brickPoint","primaryRay","secondaryRay","multiplyScalar","addScaledVector","PUSH_ARRAY","alpha","omega","TRIANGLE_DEFINITIONS","name","opposite","negative","ring","NN","pushEnds","YNA","XNA","ZNA","ringMember","NP","PN","PP","YPA","ZNO","XNO","ZPA","XPA","YNO","XPO","YPO","ZPO","oppositeTriangle","triangle","percentOrHundred","percent","_","percentToFactor","factorToPercent","factor","brickContaining","joint","brickA","brickB","chooseA","joints","find","brickJoint","index","chooseB","Error","createBrickPointsAt","base","scale","position","points","reduce","vectors","push","add","newBase","trianglePoints","end","reverse","midpoint","mid","p","x","subVectors","normalize","y","sub","z","crossVectors","basis","Matrix4","makeBasis","scaleFactor","fromBasis","getInverse","setPosition","applyMatrix4","scaleToInitialStiffness","pow","TensegrityOptimizer","tensegrity","countdown","this","pairs","findPush","jointIndex","interval","intervals","i","isPush","crosses","forEach","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","distanceTo","aMid","addVectors","intervalB","indexB","bAlpha","bOmega","a","b","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","stiffness","linearDensity","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","console","log","includeInterval","pushOverPull","numericFeature","PushOverPull","floatView","instance","strains","getAverageStrain","toAverage","included","sum","length","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffnesses","value","linearDensities","adjustedStiffness","restoreSnapshot","fabric","copy_material","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","ShapingStiffnessFactor","PushRadius","PullRadius","JointRadiusFactor","PretensingCountdown","VisualStrain","SlackThreshold","MaxStrain","PretenstFactor","StiffnessFactor","ribbon","ribbonShort","ribbonLong","left","createJoint","ribbonJoint","oppositeIndex","jointLocation","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","faces","face","removed","brick","parentFace","identities","arch","gatherAncestors","f","id","definition","archFromTriangle","group","shift","isTriangleExtremity","distance","hook","center","bricks","sortXY","aa","bb","distanceToSquared","sort","extractHooks","hanger","rj","floor","hookJoint","FORWARD","RIGHT","UP","vectorFromArray","array","vector","offset","set","FabricInstance","eig","jointCount","worldObject","fabricObject","world","view","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","jointVelocities","unitVectors","idealLengths","strainNuances","createEmptyFloatView","adoptFabric","forward","right","featuresToApply","fabricBackup","free","View","on_fabric","Fabric","new","requestedStage","iterate","set_float_value","numeric","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","color","lineColorArray","facePosition","faceNormal","normal","copy_joint_locations_to","copy_joint_velocities_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","sin","PI","SURFACE_SCALE","PATCH_DISTANCE","SCALE_X","SCALE_Y","HEXAGON_POINTS","FAUNA_PATCH_COLOR","Color","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","ARROW_GEOMETRY","geom","Geometry","vertices","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","csvNumber","n","toFixed","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","join","extractJointFile","csvIntervals","j","type","strain","extractIntervalFile","csvSubmerged","anchor","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","c","setHex","substring","SURFACE","MeshPhongMaterial","side","DoubleSide","opacity","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SCALE_LINE","SELECT_MATERIAL","JOINT_MATERIAL","RAINBOW_LAMBERT","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","hexPoint","vertexNormals","Face3","addSurfaceGeometry","patchesGeometry","material","BridgeView","useState","life$","getValue","life","updateLife","useEffect","subscribe","unsubscribe","style","height","ButtonGroup","vertical","Button","onClick","fabricOutput","backgroundColor","Camera","BridgeScene","perspective","useThree","camera","viewContainer","document","getElementById","orbit","useUpdate","orb","minPolarAngle","maxPolarAngle","minDistance","maxDistance","SPACE_RADIUS","zoomSpeed","enableZoom","target","update","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","control","current","copy","transition","changeIntervalScale","beforeShaping","autoRotate","rotateSpeed","adoptLengths","Pretenst","ref","args","key","radiusFeature","radiusFactor","jointRadiusFactor","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","radius","unit","unitVector","rotation","Quaternion","setFromUnitVectors","jointRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","matrixWorldNeedsUpdate","props","useRef","setDefaultCamera","fov","updateMatrixWorld","scaleToFaceConnectorLength","MarkAction","TensegrityBuilder","symmetrical","createBrick","violated","negativeAdjacent","postiveAdjacent","brickWasViolated","faceA","scaleA","scaleB","createBrickOnFace","faceB","connectFaces","apply","m","faceBasis","twirl","makeRotationZ","rotate","makeRotationY","multiply","toSymmetricalMatrix","faceIntervals","faceInterval","connector","connectFaceInteval","faceToOriginMatrix","mark","centerBrickFaceIntervals","createBrickAt","averageScaleFactor","closestFace","createFaceConnector","action","JoinFaces","FaceDistance","pullScale","distancers","createFaceDistancer","Anchor","point","createFaceAnchor","negativeFace","midSide","u","proj","dot","xform","movedToFace","baseTriangle","parent","rings","initialBrick","jointIndexes","idx","alphaIndex","omegaIndex","arr","tJoints","createFace","loc","dirA","oppositeJoint","pop","permutation","removeFace","facesToRing","corner","next","crossInterval","adjustRole","isNexus","treeToCode","tree","s","isDirection","char","indexOf","faceMark","isDigit","toNumber","digits","match","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","error","fromUrl","code","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","parts","split","foundName","part","endsWith","foundMain","markCode","eq","Number","mainCode","parseCode","marks","Subtree","BaseFace","matches","parseFloat","submerged","mainTree","markSections","format","subtreesCode","treeToTenscript","e","message","noParseErrors","ControlTab","BOOTSTRAP","script","execute","before","active","grow","previous","newTree","treeScale","brickToMark","treeWithMarks","connectTriangle","newBrick","createConnectedBrick","brickFace","childTree","triangleMark","decremented","markTree","deleteFaceMark","getRecentTenscript","state","recentCode","tenscript","roleLengthFeature","roleDefaultFromFeatures","featureNumeric","partial","nonce","saveState","storedState","localStorage","setItem","loadState","toConfig","item","getItem","parse","DEFAULT_FEATURE_VALUES","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Grow","fullScreen","ellipsoids","rotating","showPushes","showPulls","initialStoredState","featureConfig","percents","IterationsPerFrame","ShapingPretenstFactor","ShapingDrag","MaxStiffness","Antigravity","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","expo","toExponential","zero","max","createFloatFeatures","features","Life","_stage","tx","adopt_lengths","removeFaceInterval","faceAnchors","removeFaceAnchor","snapshot","stiffnessesFromStrains","Tensegrity","roleDefaultLength","activeTenscript","transitionQueue","executeTransition","create_joint","createFaceInterval","omegaJointIndex","anchor_joint","idealLength","restLength","create_interval","existing","eliminateInterval","coundown","multiply_rest_length","set_interval_role","change_rest_length","foundPush","endJoint","create_face","removeIntervals","remove_face","lifeTransition","activeCode","builder","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","finish_growing","checkFaceIntervals","joint1","joint2","remove_interval","is_anchor_joint","GeneName","faceToOrigin","createFaceIntervals","MODIFIER_NAMES","Forward","Left","Right","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","d","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","adjacent","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","shapingTime","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","checkDirection","nextStage","limbFromTriangle","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","quaternionForDirection","distanceFromTarget","topJoint","toTarget","degreeForward","degreeRight","findLimb","oppositeLimb","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PatchCharacter","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","evolutionPhase","countdownToEvolution","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","approachDistance","object","positionToTarget","deltaDistance","Developing","Resting","g","resting","Running","running","Evolving","withReducedCyclePattern","evolving","treeNumber","wasSeconds","time","isSeconds","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","transparent","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestLife","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","toRunning","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","deadInterval","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","sphereNumeric","SphereBuilder","sphere","VERTEX","vertexAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","pullsForAdjacent","set_altitude","vertexA","vertexB","withMiddle","middleLocation","lerp","vertexMid","pushBetween","edgeVertexes","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","abs","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","STATE","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","enabled","enableRotate","enablePan","keyPanSpeed","autoRotateSpeed","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","BOTTOM","ORBIT","ZOOM","MIDDLE","PAN","zoom","up","inverse","event","preventDefault","button","clientX","clientY","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","setFromSpherical","lookAt","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","panLeft","panUp","dollyScale","angle","updateProjectionMatrix","extend","FREQUENCIES","SphereView","createSphere","freq","setFrequency","setSphere","disabled","SphereScene","toMidpoint","adjacentClose","StageTransition","ShapeSelection","TensegritySphere","twist","alphaVertex","omegaVertex","setFromAxisAngle","alphaLocation","omegaLocation","pushLength","shortPull","longPull","pull","pullExists","nextClose","nextAdjacent","currentClose","currentFar","adjacentFar","build","centerLocation","currentLocation","toCurrent","cross","closest","distanceA","FeaturePanel","featurePercent","setFeaturePercent","subscription","observable","formatted","percentChoices","size","percentLabel","LifeStageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","Symbol","CurrentLengthsToSlack","SlackToRealizing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","ShapeTab","floatFeatures","selectedIntervals","setFabric","shapeSelection","setShapeSelection","selectedFaces","clearSelection","pushAndPull","setPushAndPull","set_push_and_pull","updateEllipsoids","subscriptions","newState","lengthFeature","setLengthFeature","adjustValue","disableUnlessFaceCount","mode","disabledLifeStage","None","Grouping","Faces","Intervals","replaceCrosses","title","RealizeTab","updateFabricState","changed","FEATURES","scaleGeometry","middleTick","StrainTab","maxStrain","updateMaxStrain","maxStiffness","updateMaxStiffness","Scale","floats","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","borderColor","Input","onChange","changeEvent","ViewTab","visibleRoles","setVisibleRoles","updateShowPushes","updateShowPulls","ViewButton","children","centralize","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Shape","Strain","Realize","Nav","tabs","TabContent","flex","flexFlow","activeTab","top","zIndex","width","SPHERE","SphereGeometry","PULL_CYLINDER","CylinderGeometry","PUSH_CYLINDER_INNER","PUSH_CYLINDER_OUTER","AMBIENT_COLOR","SPACE_GEOMETRY","Y_AXIS","FabricView","toggleSelectedInterval","setSelectedFaces","whyThis","updateWhyThis","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateInstance","updateStoredState","ALTITUDE","far","near","accum","towardsTarget","EllipsoidView","LineView","selectFace","faceToToggle","some","selected","SelectedFace","nuance","rainbowMaterial","SelectedInterval","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","intersectObjects","intersection","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","setSelectedIntervals","unknown","updateRotating","updateFullScreen","newTenscript","set_coloring","set_surface_character","featureSubscriptions","applyFeature","scaledLength","timer","setTimeout","clearTimeout","visibility","TopMiddle","tenscriptError","toTenscript","root","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","roleLength","bridgeInstance","sphereInstance","at","registerServiceWorker"],"mappings":"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","file":"static/js/4.b4e89030.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"NP\"\n        case IntervalRole.ColumnPush:\n            return \"CP\"\n        case IntervalRole.Triangle:\n            return \"TR\"\n        case IntervalRole.Ring:\n            return \"RI\"\n        case IntervalRole.Cross:\n            return \"CR\"\n        case IntervalRole.BowMid:\n            return \"BM\"\n        case IntervalRole.BowEnd:\n            return \"BE\"\n        case IntervalRole.RibbonPush:\n            return \"RP\"\n        case IntervalRole.RibbonShort:\n            return \"RS\"\n        case IntervalRole.RibbonLong:\n            return \"RL\"\n        case IntervalRole.RibbonHanger:\n            return \"RH\"\n        case IntervalRole.FaceConnector:\n            return \"FC\"\n        case IntervalRole.FaceDistancer:\n            return \"FD\"\n        case IntervalRole.FaceAnchor:\n            return \"FA\"\n        case IntervalRole.SpherePush:\n            return \"SB\"\n        case IntervalRole.SpherePull:\n            return \"SC\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.NexusPush:\n            case IntervalRole.ColumnPush:\n            case IntervalRole.Triangle:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushInterval(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n        case IntervalRole.ColumnPush:\n        case IntervalRole.RibbonPush:\n        case IntervalRole.SpherePush:\n            return true\n    }\n    return false\n}\n\nexport function fabricFeatureIntervalRole(worldFeature: WorldFeature): IntervalRole | undefined {\n    switch (worldFeature) {\n        case WorldFeature.NexusPushLength:\n            return IntervalRole.NexusPush\n        case WorldFeature.ColumnPushLength:\n            return IntervalRole.ColumnPush\n        case WorldFeature.TriangleLength:\n            return IntervalRole.Triangle\n        case WorldFeature.RingLength:\n            return IntervalRole.Ring\n        case WorldFeature.CrossLength:\n            return IntervalRole.Cross\n        case WorldFeature.BowMidLength:\n            return IntervalRole.BowMid\n        case WorldFeature.BowEndLength:\n            return IntervalRole.BowEnd\n        case WorldFeature.RibbonPushLength:\n            return IntervalRole.RibbonPush\n        case WorldFeature.RibbonShortLength:\n            return IntervalRole.RibbonShort\n        case WorldFeature.RibbonLongLength:\n            return IntervalRole.RibbonLong\n        case WorldFeature.RibbonHangerLength:\n            return IntervalRole.RibbonHanger\n        default:\n            return undefined\n    }\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport { Matrix4, Quaternion, Vector3 } from \"three\"\n\nimport { intervalRoleName } from \"./eig-util\"\n\nexport const PHI = 1.61803398875\nexport const DEFAULT_PUSH_LENGTH = Math.sqrt(2)\n\nexport enum Ray {\n    XP = 0, XN, YP, YN, ZP, ZN,\n}\n\nexport enum PushEnd {\n    XPA = 0, XPO, XNA, XNO, YPA, YPO,\n    YNA, YNO, ZPA, ZPO, ZNA, ZNO,\n}\n\nexport enum Triangle {\n    NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP,\n}\n\nexport const TRIANGLES = [Triangle.NNN, Triangle.PNN, Triangle.NPN, Triangle.NNP, Triangle.NPP, Triangle.PNP, Triangle.PPN, Triangle.PPP]\n\nexport const TRIANGLE_DIRECTIONS = \"aBCDbcdA\"\n\nexport enum Ring {\n    NN = 0, // [PushEnd.ZNO, PushEnd.XPA, PushEnd.YNO, PushEnd.ZPA, PushEnd.XNO, PushEnd.YPA],\n    PN = 1, // [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNO, PushEnd.YPO, PushEnd.XPO, PushEnd.ZPA],\n    NP = 2, // [PushEnd.XNA, PushEnd.YPA, PushEnd.ZPO, PushEnd.XPO, PushEnd.YNO, PushEnd.ZNA],\n    PP = 3, // [PushEnd.YNA, PushEnd.ZNA, PushEnd.XPA, PushEnd.YPO, PushEnd.ZPO, PushEnd.XNO],\n}\n\nexport interface IJoint {\n    index: number\n    oppositeIndex: number\n    location: () => Vector3\n}\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport interface IJointCable {\n    interval: number\n    role: string\n    joint: number\n    separation: number\n    rotation: number\n}\n\nexport function otherJoint(interval: IInterval, joint: IJoint): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"Other of what?\")\n}\n\nexport function gatherJointCables(joint: IJoint, intervals: IInterval[]): IJointCable[] {\n    const jointIntervals = intervals.filter(interval => interval.alpha.index === joint.index || interval.omega.index === joint.index)\n    const push = jointIntervals.find(interval => interval.isPush)\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(otherJoint(interval, joint).location(), joint.location()).normalize()\n    const pushUnit = unitFromHere(push)\n    jointIntervals.sort((a: IInterval, b: IInterval) => {\n        const pushToA = unitFromHere(a).dot(pushUnit)\n        const pushToB = unitFromHere(b).dot(pushUnit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    })\n    jointIntervals.shift()\n    const nearUnit = unitFromHere(jointIntervals[0])\n    const projectNearOnPush = new Vector3().addScaledVector(pushUnit, nearUnit.dot(pushUnit))\n    const nearPerp = new Vector3().subVectors(nearUnit, projectNearOnPush).normalize()\n    const pushToNear = new Quaternion().setFromUnitVectors(pushUnit, nearPerp)\n    const nearCross = new Vector3().crossVectors(pushUnit, nearPerp)\n    return jointIntervals.map(jointInterval => {\n        const intervalUnit = unitFromHere(jointInterval)\n        const projectIntervalOnPush = new Vector3().addScaledVector(pushUnit, intervalUnit.dot(pushUnit))\n        const intervalPerp = new Vector3().subVectors(intervalUnit, projectIntervalOnPush).normalize()\n        const intervalCross = new Vector3().crossVectors(pushUnit, intervalUnit)\n        const pushToInterval = new Quaternion().setFromUnitVectors(pushUnit, intervalPerp)\n        const separation = Math.acos(pushUnit.dot(intervalUnit)) * 180 / Math.PI\n        const rotation = pushToNear.angleTo(pushToInterval) * (nearCross.dot(intervalCross) > 0 ? 180 : -180) / Math.PI\n        return <IJointCable>{\n            interval: jointInterval.index,\n            role: intervalRoleName(jointInterval.intervalRole),\n            joint: otherJoint(jointInterval, joint).index,\n            separation, rotation,\n        }\n    })\n}\n\nexport interface IFaceInterval {\n    index: number\n    alpha: IFace\n    omega: IFace\n    connector: boolean\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFaceAnchor {\n    index: number\n    alpha: IFace\n    omega: IJoint\n    removed: boolean\n}\n\nexport interface IFace {\n    index: number\n    negative: boolean\n    brick: IBrick\n    triangle: Triangle\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    mark?: IFaceMark\n    removed: boolean\n    location: () => Vector3\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + percentToFactor(face.brick.scale), 0) / faces.length\n}\n\nexport function averageLocation(locations: Vector3[]): Vector3 {\n    return locations\n        .reduce((sum, location) => sum.add(location), new Vector3())\n        .multiplyScalar(1 / locations.length)\n}\n\nexport function intervalsOfFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        const pushes = face.pushes.filter(unknown)\n        return [...accum, ...pushes, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function facesMidpoint(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(face.location()), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.joints.map(joint => joint.location())\n    const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n    const x = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n    const y = new Vector3().crossVectors(z, x).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport interface IPushDefinition {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction rayVector(ray: Ray): Vector3 {\n    const v = new Vector3()\n    switch (ray) {\n        case Ray.XP:\n            return v.setX(1)\n        case Ray.XN:\n            return v.setX(-1)\n        case Ray.YP:\n            return v.setY(1)\n        case Ray.YN:\n            return v.setY(-1)\n        case Ray.ZP:\n            return v.setZ(1)\n        case Ray.ZN:\n            return v.setZ(-1)\n        default:\n            return v\n    }\n}\n\nfunction brickPoint(primaryRay: Ray, secondaryRay: Ray): Vector3 {\n    return rayVector(primaryRay)\n        .multiplyScalar(DEFAULT_PUSH_LENGTH / 2)\n        .addScaledVector(rayVector(secondaryRay), DEFAULT_PUSH_LENGTH / 2 / PHI)\n}\n\nexport const PUSH_ARRAY: IPushDefinition[] = [\n    {alpha: brickPoint(Ray.ZN, Ray.XP), omega: brickPoint(Ray.ZP, Ray.XP)},\n    {alpha: brickPoint(Ray.ZN, Ray.XN), omega: brickPoint(Ray.ZP, Ray.XN)},\n    {alpha: brickPoint(Ray.XN, Ray.YP), omega: brickPoint(Ray.XP, Ray.YP)},\n    {alpha: brickPoint(Ray.XN, Ray.YN), omega: brickPoint(Ray.XP, Ray.YN)},\n    {alpha: brickPoint(Ray.YN, Ray.ZP), omega: brickPoint(Ray.YP, Ray.ZP)},\n    {alpha: brickPoint(Ray.YN, Ray.ZN), omega: brickPoint(Ray.YP, Ray.ZN)},\n]\n\nexport interface ITriangleDefinition {\n    name: Triangle\n    opposite: Triangle\n    negative: boolean\n    pushEnds: PushEnd[]\n    ringMember: Ring[]\n    ring: Ring\n}\n\nexport const TRIANGLE_DEFINITIONS: ITriangleDefinition[] = [\n    {\n        name: Triangle.NNN, opposite: Triangle.PPP, negative: true, ring: Ring.NN,\n        pushEnds: [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNA], ringMember: [Ring.NP, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.PNN, opposite: Triangle.NPP, negative: false, ring: Ring.PP,\n        pushEnds: [PushEnd.XNA, PushEnd.YPA, PushEnd.ZNO], ringMember: [Ring.PN, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.NPN, opposite: Triangle.PNP, negative: false, ring: Ring.PN,\n        pushEnds: [PushEnd.XNO, PushEnd.YNA, PushEnd.ZPA], ringMember: [Ring.PP, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.NNP, opposite: Triangle.PPN, negative: false, ring: Ring.NP,\n        pushEnds: [PushEnd.XPA, PushEnd.YNO, PushEnd.ZNA], ringMember: [Ring.NN, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.NPP, opposite: Triangle.PNN, negative: true, ring: Ring.PP,\n        pushEnds: [PushEnd.YNO, PushEnd.XPO, PushEnd.ZPA], ringMember: [Ring.PN, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.PNP, opposite: Triangle.NPN, negative: true, ring: Ring.PN,\n        pushEnds: [PushEnd.YPO, PushEnd.XPA, PushEnd.ZNO], ringMember: [Ring.PP, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.PPN, opposite: Triangle.NNP, negative: true, ring: Ring.NP,\n        pushEnds: [PushEnd.YPA, PushEnd.XNO, PushEnd.ZPO], ringMember: [Ring.NN, Ring.PP, Ring.PN],\n    },\n    {\n        name: Triangle.PPP, opposite: Triangle.NNN, negative: false, ring: Ring.NN,\n        pushEnds: [PushEnd.XPO, PushEnd.YPO, PushEnd.ZPO], ringMember: [Ring.NP, Ring.PP, Ring.PN],\n    },\n]\n\nexport function oppositeTriangle(triangle: Triangle): Triangle {\n    return TRIANGLE_DEFINITIONS[triangle].opposite\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function percentToFactor({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function factorToPercent(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IBrick {\n    parentFace?: IFace,\n    base: Triangle\n    scale: IPercent\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    crosses: IInterval[]\n    rings: IInterval[][]\n    faces: IFace[]\n    negativeAdjacent: number\n    postiveAdjacent: number\n    location: () => Vector3\n}\n\nexport function isNexus(brick: IBrick): boolean {\n    return brick.negativeAdjacent > 1 || brick.postiveAdjacent > 1\n}\n\nexport function brickContaining(joint: IJoint, brickA: IBrick, brickB: IBrick): IBrick {\n    const chooseA = !!brickA.joints.find(brickJoint => brickJoint.index === joint.index)\n    const chooseB = !!brickB.joints.find(brickJoint => brickJoint.index === joint.index)\n    if (chooseA && !chooseB) {\n        return brickA\n    } else if (chooseB && !chooseA) {\n        return brickB\n    } else {\n        throw new Error(\"Neither contained joint\")\n    }\n}\n\nexport function initialBrick(base: Triangle, scale: IPercent, parent?: IFace): IBrick {\n    return {\n        parentFace: parent, base, scale, joints: [],\n        pushes: [], pulls: [], crosses: [],\n        rings: [[], [], [], []], faces: [],\n        negativeAdjacent: 0, postiveAdjacent: 0,\n        location: () => new Vector3(),\n    }\n}\n\nexport function createBrickPointsAt(base: Triangle, scale: IPercent, position: Vector3): Vector3 [] {\n    const pushesToPoints = (vectors: Vector3[], push: IPushDefinition): Vector3[] => {\n        vectors.push(new Vector3().add(push.alpha))\n        vectors.push(new Vector3().add(push.omega))\n        return vectors\n    }\n    const points = PUSH_ARRAY.reduce(pushesToPoints, [])\n    const newBase = oppositeTriangle(base)\n    const trianglePoints = TRIANGLE_DEFINITIONS[newBase].pushEnds.map((end: PushEnd) => points[end]).reverse()\n    const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n    const x = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n    const y = new Vector3().sub(midpoint).normalize()\n    const z = new Vector3().crossVectors(y, x).normalize()\n    const basis = new Matrix4().makeBasis(x, y, z)\n    const scaleFactor = percentToFactor(scale)\n    const fromBasis = new Matrix4()\n        .getInverse(basis)\n        .setPosition(position)\n        .scale(new Vector3(scaleFactor, scaleFactor, scaleFactor))\n    return points.map(p => p.applyMatrix4(fromBasis))\n}\n\nexport function toSymmetricalMatrix(brick: IBrick, rotation: number, unitVector: (index: number) => Vector3): Matrix4 {\n    const x = unitVector(brick.pushes[2].index)\n    const y = unitVector(brick.pushes[0].index)\n    const z = unitVector(brick.pushes[4].index)\n    const midpoint = brick.joints\n        .reduce((m, joint) => m.add(joint.location()), new Vector3())\n        .multiplyScalar(1.0 / 12.0)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * 0.275)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { IInterval, IJoint, IPercent, percentToFactor } from \"./tensegrity-types\"\n\nexport function scaleToInitialStiffness(scale: IPercent): number {\n    const scaleFactor = percentToFactor(scale)\n    return Math.pow(scaleFactor, 0.6) * 0.00001\n}\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = intervalA.alpha.location()\n            const aOmegaLoc = intervalA.omega.location()\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = intervalB.alpha.location()\n                const bOmegaLoc = intervalB.omega.location()\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            const stiffness = scaleToInitialStiffness(scale)\n            const linearDensity = Math.sqrt(stiffness)\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale, stiffness, linearDensity, countdown)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n\n    public stiffnessesFromStrains(includeInterval: (interval: IInterval) => boolean): void {\n        const pushOverPull = this.tensegrity.numericFeature(WorldFeature.PushOverPull)\n        const {stiffnesses, linearDensities} = adjustedStiffness(this.tensegrity, includeInterval, pushOverPull)\n        this.tensegrity.instance.restoreSnapshot()\n        this.tensegrity.fabric.copy_material(stiffnesses, linearDensities)\n    }\n}\n\nfunction adjustedStiffness(tensegrity: Tensegrity, includeInterval: (interval: IInterval) => boolean, pushOverPull: number): {\n    stiffnesses: Float32Array,\n    linearDensities: Float32Array,\n} {\n    const floatView = tensegrity.instance.floatView\n    const strains: Float32Array = floatView.strains\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const included = toAverage.filter(includeInterval)\n        const totalStrain = included.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / included.length\n    }\n    const intervals = tensegrity.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        if (!includeInterval(interval)) {\n            return 1\n        }\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffnesses = floatView.stiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = floatView.linearDensities.map((value, index) => Math.sqrt(value * value * changes[index]))\n    return {stiffnesses, linearDensities}\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { scaleToInitialStiffness } from \"../fabric/tensegrity-optimizer\"\nimport {\n    factorToPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    percentOrHundred,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"../fabric/tensegrity-types\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\nconst RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst CenterExpand = 2\nconst AnchorLength = 5\nconst AnchorScale = 110\n\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function beforeShaping(tensegrity: Tensegrity): void {\n    const brick = tensegrity.bricks[0]\n    brick.pushes.forEach(interval => tensegrity.changeIntervalScale(interval, CenterExpand))\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PushRadius:\n            return defaultValue * 3\n        case WorldFeature.PullRadius:\n            return defaultValue * 2\n        case WorldFeature.JointRadiusFactor:\n            return defaultValue * 0.8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.SlackThreshold:\n            return 0\n        case WorldFeature.MaxStrain:\n            return defaultValue * 0.1\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 800.0\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    group: Triangle\n    triangle: Triangle\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = tensegrity.numericFeature(WorldFeature.RibbonShortLength)\n    const ribbonLong = tensegrity.numericFeature(WorldFeature.RibbonLongLength)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location)\n        const ribbonJoint: IJoint = {\n            index: jointIndex,\n            oppositeIndex: -1,\n            location: () => tensegrity.instance.jointLocation(jointIndex),\n        }\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = intervalRole === IntervalRole.RibbonPush ? RibbonPushDensity : Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 100)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.RibbonLong)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.RibbonLong)\n        interval(curr[2], curr[3], IntervalRole.RibbonLong)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.RibbonShort)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.RibbonPush)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.RibbonPush)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.RibbonPush)\n        interval(prev[1], curr[0], IntervalRole.RibbonPush)\n        interval(prev[2], curr[3], IntervalRole.RibbonPush)\n        interval(prev[3], curr[2], IntervalRole.RibbonPush)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.RibbonHanger\n        const length = alpha.location().distanceTo(omega.location())\n        const scale = factorToPercent(length)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 10)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.joints[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    const faces = tensegrity.faces.filter(face => !face.removed && face.brick.parentFace)\n    faces.forEach(face => {\n        const gatherAncestors = (f: IFace, id: Triangle[]): Arch => {\n            const definition = TRIANGLE_DEFINITIONS[f.triangle]\n            id.push(definition.negative ? definition.opposite : definition.name)\n            const parentFace = f.brick.parentFace\n            if (parentFace) {\n                return gatherAncestors(parentFace, id)\n            } else {\n                return archFromTriangle(f.triangle)\n            }\n        }\n        const identities: Triangle[] = []\n        const arch = gatherAncestors(face, identities)\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isTriangleExtremity(group)) {\n            return\n        }\n        const triangle = face.triangle\n        const distance = identities.length\n        face.joints.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${Triangle[group]}]:{tri=${Triangle[triangle]}:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, group, triangle, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {arch, distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        switch (hook.triangle) {\n            case Triangle.NPN:\n                return arch === Arch.BackRight\n            case Triangle.NNP:\n                return arch === Arch.FrontRight\n            case Triangle.PNP:\n                return arch === Arch.BackLeft\n            case Triangle.PPN:\n                return arch === Arch.FrontLeft\n            default:\n                return false\n        }\n    }\n    const center = tensegrity.bricks[0].location()\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = a.face.joints[a.jointIndex].location()\n        const bb = b.face.joints[b.jointIndex].location()\n        return aa.distanceToSquared(center) - bb.distanceToSquared(center)\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\nfunction archFromTriangle(triangle: Triangle): Arch {\n    switch (triangle) {\n        case Triangle.NNN:\n            return Arch.BackLeft\n        case Triangle.PNN:\n            return Arch.BackRight\n        case Triangle.NPP:\n            return Arch.FrontLeft\n        case Triangle.PPP:\n            return Arch.FrontRight\n        default:\n            throw new Error(\"Strange arch\")\n    }\n}\n\nfunction isTriangleExtremity(triangle: Triangle): boolean {\n    const definition = TRIANGLE_DEFINITIONS[triangle]\n    const normalizedTriangle = definition.negative ? definition.opposite : triangle\n    return normalizedTriangle === Triangle.PPP\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { FloatFeature } from \"./float-feature\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nconst vectorFromArray = (array: Float32Array, index: number, vector?: Vector3): Vector3 => {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport interface IFloatView {\n    jointCount: number,\n    intervalCount: number,\n    faceCount: number,\n    lineGeometry: BufferGeometry,\n    faceGeometry: BufferGeometry,\n    jointLocations: Float32Array\n    jointVelocities: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(requestedStage: Stage): Stage | undefined {\n        const stage = this.fabric.iterate(requestedStage, this.world)\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        this.refreshFloatView()\n        return stage\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.jointVelocities = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColorArray = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColorArray.fill(0)\n                        for (let green = 1; green < lineColorArray.length; green += 3) {\n                            lineColorArray[green] = 1\n                        }\n                    } else {\n                        lineColorArray.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColorArray)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_joint_velocities_to(floatView.jointVelocities)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, jointVelocities: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainNuances: empty, stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/fabric-instance\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    anchor: boolean\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    idealLength: number\n    length: number\n    radius: number\n    jointRadius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport {\n    Color,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n} from \"three\"\n\nexport const SELECTION_COLOR = \"#91934f\"\nexport const JOURNEY_LINE_COLOR = \"#cace02\"\nexport const JOINT_COLOR = \"#e83ada\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\n// console.log(\"RAINBOW\\n\", `pub const RAINBOW: [[f32; 3]; ${RAINBOW_GRADIENT.length}] = [\\n${RAINBOW_COLORS.map((color) => {\n//     const render = (c: number) => c.toFixed(3)\n//     const {r, g, b} = color\n//     return (\n//         `[${render(r)}, ${render(g)}, ${render(b)}], // ${color.getHexString()}`\n//     )\n// }).join(\"\\n\")}\\n];`)\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#1c1608\"),\n    side: DoubleSide,\n    opacity: 0.5,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SCALE_LINE = new LineBasicMaterial({\n    color: new Color(JOURNEY_LINE_COLOR),\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n})\n\nexport const JOINT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(JOINT_COLOR),\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"#6541b4\"\n        case IntervalRole.ColumnPush:\n            return \"#2f3aca\"\n        case IntervalRole.Triangle:\n            return \"#c9c445\"\n        case IntervalRole.Ring:\n            return \"#e83ada\"\n        case IntervalRole.Cross:\n            return \"#59ebcb\"\n        case IntervalRole.BowMid:\n            return \"#f14302\"\n        case IntervalRole.BowEnd:\n            return \"#c03b02\"\n        case IntervalRole.FaceConnector:\n            return \"#fe0105\"\n        case IntervalRole.FaceDistancer:\n            return \"#fefb07\"\n        case IntervalRole.FaceAnchor:\n            return \"#dc5bf8\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\n// import { ALL_INTERVAL_ROLES } from \"../fabric/fabric-engine\"\n// console.log(\"ROLE_COLORS\\n\", `pub const ROLE_COLORS: [[f32; 3]; ${ALL_INTERVAL_ROLES.length}] = [\\n${ALL_INTERVAL_ROLES.map(roleColor).map(color => (\n//     `[${(color.r).toFixed(4)}, ${(color.g).toFixed(4)}, ${(color.b).toFixed(4)}],`\n// )).join(\"\\n\")}\\n];`)\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z).multiplyScalar(4)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, DomEvent, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { Life } from \"../fabric/life\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { SPACE_RADIUS, SPACE_SCALE } from \"../gotchi/island-geometry\"\nimport { saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { beforeShaping, IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(life.stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button onClick={() => saveCSVZip(tensegrity.fabricOutput)}><FaDownload/> <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(tensegrity.fabricOutput)}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} life={life}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, life}: { tensegrity: Tensegrity, life: Life }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(0, 50, 0)\n        orb.update()\n    }, [])\n\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        control.target.copy(tensegrity.instance.midpoint)\n        control.update()\n        const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (life.stage === Stage.Growing) {\n                    tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    beforeShaping(tensegrity)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    control.autoRotate = true\n                    control.rotateSpeed = 5\n                    tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (life.stage === Stage.Pretensing) {\n                    tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => {\n                            const radiusFeature = interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius\n                            const radiusFactor = tensegrity.numericFeature(radiusFeature)\n                            const jointRadiusFactor = tensegrity.numericFeature(WorldFeature.JointRadiusFactor)\n                            return (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    radiusFactor={radiusFactor}\n                                    jointRadiusFactor={jointRadiusFactor}\n                                />\n                            )\n                        })}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, radiusFactor, jointRadiusFactor, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    radiusFactor: number,\n    jointRadiusFactor: number,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n    const linearDensity = tensegrity.instance.floatView.linearDensities[interval.index]\n    const radius = radiusFactor * linearDensity\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = interval.alpha.location().distanceTo(interval.omega.location())\n    const jointRadius = radius * jointRadiusFactor\n    const intervalScale = new Vector3(radius, length + (interval.isPush ? -jointRadius * 2 : 0), radius)\n    const jointScale = new Vector3(jointRadius, jointRadius, jointRadius)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={interval.alpha.location()}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={interval.omega.location()}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={interval.location()}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.joints.map(j => (\n                <mesh\n                    key={`hook-${j.index}`}\n                    position={j.location()}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IMark, MarkAction } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    averageLocation,\n    averageScaleFactor,\n    brickContaining,\n    createBrickPointsAt,\n    faceToOriginMatrix,\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    initialBrick,\n    IPercent,\n    IPushDefinition,\n    isNexus,\n    percentToFactor,\n    PUSH_ARRAY,\n    toSymmetricalMatrix,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport class TensegrityBuilder {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public createBrickAt(midpoint: Vector3, symmetrical: boolean, scale: IPercent): IBrick {\n        const points = createBrickPointsAt(Triangle.PPP, scale, midpoint)\n        return this.createBrick(points, Triangle.NNN, scale)\n    }\n\n    public createConnectedBrick(brickA: IBrick, triangle: Triangle, scale: IPercent): IBrick {\n        const violated = () => brickA.negativeAdjacent > 1 && brickA.postiveAdjacent > 1\n        const brickWasViolated = violated()\n        const faceA = brickA.faces[triangle]\n        const scaleA = percentToFactor(brickA.scale)\n        const scaleB = scaleA * percentToFactor(scale)\n        const brickB = this.createBrickOnFace(faceA, factorToPercent(scaleB))\n        const faceB = brickB.faces[brickB.base]\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n        this.connectFaces(faceA, faceB, factorToPercent((scaleA + scaleB) / 2), countdown)\n        if (brickWasViolated !== violated()) {\n            const instance = this.tensegrity.instance\n            instance.apply(toSymmetricalMatrix(brickA, this.tensegrity.rotation, index => instance.unitVector(index)))\n        }\n        return brickB\n    }\n\n    public checkFaceIntervals(faceIntervals: IFaceInterval[], removeInterval: (faceInterval: IFaceInterval) => void): IFaceInterval[] {\n        if (faceIntervals.length === 0) {\n            return faceIntervals\n        }\n        const connectFaceInteval = ({alpha, omega, scaleFactor}: IFaceInterval) => {\n            const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n            this.connectFaces(alpha, omega, factorToPercent(scaleFactor), countdown)\n        }\n        return faceIntervals.filter(faceInterval => {\n            if (faceInterval.connector) {\n                const {alpha, omega, scaleFactor} = faceInterval\n                const distance = alpha.location().distanceTo(omega.location())\n                const closeEnough = distance <= scaleToFaceConnectorLength(scaleFactor) * 10\n                if (closeEnough) {\n                    connectFaceInteval(faceInterval)\n                    removeInterval(faceInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createFaceIntervals(faces: IFace[], mark: IMark): IFaceInterval[] {\n        const centerBrickFaceIntervals = () => {\n            const brick = this.createBrickAt(\n                averageLocation(faces.map(face => face.location())), false, factorToPercent(averageScaleFactor(faces)),\n            )\n            return faces.map(face => {\n                const opposing = brick.faces.filter(({negative, removed}) => !removed && negative !== face.negative)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = a.location().distanceTo(face.location())\n                    const bb = b.location().distanceTo(face.location())\n                    return aa < bb ? a : b\n                })\n                closestFace.removed = true\n                return this.tensegrity.createFaceConnector(closestFace, face)\n            })\n        }\n        switch (mark.action) {\n            case MarkAction.JoinFaces:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].negative === faces[1].negative) {\n                            return centerBrickFaceIntervals()\n                        }\n                        return [this.tensegrity.createFaceConnector(faces[0], faces[1])]\n                    case 3:\n                        return centerBrickFaceIntervals()\n                    default:\n                        return []\n                }\n            case MarkAction.FaceDistance:\n                const pullScale = mark.scale\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                const distancers: IFaceInterval[] = []\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        distancers.push(this.tensegrity.createFaceDistancer(faceA, faceB, pullScale))\n                    })\n                })\n                return distancers\n            default:\n                return []\n        }\n    }\n\n    public createFaceAnchor(face: IFace, mark: IMark): IFaceAnchor {\n        if (mark.action !== MarkAction.Anchor) {\n            throw new Error(\"Anchor problem\")\n        }\n        const point = mark.point\n        const scale = mark.scale\n        if (!point || !scale) {\n            throw new Error(\"Missing anchor point specs\")\n        }\n        return this.tensegrity.createFaceAnchor(face, point, scale)\n    }\n\n    private createBrickOnFace(face: IFace, scale: IPercent): IBrick {\n        const negativeFace = TRIANGLE_DEFINITIONS[face.triangle].negative\n        const brick = face.brick\n        const triangle = face.triangle\n        const trianglePoints = brick.faces[triangle].joints.map(joint => joint.location())\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const midSide = new Vector3().addVectors(trianglePoints[0], trianglePoints[1]).multiplyScalar(0.5)\n        const x = new Vector3().subVectors(midSide, midpoint).normalize()\n        const u = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const proj = new Vector3().add(x).multiplyScalar(x.dot(u))\n        const z = u.sub(proj).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        const xform = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        const base = negativeFace ? Triangle.NNN : Triangle.PPP\n        const points = createBrickPointsAt(base, scale, new Vector3(0, 0, 0)) // todo: maybe raise it\n        const movedToFace = points.map(p => p.applyMatrix4(xform))\n        const baseTriangle = negativeFace ? Triangle.PPP : Triangle.NNN\n        return this.createBrick(movedToFace, baseTriangle, scale, face)\n    }\n\n    private createBrick(points: Vector3[], base: Triangle, scale: IPercent, parent?: IFace): IBrick {\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        const brick = initialBrick(base, scale, parent)\n        this.tensegrity.bricks.push(brick)\n        const jointIndexes = points.map((p, idx) => this.tensegrity.createJoint(p))\n        this.tensegrity.instance.refreshFloatView()\n        PUSH_ARRAY.forEach(({}: IPushDefinition, idx: number) => {\n            const alphaIndex = jointIndexes[idx * 2]\n            const omegaIndex = jointIndexes[idx * 2 + 1]\n            const alpha: IJoint = {\n                index: alphaIndex,\n                oppositeIndex: omegaIndex,\n                location: () => this.tensegrity.instance.jointLocation(alphaIndex),\n            }\n            const omega: IJoint = {\n                index: omegaIndex,\n                oppositeIndex: alphaIndex,\n                location: () => this.tensegrity.instance.jointLocation(omegaIndex),\n            }\n            brick.pushes.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.NexusPush, scale, stiffness, linearDensity, countdown))\n        })\n        brick.pushes.forEach(push => brick.joints.push(push.alpha, push.omega))\n        const joints = brick.pushes.reduce((arr: IJoint[], push) => {\n            arr.push(push.alpha, push.omega)\n            return arr\n        }, [])\n        this.tensegrity.joints.push(...joints)\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const tJoints = triangle.pushEnds.map(end => joints[end])\n            for (let walk = 0; walk < 3; walk++) {\n                const alpha = tJoints[walk]\n                const omega = tJoints[(walk + 1) % 3]\n                const interval = this.tensegrity.createInterval(alpha, omega, IntervalRole.Triangle, scale, stiffness, linearDensity, countdown)\n                brick.pulls.push(interval)\n                brick.rings[triangle.ringMember[walk]].push(interval)\n            }\n        })\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const face = this.tensegrity.createFace(brick, triangle.name)\n            brick.faces.push(face)\n        })\n        this.tensegrity.instance.refreshFloatView()\n        brick.location = () => brick.joints\n            .reduce((loc, joint) => loc.add(joint.location()), new Vector3())\n            .multiplyScalar(1 / brick.joints.length)\n        return brick\n    }\n\n    private facesToRing(faceA: IFace, faceB: IFace): IJoint[] {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Polarity not opposite\")\n        }\n        const dirA = new Vector3().subVectors(faceA.joints[0].location(), faceA.location()).normalize()\n        const oppositeJoint = faceB.joints.map((joint, index) => [\n            new Vector3().subVectors(joint.location(), faceB.location()).normalize().dot(dirA), index,\n        ]).sort((a, b) => b[0] - a[0]).pop()\n        if (!oppositeJoint) {\n            throw new Error(\"No opposite joint\")\n        }\n        const permutation: number[] = [[1, 0, 2], [2, 1, 0], [0, 2, 1]][oppositeJoint[1]]\n        return [\n            faceA.joints[0], faceB.joints[permutation[0]],\n            faceA.joints[1], faceB.joints[permutation[1]],\n            faceA.joints[2], faceB.joints[permutation[2]],\n        ]\n    }\n\n    private connectFaces(faceA: IFace, faceB: IFace, scale: IPercent, countdown: number): void {\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Same polarity!\")\n        }\n        [faceA, faceB].forEach((face: IFace): void => {\n            this.tensegrity.removeFace(face, true)\n            if (!face.negative) {\n                face.brick.negativeAdjacent++\n            } else {\n                face.brick.postiveAdjacent++\n            }\n        })\n        const ring = this.facesToRing(faceA, faceB)\n        const createInterval = (from: IJoint, to: IJoint, role: IntervalRole) =>\n            this.tensegrity.createInterval(from, to, role, scale, stiffness, linearDensity, countdown)\n        for (let corner = 0; corner < ring.length; corner++) {\n            const prev = ring[(corner + 5) % 6]\n            const curr = ring[corner]\n            const next = ring[(corner + 1) % 6]\n            createInterval(curr, next, IntervalRole.Ring)\n            const crossInterval = (from: IJoint, opposite: IJoint) => {\n                const to = this.tensegrity.joints[opposite.oppositeIndex]\n                const toBrick = brickContaining(to, faceA.brick, faceB.brick)\n                toBrick.crosses.push(createInterval(from, to, IntervalRole.Triangle))\n            }\n            if (faceA.negative) {\n                crossInterval(prev, curr)\n            } else {\n                crossInterval(next, curr)\n            }\n        }\n        [faceA, faceB].forEach(({triangle, brick}: IFace): void => {\n            const adjustRole = (intervals: IInterval[], role: IntervalRole) => intervals\n                .filter(interval => !interval.removed && interval.intervalRole !== role)\n                .forEach(interval => this.tensegrity.changeIntervalRole(interval, role, brick.scale, countdown))\n            if (isNexus(brick)) {\n                adjustRole(brick.pulls, IntervalRole.Triangle)\n                adjustRole(brick.crosses, IntervalRole.Cross)\n                adjustRole(brick.pushes, IntervalRole.NexusPush)\n            } else {\n                adjustRole(brick.rings[TRIANGLE_DEFINITIONS[triangle].ring], IntervalRole.Ring)\n                adjustRole(brick.crosses, IntervalRole.Triangle)\n                adjustRole(brick.pushes, IntervalRole.ColumnPush)\n            }\n        })\n        this.tensegrity.instance.refreshFloatView()\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    IBrick,\n    IFaceMark,\n    IPercent,\n    oppositeTriangle,\n    percentOrHundred,\n    Triangle,\n    TRIANGLE_DIRECTIONS,\n    TRIANGLES,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'Mobiosity':(d(6,S80,MA4),C(6,S80,MA4),c(6,S80,MA3),D(6,S80,MA2),a(6,S80,MA1),b(6,S80,MA2),B(6,S80,MA1),A(6,S80,MA3))\",\n    \"'Zen':(0)\",\n    \"'One':(1)\",\n    \"'Six':(6)\",\n    \"'Axoneme':(16,S90)\",\n    \"'Knee':(b1,a1)\",\n    \"'Leg':(b3,a3)\",\n    \"'Nexus':(a1,b1,c1,d1)\",\n    \"'Tripod with Knees':(A2,B(3,b(2,S90),S80),C(3,c(2,S90),S80),D(3,d(2,S90),S80))\",\n    \"'Pretenst Lander':(B(5,S75),C(5,S75),D(5,S75))\",\n    \"'Zig Zag Loop':(a(1,MA0),c(3,b(3,d(3,c(3,b(3,d(1,MA0)))))))\",\n    \"'Bulge Ring':(A(8, S85, MA1), a(8, S85, MA1))\",\n    \"'Ring':(A(10,MA1),a(10,MA1))\",\n    \"'Convergence Three':(a1,b(3,S85,MA1),c(3,S85,MA1),d(3,S85,MA1))\",\n    \"'Convergence Ten':(a1,b(10,S85,MA1),c(10,S85,MA1),d(10,S85,MA1))\",\n    \"'Halo by Crane':(B(7,S80,MA1),C(2,S120,MA0),D(7,S80,MA1))\",\n    \"'Thick Tripod':(A1,B(3,MA1),C(3,MA1),D(3,MA1)):1=face-distance-35\",\n    \"'Ankh':(A(3,S90,Mb0),b(3,S90,Mb0),a(5,S80,MA1),B(5,MA1,S80)):0=face-distance-30\",\n    \"'Diamond':(a(2,b(2,c(2,d(1,MA1)),d(2,c(1,MA0))),c(2,d(2,b(1,MA3)),b(2,d(1,MA2))),d(2,b(2,c(1,MA5)),c(2,b(1,MA4)))),b(2,d(2,Mc3),c(2,Md4)),c(2,b(2,Md5),d(2,Mb0)),d(2,c(2,Mb1),b(2,Mc2)))\",\n    \"'Composed':(3,b(2,MA0),c(2,MA0),d(2,MA0)):0=subtree(b2,c2,d2)\",\n    \"'Minigotchi':(A(3,S90,Mb0),b(3,S90,Mb0),a(2,S90,Md0),B(2,Md0,S90)):0=face-distance-60\",\n    \"'Mesogotchi':(A(2,c(2,MA0)),b(2,c(2,MA0)),a(2,d(2,MA0)),B(2,d(2,MA0))):0=face-distance-115\",\n    \"'Gorillagotchi':(A(5,S80,Mb0),b(5,S80,Mb0),a(3,S70,Md0),B(3,Md0,S70)):0=face-distance-60\",\n    \"'Equus Lunae':(A(8,S90,Mb0),b(8,S90,Mb0),a(8,S90,Md0),B(8,Md0,S90)):0=face-distance-60\",\n    \"'Infinity':(a(5,S80,MA1),b(5,S80,MA2),B(5,S80,MA1),A(5,S80,MA2))\",\n    \"'Binfinity':(d(6,S80,MA4),C(6,S80,MA4),c(6,S80,MA3),D(6,S80,MA3),a(6,S80,MA1),b(6,S80,MA2),B(6,S80,MA1),A(6,S80,MA2))\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(name: string, mainTree: ITenscriptTree, marks: Record<number, IMark>, fromUrl: boolean): ITenscript {\n    const mainCode = treeToCode(mainTree)\n    const markSections: string[] = []\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return TRIANGLE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(triangle: Triangle, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[TRIANGLE_DIRECTIONS[triangle]]\n}\n\nfunction faceMark(triangle: Triangle, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${TRIANGLE_DIRECTIONS[triangle]}`]\n}\n\nfunction deleteFaceMark(triangle: Triangle, tree: ITenscriptTree): void {\n    tree[`M${TRIANGLE_DIRECTIONS[triangle]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseCode(code: string): { name: string, mainCode: string, markCode: Record<number, string> } {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => part.startsWith(\"(\") && part.endsWith(\")\"))\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    return {\n        name: foundName ? foundName.replace(/'/g, \"\") : \"\",\n        mainCode: foundMain || \"(0)\",\n        markCode,\n    }\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IActiveTenscript {\n    tree: ITenscriptTree\n    brick: IBrick\n    tensegrity: Tensegrity\n}\n\nexport function execute(before: IActiveTenscript[], marks: Record<number, IMark>): IActiveTenscript[] {\n    const active: IActiveTenscript[] = []\n\n    before.forEach(({brick, tree, tensegrity}) => {\n\n        function markBrick(brickToMark: IBrick, treeWithMarks: ITenscriptTree): void {\n            TRIANGLES.forEach(triangle => {\n                const mark = faceMark(triangle, treeWithMarks)\n                if (!mark) {\n                    return\n                }\n                const brickFace = brickToMark.base === Triangle.NNN ? brickToMark.faces[triangle] : brickToMark.faces[oppositeTriangle(triangle)]\n                if (brickFace.removed) {\n                    throw new Error(\"!! trying to use a face that was removed\")\n                }\n                brickFace.mark = mark\n            })\n        }\n\n        function grow(previous: IBrick, newTree: ITenscriptTree, triangle: Triangle, treeScale: IPercent): IActiveTenscript {\n            const connectTriangle = previous.base === Triangle.PPP ? oppositeTriangle(triangle) : triangle\n            const newBrick = new TensegrityBuilder(tensegrity).createConnectedBrick(previous, connectTriangle, treeScale)\n            if (newTree._ === 0) {\n                markBrick(newBrick, newTree)\n            }\n            return {tree: newTree, brick: newBrick, tensegrity}\n        }\n\n        const forward = tree._\n        if (forward) {\n            const _ = forward - 1\n            active.push(grow(brick, {...tree, _}, Triangle.PPP, percentOrHundred(tree.S)))\n            return\n        }\n\n        TRIANGLES.forEach(triangle => {\n            const subtree = childTree(triangle, tree)\n            const triangleMark = faceMark(triangle, tree)\n            if (subtree) {\n                const _ = subtree._ ? subtree._ - 1 : undefined\n                const decremented = {...subtree, _}\n                active.push(grow(brick, decremented, triangle, percentOrHundred(subtree.S)))\n            } else if (triangleMark) {\n                const mark = marks[triangleMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(triangle, tree)\n                    active.push(grow(brick, markTree, triangle, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return active\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { FABRIC_FEATURES } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { codeToTenscript, ITenscript } from \"../fabric/tenscript\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    View = \"View\",\n    Strain = \"Strain\",\n    Realize = \"Realize\",\n}\n\nconst VERSION = \"2020-05-14\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    recentCode: Record<string, string>\n    controlTab: ControlTab\n    fullScreen: boolean\n    ellipsoids: boolean\n    rotating: boolean\n    showPushes: boolean\n    showPulls: boolean\n}\n\nexport function addRecentCode(state: IStoredState, {code, name}: ITenscript): IStoredState {\n    const recentCode = {...state.recentCode}\n    recentCode[name] = code\n    return transition(state, {recentCode})\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return Object.keys(state.recentCode).map(key => {\n        const code = state.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function roleLengthFeature(intervalRole: IntervalRole): WorldFeature {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return WorldFeature.NexusPushLength\n        case IntervalRole.ColumnPush:\n            return WorldFeature.ColumnPushLength\n        case IntervalRole.Triangle:\n            return WorldFeature.TriangleLength\n        case IntervalRole.Ring:\n            return WorldFeature.RingLength\n        case IntervalRole.Cross:\n            return WorldFeature.CrossLength\n        case IntervalRole.BowMid:\n            return WorldFeature.BowMidLength\n        case IntervalRole.BowEnd:\n            return WorldFeature.BowEndLength\n        case IntervalRole.RibbonPush:\n            return WorldFeature.RibbonPushLength\n        case IntervalRole.RibbonShort:\n            return WorldFeature.RibbonShortLength\n        case IntervalRole.RibbonLong:\n            return WorldFeature.RibbonLongLength\n        case IntervalRole.RibbonHanger:\n            return WorldFeature.RibbonHangerLength\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport function roleDefaultFromFeatures(featureNumeric: (feature: WorldFeature) => number, intervalRole: IntervalRole): number {\n    if (intervalRole === IntervalRole.FaceConnector || intervalRole === IntervalRole.FaceDistancer || intervalRole === IntervalRole.FaceAnchor) {\n        throw new Error()\n    }\n    return featureNumeric(roleLengthFeature(intervalRole))\n}\n\nexport function transition(state: IStoredState, partial: Partial<IStoredState>): IStoredState {\n    return {...state, nonce: state.nonce + 1, ...partial}\n}\n\nfunction initialStoredState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        fullScreen: true,\n        ellipsoids: false,\n        rotating: false,\n        showPushes: true,\n        showPulls: true,\n    })\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 50, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.SlackThreshold:\n            return {\n                feature,\n                name: \"Slack threshold\",\n                percents: [0.01, 0.1, 1, 10, 100, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness factor\",\n                percents: [100, 150, 200, 250, 300, 400],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.MaxStrain:\n            return {\n                feature,\n                name: \"Maximum Strain\",\n                percents: [1, 2, 3, 5, 8, 13, 21, 34, 55, 100],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 2000, 3000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.NexusPushLength:\n            return {\n                feature,\n                name: \"Nexus Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.ColumnPushLength:\n            return {\n                feature,\n                name: \"Column Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.TriangleLength:\n            return {\n                feature,\n                name: \"Triangle\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RingLength:\n            return {\n                feature,\n                name: \"Ring\",\n                percents: [10, 80, 90, 100, 110, 120, 130],\n            }\n        case WorldFeature.CrossLength:\n            return {\n                feature,\n                name: \"Cross\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.BowMidLength:\n            return {\n                feature,\n                name: \"Bow Mid\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.BowEndLength:\n            return {\n                feature,\n                name: \"Bow End\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonPushLength:\n            return {\n                feature,\n                name: \"Rib Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonShortLength:\n            return {\n                feature,\n                name: \"Rib Short\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonLongLength:\n            return {\n                feature,\n                name: \"Rib Long\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonHangerLength:\n            return {\n                feature,\n                name: \"Rib Hanger\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.PushRadius:\n            return {\n                feature,\n                name: \"Push Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case WorldFeature.PullRadius:\n            return {\n                feature,\n                name: \"Pull Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case WorldFeature.JointRadiusFactor:\n            return {\n                feature,\n                name: \"Joint Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case WorldFeature.MaxStiffness:\n            return {\n                feature,\n                name: \"Maximum Stiffness\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness Factor\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            storedState$.next(transition(storedState, {featureValues}))\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        const numeric = this.numeric\n        const expo = numeric.toExponential(5)\n        const zero = expo.indexOf(\"e+0\")\n        if (zero > 0) {\n            return expo.substring(0, zero)\n        }\n        const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n        if (minus > 0) {\n            return numeric.toFixed(5)\n        }\n        const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n        if (plus > 0) {\n            return numeric.toFixed(1)\n        }\n        return expo\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityOptimizer } from \"./tensegrity-optimizer\"\n\nexport interface ILifeTransition {\n    stage: Stage\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (worldFeature: WorldFeature) => number, private tensegrity: Tensegrity, stage: Stage) {\n        this._stage = stage\n    }\n\n    public executeTransition(tx: ILifeTransition): Life {\n        this.transition(tx)\n        this._stage = tx.stage\n        return new Life(this.numericFeature, this.tensegrity, tx.stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition({stage, adoptLengths, strainToStiffness}: ILifeTransition): void {\n        const tensegrity = this.tensegrity\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            const faceIntervals = [...tensegrity.faceIntervals]\n                            faceIntervals.forEach(interval => tensegrity.removeFaceInterval(interval))\n                            const faceAnchors = [...tensegrity.faceAnchors]\n                            faceAnchors.forEach(interval => tensegrity.removeFaceAnchor(interval))\n                            tensegrity.instance.snapshot()\n                        }\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Pretensing:\n                switch (stage) {\n                    case Stage.Pretenst:\n                        return\n                }\n                break\n            case Stage.Pretenst:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (strainToStiffness) {\n                            new TensegrityOptimizer(tensegrity).stiffnessesFromStrains(interval => {\n                                switch (interval.intervalRole) {\n                                    case IntervalRole.RibbonPush:\n                                    case IntervalRole.RibbonShort:\n                                    case IntervalRole.RibbonLong:\n                                    case IntervalRole.RibbonHanger:\n                                        return false\n                                    default:\n                                        const alphaY = interval.alpha.location().y\n                                        const omegaY = interval.omega.location().y\n                                        const surface = (alphaY + omegaY) < 0.1\n                                        return !surface\n                                }\n                            })\n                            return\n                        }\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            tensegrity.instance.snapshot()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { intervalRoleName, isPushInterval } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ILifeTransition, Life } from \"./life\"\nimport { execute, IActiveTenscript, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { scaleToFaceConnectorLength, TensegrityBuilder } from \"./tensegrity-builder\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    IPercent,\n    percentOrHundred,\n    percentToFactor,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport class Tensegrity {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public faceIntervals: IFaceInterval[] = []\n    public faceAnchors: IFaceAnchor[] = []\n    public faces: IFace[] = []\n    public bricks: IBrick[] = []\n    public activeTenscript?: IActiveTenscript[]\n    private transitionQueue: ILifeTransition[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly symmetrical: boolean,\n        public readonly rotation: number,\n        public readonly scale: IPercent,\n        public readonly roleDefaultLength: (intervalRole: IntervalRole) => number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        const brick = new TensegrityBuilder(this).createBrickAt(location, symmetrical, scale)\n        this.bricks = [brick]\n        this.activeTenscript = [{tree: this.tenscript.tree, brick, tensegrity: this}]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public lifeTransition(tx: ILifeTransition): void {\n        const life = this.life$.getValue()\n        if (tx.stage === life.stage) {\n            return\n        }\n        this.life$.next(life.executeTransition(tx))\n    }\n\n    public createJoint(location: Vector3): number {\n        return this.fabric.create_joint(location.x, location.y, location.z)\n    }\n\n    public createFaceConnector(alpha: IFace, omega: IFace): IFaceInterval {\n        return this.createFaceInterval(alpha, omega)\n    }\n\n    public createFaceDistancer(alpha: IFace, omega: IFace, pullScale: IPercent): IFaceInterval {\n        return this.createFaceInterval(alpha, omega, pullScale)\n    }\n\n    public createFaceAnchor(alpha: IFace, point: Vector3, scale: IPercent): IFaceAnchor {\n        const intervalRole = IntervalRole.FaceAnchor\n        const omegaJointIndex = this.createJoint(point)\n        this.fabric.anchor_joint(omegaJointIndex)\n        const omega: IJoint = {\n            index: omegaJointIndex,\n            oppositeIndex: -1,\n            location: () => this.instance.jointLocation(omegaJointIndex),\n        }\n        this.joints.push(omega)\n        const idealLength = alpha.location().distanceTo(point)\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const linearDensity = 0\n        const restLength = -point.y * percentToFactor(scale)\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceAnchor = {index, alpha, omega, removed: false}\n        this.faceAnchors.push(interval)\n        return interval\n    }\n\n    public removeFaceInterval(interval: IFaceInterval): void {\n        this.faceIntervals = this.faceIntervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public removeFaceAnchor(interval: IFaceAnchor): void {\n        this.faceAnchors = this.faceAnchors.filter(existing => existing.index !== interval.index)\n        interval.alpha.joints.forEach(joint => this.fabric.anchor_joint(joint.index))\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createInterval(\n        alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent,\n        stiffness: number, linearDensity: number, coundown: number,\n    ): IInterval {\n        const idealLength = alpha.location().distanceTo(omega.location())\n        const scaleFactor = percentToFactor(scale)\n        const defaultLength = this.roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPushInterval(intervalRole),\n            location: () => new Vector3().addVectors(alpha.location(), omega.location()).multiplyScalar(0.5),\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = factorToPercent(percentToFactor(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        this.fabric.set_interval_role(interval.index, intervalRole)\n        this.fabric.change_rest_length(interval.index, percentToFactor(scaleFactor) * this.roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(brick: IBrick, triangle: Triangle): IFace {\n        const {negative, pushEnds} = TRIANGLE_DEFINITIONS[triangle]\n        const pushes = pushEnds.map(end => {\n            const foundPush = brick.pushes.find(push => {\n                const endJoint = brick.joints[end]\n                return endJoint.index === push.alpha.index || endJoint.index === push.omega.index\n            })\n            if (foundPush === undefined) {\n                throw new Error()\n            }\n            return foundPush\n        })\n        const pulls = [0, 1, 2].map(offset => brick.pulls[triangle * 3 + offset])\n        const joints = pushEnds.map(end => brick.joints[end])\n        const index = this.fabric.create_face(joints[0].index, joints[1].index, joints[2].index)\n        const face: IFace = {\n            index, negative, removed: false,\n            brick, triangle, joints, pushes, pulls,\n            location: () =>\n                joints.reduce((sum, joint) => sum.add(joint.location()), new Vector3())\n                    .multiplyScalar(1.0 / 3.0),\n        }\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace, removeIntervals: boolean): void {\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        this.faceIntervals.forEach(existing => {\n            if (existing.alpha.index > face.index) {\n                existing.alpha.index--\n            }\n            if (existing.omega.index > face.index) {\n                existing.omega.index--\n            }\n        })\n        face.removed = true\n        if (removeIntervals) {\n            face.pulls.forEach(interval => this.removeInterval(interval))\n        }\n    }\n\n    public get anchorJoints(): IJoint[] {\n        return this.joints.filter(joint => this.fabric.is_anchor_joint(joint.index))\n    }\n\n    public startTightening(intervals: IFaceInterval[]): void {\n        this.faceIntervals = intervals\n    }\n\n    public set transition(tx: ILifeTransition) {\n        if (tx.stage === undefined) {\n            throw new Error(\"Undefined stage!\")\n        }\n        this.transitionQueue.push(tx)\n    }\n\n    public iterate(): Stage | undefined {\n        const tx = this.transitionQueue.shift()\n        if (tx) {\n            this.lifeTransition(tx)\n        }\n        const stage = this.instance.iterate(this.life$.getValue().stage)\n        if (stage === undefined) {\n            return undefined\n        }\n        const activeCode = this.activeTenscript\n        const builder = () => new TensegrityBuilder(this)\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.activeTenscript = execute(activeCode, this.tenscript.marks)\n            }\n            if (activeCode.length === 0) {\n                this.activeTenscript = undefined\n                faceStrategies(this.faces, this.tenscript.marks, builder()).forEach(strategy => strategy.execute())\n                if (stage === Stage.Growing) {\n                    return this.fabric.finish_growing()\n                }\n            }\n            return Stage.Growing\n        }\n        if (this.faceIntervals.length > 0) {\n            this.faceIntervals = builder().checkFaceIntervals(this.faceIntervals, interval => this.removeFaceInterval(interval))\n        }\n        return stage\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = joint.location()\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const radiusFeature = this.numericFeature(interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius)\n                const radius = radiusFeature * percentToFactor(interval.scale)\n                const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                const length = currentLength + (interval.isPush ? -jointRadius * 2 : jointRadius * 2)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: interval.isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    idealLength: idealLengths[interval.index],\n                    isPush: interval.isPush,\n                    length, radius, jointRadius,\n                }\n            }),\n        }\n    }\n\n    private createFaceInterval(alpha: IFace, omega: IFace, pullScale?: IPercent): IFaceInterval {\n        const connector = !pullScale\n        const intervalRole = connector ? IntervalRole.FaceConnector : IntervalRole.FaceDistancer\n        const idealLength = alpha.location().distanceTo(omega.location())\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const scaleFactor = (percentToFactor(alpha.brick.scale) + percentToFactor(omega.brick.scale)) / 2\n        const restLength = !pullScale ? scaleToFaceConnectorLength(scaleFactor) : percentToFactor(pullScale) * idealLength\n        const linearDensity = 0\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceInterval = {index, alpha, omega, connector, scaleFactor, removed: false}\n        this.faceIntervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.faceIntervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.faceAnchors.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createFaceIntervals(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FabricInstance, FORWARD } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, Triangle, TRIANGLE_DEFINITIONS } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: Triangle\n    triangle: Triangle\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            const nextStage = embryo.iterate()\n            const life = embryo.life$.getValue()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                embryo.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                embryo.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        instance.fabric.adopt_lengths()\n                        const faceIntervals = [...embryo.faceIntervals]\n                        faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n                        instance.iterate(Stage.Slack)\n                        instance.iterate(Stage.Pretensing)\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Pretensing:\n                    return true\n                case Stage.Pretenst:\n                    extractGotchiFaces(embryo, state.muscles, state.extremities)\n                    embryo.transition = {stage: Stage.Pretenst}\n                    embryo.iterate()\n                    this.embryo = undefined\n                    this.twitcher = new Twitcher(state)\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance, triangle} = muscle\n    const oppositeTriangle = TRIANGLE_DEFINITIONS[triangle].opposite\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.triangle === oppositeTriangle)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\nfunction extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    tensegrity.faces\n        .filter(face => !face.removed && face.brick.parentFace)\n        .forEach(face => {\n            const gatherAncestors = (f: IFace, id: Triangle[]): Limb => {\n                const definition = TRIANGLE_DEFINITIONS[f.triangle]\n                id.push(definition.negative ? definition.opposite : definition.name)\n                const parentFace = f.brick.parentFace\n                if (parentFace) {\n                    return gatherAncestors(parentFace, id)\n                } else {\n                    return limbFromTriangle(f.triangle)\n                }\n            }\n            const identities: Triangle[] = []\n            const limb = gatherAncestors(face, identities)\n            const group = identities.shift()\n            const triangle = face.triangle\n            if (!group) {\n                throw new Error(\"no top!\")\n            }\n            const distance = identities.length\n            const faceIndex = face.index\n            if (isTriangleExtremity(group)) {\n                const name = `[${limb}]`\n                extremities.push({faceIndex, name, limb})\n            } else {\n                const name = `[${limb}]:[${distance}:${Triangle[group]}]:{tri=${Triangle[triangle]}}`\n                muscles.push({faceIndex, name, limb, distance, group, triangle})\n            }\n        })\n}\n\nfunction isTriangleExtremity(triangle: Triangle): boolean {\n    const definition = TRIANGLE_DEFINITIONS[triangle]\n    const normalizedTriangle = definition.negative ? definition.opposite : triangle\n    return normalizedTriangle === Triangle.PPP\n}\n\nfunction limbFromTriangle(triangle: Triangle): Limb {\n    switch (triangle) {\n        case Triangle.NNN:\n            return Limb.BackLeft\n        case Triangle.PNN:\n            return Limb.BackRight\n        case Triangle.NPP:\n            return Limb.FrontLeft\n        case Triangle.PPP:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    const R = 2.5\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PushRadius:\n            return defaultValue * 3\n        case WorldFeature.PullRadius:\n            return defaultValue * 2\n        case WorldFeature.JointRadiusFactor:\n            return defaultValue * 0.8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.MaxStrain:\n            return defaultValue * 0.1\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 0.3\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 20.0\n        case WorldFeature.PushOverPull:\n            return 0.25\n        case WorldFeature.RibbonLongLength:\n            return defaultValue * R * 0.66\n        case WorldFeature.RibbonPushLength:\n        case WorldFeature.RibbonShortLength:\n            return defaultValue * R\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Life } from \"../fabric/life\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [life, updateLife] = useState<Life | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateLife(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.life$.subscribe((latestLife) => {\n            if (latestLife.stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateLife(latestLife)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !life ? <h1>no life</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(life.stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { DoubleSide, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { Orbit } from \"../view/orbit\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SPACE_RADIUS,\n    SPACE_SCALE,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.01\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const midpoint = new Vector3()\n\n    function developing(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function resting(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 10\n    }\n\n    function running(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function evolving(e: Evolution): number {\n        switch (e.iterate()) {\n            case EvolutionPhase.EvolutionDone:\n                console.log(\"Evolution DONE\")\n                stopEvolution()\n                break\n            case EvolutionPhase.EvolutionHarder:\n                console.log(\"Evolution advance...\")\n                stopEvolution(e.withReducedCyclePattern)\n                break\n        }\n        e.getMidpoint(midpoint)\n        return 15\n    }\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        const approachDistance = (distance: number) => {\n            const position = control.object.position\n            const positionToTarget = new Vector3().subVectors(position, control.target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (gotchi) {\n                    approachDistance(developing(gotchi))\n                }\n                break\n            case Happening.Resting:\n                if (gotchi) {\n                    approachDistance(resting(gotchi))\n                }\n                break\n            case Happening.Running:\n                if (gotchi) {\n                    approachDistance(running(gotchi))\n                }\n                break\n            case Happening.Evolving:\n                if (evolution) {\n                    approachDistance(evolving(evolution))\n                    evolutionPhase(evolution.phase)\n                }\n                break\n        }\n        control.target.add(new Vector3().subVectors(midpoint, control.target).multiplyScalar(TOWARDS_TARGET))\n        control.update()\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useEffect(() => {\n        orbit.current.autoRotate = happening === Happening.Evolving\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.life$.getValue().stage === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.life$.getValue().stage\n        const nextStage = this.tensegrity.iterate()\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    const instance = this.instance\n                    instance.fabric.adopt_lengths()\n                    instance.iterate(Stage.Slack)\n                    instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IVertex, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return defaultValue * 0.01\n        case WorldFeature.Gravity:\n            return defaultValue / 3\n        case WorldFeature.SlackThreshold:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 2\n        case WorldFeature.MaxStrain:\n            return defaultValue * 0.5\n        default:\n            return defaultValue\n    }\n}\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.vertexAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        this.sphere.vertices.forEach(center => {\n            center.adjacent.forEach(adjacent => {\n                this.sphere.pullsForAdjacent(center, adjacent)\n            })\n        })\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(vertexA: IVertex, vertexB: IVertex, withMiddle?: boolean): { vertexA: IVertex, vertexB: IVertex, vertexMid?: IVertex } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(vertexA.location).lerp(vertexB.location, 0.5)\n            const vertexMid = this.sphere.vertexAt(middleLocation)\n            this.sphere.pushBetween(vertexA, vertexMid)\n            this.sphere.pushBetween(vertexMid, vertexB)\n            return {vertexA, vertexB, vertexMid}\n        } else {\n            this.sphere.pushBetween(vertexA, vertexB)\n            return {vertexA, vertexB}\n        }\n    }\n\n    private build60Edges(): IVertex[] {\n        const edgeVertexes: IVertex[] = []\n        EDGE.forEach(edge => {\n            const {vertexMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (vertexMid) {\n                edgeVertexes.push(vertexMid)\n            }\n        })\n        return edgeVertexes\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IVertex[][] {\n        const edgePoints: IVertex[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IVertex[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IVertex | undefined\n            let previousVertex: IVertex | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.vertexAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IVertex[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IVertex[][]): void {\n        const v: IVertex[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.vertexAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IVertex[] = []\n            const vv1: IVertex[] = []\n            const vv2: IVertex[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IVertex[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IVertex[] {\n        return this.sphere.vertices\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 0.5\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 1.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { TensegritySphere } from \"./tensegrity-sphere\"\n\nextend({Orbit})\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 1\n        orb.maxDistance = 10000\n        orb.enableZoom = true\n        orb.update()\n    }, [])\n\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        if (tick === 0) {\n            control.target.copy(sphere.location)\n        }\n        sphere.iterate()\n        const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        control.target.add(toMidpoint)\n        control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                <lineSegments\n                    key=\"lines\"\n                    geometry={sphere.instance.floatView.lineGeometry}\n                    material={LINE_VERTEX_COLORS}\n                    onUpdate={self => self.geometry.computeBoundingSphere()}\n                />\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 1, 5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IVertex {\n    index: number\n    location: Vector3\n    adjacent: IAdjacent[]\n}\n\nexport interface IAdjacent {\n    push: ISpherePush\n    reverse: boolean\n    vertex: IVertex\n}\n\nfunction adjacentClose({push, reverse}: IAdjacent): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nfunction adjacentFar({push, reverse}: IAdjacent): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport interface ISpherePush {\n    index: number\n    alphaVertex: IVertex\n    omegaVertex: IVertex\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport interface ISpherePull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: ISpherePush[] = []\n    public pulls: ISpherePull[] = []\n    public vertices: IVertex[] = []\n\n    private stage = Stage.Growing\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public vertexAt(location: Vector3): IVertex {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.vertices.length\n        const vertex: IVertex = {index, location, adjacent: []}\n        this.vertices.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaVertex: IVertex, omegaVertex: IVertex): ISpherePush {\n        const midpoint = new Vector3().addVectors(alphaVertex.location, omegaVertex.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaVertex.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaVertex.location).applyQuaternion(quaternion)\n        const stiffness = 0.00001\n        const linearDensity = Math.sqrt(stiffness)\n        const idealLength = alphaVertex.location.distanceTo(omegaVertex.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, IntervalRole.SpherePush,\n            idealLength, idealLength, stiffness, linearDensity, 0)\n        const push: ISpherePush = {index, alpha, omega, alphaVertex, omegaVertex}\n        this.pushes.push(push)\n        alphaVertex.adjacent.push({vertex: omegaVertex, reverse: false, push})\n        omegaVertex.adjacent.push({vertex: alphaVertex, reverse: true, push})\n        return push\n    }\n\n    public pullsForAdjacent(center: IVertex, adjacent: IAdjacent): ISpherePull[] {\n        const pushLength = adjacent.push.alphaVertex.location.distanceTo(adjacent.push.omegaVertex.location)\n        const proportion = 0.3\n        const shortPull = pushLength * proportion\n        const longPull = pushLength * (1 - proportion)\n        const pulls: ISpherePull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, short: boolean) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const stiffness = 0.000001\n            const linearDensity = Math.sqrt(stiffness)\n            const restLength = short ? shortPull : longPull\n            const idealLength = alpha.location().distanceTo(omega.location())\n            const index = this.fabric.create_interval(\n                alpha.index, omega.index, IntervalRole.SpherePull,\n                idealLength, restLength, stiffness, linearDensity, 100)\n            const interval: ISpherePull = {index, alpha, omega}\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextAdjacent = this.nextAdjacent(center, adjacent)\n        const nextClose = adjacentClose(nextAdjacent)\n        const currentClose = adjacentClose(adjacent)\n        const currentFar = adjacentFar(adjacent)\n        pull(currentClose, nextClose, true)\n        pull(currentFar, nextClose, false)\n        return pulls\n    }\n\n    public iterate(): void {\n        const stage = this.instance.iterate(this.stage)\n        if (stage === undefined) {\n            return\n        }\n        switch (stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.stage = this.fabric.finish_growing()\n                break\n            case Stage.Shaping:\n                console.log(\"adopt\")\n                this.fabric.adopt_lengths()\n                this.stage = Stage.Slack\n                break\n            case Stage.Slack:\n                console.log(\"slack\")\n                this.stage = Stage.Pretensing\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = joint.location()\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(interval => {\n                    const radiusFeature = this.numericFeature(WorldFeature.PushRadius)\n                    const radius = radiusFeature / this.frequency\n                    const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                    const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[interval.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radiusFeature = this.numericFeature(WorldFeature.PullRadius)\n                    const radius = radiusFeature / this.frequency\n                    const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                    const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {\n            index,\n            oppositeIndex: -1,\n            location: () => this.instance.jointLocation(index),\n        }\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextAdjacent(center: IVertex, current: IAdjacent): IAdjacent {\n        const centerLocation = center.location\n        const currentLocation = current.vertex.location\n        const toCurrent = new Vector3().subVectors(currentLocation, centerLocation)\n        const cross = new Vector3().crossVectors(centerLocation, toCurrent).normalize()\n        if (this.twist < 0) {\n            cross.multiplyScalar(-1)\n        }\n        const farToClose = center.adjacent\n            .filter(({vertex}) => {\n                if (vertex.index === current.vertex.index) {\n                    return false\n                }\n                const toVertex = new Vector3().subVectors(vertex.location, centerLocation).normalize()\n                return toVertex.dot(cross) > 0\n            })\n            .sort((a, b) => {\n                const distanceA = a.vertex.location.distanceToSquared(currentLocation)\n                const distanceB = b.vertex.location.distanceToSquared(currentLocation)\n                return distanceB - distanceA\n            })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowLeft,\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaTools,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    CurrentLengthsToSlack,\n    SlackToRealizing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Pretensing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture Lengths <FaCamera/> (\n                    <Symbol stage={Stage.Shaping}/> ) <FaArrowRight/> ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.CurrentLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack}}\n                >\n                    Current Lengths <Symbol stage={Stage.Shaping}/> <FaArrowRight/>\n                    <Symbol stage={Stage.Slack}/> Slack\n                </Button>\n            )\n        case StageTransition.SlackToRealizing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Pretensing}}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.transition = {stage: Stage.Shaping}}\n                    >\n                        <Symbol stage={Stage.Shaping}/> Shaping <FaArrowLeft/> Slack <Symbol stage={Stage.Slack}/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture realized <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaTools/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaCompass,\n    FaDragon,\n    FaHandPointUp,\n    FaLink,\n    FaList,\n    FaMagic,\n    FaSlidersH,\n    FaTimesCircle,\n    FaTools,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { MarkAction } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityBuilder } from \"../fabric/tensegrity-builder\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState, roleLengthFeature } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\n\nexport enum ShapeSelection {\n    None,\n    Faces,\n    Intervals,\n}\n\n// brick\n// triangle\n// pulls\n// choose joint\n// choose interval\n\n\nexport function ShapeTab(\n    {\n        floatFeatures, tensegrity, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        tensegrity.instance.world.set_push_and_pull(pushAndPull)\n    }, [pushAndPull])\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updateEllipsoids(newState.ellipsoids)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [lengthFeature, setLengthFeature] = useState(floatFeatures[WorldFeature.NexusPushLength])\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            tensegrity.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function connect(): void {\n        const pulls = new TensegrityBuilder(tensegrity).createFaceIntervals(selectedFaces, {action: MarkAction.JoinFaces})\n        tensegrity.faceIntervals.push(...pulls)\n        clearSelection()\n        setShapeSelection(ShapeSelection.None)\n        setFabric(tensegrity)\n    }\n\n    function disabled(): boolean {\n        return ellipsoids || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedFaces.length < faceCount || ellipsoids\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CurrentLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Faces ? \"warning\" : \"secondary\"}\n                        disabled={ellipsoids && shapeSelection === ShapeSelection.None}\n                        onClick={() => {\n                            clearSelection()\n                            setShapeSelection(shapeSelection !== ShapeSelection.Faces ? ShapeSelection.Faces : ShapeSelection.None)\n                        }}\n                    >\n                        <span><FaHandPointUp/> Select faces</span>\n                    </Button>\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={ellipsoids && shapeSelection === ShapeSelection.None || selectedFaces.length === 0}\n                        onClick={() => {\n                            if (shapeSelection === ShapeSelection.Intervals) {\n                                clearSelection()\n                            }\n                            setShapeSelection(shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals)\n                        }}\n                    >\n                        <span><FaSlidersH/> Make length adjustments</span>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedFaces.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelection()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(1, ShapeSelection.Faces)}\n                        onClick={() => {\n                            new TensegrityBuilder(tensegrity).faceToOrigin(selectedFaces[0])\n                            tensegrity.instance.refreshFloatView()\n                            clearSelection()\n                        }}>\n                        <FaCompass/><span> Upright</span>\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(2, ShapeSelection.Faces)}\n                        onClick={connect}>\n                        <FaLink/><span> Connect</span>\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Default Lengths</h6>\n                <FeaturePanel key={lengthFeature.title} feature={lengthFeature} disabled={disabled()}/>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map(intervalRole => ({\n                            intervalRole,\n                            feature: floatFeatures[roleLengthFeature(intervalRole)],\n                        }))\n                        .map(({intervalRole, feature}) => (\n                            <Button size=\"sm\" key={`IntervalRole[${intervalRole}]`}\n                                    onClick={() => setLengthFeature(feature)}\n                                    color={lengthFeature.worldFeature === feature.worldFeature ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { fabricFeatureIntervalRole } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const roleColor = roleColorString(fabricFeatureIntervalRole(feature.worldFeature))\n    const color = roleColor ? roleColor : \"#919191\"\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{\n                color: disabled ? \"gray\" : \"white\",\n            }}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : color\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({floatFeatures, tensegrity, shapeSelection, storedState$}: {\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updateEllipsoids(storedState.ellipsoids)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function disabled(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function changeState(changed: Partial<IStoredState>): void {\n        storedState$.next(transition(storedState$.getValue(), changed))\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToRealizing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <FeaturePanel feature={floatFeatures[WorldFeature.PretenstFactor]} disabled={disabled()}/>\n                <div className=\"float-right\" style={{\n                    color: disabled() ? \"gray\" : \"white\",\n                }}>\n                    {SurfaceCharacter[storedState.surfaceCharacter]}\n                </div>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => changeState({surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={floatFeatures[WorldFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={floatFeatures[WorldFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaSlidersH } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Geometry, Vector3 } from \"three\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { SCALE_LINE } from \"./materials\"\n\nconst SCALE_WIDTH = 0.7\n// const NEEDLE_WIDTH = 1.4\nconst SCALE_MAX = 3.5\n\nconst FEATURES = [\n    WorldFeature.MaxStrain,\n    WorldFeature.MaxStiffness,\n    WorldFeature.VisualStrain,\n    WorldFeature.SlackThreshold,\n]\n\nfunction scaleGeometry(middleTick: boolean): Geometry {\n    const geometry = new Geometry()\n    const v = (x: number, y: number) => new Vector3(x, y, 0)\n    geometry.vertices = [\n        v(0, -SCALE_MAX), v(0, SCALE_MAX),\n        v(-SCALE_WIDTH, SCALE_MAX), v(SCALE_WIDTH, SCALE_MAX),\n        v(-SCALE_WIDTH, -SCALE_MAX), v(SCALE_WIDTH, -SCALE_MAX),\n    ]\n    if (middleTick) {\n        geometry.vertices.push(v(-SCALE_WIDTH, 0), v(SCALE_WIDTH, 0))\n    }\n    return geometry\n}\n\n// function needleGeometry(\n//     intervals: IInterval[], lineColors: Float32Array,\n//     values: Float32Array, midValue: number, maxValue: number,\n// ): BufferGeometry {\n//     const position = new Float32Array(values.length * 2 * 3)\n//     let offset = 0\n//     intervals.forEach(interval => {\n//         const value = values[interval.index]\n//         const unboundedHeight = (value - midValue) / (maxValue - midValue)\n//         const height = unboundedHeight < -1 ? -1 : unboundedHeight > 1 ? 1 : unboundedHeight\n//         position[offset++] = -SCALE_WIDTH * NEEDLE_WIDTH\n//         position[offset++] = height * SCALE_MAX\n//         position[offset++] = 0\n//         position[offset++] = SCALE_WIDTH * NEEDLE_WIDTH\n//         position[offset++] = height * SCALE_MAX\n//         position[offset++] = 0\n//     })\n//     const geometry = new BufferGeometry()\n//     geometry.addAttribute(\"position\", new Float32BufferAttribute(position, 3))\n//     geometry.addAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n//     return geometry\n// }\n\nexport function StrainTab({floatFeatures, tensegrity, storedState$}: {\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const camera = useRef()\n\n    function ScaleView(): JSX.Element {\n        const [maxStrain, updateMaxStrain] = useState(storedState$.getValue().featureValues[WorldFeature.MaxStrain].numeric)\n        const [maxStiffness, updateMaxStiffness] = useState(storedState$.getValue().featureValues[WorldFeature.MaxStiffness].numeric)\n\n        useEffect(() => {\n            const sub = storedState$.subscribe(storedState => {\n                updateMaxStrain(storedState.featureValues[WorldFeature.MaxStrain].numeric)\n                updateMaxStiffness(storedState.featureValues[WorldFeature.MaxStiffness].numeric)\n            })\n            return () => sub.unsubscribe()\n        }, [tensegrity])\n\n        const floatView = tensegrity.instance.floatView\n\n        function Scale({position, intervals, floats, mid, max, middleTick}: {\n            position: number,\n            intervals: IInterval[],\n            floats: Float32Array,\n            mid: number,\n            max: number,\n            middleTick: boolean,\n        }): JSX.Element {\n            return (\n                <group position={new Vector3(position, -0.15, 0)}>\n                    {/*<lineSegments*/}\n                    {/*    geometry={needleGeometry(intervals, floatView.lineColors, floats, mid, max)}*/}\n                    {/*    material={LINE_VERTEX_COLORS}/>*/}\n                    <lineSegments geometry={scaleGeometry(middleTick)} material={SCALE_LINE}/>\n                </group>\n            )\n        }\n\n        return (\n            <Canvas>\n                <orthographicCamera position={new Vector3(0, 0, -1)} ref={camera}/>\n                <scene>\n                    <Scale\n                        position={-1.5}\n                        intervals={tensegrity.intervals}\n                        floats={floatView.strains}\n                        mid={0}\n                        max={maxStrain}\n                        middleTick={true}\n                    />\n                    <Scale\n                        position={1.5}\n                        intervals={tensegrity.intervals}\n                        floats={floatView.stiffnesses}\n                        mid={0}\n                        max={maxStiffness}\n                        middleTick={false}\n                    />\n                </scene>\n            </Canvas>\n        )\n    }\n\n    return <>\n        <Grouping height=\"25em\">\n            <div style={{\n                position: \"absolute\",\n                left: \"6em\",\n            }}>\n                Strain\n            </div>\n            <div style={{\n                position: \"absolute\",\n                right: \"5em\",\n            }}>\n                Stiffness\n            </div>\n            <ScaleView/>\n        </Grouping>\n        <Grouping>\n            <h6 className=\"w-100 text-center\"><FaSlidersH/> Adjustments</h6>\n            {FEATURES.map(feature => (\n                <FeaturePanel\n                    key={`WorldFeature[${feature}]`}\n                    feature={floatFeatures[feature]}\n                    disabled={false}\n                />))}\n        </Grouping>\n    </>\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaBug,\n    FaDownload,\n    FaDungeon,\n    FaFile,\n    FaFileCsv,\n    FaFutbol,\n    FaHeart,\n    FaHiking,\n    FaPlay,\n    FaRegFolder,\n    FaRegFolderOpen,\n    FaRocket,\n    FaRunning,\n    FaSeedling,\n} from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { addRecentCode, getRecentTenscript, IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, tensegrity, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        const state = addRecentCode(storedState$.getValue(), newCode)\n        setRecentPrograms(getRecentTenscript(state))\n        storedState$.next(state)\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/>\n                    </Button>\n                    <Button onClick={() => switchToVersion(Version.Bridge)}>\n                        <FaDungeon/>\n                    </Button>\n                    <Button onClick={() => switchToVersion(Version.Gotchi)}>\n                        <FaBug/>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100\">\n                        <Button onClick={() => saveCSVZip(tensegrity.fabricOutput)}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(tensegrity.fabricOutput)}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCamera,\n    FaCircle,\n    FaClock,\n    FaCompressArrowsAlt,\n    FaExpandArrowsAlt,\n    FaEye,\n    FaFistRaised,\n    FaFutbol,\n    FaHandRock,\n    FaParachuteBox,\n    FaVolleyballBall,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function ViewTab(\n    {\n        floatFeatures, tensegrity,\n        visibleRoles, setVisibleRoles, storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    const [showPushes, updateShowPushes] = useState(storedState$.getValue().showPushes)\n    const [showPulls, updateShowPulls] = useState(storedState$.getValue().showPulls)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updateEllipsoids(newState.ellipsoids)\n            updateShowPushes(newState.showPushes)\n            updateShowPulls(newState.showPulls)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function ViewButton({pushes, pulls, children}: { pushes: boolean, pulls: boolean, children: JSX.Element }): JSX.Element {\n        return (\n            <Button\n                style={{color: \"white\"}}\n                color={pushes === showPushes && pulls === showPulls ? \"success\" : \"secondary\"}\n                onClick={() => {\n                    storedState$.next(transition(storedState$.getValue(), {showPulls: pulls, showPushes: pushes}))\n                }}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Coloring</h6>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <ViewButton pushes={true} pulls={true}>\n                        <span><FaFutbol/> All</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={true}>\n                        <span><FaVolleyballBall/> Pulls</span>\n                    </ViewButton>\n                    <ViewButton pushes={true} pulls={false}>\n                        <span><FaExpandArrowsAlt/> Pushes</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={false}>\n                        <span><FaCircle/> Roles</span>\n                    </ViewButton>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaCamera/> Snapshot</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            color={visibleRoles.indexOf(intervalRole) < 0 ? \"secondary\" : \"success\"}\n                            key={`viz${intervalRole}`}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    setVisibleRoles([...visibleRoles, intervalRole])\n                                } else {\n                                    setVisibleRoles(visibleRoles.filter(role => role !== intervalRole))\n                                }\n                            }}\n                            disabled={!ellipsoids}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel key=\"pushrad\" feature={floatFeatures[WorldFeature.PushRadius]}\n                              disabled={!ellipsoids}/>\n                <FeaturePanel key=\"pullrad\" feature={floatFeatures[WorldFeature.PullRadius]}\n                              disabled={!ellipsoids}/>\n                <FeaturePanel key=\"jointrad\" feature={floatFeatures[WorldFeature.JointRadiusFactor]}\n                              disabled={!ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={floatFeatures[WorldFeature.IterationsPerFrame]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"ic\" feature={floatFeatures[WorldFeature.IntervalCountdown]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"pc\" feature={floatFeatures[WorldFeature.PretensingCountdown]} disabled={ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={ellipsoids}\n                            onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { StrainTab } from \"./strain-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\nimport { ViewTab } from \"./view-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        floatFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, selectedIntervals,\n        tensegrity, setFabric, runTenscript,\n        visibleRoles, setVisibleRoles,\n        toFullScreen, storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        selectedIntervals: IInterval[],\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(tensegrity ? tensegrity.life$.getValue() : undefined)\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelection()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => storedState$.next(transition(storedState$.getValue(), {controlTab: tab}))}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedFaces={selectedFaces}\n                            clearSelection={clearSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.View:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ViewTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            visibleRoles={visibleRoles}\n                            setVisibleRoles={setVisibleRoles}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Strain:\n                    return !tensegrity ? NO_FABRIC : (\n                        <StrainTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !tensegrity ? NO_FABRIC : (\n                        <RealizeTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    CylinderGeometry,\n    DoubleSide,\n    Euler,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    Quaternion,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { facesMidpoint, IFace, IInterval, percentToFactor } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { JOINT_MATERIAL, LINE_VERTEX_COLORS, rainbowMaterial, roleMaterial, SELECT_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\nconst SPHERE = new SphereGeometry(1, 32, 8)\nconst PULL_CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst PUSH_CYLINDER_INNER = new CylinderGeometry(0.5, 0.5, 1, 6, 1, false)\nconst PUSH_CYLINDER_OUTER = new CylinderGeometry(1, 1, 0.85, 12, 1, false)\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst ALTITUDE = 4\nconst Y_AXIS = new Vector3(0, 1, 0)\n\nexport function FabricView({\n                               tensegrity,\n                               selectedIntervals, toggleSelectedInterval,\n                               selectedFaces, setSelectedFaces, storedState$,\n                               shapeSelection, ellipsoids, visibleRoles,\n                           }: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    toggleSelectedInterval: (interval: IInterval) => void,\n    selectedFaces: IFace[],\n    setSelectedFaces: (faces: IFace[]) => void,\n    shapeSelection: ShapeSelection,\n    ellipsoids: boolean,\n    visibleRoles: IntervalRole[],\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [whyThis, updateWhyThis] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    if (!perspective) {\n        throw new Error(\"Wheres the camera tenseg?\")\n    }\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        updateInstance(tensegrity.instance)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(orb => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(orbit.current.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        orb.object = perspective\n        orb.minPolarAngle = -0.98 * Math.PI / 2\n        orb.maxPolarAngle = 0.8 * Math.PI\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useFrame(() => {\n        const view = instance.view\n        const target = selectedFaces.length > 0 ? facesMidpoint(selectedFaces) :\n            new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n        orbit.current.target.add(towardsTarget)\n        orbit.current.update()\n        if (!ellipsoids && shapeSelection !== ShapeSelection.Faces) {\n            const nextStage = tensegrity.iterate()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                tensegrity.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                tensegrity.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Pretensing:\n                case Stage.Pretenst:\n                    break\n                default:\n                    updateWhyThis(whyThis + 1)\n            }\n\n        }\n    })\n\n    function toggleFacesSelection(faceToToggle: IFace): void {\n        if (selectedFaces.some(selected => selected.index === faceToToggle.index)) {\n            setSelectedFaces(selectedFaces.filter(b => b.index !== faceToToggle.index))\n        } else {\n            setSelectedFaces([...selectedFaces, faceToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {ellipsoids ? (\n                    <EllipsoidView\n                        key=\"ellipsoid\"\n                        tensegrity={tensegrity}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        visibleRoles={visibleRoles}\n                    />\n                ) : (\n                    <LineView\n                        key=\"lines\"\n                        tensegrity={tensegrity}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        toggleSelectedInterval={toggleSelectedInterval}\n                    />\n                )}\n                {shapeSelection !== ShapeSelection.Faces ? undefined : (\n                    <>\n                        <Faces\n                            key=\"faces\"\n                            tensegrity={tensegrity}\n                            stage={life.stage}\n                            selectFace={toggleFacesSelection}\n                        />\n                        {selectedFaces.map(face => (\n                            <SelectedFace\n                                key={`Face${face.index}`}\n                                tensegrity={tensegrity}\n                                face={face}\n                            />\n                        ))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectedFace({tensegrity, face}: { tensegrity: Tensegrity, face: IFace }): JSX.Element {\n    const scale = percentToFactor(face.brick.scale) / 8\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={face.location()}\n            material={SELECT_MATERIAL}\n            scale={new Vector3(scale, scale, scale)}\n        />\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, storedState, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    storedState: IStoredState,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n\n    let material = roleMaterial(interval.intervalRole)\n    if (storedState.showPushes || storedState.showPulls) {\n        material = rainbowMaterial(tensegrity.instance.floatView.strainNuances[interval.index])\n        if (!(storedState.showPushes && storedState.showPulls) && (storedState.showPushes && !interval.isPush || storedState.showPulls && interval.isPush)) {\n            return <group/>\n        }\n    }\n    const radiusFeature = storedState.featureValues[interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius]\n    const radius = radiusFeature.numeric\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n    const length = interval.alpha.location().distanceTo(interval.omega.location())\n    const jointRadius = radius * storedState.featureValues[WorldFeature.JointRadiusFactor].numeric\n    const intervalScale = new Vector3(radius, length + (interval.isPush ? -jointRadius * 2 : 0), radius)\n    const jointScale = new Vector3(jointRadius, jointRadius, jointRadius)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        geometry={PUSH_CYLINDER_INNER}\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={material}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={PUSH_CYLINDER_OUTER}\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={material}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={interval.alpha.location()}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={interval.omega.location()}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                </>\n            ) : (\n                <mesh\n                    geometry={PULL_CYLINDER}\n                    position={interval.location()}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    material={material}\n                    matrixWorldNeedsUpdate={true}\n                    onPointerDown={onPointerDown}\n                />\n            )}\n        </>\n    )\n}\n\nfunction EllipsoidView({tensegrity, visibleRoles, selectedIntervals, storedState}: {\n    tensegrity: Tensegrity,\n    visibleRoles: IntervalRole[],\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            {tensegrity.intervals.map(interval => (visibleRoles.indexOf(interval.intervalRole) < 0 ? undefined : (\n                <IntervalMesh\n                    key={`I${interval.index}`}\n                    tensegrity={tensegrity}\n                    interval={interval}\n                    storedState={storedState}\n                />\n            )))}}\n        </group>\n    )\n}\n\nfunction SelectedInterval({interval, tensegrity, storedState, toggleSelectedInterval}: {\n    interval: IInterval,\n    tensegrity: Tensegrity,\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <IntervalMesh\n            tensegrity={tensegrity}\n            interval={interval}\n            storedState={storedState}\n            onPointerDown={() => toggleSelectedInterval(interval)}\n        />\n    )\n}\n\nfunction LineView({tensegrity, selectedIntervals, storedState, toggleSelectedInterval}: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <group>\n            <lineSegments\n                key=\"lines\"\n                geometry={tensegrity.instance.floatView.lineGeometry}\n                material={LINE_VERTEX_COLORS}\n            />\n            {selectedIntervals.map(interval => (\n                <SelectedInterval\n                    key={`SI${interval.index}`}\n                    interval={interval}\n                    tensegrity={tensegrity}\n                    storedState={storedState}\n                    toggleSelectedInterval={toggleSelectedInterval}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction Faces({tensegrity, stage, selectFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    selectFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        selectFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial\n                attach=\"material\"\n                transparent={true}\n                side={DoubleSide}\n                opacity={0.3}\n                color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaCamera, FaPlay, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    fabricFeatureIntervalRole,\n    switchToVersion,\n    Version,\n    versionFromUrl,\n} from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval, intervalsOfFaces, percentOrHundred, percentToFactor } from \"../fabric/tensegrity-types\"\nimport {\n    getRecentTenscript,\n    IFeatureValue,\n    IStoredState,\n    roleDefaultFromFeatures,\n    transition,\n} from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript {\n    const fromUrl = getCodeFromUrl()\n    if (fromUrl) {\n        return fromUrl\n    }\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    }\n    const recentCode = getRecentTenscript(state)\n    return recentCode.length > 0 ? recentCode[0] : BOOTSTRAP[0]\n}\n\nexport function TensegrityView({createInstance, floatFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selectedFaces, setSelectedFaces] = useState<IFace[]>([])\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n    useEffect(() => setSelectedIntervals(intervalsOfFaces(selectedFaces)), [selectedFaces])\n\n    const [rootTenscript, setRootTenscript] = useState(() => getCodeToRun(storedState$.getValue()))\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n\n    const [visibleRoles, setVisibleRoles] = useState(ADJUSTABLE_INTERVAL_ROLES)\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => setVisibleRoles(ADJUSTABLE_INTERVAL_ROLES), [ellipsoids])\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            updateEllipsoids(storedState.ellipsoids)\n            updateRotating(storedState.rotating)\n            if (!tensegrity) {\n                return\n            }\n            mainInstance.world.set_coloring(storedState.showPushes, storedState.showPulls)\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(floatFeatures).map(k => floatFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe((value: IFeatureValue) => {\n                if (!tensegrity) {\n                    return\n                }\n                tensegrity.instance.applyFeature(feature)\n                const intervalRole = fabricFeatureIntervalRole(feature.config.feature)\n                if (intervalRole !== undefined) {\n                    tensegrity.intervals\n                        .filter(interval => interval.intervalRole === intervalRole)\n                        .forEach(interval => {\n                            const scaledLength = feature.numeric * percentToFactor(interval.scale)\n                            tensegrity.fabric.change_rest_length(interval.index, scaledLength, 500)\n                        })\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        floatFeatures[WorldFeature.ShapingPretenstFactor].percent = 100\n        floatFeatures[WorldFeature.ShapingDrag].percent = 100\n        floatFeatures[WorldFeature.ShapingStiffnessFactor].percent = 100\n        storedState$.next(transition(storedState$.getValue(), {ellipsoids: false}))\n        const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(feature => floatFeatures[feature].numeric, role)\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), false, 0, percentOrHundred(), roleLength, numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!tensegrity) {\n                runTenscript(rootTenscript)\n            }\n        }, 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        storedState$.next(transition(storedState$.getValue(), {fullScreen: value}))\n    }\n\n    return (\n        <>\n            {fullScreen ? (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        floatFeatures={floatFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        tensegrity={tensegrity}\n                        setFabric={setTensegrity}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedFaces={selectedFaces}\n                        clearSelection={() => {\n                            setSelectedFaces([])\n                            setSelectedIntervals([])\n                        }}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        visibleRoles={visibleRoles}\n                        setVisibleRoles={setVisibleRoles}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        <div id=\"bottom-right\">\n                            <ButtonGroup>\n                                <Button\n                                    color={ellipsoids ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {ellipsoids: !ellipsoids}))}\n                                >\n                                    <FaCamera/>\n                                </Button>\n                                <Button\n                                    color={rotating ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {rotating: !rotating}))}\n                                >\n                                    <FaSyncAlt/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: shapeSelection === ShapeSelection.Faces || ellipsoids ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Faces ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    selectedIntervals={selectedIntervals}\n                                    toggleSelectedInterval={interval => setSelectedIntervals(intervals => intervals.filter(i => i.index !== interval.index))}\n                                    selectedFaces={selectedFaces}\n                                    setSelectedFaces={setSelectedFaces}\n                                    shapeSelection={shapeSelection}\n                                    ellipsoids={ellipsoids}\n                                    visibleRoles={visibleRoles}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { factorToPercent, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, roleDefaultFromFeatures, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n                symmetrical: boolean,\n                rotation: number,\n            ) => {\n                const gotchiRoleLength = (role: IntervalRole) => roleDefaultFromFeatures(gotchiValue, role)\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, symmetrical, rotation, percentOrHundred(), gotchiRoleLength, gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT, true, patch.rotation,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT, false, 0,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(numericFeature, role)\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = factorToPercent(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), true, 0, scale, roleLength, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const sphereInstance = createInstance(false)\n            FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => new TensegritySphere(at, 2, frequency, 0.52, numeric, sphereInstance)\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   floatFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}