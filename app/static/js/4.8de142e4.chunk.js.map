{"version":3,"sources":["fabric/eig-util.ts","fabric/tensegrity-types.ts","fabric/tensegrity-optimizer.ts","bridge/bridge-logic.ts","fabric/fabric-instance.ts","gotchi/island-geometry.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/tensegrity-builder.ts","fabric/tenscript.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/life.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/patch.ts","gotchi/island.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","view/orbit.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/feature-panel.tsx","view/frozen-tab.tsx","view/life-stage-button.tsx","view/shape-tab.tsx","view/live-tab.tsx","view/realize-tab.tsx","view/tenscript-tab.tsx","view/control-tabs.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","intervalRole","IntervalRole","NexusPush","ColumnPush","Triangle","Ring","Cross","BowMid","BowEnd","RibbonPush","RibbonShort","RibbonLong","RibbonHanger","FaceConnector","FaceDistancer","FaceAnchor","SpherePush","SpherePull","Version","ADJUSTABLE_INTERVAL_ROLES","role","isPushInterval","fabricFeatureIntervalRole","worldFeature","NexusPushLength","ColumnPushLength","TriangleLength","RingLength","CrossLength","BowMidLength","BowEndLength","RibbonPushLength","RibbonShortLength","RibbonLongLength","RibbonHangerLength","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","Math","max","toFixed","Ray","PushEnd","DEFAULT_PUSH_LENGTH","sqrt","TRIANGLES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","oppositeJoint","interval","joint","alpha","index","omega","Error","rayVector","ray","v","Vector3","XP","setX","XN","YP","setY","YN","ZP","setZ","ZN","brickPoint","primaryRay","secondaryRay","multiplyScalar","addScaledVector","PUSH_ARRAY","TRIANGLE_DEFINITIONS","name","opposite","negative","ring","NN","pushEnds","YNA","XNA","ZNA","ringMember","NP","PN","PP","YPA","ZNO","XNO","ZPA","XPA","YNO","XPO","YPO","ZPO","oppositeTriangle","triangle","percentOrHundred","percent","_","percentToFactor","factorToPercent","factor","brickContaining","brickA","brickB","chooseA","joints","find","brickJoint","chooseB","createBrickPointsAt","base","scale","position","points","reduce","vectors","push","add","newBase","trianglePoints","end","reverse","midpoint","mid","p","x","subVectors","normalize","y","sub","z","crossVectors","basis","Matrix4","makeBasis","scaleFactor","fromBasis","getInverse","setPosition","applyMatrix4","scaleToInitialStiffness","pow","TensegrityOptimizer","tensegrity","countdown","this","pairs","findPush","jointIndex","intervals","i","isPush","crosses","forEach","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","distanceTo","aMid","addVectors","intervalB","indexB","bAlpha","bOmega","a","b","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","stiffness","linearDensity","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","console","log","includeInterval","pushOverPull","numericFeature","PushOverPull","floatView","instance","strains","getAverageStrain","toAverage","included","sum","length","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffnesses","value","linearDensities","adjustedStiffness","restoreSnapshot","fabric","copy_material","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","ShapingStiffnessFactor","PushRadius","PullRadius","JointRadiusFactor","PretensingCountdown","VisualStrain","PretenstFactor","StiffnessFactor","ribbon","ribbonShort","ribbonLong","left","createJoint","ribbonJoint","oppositeIndex","jointLocation","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","faces","face","removed","brick","parentFace","identities","arch","gatherAncestors","f","id","definition","archFromTriangle","group","shift","isTriangleExtremity","distance","hook","center","bricks","sortXY","aa","bb","distanceToSquared","sort","extractHooks","hanger","rj","floor","hookJoint","FORWARD","RIGHT","UP","vectorFromArray","array","vector","offset","set","FabricInstance","eig","jointCount","worldObject","fabricObject","world","view","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","jointVelocities","unitVectors","idealLengths","strainLimits","strainNuances","createEmptyFloatView","adoptFabric","forward","right","featuresToApply","fabricBackup","free","View","on_fabric","Fabric","new","requestedStage","iterate","set_float_value","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_joint_velocities_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","sin","PI","SURFACE_SCALE","PATCH_DISTANCE","SCALE_X","SCALE_Y","HEXAGON_POINTS","FAUNA_PATCH_COLOR","Color","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","ARROW_GEOMETRY","geom","Geometry","vertices","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","join","extractJointFile","csvIntervals","j","type","strain","extractIntervalFile","csvSubmerged","anchor","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","c","setHex","SURFACE","MeshPhongMaterial","side","DoubleSide","opacity","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECT_MATERIAL","JOINT_MATERIAL","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","SUBDUED_MATERIAL","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","hexPoint","vertexNormals","Face3","addSurfaceGeometry","patchesGeometry","material","BridgeView","useState","life$","getValue","life","updateLife","useEffect","subscribe","unsubscribe","style","height","ButtonGroup","vertical","Button","onClick","fabricOutput","backgroundColor","Camera","BridgeScene","perspective","useThree","camera","viewContainer","document","getElementById","orbit","useUpdate","orb","minPolarAngle","maxPolarAngle","minDistance","maxDistance","SPACE_RADIUS","zoomSpeed","enableZoom","target","update","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","control","current","copy","transition","changeIntervalScale","beforeShaping","autoRotate","rotateSpeed","adoptLengths","Pretenst","ref","args","key","radiusFeature","radiusFactor","jointRadiusFactor","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","radius","unit","unitVector","rotation","Quaternion","setFromUnitVectors","jointRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","matrixWorldNeedsUpdate","props","useRef","setDefaultCamera","fov","updateMatrixWorld","scaleToFaceConnectorLength","MarkAction","TensegrityBuilder","symmetrical","sym","m","faceBasis","twirl","makeRotationZ","rotate","makeRotationY","multiply","toSymmetricalMatrix","createBrick","faceA","scaleA","scaleB","createBrickOnFace","faceB","connectFaces","faceIntervals","faceInterval","connector","connectFaceInterval","apply","faceToOriginMatrix","mark","centerBrickFaceIntervals","createBrickAt","averageScaleFactor","closestFace","createFaceConnector","action","JoinFaces","FaceDistance","pullScale","distancers","createFaceDistancer","Anchor","point","createFaceAnchor","negativeFace","midSide","u","proj","dot","xform","movedToFace","baseTriangle","parent","rings","negativeAdjacent","postiveAdjacent","initialBrick","jointIndexes","idx","alphaIndex","omegaIndex","arr","tJoints","createFace","loc","dirA","pop","permutation","removeFace","facesToRing","corner","next","crossInterval","adjustRole","isNexus","treeToCode","tree","s","isDirection","char","faceMark","isDigit","toNumber","digits","match","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","error","fromUrl","code","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","parts","split","foundName","part","endsWith","foundMain","markCode","eq","Number","mainCode","parseCode","marks","Subtree","BaseFace","Symmetrical","matches","parseFloat","submerged","mainTree","markSections","format","subtreesCode","treeToTenscript","e","message","noParseErrors","ControlTab","BOOTSTRAP","script","execute","before","active","grow","previous","newTree","treeScale","brickToMark","treeWithMarks","connectTriangle","newBrick","createConnectedBrick","brickFace","childTree","triangleMark","decremented","markTree","deleteFaceMark","getRecentTenscript","state","recentCode","tenscript","roleLengthFeature","roleDefaultFromFeatures","featureNumeric","partial","nonce","saveState","storedState","localStorage","setItem","loadState","toConfig","item","getItem","parse","DEFAULT_FEATURE_VALUES","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Grow","fullScreen","polygons","rotating","visibleRoles","pushBottom","pushTop","pullBottom","pullTop","initialStoredState","featureConfig","percents","Antigravity","ShapingDrag","ShapingPretenstFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","createFloatFeatures","features","Life","_stage","tx","adopt_lengths","removeFaceInterval","faceAnchors","removeFaceAnchor","snapshot","stiffnessesFromStrains","Tensegrity","roleDefaultLength","activeTenscript","transitionQueue","executeTransition","create_joint","createFaceInterval","omegaJointIndex","anchor_joint","idealLength","restLength","create_interval","existing","eliminateInterval","coundown","strainNuance","multiply_rest_length","set_interval_role","change_rest_length","foundPush","endJoint","create_face","removeIntervals","remove_face","lifeTransition","activeCode","builder","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","finish_growing","checkFaceIntervals","joint1","joint2","remove_interval","is_anchor_joint","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","chords","pushToA","pushToB","other","angle","acos","holeIndex","gatherJointHoles","GeneName","faceToOrigin","createFaceIntervals","MODIFIER_NAMES","Forward","Left","Right","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","d","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","shapingTime","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","checkDirection","nextStage","limbFromTriangle","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","quaternionForDirection","distanceFromTarget","topJoint","toTarget","degreeForward","degreeRight","findLimb","oppositeLimb","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PatchCharacter","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","evolutionPhase","countdownToEvolution","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","approachDistance","object","positionToTarget","deltaDistance","Developing","Resting","g","resting","Running","running","Evolving","withReducedCyclePattern","evolving","treeNumber","wasSeconds","time","isSeconds","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","transparent","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestLife","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","toRunning","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","deadInterval","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","sphereNumeric","SphereBuilder","sphere","VERTEX","vertexAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","pullsForAdjacent","set_altitude","vertexA","vertexB","withMiddle","middleLocation","lerp","vertexMid","pushBetween","edgeVertexes","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","abs","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","STATE","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","enabled","enableRotate","enablePan","keyPanSpeed","autoRotateSpeed","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","BOTTOM","ORBIT","ZOOM","MIDDLE","PAN","zoom","up","inverse","event","preventDefault","button","clientX","clientY","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","setFromSpherical","lookAt","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","panLeft","panUp","dollyScale","updateProjectionMatrix","extend","FREQUENCIES","SphereView","createSphere","freq","setFrequency","setSphere","disabled","SphereScene","toMidpoint","adjacentClose","TensegritySphere","twist","alphaVertex","omegaVertex","setFromAxisAngle","alphaLocation","omegaLocation","pushLength","shortPull","longPull","pull","pullExists","nextClose","nextAdjacent","currentClose","currentFar","adjacentFar","build","centerLocation","currentLocation","toCurrent","cross","closest","distanceA","FeaturePanel","featurePercent","setFeaturePercent","subscription","observable","formatted","percentChoices","size","percentLabel","FrozenTab","floatFeatures","updatePolygons","updateVisibleRoles","newState","Grouping","StrainSlider","domain","values","setValues","bottom","setBottom","top","setTop","nuanceToStrain","nuance","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","ShapeSelection","LiveTab","centralize","LifeStageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","Symbol","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","ShapeTab","selectedIntervals","setFabric","shapeSelection","setShapeSelection","selectedFaces","clearSelection","pushAndPull","setPushAndPull","set_push_and_pull","subscriptions","lengthFeature","setLengthFeature","adjustValue","disableUnlessFaceCount","None","Faces","Intervals","replaceCrosses","title","RealizeTab","updateFabricState","disabledLifeStage","changed","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","borderColor","Input","changeEvent","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Shape","Live","Realize","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","SPHERE","SphereGeometry","PULL_CYLINDER","CylinderGeometry","PUSH_CYLINDER_INNER","PUSH_CYLINDER_OUTER","AMBIENT_COLOR","SPACE_GEOMETRY","Y_AXIS","FabricView","toggleSelectedInterval","setSelectedFaces","whyThis","updateWhyThis","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateInstance","updateStoredState","ALTITUDE","far","near","accum","towardsTarget","PolygonView","LineView","selectFace","faceToToggle","some","selected","SelectedFace","r","isIntervalVisible","SelectedInterval","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","intersectObjects","intersection","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","setSelectedIntervals","unknown","updateRotating","updateFullScreen","newTenscript","set_surface_character","featureSubscriptions","applyFeature","scaledLength","timer","setTimeout","clearTimeout","visibility","TopMiddle","tenscriptError","toTenscript","root","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","roleLength","bridgeInstance","sphereInstance","at","registerServiceWorker"],"mappings":"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","file":"static/js/4.8de142e4.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"NP\"\n        case IntervalRole.ColumnPush:\n            return \"CP\"\n        case IntervalRole.Triangle:\n            return \"TR\"\n        case IntervalRole.Ring:\n            return \"RI\"\n        case IntervalRole.Cross:\n            return \"CR\"\n        case IntervalRole.BowMid:\n            return \"BM\"\n        case IntervalRole.BowEnd:\n            return \"BE\"\n        case IntervalRole.RibbonPush:\n            return \"RP\"\n        case IntervalRole.RibbonShort:\n            return \"RS\"\n        case IntervalRole.RibbonLong:\n            return \"RL\"\n        case IntervalRole.RibbonHanger:\n            return \"RH\"\n        case IntervalRole.FaceConnector:\n            return \"FC\"\n        case IntervalRole.FaceDistancer:\n            return \"FD\"\n        case IntervalRole.FaceAnchor:\n            return \"FA\"\n        case IntervalRole.SpherePush:\n            return \"SB\"\n        case IntervalRole.SpherePull:\n            return \"SC\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.NexusPush:\n            case IntervalRole.ColumnPush:\n            case IntervalRole.Triangle:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushInterval(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n        case IntervalRole.ColumnPush:\n        case IntervalRole.RibbonPush:\n        case IntervalRole.SpherePush:\n            return true\n    }\n    return false\n}\n\nexport function fabricFeatureIntervalRole(worldFeature: WorldFeature): IntervalRole | undefined {\n    switch (worldFeature) {\n        case WorldFeature.NexusPushLength:\n            return IntervalRole.NexusPush\n        case WorldFeature.ColumnPushLength:\n            return IntervalRole.ColumnPush\n        case WorldFeature.TriangleLength:\n            return IntervalRole.Triangle\n        case WorldFeature.RingLength:\n            return IntervalRole.Ring\n        case WorldFeature.CrossLength:\n            return IntervalRole.Cross\n        case WorldFeature.BowMidLength:\n            return IntervalRole.BowMid\n        case WorldFeature.BowEndLength:\n            return IntervalRole.BowEnd\n        case WorldFeature.RibbonPushLength:\n            return IntervalRole.RibbonPush\n        case WorldFeature.RibbonShortLength:\n            return IntervalRole.RibbonShort\n        case WorldFeature.RibbonLongLength:\n            return IntervalRole.RibbonLong\n        case WorldFeature.RibbonHangerLength:\n            return IntervalRole.RibbonHanger\n        default:\n            return undefined\n    }\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number):string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { intervalRoleName } from \"./eig-util\"\n\nexport const PHI = 1.61803398875\nexport const DEFAULT_PUSH_LENGTH = Math.sqrt(2)\n\nexport enum Ray {\n    XP = 0, XN, YP, YN, ZP, ZN,\n}\n\nexport enum PushEnd {\n    XPA = 0, XPO, XNA, XNO, YPA, YPO,\n    YNA, YNO, ZPA, ZPO, ZNA, ZNO,\n}\n\nexport enum Triangle {\n    NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP,\n}\n\nexport const TRIANGLES = [Triangle.NNN, Triangle.PNN, Triangle.NPN, Triangle.NNP, Triangle.NPP, Triangle.PNP, Triangle.PPN, Triangle.PPP]\n\nexport const TRIANGLE_DIRECTIONS = \"aBCDbcdA\"\n\nexport enum Ring {\n    NN = 0, // [PushEnd.ZNO, PushEnd.XPA, PushEnd.YNO, PushEnd.ZPA, PushEnd.XNO, PushEnd.YPA],\n    PN = 1, // [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNO, PushEnd.YPO, PushEnd.XPO, PushEnd.ZPA],\n    NP = 2, // [PushEnd.XNA, PushEnd.YPA, PushEnd.ZPO, PushEnd.XPO, PushEnd.YNO, PushEnd.ZNA],\n    PP = 3, // [PushEnd.YNA, PushEnd.ZNA, PushEnd.XPA, PushEnd.YPO, PushEnd.ZPO, PushEnd.XNO],\n}\n\nexport interface IJoint {\n    index: number\n    oppositeIndex: number\n    location: () => Vector3\n}\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n    strainNuance: () => number\n}\n\nexport function oppositeJoint(interval: IInterval, joint: IJoint): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"Other of what?\")\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function gatherJointHoles(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => interval.isPush)\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(oppositeJoint(interval, here).location(), here.location()).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: oppositeJoint(interval, here).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    const minimumDot = 0.1\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index && a.unit.dot(from.unit) > minimumDot)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2)\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport interface IFaceInterval {\n    index: number\n    alpha: IFace\n    omega: IFace\n    connector: boolean\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFaceAnchor {\n    index: number\n    alpha: IFace\n    omega: IJoint\n    removed: boolean\n}\n\nexport interface IFace {\n    index: number\n    negative: boolean\n    brick: IBrick\n    triangle: Triangle\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    mark?: IFaceMark\n    removed: boolean\n    location: () => Vector3\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + percentToFactor(face.brick.scale), 0) / faces.length\n}\n\nexport function averageLocation(locations: Vector3[]): Vector3 {\n    return locations\n        .reduce((sum, location) => sum.add(location), new Vector3())\n        .multiplyScalar(1 / locations.length)\n}\n\nexport function intervalsOfFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        const pushes = face.pushes.filter(unknown)\n        return [...accum, ...pushes, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function facesMidpoint(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(face.location()), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.joints.map(joint => joint.location())\n    const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n    const x = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n    const y = new Vector3().crossVectors(z, x).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport interface IPushDefinition {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction rayVector(ray: Ray): Vector3 {\n    const v = new Vector3()\n    switch (ray) {\n        case Ray.XP:\n            return v.setX(1)\n        case Ray.XN:\n            return v.setX(-1)\n        case Ray.YP:\n            return v.setY(1)\n        case Ray.YN:\n            return v.setY(-1)\n        case Ray.ZP:\n            return v.setZ(1)\n        case Ray.ZN:\n            return v.setZ(-1)\n        default:\n            return v\n    }\n}\n\nfunction brickPoint(primaryRay: Ray, secondaryRay: Ray): Vector3 {\n    return rayVector(primaryRay)\n        .multiplyScalar(DEFAULT_PUSH_LENGTH / 2)\n        .addScaledVector(rayVector(secondaryRay), DEFAULT_PUSH_LENGTH / 2 / PHI)\n}\n\nexport const PUSH_ARRAY: IPushDefinition[] = [\n    {alpha: brickPoint(Ray.ZN, Ray.XP), omega: brickPoint(Ray.ZP, Ray.XP)},\n    {alpha: brickPoint(Ray.ZN, Ray.XN), omega: brickPoint(Ray.ZP, Ray.XN)},\n    {alpha: brickPoint(Ray.XN, Ray.YP), omega: brickPoint(Ray.XP, Ray.YP)},\n    {alpha: brickPoint(Ray.XN, Ray.YN), omega: brickPoint(Ray.XP, Ray.YN)},\n    {alpha: brickPoint(Ray.YN, Ray.ZP), omega: brickPoint(Ray.YP, Ray.ZP)},\n    {alpha: brickPoint(Ray.YN, Ray.ZN), omega: brickPoint(Ray.YP, Ray.ZN)},\n]\n\nexport interface ITriangleDefinition {\n    name: Triangle\n    opposite: Triangle\n    negative: boolean\n    pushEnds: PushEnd[]\n    ringMember: Ring[]\n    ring: Ring\n}\n\nexport const TRIANGLE_DEFINITIONS: ITriangleDefinition[] = [\n    {\n        name: Triangle.NNN, opposite: Triangle.PPP, negative: true, ring: Ring.NN,\n        pushEnds: [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNA], ringMember: [Ring.NP, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.PNN, opposite: Triangle.NPP, negative: false, ring: Ring.PP,\n        pushEnds: [PushEnd.XNA, PushEnd.YPA, PushEnd.ZNO], ringMember: [Ring.PN, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.NPN, opposite: Triangle.PNP, negative: false, ring: Ring.PN,\n        pushEnds: [PushEnd.XNO, PushEnd.YNA, PushEnd.ZPA], ringMember: [Ring.PP, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.NNP, opposite: Triangle.PPN, negative: false, ring: Ring.NP,\n        pushEnds: [PushEnd.XPA, PushEnd.YNO, PushEnd.ZNA], ringMember: [Ring.NN, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.NPP, opposite: Triangle.PNN, negative: true, ring: Ring.PP,\n        pushEnds: [PushEnd.YNO, PushEnd.XPO, PushEnd.ZPA], ringMember: [Ring.PN, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.PNP, opposite: Triangle.NPN, negative: true, ring: Ring.PN,\n        pushEnds: [PushEnd.YPO, PushEnd.XPA, PushEnd.ZNO], ringMember: [Ring.PP, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.PPN, opposite: Triangle.NNP, negative: true, ring: Ring.NP,\n        pushEnds: [PushEnd.YPA, PushEnd.XNO, PushEnd.ZPO], ringMember: [Ring.NN, Ring.PP, Ring.PN],\n    },\n    {\n        name: Triangle.PPP, opposite: Triangle.NNN, negative: false, ring: Ring.NN,\n        pushEnds: [PushEnd.XPO, PushEnd.YPO, PushEnd.ZPO], ringMember: [Ring.NP, Ring.PP, Ring.PN],\n    },\n]\n\nexport function oppositeTriangle(triangle: Triangle): Triangle {\n    return TRIANGLE_DEFINITIONS[triangle].opposite\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function percentToFactor({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function factorToPercent(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IBrick {\n    parentFace?: IFace,\n    base: Triangle\n    scale: IPercent\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    crosses: IInterval[]\n    rings: IInterval[][]\n    faces: IFace[]\n    negativeAdjacent: number\n    postiveAdjacent: number\n    location: () => Vector3\n}\n\nexport function isNexus(brick: IBrick): boolean {\n    return brick.negativeAdjacent > 1 || brick.postiveAdjacent > 1\n}\n\nexport function brickContaining(joint: IJoint, brickA: IBrick, brickB: IBrick): IBrick {\n    const chooseA = !!brickA.joints.find(brickJoint => brickJoint.index === joint.index)\n    const chooseB = !!brickB.joints.find(brickJoint => brickJoint.index === joint.index)\n    if (chooseA && !chooseB) {\n        return brickA\n    } else if (chooseB && !chooseA) {\n        return brickB\n    } else {\n        throw new Error(\"Neither contained joint\")\n    }\n}\n\nexport function initialBrick(base: Triangle, scale: IPercent, parent?: IFace): IBrick {\n    return {\n        parentFace: parent, base, scale, joints: [],\n        pushes: [], pulls: [], crosses: [],\n        rings: [[], [], [], []], faces: [],\n        negativeAdjacent: 0, postiveAdjacent: 0,\n        location: () => new Vector3(),\n    }\n}\n\nexport function createBrickPointsAt(base: Triangle, scale: IPercent, position: Vector3): Vector3 [] {\n    const pushesToPoints = (vectors: Vector3[], push: IPushDefinition): Vector3[] => {\n        vectors.push(new Vector3().add(push.alpha))\n        vectors.push(new Vector3().add(push.omega))\n        return vectors\n    }\n    const points = PUSH_ARRAY.reduce(pushesToPoints, [])\n    const newBase = oppositeTriangle(base)\n    const trianglePoints = TRIANGLE_DEFINITIONS[newBase].pushEnds.map((end: PushEnd) => points[end]).reverse()\n    const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n    const x = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n    const y = new Vector3().sub(midpoint).normalize()\n    const z = new Vector3().crossVectors(y, x).normalize()\n    const basis = new Matrix4().makeBasis(x, y, z)\n    const scaleFactor = percentToFactor(scale)\n    const fromBasis = new Matrix4()\n        .getInverse(basis)\n        .setPosition(position)\n        .scale(new Vector3(scaleFactor, scaleFactor, scaleFactor))\n    return points.map(p => p.applyMatrix4(fromBasis))\n}\n\nexport function toSymmetricalMatrix(joints: Vector3[], rotation: number): Matrix4 {\n    const unit = (alpha: Vector3, omega: Vector3) => new Vector3().subVectors(omega, alpha).normalize()\n    const x = unit(joints[4], joints[5])\n    const y = unit(joints[0], joints[1])\n    const z = unit(joints[8], joints[9])\n    const midpoint = joints\n        .reduce((m, joint) => m.add(joint), new Vector3())\n        .multiplyScalar(1.0 / 12.0)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * 0.275)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { IInterval, IJoint, IPercent, percentToFactor } from \"./tensegrity-types\"\n\nexport function scaleToInitialStiffness(scale: IPercent): number {\n    const scaleFactor = percentToFactor(scale)\n    return Math.pow(scaleFactor, 0.6) * 0.001\n}\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = intervalA.alpha.location()\n            const aOmegaLoc = intervalA.omega.location()\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = intervalB.alpha.location()\n                const bOmegaLoc = intervalB.omega.location()\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            const stiffness = scaleToInitialStiffness(scale)\n            const linearDensity = Math.sqrt(stiffness)\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale, stiffness, linearDensity, countdown)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n\n    public stiffnessesFromStrains(includeInterval: (interval: IInterval) => boolean): void {\n        const pushOverPull = this.tensegrity.numericFeature(WorldFeature.PushOverPull)\n        const {stiffnesses, linearDensities} = adjustedStiffness(this.tensegrity, includeInterval, pushOverPull)\n        this.tensegrity.instance.restoreSnapshot()\n        this.tensegrity.fabric.copy_material(stiffnesses, linearDensities)\n    }\n}\n\nfunction adjustedStiffness(tensegrity: Tensegrity, includeInterval: (interval: IInterval) => boolean, pushOverPull: number): {\n    stiffnesses: Float32Array,\n    linearDensities: Float32Array,\n} {\n    const floatView = tensegrity.instance.floatView\n    const strains: Float32Array = floatView.strains\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const included = toAverage.filter(includeInterval)\n        const totalStrain = included.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / included.length\n    }\n    const intervals = tensegrity.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        if (!includeInterval(interval)) {\n            return 1\n        }\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffnesses = floatView.stiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = floatView.linearDensities.map((value, index) => Math.sqrt(value * value * changes[index]))\n    return {stiffnesses, linearDensities}\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { scaleToInitialStiffness } from \"../fabric/tensegrity-optimizer\"\nimport {\n    factorToPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    percentOrHundred,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"../fabric/tensegrity-types\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\nconst RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst CenterExpand = 2\nconst AnchorLength = 5\nconst AnchorScale = 110\n\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function beforeShaping(tensegrity: Tensegrity): void {\n    const brick = tensegrity.bricks[0]\n    brick.pushes.forEach(interval => tensegrity.changeIntervalScale(interval, CenterExpand))\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PushRadius:\n            return defaultValue * 3\n        case WorldFeature.PullRadius:\n            return defaultValue * 2\n        case WorldFeature.JointRadiusFactor:\n            return defaultValue * 0.8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 200.0\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    group: Triangle\n    triangle: Triangle\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = tensegrity.numericFeature(WorldFeature.RibbonShortLength)\n    const ribbonLong = tensegrity.numericFeature(WorldFeature.RibbonLongLength)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location)\n        const ribbonJoint: IJoint = {\n            index: jointIndex,\n            oppositeIndex: -1,\n            location: () => tensegrity.instance.jointLocation(jointIndex),\n        }\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = intervalRole === IntervalRole.RibbonPush ? RibbonPushDensity : Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 100)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.RibbonLong)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.RibbonLong)\n        interval(curr[2], curr[3], IntervalRole.RibbonLong)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.RibbonShort)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.RibbonPush)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.RibbonPush)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.RibbonPush)\n        interval(prev[1], curr[0], IntervalRole.RibbonPush)\n        interval(prev[2], curr[3], IntervalRole.RibbonPush)\n        interval(prev[3], curr[2], IntervalRole.RibbonPush)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.RibbonHanger\n        const length = alpha.location().distanceTo(omega.location())\n        const scale = factorToPercent(length)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 10)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.joints[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    const faces = tensegrity.faces.filter(face => !face.removed && face.brick.parentFace)\n    faces.forEach(face => {\n        const gatherAncestors = (f: IFace, id: Triangle[]): Arch => {\n            const definition = TRIANGLE_DEFINITIONS[f.triangle]\n            id.push(definition.negative ? definition.opposite : definition.name)\n            const parentFace = f.brick.parentFace\n            if (parentFace) {\n                return gatherAncestors(parentFace, id)\n            } else {\n                return archFromTriangle(f.triangle)\n            }\n        }\n        const identities: Triangle[] = []\n        const arch = gatherAncestors(face, identities)\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isTriangleExtremity(group)) {\n            return\n        }\n        const triangle = face.triangle\n        const distance = identities.length\n        face.joints.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${Triangle[group]}]:{tri=${Triangle[triangle]}:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, group, triangle, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {arch, distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        switch (hook.triangle) {\n            case Triangle.NPN:\n                return arch === Arch.BackRight\n            case Triangle.NNP:\n                return arch === Arch.FrontRight\n            case Triangle.PNP:\n                return arch === Arch.BackLeft\n            case Triangle.PPN:\n                return arch === Arch.FrontLeft\n            default:\n                return false\n        }\n    }\n    const center = tensegrity.bricks[0].location()\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = a.face.joints[a.jointIndex].location()\n        const bb = b.face.joints[b.jointIndex].location()\n        return aa.distanceToSquared(center) - bb.distanceToSquared(center)\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\nfunction archFromTriangle(triangle: Triangle): Arch {\n    switch (triangle) {\n        case Triangle.NNN:\n            return Arch.BackLeft\n        case Triangle.PNN:\n            return Arch.BackRight\n        case Triangle.NPP:\n            return Arch.FrontLeft\n        case Triangle.PPP:\n            return Arch.FrontRight\n        default:\n            throw new Error(\"Strange arch\")\n    }\n}\n\nfunction isTriangleExtremity(triangle: Triangle): boolean {\n    const definition = TRIANGLE_DEFINITIONS[triangle]\n    const normalizedTriangle = definition.negative ? definition.opposite : triangle\n    return normalizedTriangle === Triangle.PPP\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { FloatFeature } from \"./float-feature\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nconst vectorFromArray = (array: Float32Array, index: number, vector?: Vector3): Vector3 => {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    jointVelocities: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(requestedStage: Stage): Stage | undefined {\n        const stage = this.fabric.iterate(requestedStage, this.world)\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        this.refreshFloatView()\n        return stage\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.jointVelocities = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_joint_velocities_to(floatView.jointVelocities)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, jointVelocities: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/fabric-instance\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    anchor: boolean\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    idealLength: number\n    length: number\n    radius: number\n    jointRadius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport {\n    Color,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n} from \"three\"\n\nexport const SELECTION_COLOR = \"#91934f\"\nexport const JOINT_COLOR = \"#343434\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#181818\"),\n    side: DoubleSide,\n    opacity: 0.5,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n})\n\nexport const JOINT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(JOINT_COLOR),\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"#8955fa\"\n        case IntervalRole.ColumnPush:\n            return \"#2b38ff\"\n        case IntervalRole.Triangle:\n            return \"#d0c61a\"\n        case IntervalRole.Ring:\n            return \"#ff5c2b\"\n        case IntervalRole.Cross:\n            return \"#28c245\"\n        case IntervalRole.BowMid:\n            return \"#4393b3\"\n        case IntervalRole.BowEnd:\n            return \"#4393b3\"\n        case IntervalRole.FaceConnector:\n            return \"#fe0105\"\n        case IntervalRole.FaceDistancer:\n            return \"#9e9b02\"\n        case IntervalRole.FaceAnchor:\n            return \"#dc5bf8\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n\nexport const SUBDUED_MATERIAL = new MeshLambertMaterial({color: \"#1d1d1d\"})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z).multiplyScalar(4)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, DomEvent, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { Life } from \"../fabric/life\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { SPACE_RADIUS, SPACE_SCALE } from \"../gotchi/island-geometry\"\nimport { saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { beforeShaping, IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(life.stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button onClick={() => saveCSVZip(tensegrity.fabricOutput)}><FaDownload/> <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(tensegrity.fabricOutput)}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} life={life}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, life}: { tensegrity: Tensegrity, life: Life }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(0, 50, 0)\n        orb.update()\n    }, [])\n\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        control.target.copy(tensegrity.instance.midpoint)\n        control.update()\n        const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (life.stage === Stage.Growing) {\n                    tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    beforeShaping(tensegrity)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    control.autoRotate = true\n                    control.rotateSpeed = 5\n                    tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (life.stage === Stage.Pretensing) {\n                    tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => {\n                            const radiusFeature = interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius\n                            const radiusFactor = tensegrity.numericFeature(radiusFeature)\n                            const jointRadiusFactor = tensegrity.numericFeature(WorldFeature.JointRadiusFactor)\n                            return (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    radiusFactor={radiusFactor}\n                                    jointRadiusFactor={jointRadiusFactor}\n                                />\n                            )\n                        })}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, radiusFactor, jointRadiusFactor, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    radiusFactor: number,\n    jointRadiusFactor: number,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n    const linearDensity = tensegrity.instance.floatView.linearDensities[interval.index]\n    const radius = radiusFactor * linearDensity\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = interval.alpha.location().distanceTo(interval.omega.location())\n    const jointRadius = radius * jointRadiusFactor\n    const intervalScale = new Vector3(radius, length + (interval.isPush ? -jointRadius * 2 : 0), radius)\n    const jointScale = new Vector3(jointRadius, jointRadius, jointRadius)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={interval.alpha.location()}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={interval.omega.location()}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={interval.location()}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.joints.map(j => (\n                <mesh\n                    key={`hook-${j.index}`}\n                    position={j.location()}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IMark, MarkAction } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    averageLocation,\n    averageScaleFactor,\n    brickContaining,\n    createBrickPointsAt,\n    faceToOriginMatrix,\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    initialBrick,\n    IPercent,\n    IPushDefinition,\n    isNexus,\n    percentToFactor,\n    PUSH_ARRAY,\n    toSymmetricalMatrix,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport class TensegrityBuilder {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public createBrickAt(midpoint: Vector3, symmetrical: boolean, scale: IPercent): IBrick {\n        const points = createBrickPointsAt(Triangle.PPP, scale, midpoint)\n        if (symmetrical) {\n            const sym = toSymmetricalMatrix(points, this.tensegrity.rotation)\n            points.forEach(p => p.applyMatrix4(sym))\n        }\n        return this.createBrick(points, Triangle.NNN, scale)\n    }\n\n    public createConnectedBrick(brickA: IBrick, triangle: Triangle, scale: IPercent): IBrick {\n        const faceA = brickA.faces[triangle]\n        const scaleA = percentToFactor(brickA.scale)\n        const scaleB = scaleA * percentToFactor(scale)\n        const brickB = this.createBrickOnFace(faceA, factorToPercent(scaleB))\n        const faceB = brickB.faces[brickB.base]\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n        this.connectFaces(faceA, faceB, factorToPercent((scaleA + scaleB) / 2), countdown)\n        return brickB\n    }\n\n    public checkFaceIntervals(faceIntervals: IFaceInterval[], removeInterval: (faceInterval: IFaceInterval) => void): IFaceInterval[] {\n        if (faceIntervals.length === 0) {\n            return faceIntervals\n        }\n        const connectFaceInterval = ({alpha, omega, scaleFactor}: IFaceInterval) => {\n            const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n            this.connectFaces(alpha, omega, factorToPercent(scaleFactor), countdown)\n        }\n        return faceIntervals.filter(faceInterval => {\n            if (faceInterval.connector) {\n                const {alpha, omega, scaleFactor} = faceInterval\n                const distance = alpha.location().distanceTo(omega.location())\n                const closeEnough = distance <= scaleToFaceConnectorLength(scaleFactor) * 10\n                if (closeEnough) {\n                    connectFaceInterval(faceInterval)\n                    removeInterval(faceInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createFaceIntervals(faces: IFace[], mark: IMark): IFaceInterval[] {\n        const centerBrickFaceIntervals = () => {\n            const brick = this.createBrickAt(\n                averageLocation(faces.map(face => face.location())), false, factorToPercent(averageScaleFactor(faces)),\n            )\n            return faces.map(face => {\n                const opposing = brick.faces.filter(({negative, removed}) => !removed && negative !== face.negative)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = a.location().distanceTo(face.location())\n                    const bb = b.location().distanceTo(face.location())\n                    return aa < bb ? a : b\n                })\n                closestFace.removed = true\n                return this.tensegrity.createFaceConnector(closestFace, face)\n            })\n        }\n        switch (mark.action) {\n            case MarkAction.JoinFaces:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].negative === faces[1].negative) {\n                            return centerBrickFaceIntervals()\n                        }\n                        return [this.tensegrity.createFaceConnector(faces[0], faces[1])]\n                    case 3:\n                        return centerBrickFaceIntervals()\n                    default:\n                        return []\n                }\n            case MarkAction.FaceDistance:\n                const pullScale = mark.scale\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                const distancers: IFaceInterval[] = []\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        distancers.push(this.tensegrity.createFaceDistancer(faceA, faceB, pullScale))\n                    })\n                })\n                return distancers\n            default:\n                return []\n        }\n    }\n\n    public createFaceAnchor(face: IFace, mark: IMark): IFaceAnchor {\n        if (mark.action !== MarkAction.Anchor) {\n            throw new Error(\"Anchor problem\")\n        }\n        const point = mark.point\n        const scale = mark.scale\n        if (!point || !scale) {\n            throw new Error(\"Missing anchor point specs\")\n        }\n        return this.tensegrity.createFaceAnchor(face, point, scale)\n    }\n\n    private createBrickOnFace(face: IFace, scale: IPercent): IBrick {\n        const negativeFace = TRIANGLE_DEFINITIONS[face.triangle].negative\n        const brick = face.brick\n        const triangle = face.triangle\n        const trianglePoints = brick.faces[triangle].joints.map(joint => joint.location())\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const midSide = new Vector3().addVectors(trianglePoints[0], trianglePoints[1]).multiplyScalar(0.5)\n        const x = new Vector3().subVectors(midSide, midpoint).normalize()\n        const u = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const proj = new Vector3().add(x).multiplyScalar(x.dot(u))\n        const z = u.sub(proj).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        const xform = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        const base = negativeFace ? Triangle.NNN : Triangle.PPP\n        const points = createBrickPointsAt(base, scale, new Vector3(0, 0, 0)) // todo: maybe raise it\n        const movedToFace = points.map(p => p.applyMatrix4(xform))\n        const baseTriangle = negativeFace ? Triangle.PPP : Triangle.NNN\n        return this.createBrick(movedToFace, baseTriangle, scale, face)\n    }\n\n    private createBrick(points: Vector3[], base: Triangle, scale: IPercent, parent?: IFace): IBrick {\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        const brick = initialBrick(base, scale, parent)\n        this.tensegrity.bricks.push(brick)\n        const jointIndexes = points.map((p, idx) => this.tensegrity.createJoint(p))\n        this.tensegrity.instance.refreshFloatView()\n        PUSH_ARRAY.forEach(({}: IPushDefinition, idx: number) => {\n            const alphaIndex = jointIndexes[idx * 2]\n            const omegaIndex = jointIndexes[idx * 2 + 1]\n            const alpha: IJoint = {\n                index: alphaIndex,\n                oppositeIndex: omegaIndex,\n                location: () => this.tensegrity.instance.jointLocation(alphaIndex),\n            }\n            const omega: IJoint = {\n                index: omegaIndex,\n                oppositeIndex: alphaIndex,\n                location: () => this.tensegrity.instance.jointLocation(omegaIndex),\n            }\n            brick.pushes.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.NexusPush, scale, stiffness, linearDensity, countdown))\n        })\n        brick.pushes.forEach(push => brick.joints.push(push.alpha, push.omega))\n        const joints = brick.pushes.reduce((arr: IJoint[], push) => {\n            arr.push(push.alpha, push.omega)\n            return arr\n        }, [])\n        this.tensegrity.joints.push(...joints)\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const tJoints = triangle.pushEnds.map(end => joints[end])\n            for (let walk = 0; walk < 3; walk++) {\n                const alpha = tJoints[walk]\n                const omega = tJoints[(walk + 1) % 3]\n                const interval = this.tensegrity.createInterval(alpha, omega, IntervalRole.Triangle, scale, stiffness, linearDensity, countdown)\n                brick.pulls.push(interval)\n                brick.rings[triangle.ringMember[walk]].push(interval)\n            }\n        })\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const face = this.tensegrity.createFace(brick, triangle.name)\n            brick.faces.push(face)\n        })\n        this.tensegrity.instance.refreshFloatView()\n        brick.location = () => brick.joints\n            .reduce((loc, joint) => loc.add(joint.location()), new Vector3())\n            .multiplyScalar(1 / brick.joints.length)\n        return brick\n    }\n\n    private facesToRing(faceA: IFace, faceB: IFace): IJoint[] {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Polarity not opposite\")\n        }\n        const dirA = new Vector3().subVectors(faceA.joints[0].location(), faceA.location()).normalize()\n        const oppositeJoint = faceB.joints.map((joint, index) => [\n            new Vector3().subVectors(joint.location(), faceB.location()).normalize().dot(dirA), index,\n        ]).sort((a, b) => b[0] - a[0]).pop()\n        if (!oppositeJoint) {\n            throw new Error(\"No opposite joint\")\n        }\n        const permutation: number[] = [[1, 0, 2], [2, 1, 0], [0, 2, 1]][oppositeJoint[1]]\n        return [\n            faceA.joints[0], faceB.joints[permutation[0]],\n            faceA.joints[1], faceB.joints[permutation[1]],\n            faceA.joints[2], faceB.joints[permutation[2]],\n        ]\n    }\n\n    private connectFaces(faceA: IFace, faceB: IFace, scale: IPercent, countdown: number): void {\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Same polarity!\")\n        }\n        [faceA, faceB].forEach((face: IFace): void => {\n            this.tensegrity.removeFace(face, true)\n            if (!face.negative) {\n                face.brick.negativeAdjacent++\n            } else {\n                face.brick.postiveAdjacent++\n            }\n        })\n        const ring = this.facesToRing(faceA, faceB)\n        const createInterval = (from: IJoint, to: IJoint, role: IntervalRole) =>\n            this.tensegrity.createInterval(from, to, role, scale, stiffness, linearDensity, countdown)\n        for (let corner = 0; corner < ring.length; corner++) {\n            const prev = ring[(corner + 5) % 6]\n            const curr = ring[corner]\n            const next = ring[(corner + 1) % 6]\n            createInterval(curr, next, IntervalRole.Ring)\n            const crossInterval = (from: IJoint, opposite: IJoint) => {\n                const to = this.tensegrity.joints[opposite.oppositeIndex]\n                const toBrick = brickContaining(to, faceA.brick, faceB.brick)\n                toBrick.crosses.push(createInterval(from, to, IntervalRole.Triangle))\n            }\n            if (faceA.negative) {\n                crossInterval(prev, curr)\n            } else {\n                crossInterval(next, curr)\n            }\n        }\n        [faceA, faceB].forEach(({triangle, brick}: IFace): void => {\n            const adjustRole = (intervals: IInterval[], role: IntervalRole) => intervals\n                .filter(interval => !interval.removed && interval.intervalRole !== role)\n                .forEach(interval => this.tensegrity.changeIntervalRole(interval, role, brick.scale, countdown))\n            if (isNexus(brick)) {\n                adjustRole(brick.pulls, IntervalRole.Triangle)\n                adjustRole(brick.crosses, IntervalRole.Cross)\n                adjustRole(brick.pushes, IntervalRole.NexusPush)\n            } else {\n                adjustRole(brick.rings[TRIANGLE_DEFINITIONS[triangle].ring], IntervalRole.Ring)\n                adjustRole(brick.crosses, IntervalRole.Triangle)\n                adjustRole(brick.pushes, IntervalRole.ColumnPush)\n            }\n        })\n        this.tensegrity.instance.refreshFloatView()\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    IBrick,\n    IFaceMark,\n    IPercent,\n    oppositeTriangle,\n    percentOrHundred,\n    Triangle,\n    TRIANGLE_DIRECTIONS,\n    TRIANGLES,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'Mobiosity':(d(6,S80,MA4),C(6,S80,MA4),c(6,S80,MA3),D(6,S80,MA2),a(6,S80,MA1),b(6,S80,MA2),B(6,S80,MA1),A(6,S80,MA3))\",\n    \"'Zero':(0)\",\n    \"'One':(1)\",\n    \"'Six':(6)\",\n    \"'Axoneme':(16,S90)\",\n    \"'Knee':(b1,a1)\",\n    \"'Leg':(b3,a3)\",\n    \"'Nexus':(a1,b1,c1,d1)\",\n    \"'Tripod with Knees':(A2,B(3,b(2,S90),S80),C(3,c(2,S90),S80),D(3,d(2,S90),S80))\",\n    \"'Pretenst Lander':(B(5,S75),C(5,S75),D(5,S75))\",\n    \"'Zig Zag Loop':(a(1,MA0),c(3,b(3,d(3,c(3,b(3,d(1,MA0)))))))\",\n    \"'Bulge Ring':(A(8, S85, MA1), a(8, S85, MA1))\",\n    \"'Ring':(A(10,MA1),a(10,MA1))\",\n    \"'Convergence Three':(a1,b(3,S85,MA1),c(3,S85,MA1),d(3,S85,MA1))\",\n    \"'Convergence Ten':(a1,b(10,S85,MA1),c(10,S85,MA1),d(10,S85,MA1))\",\n    \"'Halo by Crane':(B(7,S80,MA1),C(2,S120,MA0),D(7,S80,MA1))\",\n    \"'Thick Tripod':(A1,B(3,MA1),C(3,MA1),D(3,MA1)):1=face-distance-35\",\n    \"'Ankh':(A(3,S90,Mb0),b(3,S90,Mb0),a(5,S80,MA1),B(5,MA1,S80)):0=face-distance-30\",\n    \"'Diamond':(a(2,b(2,c(2,d(1,MA1)),d(2,c(1,MA0))),c(2,d(2,b(1,MA3)),b(2,d(1,MA2))),d(2,b(2,c(1,MA5)),c(2,b(1,MA4)))),b(2,d(2,Mc3),c(2,Md4)),c(2,b(2,Md5),d(2,Mb0)),d(2,c(2,Mb1),b(2,Mc2)))\",\n    \"'Composed':(3,b(2,MA0),c(2,MA0),d(2,MA0)):0=subtree(b2,c2,d2)\",\n    \"'Minigotchi':(A(3,S90,Mb0),b(3,S90,Mb0),a(2,S90,Md0),B(2,Md0,S90)):0=face-distance-60:9=symmetrical\",\n    \"'Mesogotchi':(A(2,c(2,MA0)),b(2,c(2,MA0)),a(2,d(2,MA0)),B(2,d(2,MA0))):0=face-distance-115:9=symmetrical\",\n    \"'Gorillagotchi':(A(5,S80,Mb0),b(5,S80,Mb0),a(3,S70,Md0),B(3,Md0,S70)):0=face-distance-60:9=symmetrical\",\n    \"'Equus Lunae':(A(8,S90,Mb0),b(8,S90,Mb0),a(8,S90,Md0),B(8,Md0,S90)):0=face-distance-60:9=symmetrical\",\n    \"'Infinity':(a(5,S80,MA1),b(5,S80,MA2),B(5,S80,MA1),A(5,S80,MA2))\",\n    \"'Binfinity':(d(6,S80,MA4),C(6,S80,MA4),c(6,S80,MA3),D(6,S80,MA3),a(6,S80,MA1),b(6,S80,MA2),B(6,S80,MA1),A(6,S80,MA2))\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n    Symmetrical,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    symmetrical: boolean\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(name: string, mainTree: ITenscriptTree, marks: Record<number, IMark>, fromUrl: boolean): ITenscript {\n    const mainCode = treeToCode(mainTree)\n    const markSections: string[] = []\n    let symmetrical = false\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n            case MarkAction.Symmetrical:\n                symmetrical = true\n                markSections.push(`${key}=symmetrical`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, symmetrical, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return TRIANGLE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(triangle: Triangle, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[TRIANGLE_DIRECTIONS[triangle]]\n}\n\nfunction faceMark(triangle: Triangle, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${TRIANGLE_DIRECTIONS[triangle]}`]\n}\n\nfunction deleteFaceMark(triangle: Triangle, tree: ITenscriptTree): void {\n    tree[`M${TRIANGLE_DIRECTIONS[triangle]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseCode(code: string): { name: string, mainCode: string, markCode: Record<number, string> } {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => part.startsWith(\"(\") && part.endsWith(\")\"))\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    return {\n        name: foundName ? foundName.replace(/'/g, \"\") : \"\",\n        mainCode: foundMain || \"(0)\",\n        markCode,\n    }\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else if (c === \"symmetrical\") {\n                marks[key] = <IMark>{action: MarkAction.Symmetrical}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IActiveTenscript {\n    tree: ITenscriptTree\n    brick: IBrick\n    tensegrity: Tensegrity\n}\n\nexport function execute(before: IActiveTenscript[], marks: Record<number, IMark>): IActiveTenscript[] {\n    const active: IActiveTenscript[] = []\n\n    before.forEach(({brick, tree, tensegrity}) => {\n\n        function markBrick(brickToMark: IBrick, treeWithMarks: ITenscriptTree): void {\n            TRIANGLES.forEach(triangle => {\n                const mark = faceMark(triangle, treeWithMarks)\n                if (!mark) {\n                    return\n                }\n                const brickFace = brickToMark.base === Triangle.NNN ? brickToMark.faces[triangle] : brickToMark.faces[oppositeTriangle(triangle)]\n                if (brickFace.removed) {\n                    throw new Error(\"!! trying to use a face that was removed\")\n                }\n                brickFace.mark = mark\n            })\n        }\n\n        function grow(previous: IBrick, newTree: ITenscriptTree, triangle: Triangle, treeScale: IPercent): IActiveTenscript {\n            const connectTriangle = previous.base === Triangle.PPP ? oppositeTriangle(triangle) : triangle\n            const newBrick = new TensegrityBuilder(tensegrity).createConnectedBrick(previous, connectTriangle, treeScale)\n            if (newTree._ === 0) {\n                markBrick(newBrick, newTree)\n            }\n            return {tree: newTree, brick: newBrick, tensegrity}\n        }\n\n        const forward = tree._\n        if (forward) {\n            const _ = forward - 1\n            active.push(grow(brick, {...tree, _}, Triangle.PPP, percentOrHundred(tree.S)))\n            return\n        }\n\n        TRIANGLES.forEach(triangle => {\n            const subtree = childTree(triangle, tree)\n            const triangleMark = faceMark(triangle, tree)\n            if (subtree) {\n                const _ = subtree._ ? subtree._ - 1 : undefined\n                const decremented = {...subtree, _}\n                active.push(grow(brick, decremented, triangle, percentOrHundred(subtree.S)))\n            } else if (triangleMark) {\n                const mark = marks[triangleMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(triangle, tree)\n                    active.push(grow(brick, markTree, triangle, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return active\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Realize = \"Realize\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-06-03\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    recentCode: Record<string, string>\n    controlTab: ControlTab\n    fullScreen: boolean\n    polygons: boolean\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nexport function addRecentCode(state: IStoredState, {code, name}: ITenscript): IStoredState {\n    const recentCode = {...state.recentCode}\n    recentCode[name] = code\n    return transition(state, {recentCode})\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return Object.keys(state.recentCode).map(key => {\n        const code = state.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function roleLengthFeature(intervalRole: IntervalRole): WorldFeature {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return WorldFeature.NexusPushLength\n        case IntervalRole.ColumnPush:\n            return WorldFeature.ColumnPushLength\n        case IntervalRole.Triangle:\n            return WorldFeature.TriangleLength\n        case IntervalRole.Ring:\n            return WorldFeature.RingLength\n        case IntervalRole.Cross:\n            return WorldFeature.CrossLength\n        case IntervalRole.BowMid:\n            return WorldFeature.BowMidLength\n        case IntervalRole.BowEnd:\n            return WorldFeature.BowEndLength\n        case IntervalRole.RibbonPush:\n            return WorldFeature.RibbonPushLength\n        case IntervalRole.RibbonShort:\n            return WorldFeature.RibbonShortLength\n        case IntervalRole.RibbonLong:\n            return WorldFeature.RibbonLongLength\n        case IntervalRole.RibbonHanger:\n            return WorldFeature.RibbonHangerLength\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport function roleDefaultFromFeatures(featureNumeric: (feature: WorldFeature) => number, intervalRole: IntervalRole): number {\n    if (intervalRole === IntervalRole.FaceConnector || intervalRole === IntervalRole.FaceDistancer || intervalRole === IntervalRole.FaceAnchor) {\n        throw new Error()\n    }\n    return featureNumeric(roleLengthFeature(intervalRole))\n}\n\nexport function transition(state: IStoredState, partial: Partial<IStoredState>): IStoredState {\n    return {...state, nonce: state.nonce + 1, ...partial}\n}\n\nfunction initialStoredState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        fullScreen: true,\n        polygons: false,\n        rotating: false,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = interval.strainNuance()\n    if (interval.isPush) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Shaping Stiffness factor\",\n                percents: [20, 50, 100, 150, 200, 250, 300],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness Factor\",\n                percents: [5, 25, 50, 100, 150, 200, 250, 300, 400, 500],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 2000, 3000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.NexusPushLength:\n            return {\n                feature,\n                name: \"Nexus Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.ColumnPushLength:\n            return {\n                feature,\n                name: \"Column Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.TriangleLength:\n            return {\n                feature,\n                name: \"Triangle\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RingLength:\n            return {\n                feature,\n                name: \"Ring\",\n                percents: [10, 80, 90, 100, 110, 120, 130],\n            }\n        case WorldFeature.CrossLength:\n            return {\n                feature,\n                name: \"Cross\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.BowMidLength:\n            return {\n                feature,\n                name: \"Bow Mid\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.BowEndLength:\n            return {\n                feature,\n                name: \"Bow End\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonPushLength:\n            return {\n                feature,\n                name: \"Rib Push\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonShortLength:\n            return {\n                feature,\n                name: \"Rib Short\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonLongLength:\n            return {\n                feature,\n                name: \"Rib Long\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.RibbonHangerLength:\n            return {\n                feature,\n                name: \"Rib Hanger\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.PushRadius:\n            return {\n                feature,\n                name: \"Push Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case WorldFeature.PullRadius:\n            return {\n                feature,\n                name: \"Pull Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case WorldFeature.JointRadiusFactor:\n            return {\n                feature,\n                name: \"Joint Radius\",\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            storedState$.next(transition(storedState, {featureValues}))\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityOptimizer } from \"./tensegrity-optimizer\"\n\nexport interface ILifeTransition {\n    stage: Stage\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (worldFeature: WorldFeature) => number, private tensegrity: Tensegrity, stage: Stage) {\n        this._stage = stage\n    }\n\n    public executeTransition(tx: ILifeTransition): Life {\n        this.transition(tx)\n        this._stage = tx.stage\n        return new Life(this.numericFeature, this.tensegrity, tx.stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition({stage, adoptLengths, strainToStiffness}: ILifeTransition): void {\n        const tensegrity = this.tensegrity\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            const faceIntervals = [...tensegrity.faceIntervals]\n                            faceIntervals.forEach(interval => tensegrity.removeFaceInterval(interval))\n                            const faceAnchors = [...tensegrity.faceAnchors]\n                            faceAnchors.forEach(interval => tensegrity.removeFaceAnchor(interval))\n                            tensegrity.instance.snapshot()\n                        }\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Pretensing:\n                switch (stage) {\n                    case Stage.Pretenst:\n                        return\n                }\n                break\n            case Stage.Pretenst:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (strainToStiffness) {\n                            new TensegrityOptimizer(tensegrity).stiffnessesFromStrains(interval => {\n                                switch (interval.intervalRole) {\n                                    case IntervalRole.RibbonPush:\n                                    case IntervalRole.RibbonShort:\n                                    case IntervalRole.RibbonLong:\n                                    case IntervalRole.RibbonHanger:\n                                        return false\n                                    default:\n                                        const alphaY = interval.alpha.location().y\n                                        const omegaY = interval.omega.location().y\n                                        const surface = (alphaY + omegaY) < 0.1\n                                        return !surface\n                                }\n                            })\n                            return\n                        }\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            tensegrity.instance.snapshot()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { intervalRoleName, isPushInterval } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ILifeTransition, Life } from \"./life\"\nimport { execute, IActiveTenscript, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { scaleToFaceConnectorLength, TensegrityBuilder } from \"./tensegrity-builder\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    factorToPercent, gatherJointHoles,\n    IBrick,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    IPercent,\n    percentOrHundred,\n    percentToFactor,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nconst COUNDOWN_PER_LENGTH = 2\n\nexport class Tensegrity {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public faceIntervals: IFaceInterval[] = []\n    public faceAnchors: IFaceAnchor[] = []\n    public faces: IFace[] = []\n    public bricks: IBrick[] = []\n    public activeTenscript?: IActiveTenscript[]\n    private transitionQueue: ILifeTransition[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly symmetrical: boolean,\n        public readonly rotation: number,\n        public readonly scale: IPercent,\n        public readonly roleDefaultLength: (intervalRole: IntervalRole) => number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        const brick = new TensegrityBuilder(this).createBrickAt(location, symmetrical, scale)\n        this.bricks = [brick]\n        this.activeTenscript = [{tree: this.tenscript.tree, brick, tensegrity: this}]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public lifeTransition(tx: ILifeTransition): void {\n        const life = this.life$.getValue()\n        if (tx.stage === life.stage) {\n            return\n        }\n        this.life$.next(life.executeTransition(tx))\n    }\n\n    public createJoint(location: Vector3): number {\n        return this.fabric.create_joint(location.x, location.y, location.z)\n    }\n\n    public createFaceConnector(alpha: IFace, omega: IFace): IFaceInterval {\n        return this.createFaceInterval(alpha, omega)\n    }\n\n    public createFaceDistancer(alpha: IFace, omega: IFace, pullScale: IPercent): IFaceInterval {\n        return this.createFaceInterval(alpha, omega, pullScale)\n    }\n\n    public createFaceAnchor(alpha: IFace, point: Vector3, scale: IPercent): IFaceAnchor {\n        const intervalRole = IntervalRole.FaceAnchor\n        const omegaJointIndex = this.createJoint(point)\n        this.fabric.anchor_joint(omegaJointIndex)\n        const omega: IJoint = {\n            index: omegaJointIndex,\n            oppositeIndex: -1,\n            location: () => this.instance.jointLocation(omegaJointIndex),\n        }\n        this.joints.push(omega)\n        const idealLength = alpha.location().distanceTo(point)\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const linearDensity = 0\n        const restLength = -point.y * percentToFactor(scale)\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceAnchor = {index, alpha, omega, removed: false}\n        this.faceAnchors.push(interval)\n        return interval\n    }\n\n    public removeFaceInterval(interval: IFaceInterval): void {\n        this.faceIntervals = this.faceIntervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public removeFaceAnchor(interval: IFaceAnchor): void {\n        this.faceAnchors = this.faceAnchors.filter(existing => existing.index !== interval.index)\n        interval.alpha.joints.forEach(joint => this.fabric.anchor_joint(joint.index))\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createInterval(\n        alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent,\n        stiffness: number, linearDensity: number, coundown: number,\n    ): IInterval {\n        const idealLength = alpha.location().distanceTo(omega.location())\n        const scaleFactor = percentToFactor(scale)\n        const defaultLength = this.roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPushInterval(intervalRole),\n            location: () => new Vector3().addVectors(alpha.location(), omega.location()).multiplyScalar(0.5),\n            strainNuance: () => this.instance.floatView.strainNuances[index],\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = factorToPercent(percentToFactor(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        this.fabric.set_interval_role(interval.index, intervalRole)\n        this.fabric.change_rest_length(interval.index, percentToFactor(scaleFactor) * this.roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(brick: IBrick, triangle: Triangle): IFace {\n        const {negative, pushEnds} = TRIANGLE_DEFINITIONS[triangle]\n        const pushes = pushEnds.map(end => {\n            const foundPush = brick.pushes.find(push => {\n                const endJoint = brick.joints[end]\n                return endJoint.index === push.alpha.index || endJoint.index === push.omega.index\n            })\n            if (foundPush === undefined) {\n                throw new Error()\n            }\n            return foundPush\n        })\n        const pulls = [0, 1, 2].map(offset => brick.pulls[triangle * 3 + offset])\n        const joints = pushEnds.map(end => brick.joints[end])\n        const index = this.fabric.create_face(joints[0].index, joints[1].index, joints[2].index)\n        const face: IFace = {\n            index, negative, removed: false,\n            brick, triangle, joints, pushes, pulls,\n            location: () =>\n                joints.reduce((sum, joint) => sum.add(joint.location()), new Vector3())\n                    .multiplyScalar(1.0 / 3.0),\n        }\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace, removeIntervals: boolean): void {\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        this.faceIntervals.forEach(existing => {\n            if (existing.alpha.index > face.index) {\n                existing.alpha.index--\n            }\n            if (existing.omega.index > face.index) {\n                existing.omega.index--\n            }\n        })\n        face.removed = true\n        if (removeIntervals) {\n            face.pulls.forEach(interval => this.removeInterval(interval))\n        }\n    }\n\n    public get anchorJoints(): IJoint[] {\n        return this.joints.filter(joint => this.fabric.is_anchor_joint(joint.index))\n    }\n\n    public startTightening(intervals: IFaceInterval[]): void {\n        this.faceIntervals = intervals\n    }\n\n    public set transition(tx: ILifeTransition) {\n        if (tx.stage === undefined) {\n            throw new Error(\"Undefined stage!\")\n        }\n        this.transitionQueue.push(tx)\n    }\n\n    public iterate(): Stage | undefined {\n        const tx = this.transitionQueue.shift()\n        if (tx) {\n            this.lifeTransition(tx)\n        }\n        const stage = this.instance.iterate(this.life$.getValue().stage)\n        if (stage === undefined) {\n            return undefined\n        }\n        const activeCode = this.activeTenscript\n        const builder = () => new TensegrityBuilder(this)\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.activeTenscript = execute(activeCode, this.tenscript.marks)\n            }\n            if (activeCode.length === 0) {\n                this.activeTenscript = undefined\n                faceStrategies(this.faces, this.tenscript.marks, builder()).forEach(strategy => strategy.execute())\n                if (stage === Stage.Growing) {\n                    return this.fabric.finish_growing()\n                }\n            }\n            return Stage.Growing\n        }\n        if (this.faceIntervals.length > 0) {\n            this.faceIntervals = builder().checkFaceIntervals(this.faceIntervals, interval => this.removeFaceInterval(interval))\n        }\n        return stage\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = joint.location()\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                const holes = gatherJointHoles(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor, holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const radiusFeature = this.numericFeature(interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius)\n                const radius = radiusFeature * percentToFactor(interval.scale)\n                const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                const length = currentLength + (interval.isPush ? -jointRadius * 2 : jointRadius * 2)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: interval.isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    idealLength: idealLengths[interval.index],\n                    isPush: interval.isPush,\n                    length, radius, jointRadius,\n                }\n            }),\n        }\n    }\n\n    private createFaceInterval(alpha: IFace, omega: IFace, pullScale?: IPercent): IFaceInterval {\n        const connector = !pullScale\n        const intervalRole = connector ? IntervalRole.FaceConnector : IntervalRole.FaceDistancer\n        const idealLength = alpha.location().distanceTo(omega.location())\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const scaleFactor = (percentToFactor(alpha.brick.scale) + percentToFactor(omega.brick.scale)) / 2\n        const restLength = !pullScale ? scaleToFaceConnectorLength(scaleFactor) : percentToFactor(pullScale) * idealLength\n        const linearDensity = 0\n        const countdown = COUNDOWN_PER_LENGTH * idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceInterval = {index, alpha, omega, connector, scaleFactor, removed: false}\n        this.faceIntervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.faceIntervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.faceAnchors.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createFaceIntervals(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FabricInstance, FORWARD } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, Triangle, TRIANGLE_DEFINITIONS } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: Triangle\n    triangle: Triangle\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            const nextStage = embryo.iterate()\n            const life = embryo.life$.getValue()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                embryo.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                embryo.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        instance.fabric.adopt_lengths()\n                        const faceIntervals = [...embryo.faceIntervals]\n                        faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n                        instance.iterate(Stage.Slack)\n                        instance.iterate(Stage.Pretensing)\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Pretensing:\n                    return true\n                case Stage.Pretenst:\n                    extractGotchiFaces(embryo, state.muscles, state.extremities)\n                    embryo.transition = {stage: Stage.Pretenst}\n                    embryo.iterate()\n                    this.embryo = undefined\n                    this.twitcher = new Twitcher(state)\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance, triangle} = muscle\n    const oppositeTriangle = TRIANGLE_DEFINITIONS[triangle].opposite\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.triangle === oppositeTriangle)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\nfunction extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    tensegrity.faces\n        .filter(face => !face.removed && face.brick.parentFace)\n        .forEach(face => {\n            const gatherAncestors = (f: IFace, id: Triangle[]): Limb => {\n                const definition = TRIANGLE_DEFINITIONS[f.triangle]\n                id.push(definition.negative ? definition.opposite : definition.name)\n                const parentFace = f.brick.parentFace\n                if (parentFace) {\n                    return gatherAncestors(parentFace, id)\n                } else {\n                    return limbFromTriangle(f.triangle)\n                }\n            }\n            const identities: Triangle[] = []\n            const limb = gatherAncestors(face, identities)\n            const group = identities.shift()\n            const triangle = face.triangle\n            if (!group) {\n                throw new Error(\"no top!\")\n            }\n            const distance = identities.length\n            const faceIndex = face.index\n            if (isTriangleExtremity(group)) {\n                const name = `[${limb}]`\n                extremities.push({faceIndex, name, limb})\n            } else {\n                const name = `[${limb}]:[${distance}:${Triangle[group]}]:{tri=${Triangle[triangle]}}`\n                muscles.push({faceIndex, name, limb, distance, group, triangle})\n            }\n        })\n}\n\nfunction isTriangleExtremity(triangle: Triangle): boolean {\n    const definition = TRIANGLE_DEFINITIONS[triangle]\n    const normalizedTriangle = definition.negative ? definition.opposite : triangle\n    return normalizedTriangle === Triangle.PPP\n}\n\nfunction limbFromTriangle(triangle: Triangle): Limb {\n    switch (triangle) {\n        case Triangle.NNN:\n            return Limb.BackLeft\n        case Triangle.PNN:\n            return Limb.BackRight\n        case Triangle.NPP:\n            return Limb.FrontLeft\n        case Triangle.PPP:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PushRadius:\n            return defaultValue * 3\n        case WorldFeature.PullRadius:\n            return defaultValue * 2\n        case WorldFeature.JointRadiusFactor:\n            return defaultValue * 0.8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.StiffnessFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Life } from \"../fabric/life\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [life, updateLife] = useState<Life | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateLife(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.life$.subscribe((latestLife) => {\n            if (latestLife.stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateLife(latestLife)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !life ? <h1>no life</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(life.stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { DoubleSide, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { Orbit } from \"../view/orbit\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SPACE_RADIUS,\n    SPACE_SCALE,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.01\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const midpoint = new Vector3()\n\n    function developing(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function resting(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 10\n    }\n\n    function running(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function evolving(e: Evolution): number {\n        switch (e.iterate()) {\n            case EvolutionPhase.EvolutionDone:\n                console.log(\"Evolution DONE\")\n                stopEvolution()\n                break\n            case EvolutionPhase.EvolutionHarder:\n                console.log(\"Evolution advance...\")\n                stopEvolution(e.withReducedCyclePattern)\n                break\n        }\n        e.getMidpoint(midpoint)\n        return 15\n    }\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        const approachDistance = (distance: number) => {\n            const position = control.object.position\n            const positionToTarget = new Vector3().subVectors(position, control.target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (gotchi) {\n                    approachDistance(developing(gotchi))\n                }\n                break\n            case Happening.Resting:\n                if (gotchi) {\n                    approachDistance(resting(gotchi))\n                }\n                break\n            case Happening.Running:\n                if (gotchi) {\n                    approachDistance(running(gotchi))\n                }\n                break\n            case Happening.Evolving:\n                if (evolution) {\n                    approachDistance(evolving(evolution))\n                    evolutionPhase(evolution.phase)\n                }\n                break\n        }\n        control.target.add(new Vector3().subVectors(midpoint, control.target).multiplyScalar(TOWARDS_TARGET))\n        control.update()\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useEffect(() => {\n        orbit.current.autoRotate = happening === Happening.Evolving\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.life$.getValue().stage === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.life$.getValue().stage\n        const nextStage = this.tensegrity.iterate()\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    const instance = this.instance\n                    instance.fabric.adopt_lengths()\n                    instance.iterate(Stage.Slack)\n                    instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IVertex, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return defaultValue * 0.01\n        case WorldFeature.Gravity:\n            return defaultValue / 3\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 2\n        default:\n            return defaultValue\n    }\n}\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.vertexAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        this.sphere.vertices.forEach(center => {\n            center.adjacent.forEach(adjacent => {\n                this.sphere.pullsForAdjacent(center, adjacent)\n            })\n        })\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(vertexA: IVertex, vertexB: IVertex, withMiddle?: boolean): { vertexA: IVertex, vertexB: IVertex, vertexMid?: IVertex } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(vertexA.location).lerp(vertexB.location, 0.5)\n            const vertexMid = this.sphere.vertexAt(middleLocation)\n            this.sphere.pushBetween(vertexA, vertexMid)\n            this.sphere.pushBetween(vertexMid, vertexB)\n            return {vertexA, vertexB, vertexMid}\n        } else {\n            this.sphere.pushBetween(vertexA, vertexB)\n            return {vertexA, vertexB}\n        }\n    }\n\n    private build60Edges(): IVertex[] {\n        const edgeVertexes: IVertex[] = []\n        EDGE.forEach(edge => {\n            const {vertexMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (vertexMid) {\n                edgeVertexes.push(vertexMid)\n            }\n        })\n        return edgeVertexes\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IVertex[][] {\n        const edgePoints: IVertex[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IVertex[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IVertex | undefined\n            let previousVertex: IVertex | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.vertexAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IVertex[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IVertex[][]): void {\n        const v: IVertex[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.vertexAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IVertex[] = []\n            const vv1: IVertex[] = []\n            const vv2: IVertex[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IVertex[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IVertex[] {\n        return this.sphere.vertices\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 0.5\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 1.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { TensegritySphere } from \"./tensegrity-sphere\"\n\nextend({Orbit})\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 1\n        orb.maxDistance = 10000\n        orb.enableZoom = true\n        orb.update()\n    }, [])\n\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        if (tick === 0) {\n            control.target.copy(sphere.location)\n        }\n        sphere.iterate()\n        const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        control.target.add(toMidpoint)\n        control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                <lineSegments\n                    key=\"lines\"\n                    geometry={sphere.instance.floatView.lineGeometry}\n                    material={LINE_VERTEX_COLORS}\n                    onUpdate={self => self.geometry.computeBoundingSphere()}\n                />\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 1, 5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IVertex {\n    index: number\n    location: Vector3\n    adjacent: IAdjacent[]\n}\n\nexport interface IAdjacent {\n    push: ISpherePush\n    reverse: boolean\n    vertex: IVertex\n}\n\nfunction adjacentClose({push, reverse}: IAdjacent): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nfunction adjacentFar({push, reverse}: IAdjacent): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport interface ISpherePush {\n    index: number\n    alphaVertex: IVertex\n    omegaVertex: IVertex\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport interface ISpherePull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: ISpherePush[] = []\n    public pulls: ISpherePull[] = []\n    public vertices: IVertex[] = []\n\n    private stage = Stage.Growing\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public vertexAt(location: Vector3): IVertex {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.vertices.length\n        const vertex: IVertex = {index, location, adjacent: []}\n        this.vertices.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaVertex: IVertex, omegaVertex: IVertex): ISpherePush {\n        const midpoint = new Vector3().addVectors(alphaVertex.location, omegaVertex.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaVertex.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaVertex.location).applyQuaternion(quaternion)\n        const stiffness = 0.00001\n        const linearDensity = Math.sqrt(stiffness)\n        const idealLength = alphaVertex.location.distanceTo(omegaVertex.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, IntervalRole.SpherePush,\n            idealLength, idealLength, stiffness, linearDensity, 0)\n        const push: ISpherePush = {index, alpha, omega, alphaVertex, omegaVertex}\n        this.pushes.push(push)\n        alphaVertex.adjacent.push({vertex: omegaVertex, reverse: false, push})\n        omegaVertex.adjacent.push({vertex: alphaVertex, reverse: true, push})\n        return push\n    }\n\n    public pullsForAdjacent(center: IVertex, adjacent: IAdjacent): ISpherePull[] {\n        const pushLength = adjacent.push.alphaVertex.location.distanceTo(adjacent.push.omegaVertex.location)\n        const proportion = 0.3\n        const shortPull = pushLength * proportion\n        const longPull = pushLength * (1 - proportion)\n        const pulls: ISpherePull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, short: boolean) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const stiffness = 0.000001\n            const linearDensity = Math.sqrt(stiffness)\n            const restLength = short ? shortPull : longPull\n            const idealLength = alpha.location().distanceTo(omega.location())\n            const index = this.fabric.create_interval(\n                alpha.index, omega.index, IntervalRole.SpherePull,\n                idealLength, restLength, stiffness, linearDensity, 100)\n            const interval: ISpherePull = {index, alpha, omega}\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextAdjacent = this.nextAdjacent(center, adjacent)\n        const nextClose = adjacentClose(nextAdjacent)\n        const currentClose = adjacentClose(adjacent)\n        const currentFar = adjacentFar(adjacent)\n        pull(currentClose, nextClose, true)\n        pull(currentFar, nextClose, false)\n        return pulls\n    }\n\n    public iterate(): void {\n        const stage = this.instance.iterate(this.stage)\n        if (stage === undefined) {\n            return\n        }\n        switch (stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.stage = this.fabric.finish_growing()\n                break\n            case Stage.Shaping:\n                console.log(\"adopt\")\n                this.fabric.adopt_lengths()\n                this.stage = Stage.Slack\n                break\n            case Stage.Slack:\n                console.log(\"slack\")\n                this.stage = Stage.Pretensing\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = joint.location()\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(interval => {\n                    const radiusFeature = this.numericFeature(WorldFeature.PushRadius)\n                    const radius = radiusFeature / this.frequency\n                    const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                    const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[interval.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radiusFeature = this.numericFeature(WorldFeature.PullRadius)\n                    const radius = radiusFeature / this.frequency\n                    const jointRadius = radius * this.numericFeature(WorldFeature.JointRadiusFactor)\n                    const currentLength = interval.alpha.location().distanceTo(interval.omega.location())\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {\n            index,\n            oppositeIndex: -1,\n            location: () => this.instance.jointLocation(index),\n        }\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextAdjacent(center: IVertex, current: IAdjacent): IAdjacent {\n        const centerLocation = center.location\n        const currentLocation = current.vertex.location\n        const toCurrent = new Vector3().subVectors(currentLocation, centerLocation)\n        const cross = new Vector3().crossVectors(centerLocation, toCurrent).normalize()\n        if (this.twist < 0) {\n            cross.multiplyScalar(-1)\n        }\n        const farToClose = center.adjacent\n            .filter(({vertex}) => {\n                if (vertex.index === current.vertex.index) {\n                    return false\n                }\n                const toVertex = new Vector3().subVectors(vertex.location, centerLocation).normalize()\n                return toVertex.dot(cross) > 0\n            })\n            .sort((a, b) => {\n                const distanceA = a.vertex.location.distanceToSquared(currentLocation)\n                const distanceB = b.vertex.location.distanceToSquared(currentLocation)\n                return distanceB - distanceA\n            })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { fabricFeatureIntervalRole } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const roleColor = roleColorString(fabricFeatureIntervalRole(feature.worldFeature))\n    const color = roleColor ? roleColor : \"#919191\"\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : color\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, floatString, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 10000\n\nexport function FrozenTab({tensegrity, floatFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return (\n        <>\n            <Grouping>\n                <FeaturePanel feature={floatFeatures[WorldFeature.PushRadius]} disabled={!polygons}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.PullRadius]} disabled={!polygons}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.JointRadiusFactor]} disabled={!polygons}/>\n            </Grouping>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(tensegrity.fabricOutput)} disabled={!polygons}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(tensegrity.fabricOutput)} disabled={!polygons}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={!polygons}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    storedState$.next(transition(storedState$.getValue(), {visibleRoles: [...visibleRoles, intervalRole]}))\n                                } else {\n                                    storedState$.next(transition(storedState$.getValue(), {visibleRoles: visibleRoles.filter(role => role !== intervalRole)}))\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowLeft,\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Pretensing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Pretensing}}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.transition = {stage: Stage.Shaping}}\n                    >\n                        <Symbol stage={Stage.Shaping}/> Shaping <FaArrowLeft/> Slack <Symbol stage={Stage.Slack}/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaCompass,\n    FaDragon,\n    FaHandPointUp,\n    FaLink,\n    FaList,\n    FaMagic,\n    FaSlidersH,\n    FaTimesCircle,\n    FaTools,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { MarkAction } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityBuilder } from \"../fabric/tensegrity-builder\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState, roleLengthFeature } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { roleColorString } from \"./materials\"\n\nexport enum ShapeSelection {\n    None,\n    Faces,\n    Intervals,\n}\n\n// brick\n// triangle\n// pulls\n// choose joint\n// choose interval\n\n\nexport function ShapeTab(\n    {\n        floatFeatures, tensegrity, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        tensegrity.instance.world.set_push_and_pull(pushAndPull)\n    }, [pushAndPull])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updatePolygons(newState.polygons)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [lengthFeature, setLengthFeature] = useState(floatFeatures[WorldFeature.NexusPushLength])\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            tensegrity.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function connect(): void {\n        const pulls = new TensegrityBuilder(tensegrity).createFaceIntervals(selectedFaces, {action: MarkAction.JoinFaces})\n        tensegrity.faceIntervals.push(...pulls)\n        clearSelection()\n        setShapeSelection(ShapeSelection.None)\n        setFabric(tensegrity)\n    }\n\n    function disabled(): boolean {\n        return polygons || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedFaces.length < faceCount || polygons\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Faces ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None}\n                        onClick={() => {\n                            clearSelection()\n                            setShapeSelection(shapeSelection !== ShapeSelection.Faces ? ShapeSelection.Faces : ShapeSelection.None)\n                        }}\n                    >\n                        <span><FaHandPointUp/> Select faces</span>\n                    </Button>\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None || selectedFaces.length === 0}\n                        onClick={() => {\n                            if (shapeSelection === ShapeSelection.Intervals) {\n                                clearSelection()\n                            }\n                            setShapeSelection(shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals)\n                        }}\n                    >\n                        <span><FaSlidersH/> Make length adjustments</span>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedFaces.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelection()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(1, ShapeSelection.Faces)}\n                        onClick={() => {\n                            new TensegrityBuilder(tensegrity).faceToOrigin(selectedFaces[0])\n                            tensegrity.instance.refreshFloatView()\n                            clearSelection()\n                        }}>\n                        <FaCompass/><span> Upright</span>\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(2, ShapeSelection.Faces)}\n                        onClick={connect}>\n                        <FaLink/><span> Connect</span>\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Default Lengths</h6>\n                <FeaturePanel key={lengthFeature.title} feature={lengthFeature} disabled={disabled()}/>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map(intervalRole => ({\n                            intervalRole,\n                            feature: floatFeatures[roleLengthFeature(intervalRole)],\n                        }))\n                        .map(({intervalRole, feature}) => (\n                            <Button size=\"sm\" key={`IntervalRole[${intervalRole}]`}\n                                    style={{\n                                        backgroundColor: roleColorString(intervalRole),\n                                        borderWidth: \"3px\",\n                                        borderStyle: lengthFeature.worldFeature === feature.worldFeature ? \"solid\" : \"none\",\n                                    }}\n                                    onClick={() => setLengthFeature(feature)}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaClock, FaCompressArrowsAlt, FaFistRaised, FaHandRock, FaParachuteBox } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {\n        floatFeatures, tensegrity,\n        storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={floatFeatures[WorldFeature.IterationsPerFrame]} disabled={polygons}/>\n                <FeaturePanel key=\"ic\" feature={floatFeatures[WorldFeature.IntervalCountdown]} disabled={polygons}/>\n                <FeaturePanel key=\"pc\" feature={floatFeatures[WorldFeature.PretensingCountdown]} disabled={polygons}/>\n            </Grouping>\n            <Grouping>\n                <FeaturePanel\n                    feature={floatFeatures[WorldFeature.VisualStrain]}\n                    disabled={polygons}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={polygons}\n                            onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({floatFeatures, tensegrity, shapeSelection, storedState$}: {\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updatePolygons(storedState.polygons)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function disabled(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function changeState(changed: Partial<IStoredState>): void {\n        storedState$.next(transition(storedState$.getValue(), changed))\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => changeState({surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={floatFeatures[WorldFeature.PretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.StiffnessFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[WorldFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={floatFeatures[WorldFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaBug,\n    FaDungeon,\n    FaFutbol,\n    FaHeart,\n    FaHiking,\n    FaPlay,\n    FaRegFolder,\n    FaRegFolderOpen,\n    FaRocket,\n    FaSeedling,\n} from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { addRecentCode, getRecentTenscript, IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, tensegrity, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        const state = addRecentCode(storedState$.getValue(), newCode)\n        setRecentPrograms(getRecentTenscript(state))\n        storedState$.next(state)\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/>\n                    </Button>\n                    <Button onClick={() => switchToVersion(Version.Bridge)}>\n                        <FaDungeon/>\n                    </Button>\n                    <Button onClick={() => switchToVersion(Version.Gotchi)}>\n                        <FaBug/>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        floatFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, selectedIntervals,\n        tensegrity, setFabric, runTenscript,\n        toFullScreen, storedState$,\n    }: {\n        floatFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        selectedIntervals: IInterval[],\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(tensegrity ? tensegrity.life$.getValue() : undefined)\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelection()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => storedState$.next(transition(storedState$.getValue(), {controlTab: tab}))}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedFaces={selectedFaces}\n                            clearSelection={clearSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !tensegrity ? NO_FABRIC : (\n                        <RealizeTab\n                            floatFeatures={floatFeatures}\n                            tensegrity={tensegrity}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            floatFeatures={floatFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    CylinderGeometry,\n    DoubleSide,\n    Euler,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    Quaternion,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    facesMidpoint,\n    IFace,\n    IInterval,\n    percentToFactor,\n} from \"../fabric/tensegrity-types\"\nimport { isIntervalVisible, IStoredState } from \"../storage/stored-state\"\n\nimport { JOINT_MATERIAL, LINE_VERTEX_COLORS, roleMaterial, SELECT_MATERIAL, SUBDUED_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\nconst SPHERE = new SphereGeometry(1, 32, 8)\nconst PULL_CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst PUSH_CYLINDER_INNER = new CylinderGeometry(0.5, 0.5, 1, 6, 1, false)\nconst PUSH_CYLINDER_OUTER = new CylinderGeometry(1, 1, 0.85, 12, 1, false)\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst ALTITUDE = 4\nconst Y_AXIS = new Vector3(0, 1, 0)\n\nexport function FabricView({\n                               tensegrity,\n                               selectedIntervals, toggleSelectedInterval,\n                               selectedFaces, setSelectedFaces, storedState$,\n                               shapeSelection, polygons,\n                           }: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    toggleSelectedInterval: (interval: IInterval) => void,\n    selectedFaces: IFace[],\n    setSelectedFaces: (faces: IFace[]) => void,\n    shapeSelection: ShapeSelection,\n    polygons: boolean,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [whyThis, updateWhyThis] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    if (!perspective) {\n        throw new Error(\"Wheres the camera tenseg?\")\n    }\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        updateInstance(tensegrity.instance)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(orb => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(orbit.current.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        orb.object = perspective\n        orb.minPolarAngle = -0.98 * Math.PI / 2\n        orb.maxPolarAngle = 0.8 * Math.PI\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useFrame(() => {\n        const view = instance.view\n        const target = selectedFaces.length > 0 ? facesMidpoint(selectedFaces) :\n            new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n        orbit.current.target.add(towardsTarget)\n        orbit.current.update()\n        if (!polygons && shapeSelection !== ShapeSelection.Faces) {\n            const nextStage = tensegrity.iterate()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                tensegrity.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                tensegrity.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Pretensing:\n                case Stage.Pretenst:\n                    break\n                default:\n                    updateWhyThis(whyThis + 1)\n            }\n\n        }\n    })\n\n    function toggleFacesSelection(faceToToggle: IFace): void {\n        if (selectedFaces.some(selected => selected.index === faceToToggle.index)) {\n            setSelectedFaces(selectedFaces.filter(b => b.index !== faceToToggle.index))\n        } else {\n            setSelectedFaces([...selectedFaces, faceToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView\n                        tensegrity={tensegrity}\n                        storedState={storedState}\n                    />\n                ) : (\n                    <LineView\n                        tensegrity={tensegrity}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        toggleSelectedInterval={toggleSelectedInterval}\n                    />\n                )}\n                {shapeSelection !== ShapeSelection.Faces ? undefined : (\n                    <>\n                        <Faces\n                            key=\"faces\"\n                            tensegrity={tensegrity}\n                            stage={life.stage}\n                            selectFace={toggleFacesSelection}\n                        />\n                        {selectedFaces.map(face => (\n                            <SelectedFace\n                                key={`Face${face.index}`}\n                                tensegrity={tensegrity}\n                                face={face}\n                            />\n                        ))}\n                    </>\n                )}\n                {life.stage < Stage.Pretensing ? undefined : <SurfaceComponent/>}\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectedFace({tensegrity, face}: { tensegrity: Tensegrity, face: IFace }): JSX.Element {\n    const scale = percentToFactor(face.brick.scale) / 8\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={face.location()}\n            material={SELECT_MATERIAL}\n            scale={new Vector3(scale, scale, scale)}\n        />\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, storedState, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    storedState: IStoredState,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n\n    const material = isIntervalVisible(interval, storedState) ? roleMaterial(interval.intervalRole) : SUBDUED_MATERIAL\n    const radiusFeature = storedState.featureValues[interval.isPush ? WorldFeature.PushRadius : WorldFeature.PullRadius]\n    const radius = radiusFeature.numeric\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n    const length = interval.alpha.location().distanceTo(interval.omega.location())\n    const jointRadius = radius * storedState.featureValues[WorldFeature.JointRadiusFactor].numeric\n    const intervalScale = new Vector3(radius, length + (interval.isPush ? -jointRadius * 2 : 0), radius)\n    const jointScale = new Vector3(jointRadius, jointRadius, jointRadius)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        geometry={PUSH_CYLINDER_INNER}\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={material}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={PUSH_CYLINDER_OUTER}\n                        position={interval.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={material}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={interval.alpha.location()}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={interval.omega.location()}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                </>\n            ) : (\n                <mesh\n                    geometry={PULL_CYLINDER}\n                    position={interval.location()}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    material={material}\n                    matrixWorldNeedsUpdate={true}\n                    onPointerDown={onPointerDown}\n                />\n            )}\n        </>\n    )\n}\n\nfunction PolygonView({tensegrity, storedState}: {\n    tensegrity: Tensegrity,\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            {tensegrity.intervals\n                .map(interval => (\n                    <IntervalMesh\n                        key={`I${interval.index}`}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        storedState={storedState}\n                    />\n                ))}}\n        </group>\n    )\n}\n\nfunction SelectedInterval({interval, tensegrity, storedState, toggleSelectedInterval}: {\n    interval: IInterval,\n    tensegrity: Tensegrity,\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <IntervalMesh\n            tensegrity={tensegrity}\n            interval={interval}\n            storedState={storedState}\n            onPointerDown={() => toggleSelectedInterval(interval)}\n        />\n    )\n}\n\nfunction LineView({tensegrity, selectedIntervals, storedState, toggleSelectedInterval}: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <group>\n            <lineSegments\n                key=\"lines\"\n                geometry={tensegrity.instance.floatView.lineGeometry}\n                material={LINE_VERTEX_COLORS}\n            />\n            {selectedIntervals.map(interval => (\n                <SelectedInterval\n                    key={`SI${interval.index}`}\n                    interval={interval}\n                    tensegrity={tensegrity}\n                    storedState={storedState}\n                    toggleSelectedInterval={toggleSelectedInterval}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction Faces({tensegrity, stage, selectFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    selectFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        selectFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial\n                attach=\"material\"\n                transparent={true}\n                side={DoubleSide}\n                opacity={0.3}\n                color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaMale, FaPlay, FaRunning, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport {\n    fabricFeatureIntervalRole,\n    switchToVersion,\n    Version,\n    versionFromUrl,\n} from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    IFace,\n    IInterval,\n    intervalsOfFaces,\n    percentOrHundred,\n    percentToFactor,\n} from \"../fabric/tensegrity-types\"\nimport {\n    getRecentTenscript,\n    IFeatureValue,\n    IStoredState,\n    roleDefaultFromFeatures,\n    transition,\n} from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript {\n    const fromUrl = getCodeFromUrl()\n    if (fromUrl) {\n        return fromUrl\n    }\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    }\n    const recentCode = getRecentTenscript(state)\n    return recentCode.length > 0 ? recentCode[0] : BOOTSTRAP[0]\n}\n\nexport function TensegrityView({createInstance, floatFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    floatFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selectedFaces, setSelectedFaces] = useState<IFace[]>([])\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n    useEffect(() => setSelectedIntervals(intervalsOfFaces(selectedFaces)), [selectedFaces])\n\n    const [rootTenscript, setRootTenscript] = useState(() => getCodeToRun(storedState$.getValue()))\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            updatePolygons(storedState.polygons)\n            updateRotating(storedState.rotating)\n            if (!tensegrity) {\n                return\n            }\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(floatFeatures).map(k => floatFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe((value: IFeatureValue) => {\n                if (!tensegrity) {\n                    return\n                }\n                tensegrity.instance.applyFeature(feature)\n                const intervalRole = fabricFeatureIntervalRole(feature.config.feature)\n                if (intervalRole !== undefined) {\n                    tensegrity.intervals\n                        .filter(interval => interval.intervalRole === intervalRole)\n                        .forEach(interval => {\n                            const scaledLength = feature.numeric * percentToFactor(interval.scale)\n                            tensegrity.fabric.change_rest_length(interval.index, scaledLength, 500)\n                        })\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        floatFeatures[WorldFeature.ShapingPretenstFactor].percent = 100\n        floatFeatures[WorldFeature.ShapingDrag].percent = 100\n        floatFeatures[WorldFeature.ShapingStiffnessFactor].percent = 100\n        storedState$.next(transition(storedState$.getValue(), {polygons: false}))\n        const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(feature => floatFeatures[feature].numeric, role)\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), newTenscript.symmetrical, 0, percentOrHundred(), roleLength, numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!tensegrity) {\n                runTenscript(rootTenscript)\n            }\n        }, 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        storedState$.next(transition(storedState$.getValue(), {fullScreen: value}))\n    }\n\n    return (\n        <>\n            {fullScreen ? (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        floatFeatures={floatFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        tensegrity={tensegrity}\n                        setFabric={setTensegrity}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedFaces={selectedFaces}\n                        clearSelection={() => {\n                            setSelectedFaces([])\n                            setSelectedIntervals([])\n                        }}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        <div id=\"bottom-right\">\n                            <ButtonGroup>\n                                <Button\n                                    color={rotating ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {rotating: !rotating}))}\n                                >\n                                    <FaSyncAlt/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"bottom-left\">\n                            <ButtonGroup>\n                                <Button\n                                    disabled={!polygons}\n                                    color={!polygons ? \"success\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {polygons: false}))}\n                                >\n                                    <FaRunning/>\n                                </Button>\n                                <Button\n                                    disabled={polygons}\n                                    color={polygons ? \"success\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {polygons: true}))}\n                                >\n                                    <FaMale/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: shapeSelection === ShapeSelection.Faces || polygons ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Faces ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    selectedIntervals={selectedIntervals}\n                                    toggleSelectedInterval={interval => setSelectedIntervals(intervals => intervals.filter(i => i.index !== interval.index))}\n                                    selectedFaces={selectedFaces}\n                                    setSelectedFaces={setSelectedFaces}\n                                    shapeSelection={shapeSelection}\n                                    polygons={polygons}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { factorToPercent, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, roleDefaultFromFeatures, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n                symmetrical: boolean,\n                rotation: number,\n            ) => {\n                const gotchiRoleLength = (role: IntervalRole) => roleDefaultFromFeatures(gotchiValue, role)\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, symmetrical, rotation, percentOrHundred(), gotchiRoleLength, gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT, true, patch.rotation,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT, false, 0,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(numericFeature, role)\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = factorToPercent(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), true, 0, scale, roleLength, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const sphereInstance = createInstance(false)\n            FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => new TensegritySphere(at, 2, frequency, 0.52, numeric, sphereInstance)\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   floatFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}