{"version":3,"sources":["fabric/eig-util.ts","fabric/fabric-instance.ts","service-worker.ts","fabric/tensegrity-types.ts","fabric/tenscript-node.ts","fabric/tenscript.ts","fabric/tensegrity-logic.ts","fabric/twist.ts","fabric/tensegrity.ts","view/feature-mapping.ts","storage/recoil.ts","view/bottom-left.tsx","storage/download.ts","view/bottom-right.tsx","view/events.ts","view/interval-details.tsx","view/materials.ts","view/surface-component.tsx","construction/object-view.tsx","construction/construction-view.tsx","evo/island-geometry.ts","evo/genome.ts","evo/patch.ts","evo/island.ts","evo/runner-logic.ts","evo/evo-state.ts","evo/population.ts","evo/runner-view.tsx","evo/population-view.tsx","evo/island-view.tsx","evo/evo-view.tsx","evo/twitcher.ts","evo/runner.ts","evo/stats-view.tsx","sphere/sphere-view.tsx","sphere/sphere-builder.ts","sphere/tensegrity-sphere.ts","fabric/bootstrap.ts","view/feature-slider.tsx","view/bottom-middle.tsx","view/fabric-view.tsx","view/stage-button.tsx","view/script-panel.tsx","view/top-left.tsx","view/top-middle.tsx","view/top-right.tsx","view/design-view.tsx","view/main-view.tsx","start.tsx"],"names":["IntervalRole","FORWARD","Vector3","RIGHT","UP","DOWN","Object","keys","filter","k","isNaN","parseInt","map","roleDefaultLength","intervalRole","PushA","PushB","PHI","PullA","PullB","PullAA","PullBB","Error","WORLD_FEATURES","WorldFeature","intervalRoleName","GlobalMode","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","GLOBAL_MODES","globalModeFromUrl","hash","location","substring","mode","find","m","reloadGlobalMode","Demo","reload","floatString","numeric","expo","toExponential","zero","indexOf","Math","max","toFixed","sub","a","b","subVectors","normalize","midpoint","points","mid","forEach","point","add","multiplyScalar","length","vectorFromArray","array","index","vector","offset","set","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","floatView","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","valuesToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","refreshFloatView","current","shift","set_float_value","feature","value","get_stage","requested","request_stage","console","error","satisfied","updateFloatView","clone","log","fabricClone","backup","render","midpoint_x","midpoint_y","midpoint_z","clear","percent","push","joint","joints","reduce","accum","jointLocation","distanceTo","alpha","omega","jointDistance","face","ends","end","faces","faceLocation","trianglePoints","x","z","y","crossVectors","Matrix4","makeBasis","setPosition","invert","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","position","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","isLocalhost","Boolean","window","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","Spin","FaceName","Left","Right","LeftRight","RightLeft","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","jointPulls","pulls","twoJointKey","pairKey","intervalRotation","unit","dot","Quaternion","setFromUnitVectors","intervalsAdjacent","filterRole","intervalJoins","acrossPush","otherJoint","interval","percentOrHundred","_","factorFromPercent","percentFromFactor","factor","FaceAction","TenscriptNode","forward","scale","subtrees","markNumbers","root","subtreeCode","markCode","undefined","faceName","omniFaceNames","some","isForward","hasScale","parts","join","entries","v","code","mark","flat","compileTenscript","tenscript","codeToNode","e","message","createBud","tensegrity","tree","reorient","spin","markDefStrings","twist","createTwist","markActions","markDefStringsToActions","markStrings","key","startsWith","subtree","action","Subtree","Base","Join","split","Distance","matches","parseFloat","submerged","Anchor","codeFragment","codeString","argument","content","faceMarks","skip","codeTree","addMark","found","markNumber","charAt","direction","isDigit","forwardArg","toNumber","scaleArg","faceNameChar","nonEmpty","grow","afterTree","toOmni","scaleChange","twistToMark","treeWithMarks","baseFace","oppositeSpin","newTwist","createTwistOn","thisFace","marks","execute","before","activeBuds","bud","decremented","omni","needsOmniTwist","f","instance","apply","rotation","middle","sum","faceBasis","twirl","makeRotationZ","PI","rotate","makeRotationY","multiply","reorientMatrix","treeMarks","twistMark","markTree","deleteMark","digits","maybeBracketed","stripBrackets","commaPos","commaPresent","finalBracket","s","depth","matchBracket","contentOption","bowtiePairs","pairs","onlyA","onlyB","common","aj","bj","intersection","pullA","withPulls","pairMap","addPair","pair","addPairFor","near","pullB","far","otherFar","otherNear","commonNear","commonFar","acrossFar","acrossNear","nextPair","intervals","joint3APush","faceJoint","a3A","outwards","fjA","sort","f1","f2","PostGrowthOp","PairSelection","Twist","baseKnown","pushes","base","createBase","createSingle","createDouble","leftSpin","pointPairs","createJoint","alphaJoint","omegaJoint","createInterval","makeFace","midJoint","j","createFace","reverse","botPairs","topPairs","bot","top","faceJoints","midJoints","n","midVector","copy","up","radials","norm","next","fromMid","between","idx1","idx2","addVectors","addScaledVector","pushesPerTwist","angle","cos","sin","Tensegrity","countdown","name","stage$","loops","connectors","distancers","jobs","buds","postGrowthOp","BehaviorSubject","newJoint","create_joint","remove_joint","pullScale","axis","creatAxis","alphaRestLength","omegaRestLength","alphaRays","createRay","omegaRays","radialPull","Connector","Distancer","patience","targetLength","stiffness","roleDefaultStiffness","currentLength","patienceFactor","abs","attack","create_interval","removed","multiply_rest_length","existing","remove_interval","f0","create_face","pull","removeInterval","removeJoint","remove_face","endA","endB","faceToTriangle","work","addPull","pairSelection","Bowtie","Snelson","snelsonPair","acrossA","acrossB","jointA","jointB","snelsonPairs","selectPairs","pullC","createLoop","getValue","ray","snapshot","job","collated","possibleMark","None","FaceStrategy","faceStrategies","strategy","checkConnectors","NoOp","Faces","triangleFaces","createPulls","BowtieFaces","averagePullStrain","strainFactor","restoreSnapshot","copy_stiffnesses","actionScale","locationFromFace","centerBrickFaceIntervals","omniTwist","averageScaleFactor","averageFaceLocation","opposing","closestFace","createRadialPull","faceA","indexA","faceB","indexB","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","walk","rotatedWalk","bestRotation","minLength","rotateForBestRing","i","faceToOriginMatrix","pushOverPull","get_float_value","PushOverPull","pretenstFactor","PretenstFactor","strain","scaling","intervalLength","idealLength","linearDensity","height","intervalLocation","reverseA","forwardB","loop","a0","a1","removeFace","restLength","CONNECTOR_LENGTH","Radial","FeatureStage","markAction","faceToOrigin","createRadialPulls","linearMapping","featureStage","low","high","nuanceToPercent","nuance","percentToNuance","percentToValue","default_world_feature","valueToPercent","featureMapping","Gravity","Postslack","Antigravity","All","ShapingDrag","Preslack","ShapingStiffnessFactor","Drag","ShapingPretenstFactor","StiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","VisualStrain","effects_UNSTABLE","recoilPersist","storage","localStorage","persistAtom","postGrowthAtom","atom","default","bootstrapIndexAtom","tenscriptAtom","currentFeature","ViewMode","rotatingAtom","globalModeAtom","viewModeAtom","Lines","visibleRolesAtom","SurfaceCharacter","Frozen","FEATURE_VALUES","mapping","percentAtom","BottomLeft","useRecoilState","globalMode","viewMode","setViewMode","ViewModeButton","item","children","Button","disabled","onClick","ButtonGroup","Selecting","csvNumber","replace","dateString","Date","toISOString","getFabricOutput","pushRadius","pullRadius","jointRadius","radius","anchor","isPush","alphaIndex","omegaIndex","type","saveCSVZip","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","blob","FileSaver","BottomRight","useState","updateStage","useEffect","subscribe","unsubscribe","rotating","setRotating","Design","className","JSON","stringify","saveJSONZip","Pretenst","removeSlackPulls","set_altitude","centralize","Sphere","Evolution","isIntervalClick","event","shiftKey","altKey","metaKey","ctrlKey","IntervalDetails","details","Html","style","width","left","Table","colSpan","RAINBOW_COLORS","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","MeshBasicMaterial","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","MATERIAL","MeshPhongMaterial","specular","FrontSide","HEXAGON_POINTS","SURFACE_SCALE","KINDA","TRIANGLE_POSITION","t","SurfaceComponent","geometry","useMemo","positionF32","normalF32","faceOffset","BufferAttribute","patchesGeometry","material","ObjectView","selected","setSelected","target","setTarget","useFrame","age","setTimeout","toMidpoint","lengthSq","Rendering","onUpdate","self","computeBoundingSphere","SelectingView","unitVector","cylinderRadius","intervalScale","CYLINDER","Euler","setFromQuaternion","matrixWorldNeedsUpdate","OrbitControls","onPointerMissed","autoRotate","Stars","intensity","SELECTED_MATERIAL","onPointerDown","stopPropagation","clickInterval","colorString","CylinderGeometry","ConstructionView","createInstance","mainInstance","tenscriptFor","featureValues","setTensegrity","setDetails","setPostGrowth","useSetRecoilState","emergency","ts","localValue","createTensegrity","getIntervalDetails","RecoilBridge","useRecoilBridgeAcrossReactRoots_UNSTABLE","right","backgroundColor","borderStyle","borderColor","cursor","borderWidth","ObjectCamera","id","props","ref","useRef","setDefaultCamera","useThree","camera","fov","updateMatrixWorld","Halo","surfaceCharacter","1","Convergence","Magnet","Bouncy","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","GeneName","ARROW_GEOMETRY","geom","Geometry","vertices","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","ARROW_LENGTH","arrowVertices","arrowGeometry","Genome","roll","genes","GeneReader","getGene","directionGeneNames","mutateTwitchConfig","genesCopy","gene","geneName","tosses","dice","slice","directionName","mutateGene","twitchConfig","TwitchConfig","geneString","die","symbol","serializeGene","total","floor","diceToNuance","nextDie","config","attackPeriod","decayPeriod","twitchNuance","muscle","when","diceToInteger","diceToFloat","decay","DICE","numeral","DICE_MAP","woops","random","currentRoll","rollTheDice","base6","pow","emptyGenome","fromGeneData","geneData","search","fresh","PatchCharacter","Patch","island","coords","patchCharacter","runner","flora","center","adjacent","getItem","parse","setItem","SIX","Direction","Island","seed","patches","_seed","patch","p","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","RUNNER_CODE","islandAtom","homePatchSelector","selector","destinationAtom","showDetailsAtom","DIRECTIONS","directionGene","ToA","ToB","ToC","calculateDirections","toA","toB","toC","locations","fromTo","fromJoint","toJoint","from","to","EvolutionPhase","EVO_PARAMETERS","Population","ancestor","useTwitches","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","SurvivorsAdvance","cyclePatternIndex","currentCycle","currentMaxCycles","embryo","storedGenes","createAutoRunner","letter","proximityHistory","persisted","pop","winnerMinCycles","winnerMoved","cycleCount","getCycleCount","rankEvolvers","reachedTarget","EvolutionDone","winner","showFrozen","ChallengersBorn","ChallengersReborn","genome","withMutations","challenger","autopilot","ChallengersOvertake","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","SurvivorsStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","Sticky","distanceFromTarget","proximityForCycle","proximity","String","fromCharCode","RunnerView","topFaceLocation","showDirection","attach","attachObject","count","itemSize","quaternion","directionQuaternion","PopulationView","population","IslandView","happening","evolutionPhase","countdownToEvo","stopEvo","destination","setDestination","now","happeningChanged","updateHappeningChanged","updateNow","updateTarget","updatePosition","adjustTarget","approachDistance","distance","positionToTarget","deltaDistance","Happening","Developing","Resting","Running","Evolving","withReducedCyclePattern","wasSeconds","time","isSeconds","enableKeys","enablePan","autoRotateSpeed","enableDamping","minPolarAngle","maxPolarAngle","positionArray","normalArray","removeRandomInterval","Rest","clickPatch","Sky","rayleigh","inclination","mieCoefficient","mieDirectionalG","turbidity","Twitcher","twitchCount","twitchCycles","reader","createReader","musclePeriod","readFeatureValue","readTwitchConfig","totalTwitches","TwitchCycle","loopMuscles","cycles","twitch","timeSlice","twitchCycle","activate","slices","chosen","chooseFrom","readMuscleTwitch","splice","addTwitch","twitches","twitchArray","Runner","shapingTime","twitcher","topFace","currentTwitchAge","twitchAge","directionHistory","twitchesPerCycle","auto","geneNames","dir","newTwitchAge","tick","twitchInterval","twitch_interval","alphaInterval","omegaInterval","checkDirection","sortedFaces","aa","bb","locA","locB","findTopFace","alphaPulls","omegaPulls","onlyMuscles","extractLoopMuscles","targetPatch","quaternionForDirection","directionToTarget","towards","toTarget","matchA","matchB","matchC","StatsView","setShowStats","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","EvoView","createBodyInstance","homePatch","useRecoilValue","showStats","newRunner","setRunner","setHappening","setSnapshots","evolutionCountdown","setEvolutionCountdown","setPopulation","setPhase","storedGenome","err","newStage","evolveWithPattern","toEvolve","pattern","Camera","nextEvolution","ControlButtons","evoCountdown","toRunning","toEvolving","toRebirth","toRest","EvolutionStatsView","vertical","createContent","PUSH_MATERIAL","PULL_MATERIAL","FREQUENCY_CHOICES","showPushAtom","showPullAtom","frozenAtom","useGravityAtom","SphereView","createSphere","setFrozen","showPush","setShowPush","showPull","setShowPull","useGravity","setUseGravity","frequencyChoice","setFrequencyChoice","sphere","setSphere","fabricOutput","freq","choice","SphereCamera","SphereScene","PolygonView","SPHERE_RADIUS","SphereBuilder","VERTEX","loc","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","averagePushLength","segmentLength","segmentSize","hubs","hub","spokes","spoke","pullsForSpoke","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","length0","segment","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","TWIST_ANGLE","otherSpokes","closest","distanceA","distanceToSquared","NO_FEATURE_VALUES","NO_MARK_DEFS","BOOTSTRAP","2","3","4","5","6","0","domain","FeatureSlider","sliderValue","setPercent","values","setValues","round","percentString","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","handles","getHandleProps","handle","Handle","tracks","getTrackProps","source","Track","min","aria-valuemin","aria-valuemax","aria-valuenow","BottomMiddle","open","setOpen","worldFeature","setWorldFeature","featureValue","setFeatureValue","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","applyFeature","AMBIENT_COLOR","FabricView","runTenscript","visibleRoles","visualStrainPercent","bootstrapIndex","setBootstrapIndex","nonBusyCount","updateNonBusyCount","bullseye","updateBullseye","eye","distanceChange","towardsDistance","nextIndex","PerspectiveCamera","makeDefault","IntervalMesh","visualStrain","intervalMaterial","sqrt","StageTransition","ScriptPanel","setTenscript","postGrowth","json","setJson","setError","toJson","flexDirection","Input","changeEvent","newTenscript","STAGE_TRANSITIONS","StageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","do","Symbol","SlackToPretensingFrozen","set_surface_character","SlackToPretensingSticky","SlackToPretensingBouncy","CapturePretenstToSlack","CaptureStrainForStiffness","strainToStiffness","TopLeft","showScriptPanel","setShowScriptPanel","bootstrapOpen","setBootstrapOpen","run","pgo","opChanged","opColor","bootstrapProgram","TopMiddle","TopRight","updateVisibleRoles","currentRole","updateCurrentRole","adjustSelection","changeIntervalScale","RoleLengthAdjuster","nextRoles","adjustValue","fine","adjustment","DesignView","worldFeatures","removeItem","MainView","urlMode","sphereInstance","element","document","getElementById","ReactDOM","startReact","frozenWorld","stickyWorld","bouncyWorld","getWorld","fabricInstance","set_float_percent","registerServiceWorker"],"mappings":"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","file":"static/js/5.7bd85f00.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\nexport const DOWN = new Vector3(0, -1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    PushA,\n    PushB,\n    PullA,\n    PullB,\n    PullAA,\n    PullBB,\n    Radial,\n    Connector,\n    Distancer,\n}\n\nexport const INTERVAL_ROLES = Object.keys(IntervalRole)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => IntervalRole[k])\n\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst ROOT6 = 2.44948974278\nconst SHORTENING = 0.5\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return ROOT6\n        case IntervalRole.PushB:\n            return PHI * ROOT3\n        case IntervalRole.PullA:\n            return 1\n        case IntervalRole.PullB:\n            return ROOT3\n        case IntervalRole.PullAA:\n            return roleDefaultLength(IntervalRole.PullA) * SHORTENING\n        case IntervalRole.PullBB:\n            return roleDefaultLength(IntervalRole.PullB) * SHORTENING\n        default:\n            throw new Error(`Length for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport function roleDefaultStiffness(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n        case IntervalRole.PullA:\n        case IntervalRole.PullB:\n            return 1\n        case IntervalRole.PullAA:\n        case IntervalRole.PullBB:\n            return 0.4\n        default:\n            throw new Error(`Stiffness for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const WORLD_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"[A]\"\n        case IntervalRole.PushB:\n            return \"[B]\"\n        case IntervalRole.PullA:\n            return \"(a)\"\n        case IntervalRole.PullB:\n            return \"(b)\"\n        case IntervalRole.PullAA:\n            return \"(aa)\"\n        case IntervalRole.PullBB:\n            return \"(bb)\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PushA:\n            case IntervalRole.PushB:\n            case IntervalRole.PullA:\n            case IntervalRole.PullB:\n            case IntervalRole.PullAA:\n            case IntervalRole.PullBB:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum GlobalMode {\n    Design = \"design\",\n    Demo = \"demo\",\n    Sphere = \"sphere\",\n    Evolution = \"evolution\",\n    Halo = \"halo\",\n    Convergence = \"convergence\",\n    Magnet = \"magnet\",\n}\n\nexport const GLOBAL_MODES: GlobalMode[] = Object.keys(GlobalMode).map(k => GlobalMode[k])\n\nexport function globalModeFromUrl(): GlobalMode {\n    const hash = location.hash.substring(1)\n    const mode = GLOBAL_MODES.find(m => m === hash)\n    if (mode) {\n        return mode\n    }\n    return reloadGlobalMode(GlobalMode.Demo)\n}\n\nexport function reloadGlobalMode(mode: GlobalMode): GlobalMode {\n    location.hash = mode\n    location.reload()\n    return mode\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(3)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(3)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"), expo.indexOf(\"e+3\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function percentString(percent: number): string {\n    if (percent <= 100) {\n        return `${percent.toFixed(0)}%`\n    } else {\n        return `${(percent / 100).toFixed(1)}x`\n    }\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, SurfaceCharacter, View, World, WorldFeature } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { midpoint, vectorFromArray } from \"./eig-util\"\nimport { IFace, IInterval, IJoint } from \"./tensegrity-types\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (surfaceCharacter: SurfaceCharacter, featureValues: Record<WorldFeature, number>, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n\n    private valuesToApply: ICurrentValue[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const current = this.valuesToApply.shift()\n        if (current) {\n            this.world.set_float_value(current.feature, current.value)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: WorldFeature, percent: number, value: number): void {\n        this.valuesToApply.push({feature, percent, value})\n    }\n\n    public jointLocation(joint: IJoint): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, joint.index)\n    }\n\n    public averageJointLocation(joints: IJoint[]): Vector3 {\n        return joints\n            .reduce((accum, joint) => accum.add(this.jointLocation(joint)), new Vector3())\n            .multiplyScalar(1 / joints.length)\n    }\n\n    public jointDistance(a: IJoint, b: IJoint): number {\n        return this.jointLocation(a).distanceTo(this.jointLocation(b))\n    }\n\n    public intervalLocation({alpha, omega}: IInterval): Vector3 {\n        return this.jointLocation(alpha).add(this.jointLocation(omega)).multiplyScalar(0.5)\n    }\n\n    public intervalLength({alpha, omega}: IInterval): number {\n        return this.jointDistance(alpha, omega)\n    }\n\n    public faceLocation(face: IFace): Vector3 {\n        return midpoint(face.ends.map(end => this.jointLocation(end)))\n    }\n\n    public averageFaceLocation(faces: IFace[]): Vector3 {\n        return faces\n            .reduce((accum, face) => accum.add(this.faceLocation(face)), new Vector3())\n            .multiplyScalar(1 / faces.length)\n    }\n\n    public faceToOriginMatrix(face: IFace): Matrix4 {\n        const trianglePoints = face.ends.map(end => this.jointLocation(end))\n        const mid = midpoint(trianglePoints)\n        const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n        const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n        const y = new Vector3().crossVectors(x, z).normalize()\n        z.crossVectors(x, y).normalize()\n        return new Matrix4().makeBasis(x, y, z).setPosition(mid).invert()\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n\ninterface ICurrentValue {\n    feature: WorldFeature\n    percent: number\n    value: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Quaternion, Vector3 } from \"three\"\n\nimport { DOWN, IntervalRole, intervalRoleName, sub, UP } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { Twist } from \"./twist\"\n\nexport enum Spin {\n    Left = \"Left\",\n    Right = \"Right\",\n    LeftRight = \"Left-Right\",\n    RightLeft = \"Right-Left\",\n}\n\nexport const SPINS = [Spin.Left, Spin.Right, Spin.LeftRight, Spin.RightLeft]\n\nexport function oppositeSpin(spin: Spin, toOmni: boolean): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return toOmni ? Spin.RightLeft : Spin.Right\n        case Spin.Right:\n            return toOmni ? Spin.LeftRight : Spin.Left\n        case Spin.LeftRight:\n            return Spin.RightLeft\n        case Spin.RightLeft:\n            return Spin.LeftRight\n    }\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    pulls?: IInterval[]\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointPulls({pulls}: IJoint): IInterval[] {\n    if (!pulls) {\n        throw new Error(\"no pulls\")\n    }\n    return pulls\n}\n\nexport interface IIntervalDetails {\n    stiffness: number\n    strain: number\n    length: number\n    idealLength: number\n    linearDensity: number\n    height: number\n}\n\nfunction indexKey(a: number, b: number): string {\n    return a < b ? `(${a},${b})` : `(${b},${a})`\n}\n\nexport function twoJointKey(alpha: IJoint, omega: IJoint): string {\n    return indexKey(alpha.index, omega.index)\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function pairKey({alpha, omega}: IPair): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalRotation(unit: Vector3): Quaternion {\n    const dot = UP.dot(unit)\n    return new Quaternion().setFromUnitVectors(dot > 0 ? UP : DOWN, unit)\n}\n\nexport function intervalsAdjacent(a: IInterval, b: IInterval): boolean {\n    return a.alpha.index === b.alpha.index\n        || a.omega.index === b.omega.index\n        || a.alpha.index === b.omega.index\n        || a.omega.index === b.alpha.index\n}\n\nexport function filterRole(role: IntervalRole): (interval: IInterval) => boolean {\n    return ({intervalRole}) => intervalRole === role\n}\n\nexport function intervalToPair({alpha, omega, scale, intervalRole}: IInterval): IPair {\n    return {alpha, omega, scale, intervalRole}\n}\n\nexport function intervalKey({alpha, omega}: IInterval): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IMarkNumber {\n    _: number\n}\n\nexport interface IFace {\n    twist: Twist,\n    index: number\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    markNumbers: IMarkNumber[]\n    joint?: IJoint\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(instance: FabricInstance, alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += instance.jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += instance.jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * -0.24)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FACE_NAME_CHARS, FACE_NAMES, FaceName, IMarkNumber, IPercent } from \"./tensegrity-types\"\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: number,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly markNumbers: Record<FaceName, IMarkNumber[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === -1 && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): TenscriptNode {\n        if (this.forward > 0) {\n            return new TenscriptNode(this.forward - 1, this.scale, this.subtrees, this.markNumbers)\n        }\n        return this\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IMarkNumber [] | undefined {\n        return this.markNumbers[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.markNumbers[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.markNumbers[faceName])\n    }\n\n    public get code(): string {\n        const isForward = this.forward > 0\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && isForward && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (isForward) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.markNumbers)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { PostGrowthOp, Tensegrity } from \"./tensegrity\"\nimport {\n    FACE_NAMES,\n    FaceName,\n    faceNameFromChar,\n    factorFromPercent,\n    IMarkNumber,\n    IPercent,\n    isFaceNameChar,\n    oppositeSpin,\n    percentFromFactor,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport interface ITenscript {\n    name: string\n    spin: Spin\n    postGrowthOp: PostGrowthOp\n    surfaceCharacter: SurfaceCharacter\n    code: string[]\n    markDefStrings: Record<number, string>\n    featureValues: Record<WorldFeature, number>\n    scaling: number\n}\n\nexport enum FaceAction {\n    Subtree,\n    Base,\n    Join,\n    Distance,\n    Anchor,\n    None,\n}\n\nexport interface IMarkAction {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport function compileTenscript(tenscript: ITenscript, error: (message: string) => void): TenscriptNode | undefined {\n    try {\n        const code = tenscript.code.join()\n        const root = codeToNode(code)\n        if (!root) {\n            error(\"Nothing to compile\")\n            return undefined\n        }\n        root.root = true\n        return root\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nexport type RunTenscript = (tenscript: ITenscript, error: (message: string) => void) => boolean\n\nexport interface IBud {\n    tree: TenscriptNode\n    twist: Twist\n    markActions: Record<number, IMarkAction>\n    reorient: boolean\n}\n\nexport function createBud(tensegrity: Tensegrity, location: Vector3, tenscript: ITenscript, tree: TenscriptNode): IBud {\n    const reorient = tree.forward === -1\n    const {spin, markDefStrings} = tenscript\n    const twist = tensegrity.createTwist(spin, percentOrHundred(), [location])\n    return {tree, twist, markActions: markDefStringsToActions(markDefStrings), reorient}\n}\n\nexport function markDefStringsToActions(markStrings?: Record<number, string>): Record<number, IMarkAction> {\n    const markActions: Record<number, IMarkAction> = {}\n    if (markStrings) {\n        Object.keys(markStrings).forEach(key => {\n            const c: string = markStrings[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = codeToNode(c.substring(\"subtree\".length))\n                markActions[key] = <IMarkAction>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base\")) {\n                markActions[key] = <IMarkAction>{action: FaceAction.Base}\n            } else if (c.startsWith(\"join\")) {\n                markActions[key] = <IMarkAction>{action: FaceAction.Join}\n            } else if (c.startsWith(\"distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[1], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.Distance, scale}\n            } else if (c.startsWith(\"anchor\")) {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                markActions[key] = <IMarkAction>{action: FaceAction.Anchor, point, scale}\n            }\n        })\n    }\n    return markActions\n}\n\nfunction codeToNode(codeFragment: string): TenscriptNode | undefined {\n    const initialCode = argument(codeFragment, true)\n    const codeString = initialCode.content\n    let forward = -1\n    let scale = percentOrHundred()\n    const subtrees = {} as Record<FaceName, TenscriptNode>\n    const faceMarks = {} as Record<FaceName, IMarkNumber[]>\n\n    function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n        const {content, skip} = argument(codeString.substring(index), false)\n        const codeTree = codeToNode(content)\n        return {codeTree, skip}\n    }\n\n    function addMark(faceName: FaceName, mark: number): void {\n        const found = faceMarks[faceName]\n        const markNumber: IMarkNumber = {_: mark}\n        if (found) {\n            found.push(markNumber)\n        } else {\n            faceMarks[faceName] = [markNumber]\n        }\n    }\n\n    for (let index = 0; index < codeString.length; index++) {\n        const char = codeString.charAt(index)\n        if (isFaceNameChar(char)) {\n            const direction = subtree(index + 1)\n            const codeTree = direction.codeTree\n            if (!codeTree) {\n                throw new Error(`No subtree: ${codeString.substring(index)}`)\n            }\n            subtrees[faceNameFromChar(char)] = codeTree\n            index += direction.skip\n        } else if (isDigit(char)) {\n            const forwardArg = argument(codeString, false)\n            forward = toNumber(forwardArg.content)\n            index += forwardArg.skip\n        } else {\n            switch (char) {\n                case \"S\":\n                    const scaleArg = argument(codeString.substring(index + 1), true)\n                    scale = {_: toNumber(scaleArg.content)}\n                    index += scaleArg.skip\n                    break\n                case \"M\":\n                    const faceNameChar = codeString.charAt(index + 1)\n                    const markNumber = argument(codeString.substring(index + 2), true)\n                    addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                    index += markNumber.skip + 1\n                    break\n                case \",\":\n                case \" \":\n                case \"\\n\":\n                    break\n                default:\n                    throw new Error(`Unexpected character: ${char}`)\n            }\n        }\n    }\n    return new TenscriptNode(forward, scale, subtrees, faceMarks).nonEmpty\n}\n\nfunction markTwist(twistToMark: Twist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        twistToMark.face(thisFace).markNumbers.push(...marks)\n    })\n}\n\nfunction grow({twist, markActions}: IBud,\n              afterTree: TenscriptNode, faceName: FaceName, toOmni: boolean, scaleChange: IPercent): IBud {\n    const baseFace = twist.face(faceName)\n    const spin = oppositeSpin(baseFace.spin, toOmni)\n    const scale = percentFromFactor(factorFromPercent(baseFace.scale) * factorFromPercent(scaleChange))\n    const newTwist = twist.tensegrity.createTwistOn(baseFace, spin, scale)\n    if (afterTree.forward === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, markActions, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, markActions, reorient, twist} = bud\n        if (tree.forward > 0) {\n            const afterTree = tree.decremented\n            const omni = tree.needsOmniTwist && afterTree.forward === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = twist.tensegrity.joints.map(joint => twist.tensegrity.instance.jointLocation(joint))\n                twist.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const afterTree = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const mark = markActions[twistMark._]\n                        if (mark && mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\n","import { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    acrossPush,\n    filterRole,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    IPercent,\n    jointPulls,\n    otherJoint,\n    pairKey,\n} from \"./tensegrity-types\"\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function snelsonPairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const snelsonPair = (alpha: IJoint, pullB: IInterval): IPair | undefined => {\n        const a = acrossPush(alpha)\n        const b = otherJoint(alpha, pullB)\n        if (!a.push || !b.push) {\n            return undefined\n        }\n        const acrossA = jointPulls(a).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(a, pullA))\n        const acrossB = jointPulls(b).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(b, pullA))\n        const omega = acrossA.find(jointA => !!acrossB.find(jointB => jointA.index === jointB.index))\n        if (!omega || !omega.push) {\n            return undefined\n        }\n        const intervalRole = IntervalRole.PullB\n        const scale = pullB.scale\n        return {alpha, omega, intervalRole, scale}\n    }\n    tensegrity.withPulls(pairMap => {\n        const pullBs = tensegrity.intervals.filter(filterRole(IntervalRole.PullB))\n        pullBs.forEach(pullB => {\n            const alpha = snelsonPair(pullB.alpha, pullB)\n            if (alpha) {\n                const existingAlpha = pairMap[pairKey(alpha)]\n                if (!existingAlpha) {\n                    pairs.push(alpha)\n                }\n            }\n            const omega = snelsonPair(pullB.omega, pullB)\n            if (omega) {\n                const existingOmega = pairMap[pairKey(omega)]\n                if (!existingOmega) {\n                    pairs.push(omega)\n                }\n            }\n        })\n    })\n    return pairs\n}\n\nexport function bowtiePairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const onlyA = filterRole(IntervalRole.PullA)\n    const onlyB = filterRole(IntervalRole.PullB)\n    const intersection = (a: IJoint[], b: IJoint[]) => a.find(aj => b.find(bj => aj.index === bj.index))\n    const common = (a: IJoint, b: IJoint) => intersection(\n        jointPulls(a).filter(onlyA).map(pullA => otherJoint(a, pullA)),\n        jointPulls(b).filter(onlyA).map(pullA => otherJoint(b, pullA)),\n    )\n    const nextPair = (near: IJoint): IPair | undefined => {\n        const pullB = jointPulls(near).filter(onlyB)[0]\n        const far = otherJoint(near, pullB)\n        const otherFar = acrossPush(near)\n        const otherB = jointPulls(otherFar).filter(onlyB)[0]\n        const otherNear = otherJoint(otherFar, otherB)\n        const commonNear = common(near, otherNear)\n        const commonFar = common(far, otherFar)\n        if (!commonNear || !commonFar) {\n            return undefined\n        }\n        if (commonNear.push && !commonFar.push) {\n            const acrossFar = acrossPush(far)\n            if (!jointPulls(acrossFar).some(intervalJoins(commonNear, acrossFar))) {\n                return undefined\n            }\n        } else if (commonFar.push && !commonNear.push) {\n            const acrossNear = acrossPush(near)\n            if (!jointPulls(acrossNear).some(intervalJoins(commonFar, acrossNear))) {\n                return undefined\n            }\n        }\n        const alpha = commonNear.push ? commonNear : near\n        const omega = commonFar.push ? commonFar : far\n        const scale = pullB.scale\n        const intervalRole = !commonNear.push || !commonFar.push ? IntervalRole.PullB : IntervalRole.PullBB\n        return {alpha, omega, scale, intervalRole}\n    }\n    const instance = tensegrity.instance\n    tensegrity.withPulls(pairMap => {\n        const addPair = (pair: IPair) => {\n            const key = pairKey(pair)\n            const exists = pairMap[key]\n            if (!exists) {\n                pairs.push(pair)\n                pairMap[key] = pair\n            }\n        }\n        const addPairFor = (joint: IJoint) => {\n            const pair = nextPair(joint)\n            if (pair) {\n                addPair(pair)\n            }\n        }\n        tensegrity.intervals\n            .filter(filterRole(IntervalRole.PullB))\n            .forEach(({alpha, omega}) => {\n                addPairFor(alpha)\n                addPairFor(omega)\n            })\n        tensegrity.joints\n            .filter(joint => joint.push && jointPulls(joint).filter(onlyA).length === 3)\n            .forEach(joint3APush => {\n                const noPushAcross = (interval: IInterval) => !otherJoint(joint3APush, interval).push\n                const found = jointPulls(joint3APush).filter(onlyA).find(noPushAcross)\n                if (!found) {\n                    throw new Error(\"no-push not found\")\n                }\n                const faceJoint = otherJoint(joint3APush, found)\n                const a3A = jointPulls(joint3APush).filter(onlyA).map(pullA => otherJoint(joint3APush, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                const fjA = jointPulls(faceJoint).filter(onlyA).map(pullA => otherJoint(faceJoint, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                a3A.map(a => {\n                    const b = fjA.sort((f1, f2) =>\n                        a.outwards.dot(f2.outwards) - a.outwards.dot(f1.outwards))[0]\n                    const intervalRole = IntervalRole.PullAA\n                    const scale = found.scale\n                    const pair: IPair = {alpha: a.end, omega: b.end, scale, intervalRole}\n                    addPair(pair)\n                })\n            })\n    })\n    return pairs\n}\n","import { Vector3 } from \"three\"\n\nimport { avg, IntervalRole, midpoint, normal, sub } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class Twist {\n\n    public readonly faces: IFace[] = []\n    public readonly pushes: IInterval[] = []\n    public readonly pulls: IInterval[] = []\n\n    constructor(\n        public readonly tensegrity: Tensegrity,\n        public readonly spin: Spin,\n        public readonly scale: IPercent,\n        baseKnown?: Vector3[],\n    ) {\n        const base = !baseKnown ? createBase(new Vector3(), 3) :\n            baseKnown.length === 3 ? baseKnown : createBase(baseKnown[0], 3)\n        switch (this.spin) {\n            case Spin.Left:\n                this.createSingle(base, true)\n                break\n            case Spin.Right:\n                this.createSingle(base, false)\n                break\n            case Spin.LeftRight:\n                this.createDouble(base, true)\n                break\n            case Spin.RightLeft:\n                this.createDouble(base, false)\n                break\n            default:\n                throw new Error(\"Spin?\")\n        }\n    }\n\n    public face(faceName: FaceName): IFace {\n        switch (this.faces.length) {\n            case 2:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.A:\n                        return this.faces[1]\n                }\n                break\n            case 8:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.B:\n                        return this.faces[2]\n                    case FaceName.C:\n                        return this.faces[1]\n                    case FaceName.D:\n                        return this.faces[3]\n                    case FaceName.b:\n                        return this.faces[4]\n                    case FaceName.c:\n                        return this.faces[5]\n                    case FaceName.d:\n                        return this.faces[6]\n                    case FaceName.A:\n                        return this.faces[7]\n                }\n                break\n        }\n        throw new Error(`Face ${FaceName[faceName]} not found in twist with ${this.faces.length} faces`)\n    }\n\n    private createSingle(base: Vector3[], leftSpin: boolean): void {\n        const pairs = pointPairs(base, this.scale, leftSpin)\n        const ends = pairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const alphaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({alpha}) => alpha)))\n        const omegaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({omega}) => omega)))\n        this.tensegrity.instance.refreshFloatView()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushA, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const makeFace = (joints: IJoint[], midJoint: IJoint) => {\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, this.spin, this.scale, midJoint))\n        }\n        makeFace(ends.map(({alpha}) => alpha), alphaJoint)\n        makeFace(ends.map(({omega}) => omega).reverse(), omegaJoint)\n        ends.forEach(({alpha}, index) => {\n            const omega = ends[(ends.length + index + (leftSpin ? -1 : 1)) % ends.length].omega\n            this.pulls.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.PullB, this.scale))\n        })\n    }\n\n    private createDouble(base: Vector3[], leftSpin: boolean): void {\n        const botPairs = pointPairs(base, this.scale, leftSpin)\n        const topPairs = pointPairs(botPairs.map(({omega}) => omega), this.scale, !leftSpin)\n        const bot = botPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const top = topPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const ends = [...bot, ...top]\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushB, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const faceJoints = leftSpin ?\n            [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[1].omega, top[1].alpha], // B\n                [bot[0].alpha, bot[2].omega, top[2].alpha], // C\n                [bot[1].alpha, bot[0].omega, top[0].alpha], // D\n                [top[1].omega, top[0].alpha, bot[1].omega].reverse(), // b\n                [top[0].omega, top[2].alpha, bot[0].omega].reverse(), // d\n                [top[2].omega, top[1].alpha, bot[2].omega].reverse(), // c\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ] : [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[0].omega, top[2].alpha].reverse(), // D\n                [bot[0].alpha, bot[1].omega, top[0].alpha].reverse(), // B\n                [bot[1].alpha, bot[2].omega, top[1].alpha].reverse(), // C\n                [top[1].omega, top[2].alpha, bot[2].omega], // b\n                [top[2].omega, top[0].alpha, bot[0].omega], // c\n                [top[0].omega, top[1].alpha, bot[1].omega], // d\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ]\n        const jointLocation = (joint: IJoint) => this.tensegrity.instance.jointLocation(joint)\n        const midJoints = faceJoints.map(joints => this.tensegrity.createJoint(midpoint(joints.map(jointLocation))))\n        this.tensegrity.instance.refreshFloatView()\n        faceJoints.forEach((joints, index) => {\n            const midJoint = midJoints[index]\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            const spin = leftSpin === ([0, 4, 5, 6].some(n => n === index)) ? Spin.Left : Spin.Right\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, spin, this.scale, midJoint))\n        })\n    }\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction pointPairs(base: Vector3[], scale: IPercent, leftSpin: boolean): IPointPair[] {\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const midVector = () => new Vector3().copy(mid)\n    const factor = factorFromPercent(scale)\n    const up = normal(base).multiplyScalar(-factor)\n    for (let index = 0; index < base.length; index++) {\n        const fromMid = (offset: number) => sub(base[(index + base.length + offset) % base.length], mid)\n        const between = (idx1: number, idx2: number) => avg(fromMid(idx1), fromMid(idx2))\n        const alpha = midVector().addScaledVector(between(0, 1), factor)\n        const omega = midVector().add(up).addScaledVector(leftSpin ? between(1, 2) : between(-1, 0), factor)\n        points.push({alpha, omega})\n    }\n    return points\n}\n\nfunction createBase(location: Vector3, pushesPerTwist: number): Vector3[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return base\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, isPushRole, roleDefaultLength, roleDefaultStiffness } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { createBud, execute, FaceAction, IBud, IMarkAction, ITenscript, markDefStringsToActions } from \"./tenscript\"\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { bowtiePairs, IPair, snelsonPairs } from \"./tensegrity-logic\"\nimport {\n    averageScaleFactor,\n    expectPush,\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval, IIntervalDetails,\n    IJoint,\n    intervalJoins,\n    intervalKey,\n    intervalToPair,\n    IPercent,\n    IRadialPull,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport enum PostGrowthOp {\n    NoOp,\n    Faces,\n    Snelson,\n    Bowtie,\n    BowtieFaces,\n}\n\nexport enum PairSelection {\n    Bowtie,\n    Snelson,\n}\n\nexport type Job = (tensegrity: Tensegrity) => void\n\nexport class Tensegrity {\n    public name: string\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public loops: IInterval[][] = []\n    public faces: IFace[] = []\n\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n\n    private jobs: Job[] = []\n    private buds: IBud[]\n    private markDefStrings: Record<number, string> = {}\n    private postGrowthOp: PostGrowthOp\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly instance: FabricInstance,\n        public readonly countdown: number,\n        public readonly tenscript: ITenscript,\n        tree: TenscriptNode,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.markDefStrings = tenscript.markDefStrings\n        this.name = tenscript.name\n        this.postGrowthOp = tenscript.postGrowthOp\n        this.buds = [createBud(this, location, tenscript, tree)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public removeJoint(joint: IJoint): void {\n        const index = joint.index\n        this.fabric.remove_joint(index)\n        this.joints = this.joints.filter(j => j.index !== index)\n        joint.index = -index // mark it\n        this.joints.forEach(j => j.index = j.index > index ? j.index - 1 : j.index)\n        this.instance.refreshFloatView()\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const instance = this.instance\n        const alphaJoint = this.createJoint(instance.faceLocation(alpha))\n        const omegaJoint = this.createJoint(instance.faceLocation(omega))\n        instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + instance.jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + instance.jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.intervalRole) {\n            case IntervalRole.Connector:\n                this.connectors.push(radialPull)\n                break\n            case IntervalRole.Distancer:\n                this.distancers.push(radialPull)\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, patience?: number): IInterval {\n        const push = isPushRole(intervalRole)\n        const targetLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const stiffness = roleDefaultStiffness(intervalRole)\n        const currentLength = targetLength === 0 ? 0 : this.instance.jointDistance(alpha, omega)\n        const patienceFactor = patience === undefined ? 1 : patience\n        const countdown = this.countdown * Math.abs(targetLength - currentLength) * patienceFactor\n        const attack = countdown <= 0 ? 0 : 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, push, currentLength, targetLength, stiffness, attack)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        const index = interval.index\n        this.intervals = this.intervals.filter(existing => existing.index !== index)\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n    }\n\n    public createFace(twist: Twist, ends: IJoint[], pulls: IInterval[], spin: Spin, scale: IPercent, joint?: IJoint): IFace {\n        const f0 = ends[0]\n        const f1 = ends[2]\n        const f2 = ends[1]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {twist, index, spin, scale, ends, pushes, pulls, markNumbers: [], joint}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        face.index = -1\n    }\n\n    public faceToTriangle(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        for (let index = 0; index < face.ends.length; index++) {\n            const endA = face.ends[index]\n            const endB = face.ends[(index + 1) % face.ends.length]\n            face.pulls.push(this.createInterval(endA, endB, IntervalRole.PullB, face.scale))\n        }\n    }\n\n    public triangleFaces(): void {\n        this.faces.forEach(face => this.faceToTriangle(face))\n    }\n\n    public withPulls(work: (pairMap: Record<string, IPair>) => void): void {\n        const addPull = (end: IJoint, pull: IInterval) => {\n            if (end.pulls) {\n                end.pulls.push(pull)\n            } else {\n                end.pulls = [pull]\n            }\n        }\n        this.intervals\n            .filter(({intervalRole}) => !isPushRole(intervalRole))\n            .forEach(pull => {\n                addPull(pull.alpha, pull)\n                addPull(pull.omega, pull)\n            })\n        const pairMap: Record<string, IPair> = {}\n        this.intervals.forEach(interval => pairMap[intervalKey(interval)] = intervalToPair(interval))\n        work(pairMap)\n        this.joints.forEach(joint => joint.pulls = undefined)\n    }\n\n    public createPulls(pairSelection: PairSelection): void {\n        const selectPairs = () => {\n            switch (pairSelection) {\n                case PairSelection.Bowtie:\n                    return bowtiePairs(this)\n                case PairSelection.Snelson:\n                    return snelsonPairs(this)\n                default:\n                    throw new Error()\n            }\n        }\n        // selectPairs().forEach(pair=> console.log(pairKey(pair)))\n        selectPairs().forEach(({alpha, omega, intervalRole, scale}) => {\n            this.createInterval(alpha, omega, intervalRole, scale, 5)\n        })\n    }\n\n    public removeSlackPulls(): void {\n        const slack = this.intervals\n            .filter(({intervalRole}) => intervalRole === IntervalRole.PullAA)\n            .filter(pullC => this.instance.floatView.strains[pullC.index] === 0)\n        slack.forEach(interval => this.removeInterval(interval))\n    }\n\n    public createTwist(spin: Spin, scale: IPercent, baseKnown?: Vector3[]): Twist {\n        return new Twist(this, spin, scale, baseKnown)\n    }\n\n    public createTwistOn(baseFace: IFace, spin: Spin, scale: IPercent): Twist {\n        const jointLocation = (joint: IJoint) => this.instance.jointLocation(joint)\n        const twist = this.createTwist(spin, scale, baseFace.ends.map(jointLocation).reverse())\n        this.createLoop(baseFace, twist.face(FaceName.a))\n        return twist\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public do(job: Job): void {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const job = this.jobs.shift()\n        if (job) {\n            job(this)\n            return true\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this, this.faces, this.markDefStrings).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.checkConnectors()\n                return false\n            }\n            this.stage = Stage.Shaping\n            switch (this.postGrowthOp) {\n                case PostGrowthOp.NoOp:\n                    break\n                case PostGrowthOp.Faces:\n                    this.triangleFaces()\n                    break\n                case PostGrowthOp.Snelson:\n                    this.createPulls(PairSelection.Snelson)\n                    this.triangleFaces()\n                    break\n                case PostGrowthOp.Bowtie:\n                    this.createPulls(PairSelection.Bowtie)\n                    break\n                case PostGrowthOp.BowtieFaces:\n                    this.createPulls(PairSelection.Bowtie)\n                    this.triangleFaces()\n                    break\n            }\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const instance = this.instance\n        const floatView = instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return instance.jointLocation(interval.alpha).y >= 0 || instance.jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public findInterval(a: IJoint, b: IJoint): IInterval | undefined {\n        return this.intervals.find(intervalJoins(a, b))\n    }\n\n    public createRadialPulls(faces: IFace[], action: FaceAction, actionScale?: IPercent): void {\n        const locationFromFace = (face: IFace) => this.instance.faceLocation(face)\n        const centerBrickFaceIntervals = () => {\n            const omniTwist = this.createTwist(Spin.LeftRight, percentFromFactor(averageScaleFactor(faces)), [this.instance.averageFaceLocation(faces)])\n            this.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.createRadialPull(closestFace, face)\n            })\n        }\n        switch (action) {\n            case FaceAction.Distance:\n                const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        this.createRadialPull(faceA, faceB, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.createRadialPull(faces[0], faces[1])\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n    }\n\n    public checkConnectors(): IRadialPull[] {\n        if (this.connectors.length === 0) {\n            return this.connectors\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(this.instance, alpha, omega)\n            this.createLoop(alpha, omega)\n        }\n        return this.connectors.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.Connector) {\n                const distance = this.instance.jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    this.removeInterval(axis)\n                    alphaRays.forEach(i => this.removeInterval(i))\n                    omegaRays.forEach(i => this.removeInterval(i))\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public faceToOrigin(face: IFace): void {\n        this.instance.apply(this.instance.faceToOriginMatrix(face))\n        this.instance.refreshFloatView()\n    }\n\n    public getIntervalDetails(interval: IInterval): IIntervalDetails {\n        const instance = this.instance\n        const {floatView} = instance\n        const pushOverPull = instance.world.get_float_value(WorldFeature.PushOverPull)\n        const pretenstFactor = instance.world.get_float_value(WorldFeature.PretenstFactor)\n        const stiffness = floatView.stiffnesses[interval.index] * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n        const strain = floatView.strains[interval.index]\n        const scaling = this.tenscript.scaling\n        const length = instance.intervalLength(interval) * scaling\n        const idealLength = floatView.idealLengths[interval.index] * (isPushRole(interval.intervalRole) ? 1 + pretenstFactor : 1.0) * scaling\n        const linearDensity = floatView.linearDensities[interval.index]\n        const height = instance.intervalLocation(interval).y * scaling\n        return {stiffness, strain, length, idealLength, linearDensity, height}\n    }\n\n    private createLoop(faceA: IFace, faceB: IFace): void {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const loop: IInterval[] = []\n        for (let index = 0; index < reverseA.length; index++) {\n            const a0 = reverseA[index]\n            const a1 = reverseA[(index + 1) % reverseA.length]\n            const b = forwardB[index]\n            loop.push(this.createInterval(a0, b, IntervalRole.PullA, scale))\n            loop.push(this.createInterval(b, a1, IntervalRole.PullA, scale))\n        }\n        this.removeFace(faceB)\n        this.removeFace(faceA)\n        this.loops.push(loop)\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.Distancer : IntervalRole.Connector\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const stiffness = 1\n        const scale = percentOrHundred()\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.Radial\n        const stiffness = 1\n        const scale = percentFromFactor(restLength)\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n}\n\nfunction faceStrategies(tensegrity: Tensegrity, faces: IFace[], markStrings?: Record<number, string>): FaceStrategy[] {\n    const marks = markDefStringsToActions(markStrings)\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        face.markNumbers.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(tensegrity, collated[key], mark)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private tensegrity: Tensegrity, private faces: IFace[], private markAction: IMarkAction) {\n    }\n\n    public execute(): void {\n        switch (this.markAction.action) {\n            case FaceAction.Base:\n                this.tensegrity.faceToOrigin(this.faces[0])\n                break\n            case FaceAction.Join:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n            case FaceAction.Distance:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n            case FaceAction.Anchor:\n                // this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\n\nexport enum FeatureStage {\n    Preslack,\n    Postslack,\n    All,\n}\n\nexport interface IFeatureMapping {\n    feature: WorldFeature\n    name: string\n    featureStage: FeatureStage\n    nuanceToPercent: (nuance: number) => number\n    percentToNuance: (percent: number) => number\n    percentToValue: (percent: number) => number\n    valueToPercent: (value: number) => number\n}\n\nfunction linearMapping(feature: WorldFeature, name: string, featureStage: FeatureStage, low: number, high: number): IFeatureMapping {\n    const nuanceToPercent = (nuance: number) => (low * (1 - nuance) + high * nuance)\n    const percentToNuance = (percent: number) => (percent - low) / (high - low)\n    const percentToValue = (percent: number) => default_world_feature(feature) * percent / 100\n    const valueToPercent = (value: number) => value / default_world_feature(feature) * 100\n    return {feature, name, featureStage, nuanceToPercent, percentToNuance, percentToValue, valueToPercent}\n}\n\nexport function featureMapping(feature: WorldFeature): IFeatureMapping {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            // percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Gravity\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.Antigravity:\n            // percents: [5, 25, 50, 100, 150, 200, 500],\n            return linearMapping(feature, \"-Antigravity\", FeatureStage.All, 5, 500)\n        case WorldFeature.ShapingDrag:\n            // percents: [0, 10, 50, 100, 200, 500],\n            return linearMapping(feature, \"Shaping Drag\", FeatureStage.Preslack, 0, 500)\n        case WorldFeature.ShapingStiffnessFactor:\n            // percents: [10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Shaping Stiffness\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.Drag:\n            // percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            return linearMapping(feature, \"Drag\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.ShapingPretenstFactor:\n            // percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Shaping Pretenst\", FeatureStage.Preslack, 0, 1000)\n        case WorldFeature.PretenstFactor:\n            // percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            return linearMapping(feature, \"Pretenst Factor\", FeatureStage.Postslack, 0, 500)\n        case WorldFeature.StiffnessFactor:\n            // percents: [1, 10, 50, 100, 150, 200, 300],\n            return linearMapping(feature, \"Stiffness\", FeatureStage.Postslack, 1, 300)\n        case WorldFeature.IterationsPerFrame:\n            // percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            return linearMapping(feature, \"Iterations/frame\", FeatureStage.All, 2, 500)\n        case WorldFeature.IntervalCountdown:\n            // percents: [10, 20, 30, 100, 150, 400, 1000],\n            return linearMapping(feature, \"-Interval Countdown\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.PretensingCountdown:\n            // percents: [50, 75, 90, 100, 125, 150, 200],\n            return linearMapping(feature, \"-Pretenst countdown\", FeatureStage.All, 50, 200)\n        case WorldFeature.VisualStrain:\n            // percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Visual strain\", FeatureStage.All, 0, 300)\n        case WorldFeature.PushOverPull:\n            // percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            return linearMapping(feature, \"Push/Pull\", FeatureStage.All, 10, 700)\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, RecoilState } from \"recoil\"\nimport { recoilPersist } from \"recoil-persist\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, globalModeFromUrl, IntervalRole, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { featureMapping, IFeatureMapping } from \"../view/feature-mapping\"\n\nexport const STORAGE_KEY = \"pretenst-2021-05-27\"\nconst DEFAULT_BOOTSTRAP = 0\n\nconst {persistAtom} = recoilPersist({\n    key: STORAGE_KEY,\n    storage: localStorage,\n})\n\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst effects_UNSTABLE = [persistAtom]\n\nexport const postGrowthAtom = atom({\n    key: \"postGrowth\",\n    default: PostGrowthOp.NoOp,\n    effects_UNSTABLE,\n})\n\nexport const bootstrapIndexAtom = atom({\n    key: \"bootstrapIndex\",\n    default: DEFAULT_BOOTSTRAP,\n    effects_UNSTABLE,\n})\n\nexport const tenscriptAtom = atom<ITenscript | undefined>({\n    key: \"tenscript\",\n    default: undefined,\n    effects_UNSTABLE,\n})\n\nexport const currentFeature = atom<WorldFeature>({\n    key: \"currentFeature\",\n    default: WorldFeature.VisualStrain,\n    effects_UNSTABLE,\n})\n\nfunction createWorldFeatureValues(): IWorldFeatureValue[] {\n    return WORLD_FEATURES.map(feature => {\n        const mapping = featureMapping(feature)\n        const percentAtom = atom({\n            key: mapping.name,\n            default: 100,\n            effects_UNSTABLE,\n        })\n        return <IWorldFeatureValue>{mapping, percentAtom}\n    })\n}\n\nexport const rotatingAtom = atom({\n    key: \"rotating\",\n    default: false,\n})\n\nexport const globalModeAtom = atom({\n    key: \"globalMode\",\n    default: globalModeFromUrl(),\n})\n\nexport enum ViewMode {\n    Lines = \"Lines\",\n    Selecting = \"Selecting\",\n    Frozen = \"Frozen\",\n}\n\nexport const viewModeAtom = atom<ViewMode>({\n    key: \"viewMode\",\n    default: ViewMode.Lines,\n})\n\nexport const surfaceCharacterAtom = atom({\n    key: \"surfaceCharacter\",\n    default: SurfaceCharacter.Frozen,\n})\n\nexport const visibleRolesAtom = atom<IntervalRole[]>({\n    key: \"visibleRoles\",\n    default: ADJUSTABLE_INTERVAL_ROLES,\n})\n\nexport interface IWorldFeatureValue {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n}\n\nexport const FEATURE_VALUES = createWorldFeatureValues()\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaHandPointUp, FaPlay, FaSnowflake } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { GlobalMode } from \"../fabric/eig-util\"\nimport { globalModeAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomLeft(): JSX.Element {\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    function ViewModeButton({item, children}: {\n        item: ViewMode,\n        children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    }): JSX.Element {\n        return globalMode === GlobalMode.Demo ? <div/> : (\n            <Button\n                disabled={item === viewMode}\n                color={item === viewMode ? \"success\" : \"secondary\"}\n                onClick={() => setViewMode(item)}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <ButtonGroup>\n            <ViewModeButton item={ViewMode.Lines}>\n                <FaPlay/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Selecting}>\n                <FaHandPointUp/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Frozen}>\n                <FaSnowflake/>\n            </ViewModeButton>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { intervalRoleName, isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nexport function getFabricOutput({name, instance, joints, intervals}: Tensegrity, pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n    instance.refreshFloatView()\n    const idealLengths = instance.floatView.idealLengths\n    const strains = instance.floatView.strains\n    const stiffnesses = instance.floatView.stiffnesses\n    const linearDensities = instance.floatView.linearDensities\n    return {\n        name,\n        joints: joints.map(joint => {\n            const vector = instance.jointLocation(joint)\n            return <IOutputJoint>{\n                index: joint.index,\n                radius: jointRadius,\n                x: vector.x, y: vector.z, z: vector.y,\n                anchor: false, // TODO: can this be determined?\n            }\n        }),\n        intervals: intervals.map(interval => {\n            const isPush = isPushRole(interval.intervalRole)\n            const radius = isPush ? pushRadius : pullRadius\n            const currentLength = instance.intervalLength(interval)\n            const alphaIndex = interval.alpha.index\n            const omegaIndex = interval.omega.index\n            if (alphaIndex >= joints.length || omegaIndex >= joints.length) {\n                throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${joints.length}`)\n            }\n            return <IOutputInterval>{\n                index: interval.index,\n                joints: [alphaIndex, omegaIndex],\n                type: isPush ? \"Push\" : \"Pull\",\n                strain: strains[interval.index],\n                stiffness: stiffnesses[interval.index],\n                linearDensity: linearDensities[interval.index],\n                role: intervalRoleName(interval.intervalRole),\n                scale: interval.scale._,\n                idealLength: idealLengths[interval.index],\n                isPush,\n                length: currentLength,\n                radius,\n            }\n        }),\n    }\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\", \"ideal length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, csvNumber(interval.length), csvNumber(interval.idealLength),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCompressArrowsAlt,\n    FaDna,\n    FaDownload,\n    FaFile,\n    FaFileCsv,\n    FaFutbol,\n    FaParachuteBox,\n    FaPlay,\n    FaSignOutAlt,\n    FaSyncAlt,\n    FaXbox,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    GlobalMode,\n    globalModeFromUrl,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n    reloadGlobalMode,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { getFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { globalModeAtom, rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomRight({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    return globalMode === GlobalMode.Demo ? (\n        <ButtonGroup>\n            <Button\n                color=\"success\"\n                onClick={() => reloadGlobalMode(GlobalMode.Design)}\n            >\n                <FaSignOutAlt/> Exit demo\n            </Button>\n        </ButtonGroup>\n    ) : (\n        <div className=\"text-right\">\n            <ButtonGroup>\n                {viewMode === ViewMode.Frozen ? (\n                    <>\n                        <Button\n                            onClick={() => saveCSVZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFileCsv/>\n                        </Button>\n                        <Button\n                            onClick={() => saveJSONZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFile/>\n                        </Button>\n                    </>\n                ) : stage > Stage.Slack ? (\n                    <>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.removeSlackPulls()}>\n                            <FaXbox/>\n                        </Button>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/>\n                        </Button>\n                    </>\n                ) : undefined}\n                <Button onClick={() => tensegrity.fabric.centralize()}><FaCompressArrowsAlt/></Button>\n                <Button\n                    color={rotating ? \"warning\" : \"secondary\"}\n                    onClick={() => setRotating(!rotating)}\n                >\n                    <FaSyncAlt/>\n                </Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => {\n                    if (globalModeFromUrl() !== GlobalMode.Design) {\n                        reloadGlobalMode(GlobalMode.Design)\n                    } else {\n                        reloadGlobalMode(GlobalMode.Demo)\n                    }\n                }}><FaPlay/></Button>\n                <Button onClick={() => {reloadGlobalMode(GlobalMode.Sphere)}}><FaFutbol/></Button>\n                <Button onClick={() => {reloadGlobalMode(GlobalMode.Evolution)}}><FaDna/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nexport function isIntervalClick(event: React.MouseEvent<Element, MouseEvent>): boolean {\n    return event.shiftKey || event.altKey || event.metaKey || event.ctrlKey\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { FaArrowsAltH, FaMousePointer } from \"react-icons/all\"\nimport { Table } from \"reactstrap\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IInterval, IIntervalDetails } from \"../fabric/tensegrity-types\"\n\nconst DIGITS = 3\n\nexport function IntervalDetails({instance, interval, details}: {\n    instance: FabricInstance,\n    interval: IInterval,\n    details: IIntervalDetails,\n}): JSX.Element {\n    const {alpha, omega, intervalRole} = interval\n    return (\n        <Html\n            className=\"interval-details\"\n            style={{width: \"10em\"}}\n            position={instance.intervalLocation(interval)}\n        >\n            <div style={{position: \"absolute\", top: \"0\", left: \"0\", color: \"red\"}}>\n                <FaMousePointer/>\n            </div>\n            <Table>\n                <thead>\n                <tr>\n                    <th colSpan={2}>\n                        ({alpha.index + 1} <FaArrowsAltH/> {omega.index + 1}): {intervalRoleName(intervalRole)}\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                {/*<tr>*/}\n                {/*    <td className=\"text-right\">Stiffness:</td>*/}\n                {/*    <td>{stats.stiffness.toFixed(DIGITS)}</td>*/}\n                {/*</tr>*/}\n                {/*<tr>*/}\n                {/*    <td className=\"text-right\">Strain:</td>*/}\n                {/*    <td>{stats.strain.toFixed(DIGITS)}</td>*/}\n                {/*</tr>*/}\n                <tr>\n                    <td className=\"text-right\">Length:</td>\n                    <td className=\"text-center\">{details.length.toFixed(DIGITS)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Ideal Length:</td>\n                    <td className=\"text-center\">{details.idealLength.toFixed(DIGITS)}</td>\n                </tr>\n                {/*<tr>*/}\n                {/*    <td className=\"text-right\">Linear Density:</td>*/}\n                {/*    <td>{stats.linearDensity.toFixed(DIGITS)}</td>*/}\n                {/*</tr>*/}\n                <tr>\n                    <td className=\"text-right\">Height:</td>\n                    <td className=\"text-center\">{details.height.toFixed(DIGITS)}</td>\n                </tr>\n                </tbody>\n            </Table>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, DoubleSide, LineBasicMaterial, Material, MeshBasicMaterial, MeshLambertMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"#191f86\"\n        case IntervalRole.PushB:\n            return \"#5739a0\"\n        case IntervalRole.PullA:\n            return \"#ce1d1d\"\n        case IntervalRole.PullB:\n            return \"#d44e4e\"\n        case IntervalRole.PullAA:\n            return \"#13f3f3\"\n        case IntervalRole.PullBB:\n            return \"#59ee37\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { BufferAttribute, BufferGeometry, Color, FrontSide, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst MATERIAL = new MeshPhongMaterial({\n    color: new Color(\"#070707\"),\n    specular: new Color(\"#110404\"),\n    side: FrontSide,\n})\nconst KINDA = 0.866\nconst SURFACE_SCALE = 20\nconst HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(),\n]\nconst TRIANGLES = [\n    6, 0, 1,\n    6, 1, 2,\n    6, 2, 3,\n    6, 3, 4,\n    6, 4, 5,\n    6, 5, 0,\n]\nconst TRIANGLE_POSITION = TRIANGLES.map(t => HEXAGON_POINTS[t])\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return <mesh name=\"Patches\" geometry={geometry} material={MATERIAL}/>\n}\n\nfunction patchesGeometry(): BufferGeometry {\n    const geometry = new BufferGeometry()\n    const positionF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    const normalF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    TRIANGLE_POSITION.forEach((position, index) => {\n        const faceOffset = index * 3\n        positionF32[faceOffset] = position.x\n        positionF32[faceOffset + 1] = position.y - 0.01\n        positionF32[faceOffset + 2] = position.z\n        const normal = new Vector3(0,300,0).add(position).normalize()\n        normalF32[faceOffset] = normal.x\n        normalF32[faceOffset + 1] = normal.y\n        normalF32[faceOffset + 2] = normal.z\n    })\n    geometry.setAttribute(\"position\", new BufferAttribute(positionF32, 3))\n    geometry.setAttribute(\"normal\", new BufferAttribute(normalF32, 3))\n    return geometry\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Material, MeshLambertMaterial, Vector3 } from \"three\"\n\nimport { isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails, intervalRotation, intervalsAdjacent } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { isIntervalClick } from \"../view/events\"\nimport { IntervalDetails } from \"../view/interval-details\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nexport function ObjectView({tensegrity, selected, setSelected, details}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (selection: IInterval | undefined) => void,\n    details: IIntervalDetails | undefined,\n}): JSX.Element {\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [target, setTarget] = useState(new Vector3())\n    const [rotating] = useRecoilState(rotatingAtom)\n    useFrame(() => {\n        if (viewMode === ViewMode.Lines) {\n            tensegrity.iterate()\n            if (tensegrity.fabric.age === 80000) {\n                setTimeout(() => {\n                    tensegrity.instance.stage = Stage.Slack\n                    tensegrity.instance.stage = Stage.Pretensing\n                })\n            }\n            if (tensegrity.fabric.age === 160000) {\n                setViewMode(ViewMode.Frozen)\n            }\n        }\n        const midpoint = selected ? tensegrity.instance.intervalLocation(selected) : tensegrity.instance.midpoint\n        const toMidpoint = new Vector3().subVectors(midpoint, target).multiplyScalar(0.1)\n        if (viewMode === ViewMode.Lines || toMidpoint.lengthSq() > 0.001) {\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    const instance = tensegrity.instance\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Lines:\n                return (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )\n            case ViewMode.Selecting:\n                return (\n                    <SelectingView\n                        tensegrity={tensegrity}\n                        selected={selected}\n                        setSelected={setSelected}\n                        details={details}\n                    />\n                )\n            case ViewMode.Frozen:\n                return (\n                    <group>\n                        {tensegrity.intervals.map((interval: IInterval) => {\n                            const rotation = intervalRotation(instance.unitVector(interval.index))\n                            const length = instance.jointDistance(interval.alpha, interval.omega)\n                            const radius = cylinderRadius(interval)\n                            const intervalScale = new Vector3(radius, length, radius)\n                            return (\n                                <mesh\n                                    key={`T${interval.index}`}\n                                    geometry={CYLINDER}\n                                    position={instance.intervalLocation(interval)}\n                                    rotation={new Euler().setFromQuaternion(rotation)}\n                                    scale={intervalScale}\n                                    material={roleMaterial(interval.intervalRole)}\n                                    matrixWorldNeedsUpdate={true}\n                                    onClick={(event) => {\n                                        if (isIntervalClick(event)) {\n                                            setSelected(interval)\n                                            setViewMode(ViewMode.Selecting)\n                                        }\n                                    }}\n                                />\n                            )\n                        })}}\n                    </group>\n                )\n        }\n    }\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined} autoRotate={rotating} target={target}/>\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectingView({tensegrity, selected, setSelected, details}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (interval?: IInterval) => void,\n    details: IIntervalDetails | undefined,\n}): JSX.Element {\n    const instance = tensegrity.instance\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n    }\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = isPushRole(interval.intervalRole)\n                if (!isPush) {\n                    if (selected) {\n                        if (isPushRole(selected.intervalRole)) {\n                            if (!intervalsAdjacent(selected, interval)) {\n                                return undefined\n                            }\n                        } else {\n                            if (selected.index !== interval.index) {\n                                return undefined\n                            }\n                        }\n                        if (!intervalsAdjacent(selected, interval)) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = cylinderRadius(interval)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={selected && selected.index === interval.index ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            if (isIntervalClick(event)) {\n                                clickInterval(interval)\n                            }\n                        }}\n                    />\n                )\n            })}}\n            {!selected || !details ? undefined : (\n                <IntervalDetails instance={tensegrity.instance}\n                                 interval={selected} details={details}/>\n            )}\n        </group>\n    )\n}\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst SELECTED_MATERIAL = material(\"#ffdd00\")\n\nfunction cylinderRadius(interval: IInterval): number {\n    return 8 * (isPushRole(interval.intervalRole) ? 0.003 : 0.0015)\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { PerspectiveCamera, Vector3 } from \"three\"\n\nimport { GlobalMode } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails, Spin } from \"../fabric/tensegrity-types\"\nimport { postGrowthAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { BottomLeft } from \"../view/bottom-left\"\nimport { BottomRight } from \"../view/bottom-right\"\n\nimport { ObjectView } from \"./object-view\"\n\n\nexport function ConstructionView({globalMode, createInstance}: {\n    globalMode: GlobalMode,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    const mainInstance = useMemo(() => createInstance(SurfaceCharacter.Frozen, tenscriptFor(globalMode).featureValues), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [selected, setSelected] = useState<IInterval | undefined>()\n    const [details, setDetails] = useState<IIntervalDetails | undefined>(undefined)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const emergency = (message: string) => console.error(\"build view\", message)\n\n    const createTensegrity: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Lines)\n            setPostGrowth(ts.postGrowthOp)\n            const localValue = ts.featureValues[WorldFeature.IntervalCountdown]\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTensegrity(new Tensegrity(new Vector3(), mainInstance, countdown, ts, tree))\n        } catch (e) {\n            throw new Error(\"Problem running\")\n        }\n        return true\n    }\n    useEffect(() => {\n        createTensegrity(tenscriptFor(globalMode), emergency)\n    }, [])\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(tensegrity.getIntervalDetails(selected))\n            } else {\n                setDetails(undefined)\n            }\n        }\n    }, [selected])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            {!tensegrity ? (\n                <div className=\"h-100\">\n                    <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                        <h1><FaPlay/></h1>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"h-100\">\n                    <Canvas\n                        style={{\n                            backgroundColor: \"black\",\n                            borderStyle: \"solid\",\n                            borderColor: viewMode !== ViewMode.Lines ? \"#f0ad4e\" : \"black\",\n                            cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                            borderWidth: \"2px\",\n                        }}\n                    >\n                        <ObjectCamera/>\n                        <RecoilBridge>\n                            <ObjectView\n                                tensegrity={tensegrity}\n                                selected={selected}\n                                setSelected={setSelected}\n                                details={details}\n                            />\n                        </RecoilBridge>\n                    </Canvas>\n                    <div id=\"bottom-left\">\n                        <BottomLeft/>\n                    </div>\n                    <div id=\"bottom-right\">\n                        <BottomRight tensegrity={tensegrity}/>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nfunction ObjectCamera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 6, 18)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\nexport function tenscriptFor(globalMode: GlobalMode): ITenscript {\n    switch (globalMode) {\n        case GlobalMode.Halo:\n            return {\n                name: \"Halo by Crane\",\n                spin: Spin.Left,\n                postGrowthOp: PostGrowthOp.BowtieFaces,\n                surfaceCharacter: SurfaceCharacter.Frozen,\n                code: [\"(5,S89,b(12,S92,MA1),d(11,S92,MA1))\"],\n                markDefStrings: {\n                    1: \"join\",\n                },\n                featureValues: {\n                    [WorldFeature.IterationsPerFrame]: 1000,\n                    [WorldFeature.Drag]: 300,\n                    [WorldFeature.PushOverPull]: 800,\n                    [WorldFeature.PretenstFactor]: 30,\n                    [WorldFeature.Gravity]: 50,\n                },\n                scaling: 20.5,\n            }\n        case GlobalMode.Convergence:\n            return {\n                name: \"Convergence\",\n                spin: Spin.LeftRight,\n                postGrowthOp: PostGrowthOp.Bowtie,\n                surfaceCharacter: SurfaceCharacter.Frozen,\n                code: [\"(a2,b(10,S90,MA1),c(10,S90,MA1),d(10,S90,MA1))\"],\n                markDefStrings: {\n                    1: \"join\",\n                },\n                featureValues: {\n                    [WorldFeature.Drag]: 300,\n                    [WorldFeature.PushOverPull]: 800,\n                    [WorldFeature.PretenstFactor]: 30,\n                    [WorldFeature.StiffnessFactor]: 150,\n                    [WorldFeature.IterationsPerFrame]: 1000,\n                },\n                scaling: 17,\n            }\n        case GlobalMode.Magnet:\n            return {\n                name: \"Magnet\",\n                spin: Spin.Left,\n                postGrowthOp: PostGrowthOp.Faces,\n                surfaceCharacter: SurfaceCharacter.Bouncy,\n                code: [\"(A(10,S85,MA1), a(10,S85,MA1))\"],\n                markDefStrings: {\n                    1: \"distance-10\",\n                },\n                featureValues: {\n                    [WorldFeature.Gravity]: 0,\n                    [WorldFeature.StiffnessFactor]: 35,\n                    [WorldFeature.Drag]: 1000,\n                    [WorldFeature.IterationsPerFrame]: 1000,\n                },\n                scaling: 11,\n            }\n        default:\n            throw new Error(\"tenscript?\")\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 35\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#091009\")\nexport const FLORA_PATCH_COLOR = new Color(\"#100902\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 5\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./runner-logic\"\nimport { ITwitchConfig } from \"./twitcher\"\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        return 16\n    }\n\n    public withMutations(directionGeneNames: GeneName[], mutateTwitchConfig: boolean): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionGeneNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (mutateTwitchConfig) {\n            const twitchConfig = getGene(GeneName.TwitchConfig, genesCopy)\n            mutateGene(() => this.roll(), twitchConfig)\n            twitchConfig.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}: IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public chooseFrom(total: number): number {\n        return Math.floor(total * diceToNuance(this.nextDie(), this.nextDie()))\n    }\n\n    public readMuscleTwitch(loop: IMuscle[], config: ITwitchConfig): ITwitch {\n        const {attackPeriod, decayPeriod, twitchNuance} = config\n        const muscle = loop[this.nextDie().index]\n        return {\n            muscle, twitchNuance,\n            when: diceToInteger(36, this.nextDie(), this.nextDie()),\n            attack: (2 + diceToFloat(6, this.nextDie())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.nextDie())) * decayPeriod,\n        }\n    }\n\n    public readFeatureValue(low: number, high: number): number {\n        const nuance = diceToNuance(this.nextDie(), this.nextDie(), this.nextDie())\n        return low * nuance + high * (1 - nuance)\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    public nextDie(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n}\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\"},\n    {index: 1, numeral: \"2\", symbol: \"⚁\"},\n    {index: 2, numeral: \"3\", symbol: \"⚂\"},\n    {index: 3, numeral: \"4\", symbol: \"⚃\"},\n    {index: 4, numeral: \"5\", symbol: \"⚄\"},\n    {index: 5, numeral: \"6\", symbol: \"⚅\"},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(...dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(...dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(...dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n\nexport enum GeneName {\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n    TwitchConfig = \"TwitchConfig\",\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Flora } from \"./flora\"\nimport { emptyGenome, IGeneData } from \"./genome\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport class Patch {\n    public runner?: Runner\n    public flora?: Flora\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval, IJoint } from \"../fabric/tensegrity-types\"\n\nimport { GeneName, Genome } from \"./genome\"\nimport { Patch } from \"./patch\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.ToA:\n            return GeneName.ToA\n        case Direction.ToB:\n            return GeneName.ToB\n        case Direction.ToC:\n            return GeneName.ToC\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IMuscle {\n    interval: IInterval\n    alphaInterval?: IInterval\n    omegaInterval?: IInterval\n}\n\nexport interface IRunnerState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    midpoint: Vector3,\n    genome: Genome\n    loopMuscles: IMuscle[][]\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function findTopFace(tensegrity: Tensegrity): IFace {\n    const sortedFaces = tensegrity.faces.sort((a, b) => {\n        const aa = a.joint\n        const bb = b.joint\n        if (!aa || !bb) {\n            throw new Error(\"faces without joints\")\n        }\n        const locA = tensegrity.instance.jointLocation(aa)\n        const locB = tensegrity.instance.jointLocation(bb)\n        return locA.y - locB.y\n    })\n    const top = sortedFaces.pop()\n    sortedFaces.forEach(face => tensegrity.faceToTriangle(face))\n    if (!top) {\n        throw new Error(\"no top face\")\n    }\n    return top\n}\n\nexport function calculateDirections(instance: FabricInstance, toA: Vector3, toB: Vector3, toC: Vector3, face?: IFace): void {\n    if (!face) {\n        return\n    }\n    const joint = face.joint\n    if (!joint) {\n        return undefined\n    }\n    const locations = instance.floatView.jointLocations\n    const fromTo = (fromJoint: IJoint, toJoint: IJoint, vector: Vector3) => {\n        const from = fromJoint.index * 3\n        const to = toJoint.index * 3\n        vector.set(locations[to] - locations[from], 0, locations[to + 2] - locations[from + 2])\n        vector.normalize()\n    }\n    fromTo(joint, face.ends[0], toA)\n    fromTo(joint, face.ends[1], toB)\n    fromTo(joint, face.ends[2], toC)\n}\n\nexport function extractLoopMuscles(tensegrity: Tensegrity): IMuscle[][]{\n    const loopMuscles: IMuscle[][] = []\n    tensegrity.withPulls(() => {\n        tensegrity.loops.forEach(loop => loopMuscles.push(loop.map(interval => {\n            const alphaPulls = interval.alpha.pulls\n            const omegaPulls = interval.omega.pulls\n            if (!alphaPulls || !omegaPulls) {\n                throw new Error(\"missing pulls\")\n            }\n            const onlyMuscles = ({intervalRole}: IInterval) =>\n                intervalRole === IntervalRole.PullAA ||\n                intervalRole === IntervalRole.PullBB\n            const alphaInterval = alphaPulls.find(onlyMuscles)\n            const omegaInterval = omegaPulls.find(onlyMuscles)\n            if (!alphaInterval && !omegaInterval) {\n                throw new Error(\"cannot find any intervals\")\n            }\n            return <IMuscle>{interval, alphaInterval, omegaInterval}\n        })))\n    })\n    return loopMuscles\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, selector } from \"recoil\"\n\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { Spin } from \"../fabric/tensegrity-types\"\n\nimport { Island } from \"./island\"\nimport { Patch } from \"./patch\"\n\nconst LEG = 5\nconst SCALE = 90\n\nexport const RUNNER_CODE: ITenscript = {\n    name: \"Runner\",\n    spin: Spin.LeftRight,\n    code: [\n        `(A1,B(${LEG},S${SCALE}),C(${LEG},S${SCALE}),D(${LEG},S${SCALE}))`,\n    ],\n    postGrowthOp: PostGrowthOp.Bowtie,\n    markDefStrings: {},\n    surfaceCharacter: SurfaceCharacter.Bouncy,\n    featureValues: {\n        [WorldFeature.IterationsPerFrame]: 300,\n        [WorldFeature.Drag]: 200,\n        [WorldFeature.StiffnessFactor]: 150,\n        [WorldFeature.Gravity]: 500,\n    },\n    scaling: 1,\n}\n\nexport const FLORA_CODE: ITenscript = {\n    name: \"Flora\",\n    postGrowthOp: PostGrowthOp.Bowtie,\n    code: [\"(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0))\"],\n    spin: Spin.Left,\n    markDefStrings: {\n        0: \"subtree(b(3, S85),c(3, S85),d(3, S85))\",\n    },\n    surfaceCharacter: SurfaceCharacter.Frozen,\n    featureValues: {},\n    scaling: 1,\n}\n\nexport const islandAtom = atom<Island>({\n    key: \"island\",\n    default: new Island(\"galapagos\", 383),\n})\n\nexport const homePatchSelector = selector<Patch>({\n    key: \"MySelector\",\n    get: ({get}) => get(islandAtom).patches[0], // todo: for now\n})\n\nexport const destinationAtom = atom<number>({\n    key: \"destination\",\n    default: 0,\n})\n\nexport const showDetailsAtom = atom<boolean>({\n    key: \"showDetails\",\n    default: false,\n})\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { RUNNER_CODE } from \"./evo-state\"\nimport { fromGeneData, Genome } from \"./genome\"\nimport { Runner } from \"./runner\"\nimport { directionGene } from \"./runner-logic\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [4, 5, 6, 7, 8, 9],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    SurvivorsAdvance = \"Survivors advance\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersOvertake = \"Challengers try to overtake\",\n    SurvivorsStored = \"Survivors stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    runner: Runner\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Population {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public midpoint: Vector3\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.SurvivorsAdvance\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n\n    constructor(\n        private ancestor: Runner,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (ancestor.embryo) {\n            throw new Error(\"Cannot create evolution from runner which is not pretenst\")\n        }\n        this.midpoint = ancestor.state.midpoint\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Runner[] = []\n        const storedGenes = ancestor.state.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoRunner(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((runner, index) => ({\n            runner,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Population | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Population(this.ancestor, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.SurvivorsAdvance:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({runner}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.runner.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Runner[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].runner.state.genome.geneData)\n                    challengers.push(this.createAutoRunner(genome.withMutations([directionGene(this.ancestor.direction)], false)))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{runner: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.runner.adoptFabric(this.ancestor.state.instance.fabricClone)\n                    const runner = challenger.runner.recycled(instance, parent.runner.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    runner.autopilot = true\n                    return {runner, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersOvertake:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({runner, name}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.SurvivorsStored\n                }\n                break\n            case EvolutionPhase.SurvivorsStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.ancestor.state.patch.storedGenes = winners.map(({runner}) => runner.state.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.SurvivorsAdvance\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        this.midpoint.set(0, 0, 0)\n        this.winners.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.challengers.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.midpoint.multiplyScalar(1.0 / (this.winners.length + this.challengers.length))\n        return this.phase\n    }\n\n    public get target(): Vector3 {\n        return this.ancestor.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoRunner(genome: Genome): Runner {\n        const instance = this.createInstance(SurfaceCharacter.Sticky, RUNNER_CODE.featureValues, this.ancestor.state.instance.fabricClone)\n        const runner = this.ancestor.recycled(instance, genome.geneData)\n        runner.autopilot = true\n        return runner\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            const event = evolver.runner.distanceFromTarget\n            evolver.proximityHistory.push(event)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({runner, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = runner.state.genome.tosses\n    const reachedTarget = runner.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { ARROW_GEOMETRY } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport function RunnerView({runner}: { runner: Runner }): JSX.Element {\n    const {topFaceLocation, target, state, showDirection} = runner\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!showDirection || !topFaceLocation ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topFaceLocation.x, topFaceLocation.y, topFaceLocation.z,\n                                    target.x, topFaceLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#FFFFFF\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={runner.directionQuaternion}\n                        position={topFaceLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#0afdeb\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Population } from \"./population\"\nimport { RunnerView } from \"./runner-view\"\n\nexport function PopulationView({population}: { population: Population }): JSX.Element {\n    const height = 6\n    const {midpoint, target} = population\n    return (\n        <group>\n            {population.winners.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index}`} runner={runner}/>\n            ))}\n            {!population.challengersVisible ? undefined : population.challengers.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index + population.winners.length}`} runner={runner}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#ffffff\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Sky } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { destinationAtom } from \"./evo-state\"\nimport { Happening } from \"./evo-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { FAUNA_PATCH_COLOR, FLORA_PATCH_COLOR, SIX, SUN_POSITION } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, Population } from \"./population\"\nimport { PopulationView } from \"./population-view\"\nimport { Runner } from \"./runner\"\nimport { Direction } from \"./runner-logic\"\nimport { RunnerView } from \"./runner-view\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.05\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 5\n\nexport function IslandView({island, happening, runner, population, evolutionPhase, countdownToEvo, stopEvo}: {\n    island: Island,\n    happening: Happening,\n    runner?: Runner,\n    population?: Population,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvo: (countdown: number) => void,\n    stopEvo: (nextEvolution?: Population) => void,\n}): JSX.Element {\n    const [rotating, setRotating] = useState(false)\n    const [destination, setDestination] = useRecoilState(destinationAtom)\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const [target, updateTarget] = useState(new Vector3(0, 1, 0))\n    const [position, updatePosition] = useState(new Vector3(0, 1, 10))\n\n    function adjustTarget(midpoint: Vector3): void {\n        updateTarget(new Vector3().subVectors(midpoint, target).multiplyScalar(TOWARDS_TARGET).add(target))\n    }\n\n    useFrame(() => {\n        const approachDistance = (distance: number) => {\n            const positionToTarget = new Vector3().subVectors(position, target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n            updatePosition(position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION)))\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Resting:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(8)\n                }\n                break\n            case Happening.Running:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Evolving:\n                if (population) {\n                    switch (population.iterate()) {\n                        case EvolutionPhase.EvolutionDone:\n                            console.log(\"Evolution DONE\")\n                            stopEvo()\n                            break\n                        case EvolutionPhase.EvolutionHarder:\n                            console.log(\"Evolution advance...\")\n                            stopEvo(population.withReducedCyclePattern)\n                            break\n                    }\n                    adjustTarget(population.midpoint)\n                    approachDistance(15)\n                    evolutionPhase(population.phase)\n                }\n                break\n        }\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvo(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n        setRotating(happening === Happening.Evolving)\n    }, [happening])\n\n    function clickPatch(patch: Patch): void {\n        if (patch.flora) {\n            patch.flora.removeRandomInterval()\n            console.log(\"remove\", patch.name)\n        } else if (runner && runner.direction === Direction.Rest) {\n            setDestination((destination + 1) % SIX)\n        }\n    }\n\n    return (\n        <group>\n            <OrbitControls target={target} autoRotate={rotating}\n                           enableKeys={false} enablePan={false} position={position}\n                           autoRotateSpeed={0.6}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined}\n            />\n            <scene>\n                {(population && happening === Happening.Evolving) ? (\n                    <PopulationView population={population}/>\n                ) : (runner ? (\n                    <RunnerView runner={runner}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const array = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={() => clickPatch(patch)}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                side={DoubleSide}\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={array}\n                                    count={array.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                <Sky\n                    distance={1000000}\n                    rayleigh={3}\n                    inclination={0.505}\n                    mieCoefficient={0.001}\n                    mieDirectionalG={0.93}\n                    turbidity={7.5}\n                />\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\"/>\n            </scene>\n        </group>\n    )\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useRecoilValue } from \"recoil\"\nimport { PerspectiveCamera, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode, stageName } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { destinationAtom, homePatchSelector, islandAtom, RUNNER_CODE, showDetailsAtom } from \"./evo-state\"\nimport { emptyGenome, fromGeneData } from \"./genome\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\nimport { EVO_PARAMETERS, EvolutionPhase, IEvolutionSnapshot, Population } from \"./population\"\nimport { Runner } from \"./runner\"\nimport { Direction, IRunnerState } from \"./runner-logic\"\nimport { EvolutionInfo, StatsView } from \"./stats-view\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function EvoView({createBodyInstance}: { createBodyInstance: CreateInstance }): JSX.Element {\n    const [island] = useRecoilState(islandAtom)\n    const homePatch = useRecoilValue(homePatchSelector)\n    const destination = useRecoilValue(destinationAtom)\n    const [showStats, setShowStats] = useRecoilState(showDetailsAtom)\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [runner, setRunner] = useState(() => newRunner(homePatch))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [population, setPopulation] = useState<Population | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.SurvivorsAdvance)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    function newRunner(patch: Patch): Runner {\n        const targetPatch = patch.adjacent[0]\n        if (!targetPatch) {\n            throw new Error(\"No adjacent\")\n        }\n        const storedGenome = patch.storedGenes[0]\n        const genome = storedGenome ? fromGeneData(storedGenome) : emptyGenome()\n        const instance = createBodyInstance(SurfaceCharacter.Sticky, RUNNER_CODE.featureValues)\n        const state: IRunnerState = {\n            patch,\n            targetPatch,\n            instance,\n            midpoint: new Vector3().copy(patch.center),\n            genome,\n            loopMuscles: [],\n            direction: Direction.ToA,\n            directionHistory: [],\n            autopilot: false,\n            timeSlice: 10,\n            twitchesPerCycle: 10,\n        }\n        const tree = compileTenscript(RUNNER_CODE, (err) => {\n            throw new Error(\"unable to compile runner: \" + err)\n        })\n        if (!tree) {\n            throw new Error(\"no tree\")\n        }\n        const embryo = new Tensegrity(patch.center, instance, 1000, RUNNER_CODE, tree)\n        return new Runner(state, embryo)\n    }\n\n    // function newFlora(patch: Patch, instance: FabricInstance): Flora {\n    //     const tree = compileTenscript(FLORA_CODE, (err) => {\n    //         throw new Error(\"unable to compile sat tree: \" + err)\n    //     })\n    //     if (!tree) {\n    //         throw new Error(\"no tree\")\n    //     }\n    //     const tensegrity = new Tensegrity(patch.center, percentOrHundred(), instance, 1000, FLORA_CODE, tree)\n    //     return new Flora(patch.name, tensegrity)\n    // }\n\n    useEffect(() => {\n        if (runner) {\n            const adjacent = runner.state.patch.adjacent[destination]\n            if (adjacent) {\n                runner.state.targetPatch = adjacent\n            }\n        }\n    }, [destination])\n\n    useEffect(() => {\n        if (!runner || !runner.embryo) {\n            updateStage(undefined)\n            return\n        }\n        const sub = runner.embryo.stage$.subscribe((newStage: Stage) => {\n            if (newStage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(newStage)\n        })\n        return () => sub.unsubscribe()\n    }, [runner])\n\n    useEffect(() => {\n        if (!population) {\n            return\n        }\n        const sub = population.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [population])\n\n    const evolveWithPattern = (toEvolve: Runner, pattern: number[]) => {\n        if (population) {\n            setPopulation(population.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setPopulation(new Population(toEvolve, createBodyInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (runner && countdown === 0) {\n            evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Population) => {\n        // todo: free up current evolution?\n        setPopulation(nextEvolution)\n        if (!nextEvolution) {\n            setRunner(newRunner(homePatch))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <RecoilBridge>\n                    <IslandView\n                        island={island}\n                        happening={happening}\n                        runner={runner}\n                        population={population}\n                        evolutionPhase={evolutionPhase => {\n                            if (evolutionPhase !== phase) {\n                                setPhase(evolutionPhase)\n                            }\n                        }}\n                        countdownToEvo={countdownToEvolution}\n                        stopEvo={stopEvolution}\n                    />\n                </RecoilBridge>\n            </Canvas>\n            {!runner ? <h1>no runner</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    runner={runner}\n                    happening={happening}\n                    evoCountdown={evolutionCountdown}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        runner.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setRunner(newRunner(homePatch))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        runner.direction = Direction.Rest\n                    }}\n                />\n            )}\n            {!population ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {showStats ? undefined : (\n                            <Button color=\"info\" onClick={() => setShowStats(true)}>\n                                Phase: {phase}<br/>\n                                {snapshots.length === 0 ? undefined :\n                                    <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                                }\n                            </Button>\n                        )}\n                    </div>\n                    {!showStats ? undefined : (\n                        <EvolutionStatsView happening={happening} snapshots={snapshots}/>\n                    )}\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => reloadGlobalMode(GlobalMode.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({\n                            runner,\n                            happening,\n                            evoCountdown,\n                            toRunning,\n                            toRest,\n                            toEvolving,\n                            toRebirth,\n                        }: {\n    runner?: Runner,\n    happening: Happening,\n    evoCountdown: number,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evoCountdown >= 0 ? evoCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, snapshots}: {\n    happening: Happening,\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return (\n                <div id=\"evolution-stats\">\n                    {snapshots.length > 0 ? (\n                        <StatsView snapshots={snapshots}/>\n                    ) : (\n                        <h2 className=\"p-2\">First round, please wait</h2>\n                    )}\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(-4, 5, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IMuscle, IRunnerState } from \"./runner-logic\"\n\nexport type TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nexport interface ITwitchConfig {\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IRunnerState) {\n        const genome = this.state.genome\n        const readTwitchConfig = (): ITwitchConfig => {\n            const reader = genome.createReader(GeneName.TwitchConfig)\n            const musclePeriod = reader.readFeatureValue(800, 1200)\n            return <ITwitchConfig>{\n                twitchNuance: reader.readFeatureValue(0.1, 0.3),\n                musclePeriod,\n                attackPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n                decayPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n            }\n        }\n        this.config = readTwitchConfig()\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, this.state.loopMuscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: TwitchFunction): boolean {\n        const state = this.state\n        state.timeSlice++\n        if (state.timeSlice >= 36) {\n            state.timeSlice = 0\n            this.cycleCount++\n            return true\n        }\n        const twitchCycle = this.twitchCycles[state.direction]\n        if (twitchCycle) {\n            this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(reader: GeneReader, config: ITwitchConfig, loopMuscles: IMuscle[][], totalTwitches: number) {\n        const loops = [...loopMuscles]\n        while (totalTwitches-- > 0) {\n            const chosen = reader.chooseFrom(loops.length)\n            const twitch = reader.readMuscleTwitch(loops[chosen], config)\n            loops.splice(chosen, 1)\n            this.addTwitch(twitch.when, twitch)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.interval.index}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: TwitchFunction): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, IGeneData } from \"./genome\"\nimport {\n    calculateDirections,\n    Direction,\n    directionGene,\n    DIRECTIONS,\n    extractLoopMuscles,\n    findTopFace,\n    IMuscle,\n    IRunnerState,\n} from \"./runner-logic\"\nimport { Twitcher, TwitchFunction } from \"./twitcher\"\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\nconst MAX_HISTORY_LENGTH = 20\n\nexport class Runner {\n\n    public toA = new Vector3(1, 0, 0)\n    public toB = new Vector3(0, 0, 1)\n    public toC = new Vector3(0, 0, -1)\n\n    private shapingTime = 150\n    private twitcher?: Twitcher\n    private topFace?: IFace\n    private currentTwitchAge = 0\n\n    constructor(public readonly state: IRunnerState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n        this.currentTwitchAge = this.twitchAge\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Runner {\n        const genome = fromGeneData(geneData ? geneData : this.state.patch.storedGenes[0])\n        const midpoint = new Vector3().copy(this.state.midpoint)\n        const state: IRunnerState = {...this.state, instance, midpoint, genome, directionHistory: []}\n        const runner = new Runner(state)\n        runner.topFace = this.topFace\n        calculateDirections(runner.state.instance, runner.toA, runner.toB, runner.toC, this.topFace)\n        return runner\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        return this.state.genome.withMutations(geneNames, Math.random() > 0.9).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public get distanceFromTarget(): number {\n        return this.state.midpoint.distanceTo(this.target)\n    }\n\n    public iterate(): boolean {\n        const instance = this.state.instance\n        const view = instance.view\n        this.state.midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const embryo = this.embryo\n        if (embryo) {\n            const busy = embryo.iterate()\n            if (busy) {\n                return true\n            }\n            const stage = embryo.stage$.getValue()\n            switch (stage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        embryo.stage = Stage.Slack\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Slack:\n                    this.topFace = findTopFace(embryo)\n                    embryo.stage = Stage.Pretensing\n                    return false\n                case Stage.Pretensing:\n                    embryo.stage = Stage.Pretenst\n                    return false\n                case Stage.Pretenst:\n                    this.state.loopMuscles = extractLoopMuscles(embryo)\n                    this.state.instance.refreshFloatView()\n                    calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n                    this.checkDirection()\n                    this.twitcher = new Twitcher(this.state)\n                    this.embryo = undefined\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            this.state.instance.iterate()\n            if (this.twitcher) {\n                const newTwitchAge = this.twitchAge\n                if (newTwitchAge <= this.currentTwitchAge) {\n                    return true\n                }\n                this.currentTwitchAge = newTwitchAge\n                const twitch: TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => {\n                    const twitchInterval = (interval?: IInterval) => {\n                        if (interval) {\n                            this.state.instance.fabric.twitch_interval(interval.index, attack, decay, twitchNuance)\n                            // console.log(`twitch ${interval.index}: ${attack}, ${decay}, ${twitchNuance}`)\n                        }\n                    }\n                    twitchInterval(muscle.alphaInterval)\n                    twitchInterval(muscle.omegaInterval)\n                }\n                if (this.state.autopilot && this.twitcher.tick(twitch)) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.state.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get topFaceLocation(): Vector3 | undefined {\n        const face = this.topFace\n        if (!face) {\n            return undefined\n        }\n        const joint = face.joint\n        if (!joint) {\n            return undefined\n        }\n        return this.state.instance.jointLocation(joint)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            if (state.direction === Direction.Rest) {\n                console.error(\"direction is REST??\")\n                return\n            }\n            state.directionHistory.push(state.direction)\n            if (state.directionHistory.length > MAX_HISTORY_LENGTH) {\n                state.directionHistory.shift()\n            }\n        }\n    }\n\n    private get twitchAge(): number {\n        return this.state.instance.fabric.age / 600\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.ToA:\n                    return this.toA\n                case Direction.ToB:\n                    return this.toB\n                case Direction.ToC:\n                    return this.toC\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n        const matchA = toTarget.dot(this.toA)\n        const matchB = toTarget.dot(this.toB)\n        const matchC = toTarget.dot(this.toC)\n        if (matchA > matchB && matchA > matchC) {\n            return Direction.ToA\n        }\n        if (matchB > matchA && matchB > matchC) {\n            return Direction.ToB\n        }\n        if (matchC > matchA && matchC > matchB) {\n            return Direction.ToC\n        }\n        return Direction.Rest\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        toTarget.subVectors(this.target, this.state.midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\nimport { useSetRecoilState } from \"recoil\"\n\nimport { showDetailsAtom } from \"./evo-state\"\nimport { IEvolutionSnapshot, letter } from \"./population\"\n\nexport function StatsView({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"text-monospace d-inline-flex\" onClick={() => setShowStats(false)}>\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\" onClick={() => setShowStats(false)}>\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt, FaSnowflake } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { atom, useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Material, MeshLambertMaterial, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { intervalRotation } from \"../fabric/tensegrity-types\"\nimport { saveCSVZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport const SPHERE_RADIUS = 15\n\nconst PUSH_RADIUS = 0.004 * SPHERE_RADIUS\nconst PULL_RADIUS = 0.002 * SPHERE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst PUSH_MATERIAL = material(\"#011884\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nconst FREQUENCY_CHOICES = [1, 2, 3, 4, 5]\nconst INITIAL_FREQUENCY_CHOICE = 1\n\nexport const showPushAtom = atom({\n    key: \"show push\",\n    default: true,\n})\nexport const showPullAtom = atom({\n    key: \"show pull\",\n    default: true,\n})\nexport const frozenAtom = atom({\n    key: \"frozen\",\n    default: false,\n})\nexport const useGravityAtom = atom({\n    key: \"useGravity\",\n    default: true,\n})\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number, useGravity: boolean) => TensegritySphere }): JSX.Element {\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n    const [showPush, setShowPush] = useRecoilState(showPushAtom)\n    const [showPull, setShowPull] = useRecoilState(showPullAtom)\n    const [useGravity, setUseGravity] = useRecoilState(useGravityAtom)\n    const [frequencyChoice, setFrequencyChoice] = useState(INITIAL_FREQUENCY_CHOICE)\n    const [sphere, setSphere] = useState(() => createSphere(FREQUENCY_CHOICES[frequencyChoice],\n        useGravity))\n\n    function createChoice(choice: number): void {\n        setFrozen(false)\n        setFrequencyChoice(choice)\n        setSphere(createSphere(FREQUENCY_CHOICES[choice], useGravity))\n    }\n\n    useEffect(() => {\n        setFrozen(false)\n        setSphere(createSphere(FREQUENCY_CHOICES[frequencyChoice], useGravity))\n    }, [useGravity])\n\n    useEffect(() => {\n        if (!showPush && !showPull) {\n            setShowPush(true)\n            setShowPull(true)\n        }\n    }, [showPush, showPull])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveCSVZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => reloadGlobalMode(GlobalMode.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"top-left\">\n                <ButtonGroup>\n                    {FREQUENCY_CHOICES.map((freq, index) => (\n                        <Button key={`Freq${freq}`} onClick={() => createChoice(index)}\n                                color={index === frequencyChoice ? \"success\" : \"secondary\"}>\n                            {freq}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"top-right\">\n                <ButtonGroup>\n                    <Button color={useGravity ? \"success\" : \"secondary\"}\n                            onClick={() => setUseGravity(true)}>Gravity</Button>\n                    <Button color={!useGravity ? \"success\" : \"secondary\"}\n                            onClick={() => setUseGravity(false)}>Space</Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-left\">\n                <ButtonGroup>\n                    <Button color={frozen ? \"success\" : \"secondary\"}\n                            onClick={() => setFrozen(!frozen)}><FaSnowflake/></Button>\n                    <Button color={showPush ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPush(!showPush)}>C</Button>\n                    <Button color={showPull ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPull(!showPull)}>T</Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <SphereCamera/>\n                <RecoilBridge>\n                    {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n                </RecoilBridge>\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const [target, setTarget] = useState(new Vector3())\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n\n    useFrame(() => {\n        if (!frozen) {\n            sphere.iterate(() => setTimeout(() => setFrozen(true), 0))\n            const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, target).multiplyScalar(0.1)\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined} target={target}/>\n            <scene>\n                {frozen ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const [showPush] = useRecoilState(showPushAtom)\n    const [showPull] = useRecoilState(showPullAtom)\n    const instance = sphere.instance\n    return (\n        <group>\n            {!showPull ? undefined : sphere.pulls.map((pull: IPull) => {\n                const rotation = intervalRotation(instance.unitVector(pull.index))\n                const length = instance.jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {!showPush ? undefined : sphere.pushes.map((push: IPush) => {\n                const rotation = intervalRotation(instance.unitVector(push.index))\n                const length = instance.jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PUSH_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction SphereCamera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, SPHERE_RADIUS, SPHERE_RADIUS * 2.6)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const instance = this.sphere.instance\n        instance.refreshFloatView()\n        const pushes = this.sphere.pushes\n        const averagePushLength = pushes\n            .reduce((sum, push) => sum + instance.jointDistance(push.alpha, push.omega), 0) / pushes.length\n        const segmentLength = this.sphere.segmentSize * averagePushLength\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, PULL_RADIUS, PUSH_RADIUS, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nconst TWIST_ANGLE = 0.52\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    idealLength: number,\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    segment: boolean\n    idealLength: number,\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly segmentSize: number,\n        public readonly useGravity: boolean,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const instance = this.instance\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, TWIST_ANGLE)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const length0 = alphaHub.location.distanceTo(omegaHub.location)\n        const idealLength = length0\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(alpha.index, omega.index, true, length0, idealLength, 1, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub, idealLength,\n            location: () => new Vector3()\n                .addVectors(instance.jointLocation(alpha), instance.jointLocation(omega))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const instance = this.instance\n        const pull = (alpha: IJoint, omega: IJoint, idealLength: number, segment: boolean) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const length0 = instance.jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(alpha.index, omega.index, false, length0, idealLength, 1, 0.0001)\n            const interval: IPull = {\n                index, alpha, omega, segment, idealLength,\n                location: () => new Vector3()\n                    .addVectors(instance.jointLocation(alpha), instance.jointLocation(omega))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength, true)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2, false)\n        return pulls\n    }\n\n    public iterate(setFrozen: () => void): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return true\n        }\n        switch (this.instance.stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.instance.stage = Stage.Shaping\n                break\n            case Stage.Shaping:\n                if (this.instance.fabric.age === 25000) {\n                    if (this.useGravity) {\n                        this.instance.stage = Stage.Slack\n                    } else {\n                        setFrozen()\n                    }\n                }\n                break\n            case Stage.Slack:\n                this.instance.stage = Stage.Pretensing\n                break\n            case Stage.Pretensing:\n                this.instance.stage = Stage.Pretenst\n                break\n            case Stage.Pretenst:\n                if (this.instance.fabric.age > 100000) {\n                    setFrozen()\n                }\n        }\n        return false\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = this.instance.jointLocation(joint)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const length = this.instance.jointDistance(push.alpha, push.omega)\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.PushA),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const length = this.instance.jointDistance(interval.alpha, interval.omega)\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.PushA),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (TWIST_ANGLE < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","import { SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { compileTenscript, ITenscript } from \"./tenscript\"\nimport { PostGrowthOp } from \"./tensegrity\"\nimport { Spin } from \"./tensegrity-types\"\n\nconst NO_FEATURE_VALUES: Record<WorldFeature, number> = {}\nconst NO_MARK_DEFS: Record<number, string> = {}\n\nconst BOOTSTRAP_TENSCRIPTS: ITenscript[] = [\n    {\n        name: \"Phi\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"()\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"One\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Snelson,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(1)\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Axoneme\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        code: [\"(30,S95)\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Knee\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(3,b3)\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Jack\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b2,c2,d2)\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Star\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Tripod with Knees\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\"],\n        featureValues: NO_FEATURE_VALUES, markDefStrings: NO_MARK_DEFS,\n        scaling: 1,\n    },\n    {\n        name: \"Pretenst Lander\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(B(15,S90,MA1),C(15,S90,MA1),D(15,S90,MA1))\"],\n        featureValues: NO_FEATURE_VALUES,\n        markDefStrings: {\n            1: \"distance-60\",\n        },\n        scaling: 1,\n    },\n    {\n        name: \"Zigzag\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(c(3,MA1),d(7,b(7,c(7,d(7,c(7,d(3,MA1)))))))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Magnet\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A(9,S80,MA1), a(9,S80,MA1))\"],\n        markDefStrings: {\n            1: \"distance-5\",\n        },\n        featureValues: {\n            [WorldFeature.Gravity]: 0,\n            [WorldFeature.StiffnessFactor]: 25,\n            [WorldFeature.Drag]: 1000,\n        },\n        scaling: 1,\n    },\n    {\n        name: \"Convergence\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b(10,S90,MA1),c(10,S90,MA1),d(10,S90,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Halo by Crane\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(5,S92,b(12,S92,MA1),d(11,S92,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Thick Tripod\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A3,B(8,MA1),C(8,MA1),D(8,MA1))\"],\n        markDefStrings: {\n            1: \"distance-35\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Diamond\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"   a(5,\",\n            \"      b(5,b(5,b(2,MA3)),c(5,c(2,MA4))),\",\n            \"      c(5,b(5,b(2,MA1)),c(5,c(2,MA5))),\",\n            \"      d(5,b(5,b(2,MA6)),c(5,c(2,MA2)))\",\n            \"   )\",\n            \"   b(5,b(5,b(2,MA5)),c(5,c(2,MA3))),\",\n            \"   c(5,b(5,b(2,MA2)),c(5,c(2,MA1))),\",\n            \"   d(5,b(5,b(2,MA4)),c(5,c(2,MA6)))\",\n            \")\",\n        ],\n        markDefStrings: {\n            1: \"join\",\n            2: \"join\",\n            3: \"join\",\n            4: \"join\",\n            5: \"join\",\n            6: \"join\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Composed Tree\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(6,b(4,MA1),c(4,MA1),d(4,MA1))\"],\n        markDefStrings: {\n            1: \"subtree(b5,c5,d5)\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Equus Lunae\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"  A(16,S95,Md0),\",\n            \"  b(16,S95,Md0),\",\n            \"  a(16,S95,Md0),\",\n            \"  B(16,S95,Md0)\",\n            \")\",\n        ],\n        markDefStrings: {\n            0: \"distance-60\",\n        },\n        featureValues: NO_FEATURE_VALUES,\n        scaling: 1,\n    },\n    {\n        name: \"Runner\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A1,B(5,S90),C(5,S90),D(5,S90))\"],\n        featureValues: NO_FEATURE_VALUES,\n        markDefStrings: {},\n        scaling: 1,\n    },\n    {\n        name: \"Man\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"A(7,b1,S88, MA1),b(7,b1,S88, MA1),\",\n            \"a(3,C(6,S95,MA3),S85,MA2),B(3,C(6,S95,MA3),S85,MA2)\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"distance-30\",\n            \"2\": \"distance-5\",\n            \"3\": \"distance-30\",\n        },\n        scaling: 1,\n    },\n    {\n        name: \"Infinity\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"A(11,S88,MA1),b(11,S88,MA1),\",\n            \"a(11,S88,MA2),B(11,S88,MA2)\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n        },\n        scaling: 1,\n    },\n    {\n        name: \"Propellor Tree\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"  a(5,S110),\",\n            \"  B(11,S90,MA3),\",\n            \"  b(11,S90,MA1),\",\n            \"  C(11,S90,MA2),\",\n            \"  c(11,S90,MA3),\",\n            \"  D(11,S90,MA1),\",\n            \"  d(11,S90,MA2),\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n            \"3\": \"join\",\n            \"4\": \"join\",\n        },\n        scaling: 1,\n    },\n]\n\n//    \"(\",\n//     \"  a(5,S110),\",\n//     \"  B(11,S90,MA3),\",\n//     \"  b(11,S90,MA1),\",\n//     \"  C(11,S90,MA2),\",\n//     \"  c(11,S90,MA3),\",\n//     \"  D(11,S90,MA1),\",\n//     \"  d(11,S90,MA2),\",\n//     \")\"\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(tenscript => {\n    compileTenscript(tenscript, (message: string) => {\n        throw new Error(`Bootstrap compile error in \"${tenscript}\"! ${message}`)\n    })\n    return tenscript\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaBalanceScale } from \"react-icons/all\"\nimport { RecoilState, useRecoilState } from \"recoil\"\n\nimport { floatString, percentString } from \"../fabric/eig-util\"\n\nimport { IFeatureMapping } from \"./feature-mapping\"\n\nconst MAX_SLIDER = 100000\nconst domain = [0, MAX_SLIDER]\n\nexport function FeatureSlider({mapping, percentAtom, apply}: {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n    apply: (wf: WorldFeature, percent: number, value: number) => void,\n}): JSX.Element {\n    const {name, nuanceToPercent, percentToNuance, percentToValue} = mapping\n    const sliderValue = (p: number) => [Math.floor(percentToNuance(p) * MAX_SLIDER)]\n    const [percent, setPercent] = useRecoilState(percentAtom)\n    const [values, setValues] = useState(sliderValue(percent))\n\n    useEffect(() => {\n        setPercent(Math.round(nuanceToPercent(values[0] / MAX_SLIDER)))\n    }, [values])\n    useEffect(() => apply(mapping.feature, percent, percentToValue(percent)), [percent])\n    useEffect(() => {\n        setValues(sliderValue(percent))\n    }, [mapping, percent])\n\n    return (\n        <div className=\"slider\">\n            <div className=\"float-right mr-4\">\n                <FaBalanceScale onClick={() => setValues(sliderValue(100))}/>\n            </div>\n            <div className=\"ml-2 small my-1\">\n                {name} = {percentString(percent)} ({floatString(percentToValue(percent))})\n            </div>\n            <Slider\n                mode={1} step={1} domain={domain} rootStyle={sliderStyle}\n                values={values}\n                onChange={(newValues: number[]) => setValues(newValues)}\n            >\n                <Rail>\n                    {({getRailProps}) => <div className=\"slider-rail\" {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle key={handle.id} handle={handle} getHandleProps={getHandleProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track key={id} source={source} target={target} getTrackProps={getTrackProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({handle, getHandleProps}: {\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            className=\"slider-handle\"\n            style={{left: `${percent}%`}}\n            aria-valuemin={min} aria-valuemax={max} aria-valuenow={value}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n}): JSX.Element {\n    return (\n        <div className=\"slider-track\"\n             style={{left: `${source.percent}%`, width: `${target.percent - source.percent}%`}}\n             {...getTrackProps()}\n        />\n    )\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"1%\",\n    position: \"relative\",\n    width: \"98%\",\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { currentFeature, FEATURE_VALUES } from \"../storage/recoil\"\n\nimport { FeatureSlider } from \"./feature-slider\"\n\nexport function BottomMiddle({tensegrity}: {\n    tensegrity: Tensegrity,\n}): JSX.Element {\n    const [open, setOpen] = useState(false)\n    const [worldFeature, setWorldFeature] = useRecoilState(currentFeature)\n    const [featureValue, setFeatureValue] = useState(FEATURE_VALUES[worldFeature])\n    return (\n        <div className=\"w-100 d-flex\">\n            <ButtonDropdown isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle>Choose</DropdownToggle>\n                <DropdownMenu>{\n                    FEATURE_VALUES\n                        .filter(value => !value.mapping.name.startsWith(\"-\"))\n                        .map((value) => (\n                            <DropdownItem key={`fitem-${value.mapping.feature}`} onClick={() => {\n                                setWorldFeature(value.mapping.feature)\n                                setFeatureValue(value)\n                            }}>\n                                {value.mapping.name}\n                            </DropdownItem>\n                        ))\n                }</DropdownMenu>\n            </ButtonDropdown>\n            <FeatureSlider\n                mapping={featureValue.mapping}\n                percentAtom={featureValue.percentAtom}\n                apply={(feature, percent, value) => {\n                    tensegrity.instance.applyFeature(feature, percent, value)\n                }}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport {\n    Color,\n    CylinderGeometry,\n    Euler,\n    Material,\n    MeshLambertMaterial,\n    PerspectiveCamera as Cam,\n    Vector3,\n} from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { GlobalMode, isPushRole, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { RunTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails, intervalRotation, intervalsAdjacent } from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    globalModeAtom,\n    rotatingAtom,\n    ViewMode,\n    viewModeAtom,\n    visibleRolesAtom,\n} from \"../storage/recoil\"\n\nimport { isIntervalClick } from \"./events\"\nimport { IntervalDetails } from \"./interval-details\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"./materials\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst RADIUS_FACTOR = 0.01\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({tensegrity, runTenscript, selected, setSelected, details}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n    selected: IInterval | undefined,\n    setSelected: (selection: IInterval | undefined) => void,\n    details: IIntervalDetails | undefined,\n}): JSX.Element {\n\n    const [visibleRoles] = useRecoilState(visibleRolesAtom)\n    const [visualStrainPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.VisualStrain].percentAtom)\n    const visualStrain = () => FEATURE_VALUES[WorldFeature.VisualStrain].mapping.percentToValue(visualStrainPercent)\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [bootstrapIndex, setBootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    const [nonBusyCount, updateNonBusyCount] = useState(0)\n    const [bullseye, updateBullseye] = useState(new Vector3(0, 1, 0))\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n\n    useEffect(() => {\n        setBootstrapIndex(0)\n        updateNonBusyCount(0)\n    }, [globalMode])\n\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        current.position.set(0, 1, tensegrity.instance.view.radius() * 2)\n    }, [])\n\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    useFrame(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        if (viewMode !== ViewMode.Frozen) {\n            const busy = tensegrity.iterate()\n            const view = tensegrity.instance.view\n            const target = selected ? tensegrity.instance.intervalLocation(selected) :\n                new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n            updateBullseye(new Vector3().subVectors(target, bullseye).multiplyScalar(TOWARDS_TARGET).add(bullseye))\n            const eye = current.position\n            if (globalMode === GlobalMode.Demo || stage === Stage.Growing) {\n                eye.y += (target.y - eye.y) * TOWARDS_POSITION\n                const distanceChange = eye.distanceTo(target) - view.radius() * 2.5\n                const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n                eye.add(towardsDistance)\n            } else {\n                if (eye.y < 0) {\n                    eye.y -= eye.y * TOWARDS_POSITION * 20\n                }\n            }\n            if (busy) {\n                return\n            }\n            if (globalMode === GlobalMode.Demo) {\n                switch (stage) {\n                    case Stage.Shaping:\n                        if (nonBusyCount === 200) {\n                            tensegrity.stage = Stage.Slack\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Slack:\n                        if (nonBusyCount === 30) {\n                            tensegrity.stage = Stage.Pretensing\n                            setRotating(false)\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Pretenst:\n                        if (nonBusyCount === 200) {\n                            const nextIndex = bootstrapIndex + 1\n                            if (nextIndex === BOOTSTRAP.length) {\n                                setBootstrapIndex(0)\n                                reloadGlobalMode(GlobalMode.Design)\n                                setRotating(false)\n                                runTenscript(BOOTSTRAP[0], emergency)\n                            } else {\n                                setBootstrapIndex(nextIndex)\n                                setRotating(true)\n                                updateNonBusyCount(0)\n                                runTenscript(BOOTSTRAP[nextIndex], emergency)\n                            }\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                }\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    const camera = useRef<Cam>()\n    const pushOverPull = tensegrity.instance.world.get_float_value(WorldFeature.PushOverPull)\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n        setViewMode(ViewMode.Selecting)\n    }\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true} onPointerMissed={undefined}/>\n            <OrbitControls target={bullseye} autoRotate={rotating} enableKeys={false} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined}\n            />\n            <scene>\n                {viewMode === ViewMode.Selecting ? (\n                    <SelectingView\n                        tensegrity={tensegrity} details={details}\n                        selected={selected} setSelected={setSelected}/>\n                ) : viewMode === ViewMode.Frozen ? (\n                    <group>\n                        {tensegrity.intervals\n                            .filter(interval => visibleRoles.some(role => role === interval.intervalRole))\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull}\n                                    visualStrain={visualStrain()}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    onPointerDown={event => {\n                                        event.stopPropagation()\n                                        if (isIntervalClick(event)) {\n                                            clickInterval(interval)\n                                        }\n                                    }}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <lineSegments\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({pushOverPull, visualStrain, tensegrity, interval, selected, onPointerDown}: {\n    pushOverPull: number,\n    visualStrain: number,\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    onPointerDown?: (e: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const intervalMaterial = selected ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)\n    const push = isPushRole(interval.intervalRole)\n    const instance = tensegrity.instance\n    const stiffness = instance.floatView.stiffnesses[interval.index] * (push ? pushOverPull : 1.0)\n    const radius = RADIUS_FACTOR * Math.sqrt(stiffness) * (selected ? 1.5 : 1)\n    const rotation = intervalRotation(instance.unitVector(interval.index))\n    const strain = instance.floatView.strains[interval.index]\n    const idealLength = instance.floatView.idealLengths[interval.index]\n    const length = strain === 0 ? instance.intervalLength(interval) : idealLength + strain * idealLength * (1 - visualStrain)\n    const intervalScale = new Vector3(radius, (length < 0) ? 0.01 : length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={instance.intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={intervalMaterial}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={onPointerDown}\n        />\n    )\n}\n\nconst BASE_RADIUS = 8\nconst PUSH_RADIUS = 0.004 * BASE_RADIUS\nconst PULL_RADIUS = 0.002 * BASE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst SELECTED_MATERIAL = material(\"#ffdd00\")\nconst PUSH_MATERIAL = material(\"#384780\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nfunction SelectingView({tensegrity, selected, setSelected, details}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (interval?: IInterval) => void,\n    details?: IIntervalDetails,\n}): JSX.Element {\n    const instance = tensegrity.instance\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n    }\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = isPushRole(interval.intervalRole)\n                if (!isPush) {\n                    if (selected) {\n                        if (isPushRole(selected.intervalRole)) {\n                            if (!intervalsAdjacent(selected, interval)) {\n                                return undefined\n                            }\n                        } else {\n                            if (selected.index !== interval.index) {\n                                return undefined\n                            }\n                        }\n                        if (!intervalsAdjacent(selected, interval)) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = isPush ? PUSH_RADIUS : PULL_RADIUS\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={selected && selected.index === interval.index ? SELECTED_MATERIAL : isPush ? PUSH_MATERIAL : PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            if (isIntervalClick(event)) {\n                                clickInterval(interval)\n                            }\n                        }}\n                    />\n                )\n            })}}\n            {!selected || !details ? undefined : (\n                <IntervalDetails\n                    key={`S${selected.index}`}\n                    instance={tensegrity.instance}\n                    interval={selected}\n                    details={details}/>\n            )}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaAnchor,\n    FaArrowRight,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaFutbol,\n    FaHandSpock,\n    FaSeedling,\n    FaSlidersH,\n    FaTape,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensingFrozen,\n    SlackToPretensingSticky,\n    SlackToPretensingBouncy,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport const STAGE_TRANSITIONS = Object.keys(StageTransition)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => StageTransition[k])\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    <FaCamera/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingFrozen:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Frozen)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaAnchor/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingSticky:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Sticky)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaTape/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingBouncy:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Bouncy)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaFutbol/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/><FaChartBar/>\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonGroup, Input } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { compileTenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { postGrowthAtom, tenscriptAtom } from \"../storage/recoil\"\n\nexport function ScriptPanel({runTenscript}: { runTenscript: RunTenscript }): JSX.Element {\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [json, setJson] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const toJson = () => JSON.stringify(tenscript, undefined, 2)\n\n    function parse(): void {\n        try {\n            const newTenscript = JSON.parse(json)\n            if (compileTenscript(newTenscript, setError)) {\n                setError(\"\")\n                newTenscript.postGrowthOp = postGrowth\n                setTenscript(newTenscript)\n                runTenscript(newTenscript, setError)\n            }\n        } catch (e) {\n            setError(e.toString())\n        }\n    }\n\n    useEffect(() => {\n        if (tenscript) {\n            setJson(toJson())\n        } else {\n            setJson(\"\")\n        }\n    }, [tenscript])\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <div>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{flexDirection: \"column\", height: \"available\"}}>\n                    <Input\n                        style={{borderRadius: \"1em\", height: \"22em\", marginBottom: \"0.5em\"}}\n                        type=\"textarea\" id=\"tenscript\"\n                        value={json}\n                        onChange={changeEvent => setJson(changeEvent.target.value)}\n                    />\n                    <ButtonGroup vertical={true} className=\"w-100 my-2\">\n                        {error.length === 0 ? undefined : (\n                            <Button className=\"my-2\" color=\"warning\" onClick={() => {\n                                setJson(toJson())\n                                setError(\"\")\n                            }}>\n                                <FaBug/><hr/>{error}\n                            </Button>\n                        )}\n                        <Button color=\"success\" onClick={() => parse()}>\n                            Try it out!\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaEye, FaHiking } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { bootstrapIndexAtom, postGrowthAtom, tenscriptAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { ScriptPanel } from \"./script-panel\"\nimport { STAGE_TRANSITIONS, StageButton } from \"./stage-button\"\n\nexport function TopLeft({tensegrity, runTenscript}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const setBootstrapIndex = useSetRecoilState(bootstrapIndexAtom)\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth, setPostGrowth] = useRecoilState(postGrowthAtom)\n\n    const [showScriptPanel, setShowScriptPanel] = useState(false)\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    const run = (pgo: PostGrowthOp) => {\n        if (!tenscript) {\n            return\n        }\n        setPostGrowth(pgo)\n        if (tenscript.postGrowthOp === pgo) {\n            runTenscript(tenscript, error => console.error(error))\n        } else {\n            const opChanged: ITenscript = {...tenscript, postGrowthOp: pgo}\n            setTenscript(opChanged)\n            runTenscript(opChanged, error => console.error(error))\n        }\n    }\n\n    const opColor = (pgo: PostGrowthOp) => postGrowth === pgo ? \"success\" : \"secondary\"\n\n    return (\n        <>\n            <ButtonGroup>{STAGE_TRANSITIONS\n                .map(stageTransition => (\n                    <StageButton\n                        key={`strans-${stageTransition}`}\n                        tensegrity={tensegrity}\n                        stageTransition={stageTransition}\n                        disabled={viewMode === ViewMode.Frozen}/>\n                ))\n            }</ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => run(PostGrowthOp.NoOp)} color={opColor(PostGrowthOp.NoOp)}>0</Button>\n                <Button onClick={() => run(PostGrowthOp.Faces)} color={opColor(PostGrowthOp.Faces)}>&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Snelson)} color={opColor(PostGrowthOp.Snelson)}>S&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Bowtie)} color={opColor(PostGrowthOp.Bowtie)}>&#8904;</Button>\n                <Button onClick={() => run(PostGrowthOp.BowtieFaces)} color={opColor(PostGrowthOp.BowtieFaces)}>&#8904; <strong>&#9653;</strong></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <ButtonDropdown\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle><FaHiking/></DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => {\n                            setBootstrapIndex(index)\n                            runTenscript(bootstrapProgram, () => console.error(\"impossible\"))\n                        }}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n                <Button\n                    color={showScriptPanel ? \"warning\" : \"secondary\"}\n                    onClick={() => setShowScriptPanel(!showScriptPanel)}>\n                    <FaEye/>\n                </Button>\n            </ButtonGroup>\n            {!showScriptPanel ? undefined : <ScriptPanel runTenscript={runTenscript}/>}\n        </>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport { stageName } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport function TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaCircle, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { ViewMode, viewModeAtom, visibleRolesAtom } from \"../storage/recoil\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function TopRight({tensegrity, selected}: { tensegrity: Tensegrity, selected: IInterval|undefined }): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [visibleRoles, updateVisibleRoles] = useRecoilState(visibleRolesAtom)\n    const [currentRole, updateCurrentRole] = useState(IntervalRole.PullA)\n\n    const adjustSelection = (up: boolean) => () => {\n        const factor = 1.03\n        if (selected) {\n            tensegrity.changeIntervalScale(selected, up ? factor : (1 / factor))\n        }\n    }\n\n    switch (viewMode) {\n        case ViewMode.Lines:\n            return (\n                <>\n                    <ButtonGroup>{\n                        ADJUSTABLE_INTERVAL_ROLES\n                            .map((intervalRole, index) => (\n                                <Button key={`IntervalRole[${index}]`}\n                                        onClick={() => updateCurrentRole(intervalRole)}\n                                        color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                                >\n                                    {intervalRoleName(intervalRole)}\n                                </Button>\n                            ))\n                    }</ButtonGroup>\n                    <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n                </>\n            )\n        case ViewMode.Selecting:\n            return (\n                <ButtonGroup>\n                    <Button onClick={adjustSelection(true)}>\n                        <FaPlusSquare/>\n                    </Button>\n                    <Button onClick={adjustSelection(false)}>\n                        <FaMinusSquare/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case ViewMode.Frozen:\n            return (\n                <ButtonGroup>\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button key={`viz${intervalRole}`} onClick={() => {\n                            if (visibleRoles.indexOf(intervalRole) < 0) {\n                                updateVisibleRoles([...visibleRoles, intervalRole])\n                            } else {\n                                const nextRoles = visibleRoles.filter(role => role !== intervalRole)\n                                updateVisibleRoles(nextRoles.length > 0 ? nextRoles : ADJUSTABLE_INTERVAL_ROLES)\n                            }\n                        }}\n                                color={visibleRoles.some(role => role === intervalRole) ? \"success\" : \"secondary\"}\n                        >\n                            {intervalRoleName(intervalRole)}\n                            <FaCircle style={{color: roleColorString(intervalRole)}}/>\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            )\n        default:\n            return <span>?</span>\n    }\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup className=\"my-1\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <Button>{intervalRoleName(intervalRole)} = [{floatString(defaultLength())}]</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { GlobalMode, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    globalModeAtom,\n    postGrowthAtom,\n    STORAGE_KEY,\n    tenscriptAtom,\n    ViewMode,\n    viewModeAtom,\n} from \"../storage/recoil\"\n\nimport { BottomLeft } from \"./bottom-left\"\nimport { BottomMiddle } from \"./bottom-middle\"\nimport { BottomRight } from \"./bottom-right\"\nimport { FabricView } from \"./fabric-view\"\nimport { featureMapping } from \"./feature-mapping\"\nimport { TopLeft } from \"./top-left\"\nimport { TopMiddle } from \"./top-middle\"\nimport { TopRight } from \"./top-right\"\n\nexport function DesignView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(SurfaceCharacter.Frozen, {}), [])\n    const worldFeatures = FEATURE_VALUES.map(({percentAtom}) => useRecoilState(percentAtom))\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [bootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [globalMode] = useRecoilState(globalModeAtom)\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selected, setSelected] = useState<IInterval | undefined>()\n    const [details, setDetails] = useState<IIntervalDetails | undefined>(undefined)\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(tensegrity.getIntervalDetails(selected))\n            } else {\n                setDetails(undefined)\n            }\n        }\n    }, [selected])\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    const runTenscript: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Lines)\n            setSelected(undefined)\n            const localValue = ts.featureValues[WorldFeature.IntervalCountdown]\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTenscript(ts)\n            WORLD_FEATURES.map(feature => {\n                const {percentToValue} = featureMapping(feature)\n                const percent = ts.featureValues[feature]\n                if (percent !== undefined) {\n                    worldFeatures[feature][1](percent)\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            mainInstance.world.set_surface_character(ts.surfaceCharacter)\n            setPostGrowth(ts.postGrowthOp)\n            setTensegrity(new Tensegrity(new Vector3(), mainInstance, countdown, ts, tree))\n        } catch (e) {\n            console.log(\"Problem running\", e)\n            return runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n        return true\n    }\n\n    useEffect(() => {\n        Object.keys(localStorage).filter(k => k !== STORAGE_KEY).forEach(k => localStorage.removeItem(k))\n        if (tenscript) {\n            runTenscript(tenscript, emergency)\n        } else {\n            runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n    }, [])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div>\n            <div style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <h1><FaPlay/></h1>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <Canvas\n                            style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: viewMode !== ViewMode.Lines ? \"#f0ad4e\" : \"black\",\n                                cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                                borderWidth: \"2px\",\n                            }}\n                        >\n                            <RecoilBridge>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    runTenscript={runTenscript}\n                                    selected={selected}\n                                    setSelected={setSelected}\n                                    details={details}\n                                />\n                            </RecoilBridge>\n                        </Canvas>\n                        {globalMode === GlobalMode.Demo ? undefined : (\n                            <>\n                                <div id=\"top-left\">\n                                    <TopLeft tensegrity={tensegrity} runTenscript={runTenscript}/>\n                                </div>\n                                <div id=\"top-right\">\n                                    <TopRight tensegrity={tensegrity} selected={selected}/>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <BottomLeft/>\n                                </div>\n                                <div id=\"bottom-middle\" style={{width: \"60%\"}}>\n                                    <BottomMiddle tensegrity={tensegrity}/>\n                                </div>\n                            </>\n                        )}\n                        <div id=\"top-middle\">\n                            <TopMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"bottom-right\">\n                            <BottomRight tensegrity={tensegrity}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { ConstructionView } from \"../construction/construction-view\"\nimport { EvoView } from \"../evo/evo-view\"\nimport { GlobalMode, globalModeFromUrl, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { SPHERE_RADIUS, SphereView } from \"../sphere/sphere-view\"\nimport { TensegritySphere } from \"../sphere/tensegrity-sphere\"\nimport { globalModeAtom } from \"../storage/recoil\"\n\nimport { DesignView } from \"./design-view\"\n\nexport function MainView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const [globalMode] = useRecoilState(globalModeAtom)\n    useEffect(() => {\n        const urlMode = globalModeFromUrl()\n        if (urlMode !== globalMode) {\n            reloadGlobalMode(urlMode)\n        }\n    }, [])\n\n    switch (globalMode) {\n        case GlobalMode.Halo:\n        case GlobalMode.Convergence:\n        case GlobalMode.Magnet:\n            return (\n                <ConstructionView globalMode={globalMode} createInstance={createInstance}/>\n            )\n        case GlobalMode.Evolution:\n            return (\n                <EvoView createBodyInstance={createInstance}/>\n            )\n        case GlobalMode.Sphere:\n            return (\n                <SphereView createSphere={(frequency: number, useGravity: boolean) => {\n                    const sphereInstance = createInstance(SurfaceCharacter.Bouncy, {\n                        [WorldFeature.IterationsPerFrame]: 200,\n                        [WorldFeature.Gravity]: 1000,\n                        [WorldFeature.VisualStrain]: 0,\n                        [WorldFeature.StiffnessFactor]: 800,\n                    })\n                    return new TensegritySphere(\n                        new Vector3(0, 3, 0),\n                        SPHERE_RADIUS, frequency, 0.3333, useGravity, sphereInstance,\n                    )\n                }}/>\n            )\n        default:\n            return (\n                <DesignView createInstance={createInstance}/>\n            )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { RecoilRoot } from \"recoil\"\n\nimport { WORLD_FEATURES } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport registerServiceWorker from \"./service-worker\"\nimport { MainView } from \"./view/main-view\"\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    frozenWorld: typeof import(\"eig\").World,\n    stickyWorld: typeof import(\"eig\").World,\n    bouncyWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const getWorld = (surfaceCharacter: SurfaceCharacter): typeof import(\"eig\").World => {\n        switch (surfaceCharacter) {\n            case SurfaceCharacter.Frozen:\n                return frozenWorld\n            case SurfaceCharacter.Sticky:\n                return stickyWorld\n            case SurfaceCharacter.Bouncy:\n                return bouncyWorld\n            default:\n                throw new Error(\"surface character?\")\n        }\n    }\n    const createInstance: CreateInstance = (surfaceCharacter: SurfaceCharacter, featureValues: Record<WorldFeature, number>, fabric?: object) => {\n        const fabricInstance = new FabricInstance(eig, 2000, getWorld(surfaceCharacter), fabric)\n        WORLD_FEATURES.forEach(feature => {\n            const percent = featureValues[feature]\n            if (percent === undefined) {\n                return\n            }\n            fabricInstance.world.set_float_percent(feature, percent)\n        })\n        return fabricInstance\n    }\n    render(\n        <RecoilRoot>\n            <MainView createInstance={createInstance}/>\n        </RecoilRoot>,\n    )\n    registerServiceWorker()\n}\n"],"sourceRoot":""}