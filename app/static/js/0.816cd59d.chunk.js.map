{"version":3,"sources":["../../eig/pkg/eig.js"],"names":["cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","Uint8Array","subarray","_assertClass","instance","klass","Error","concat","name","cachegetFloat32Memory0","getFloat32Memory0","Float32Array","WASM_VECTOR_LEN","passArrayF32ToWasm0","arg","malloc","length","set","default_world_feature","fabric_feature","Stage","Object","freeze","Growing","Shaping","Slack","Pretensing","Pretenst","SurfaceCharacter","Frozen","Sticky","Bouncy","WorldFeature","Gravity","Antigravity","ShapingDrag","Drag","ShapingPretenstFactor","PretenstFactor","StiffnessFactor","ShapingStiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","NexusPushLength","ColumnPushLength","TriangleLength","RingLength","CrossLength","BowMidLength","BowEndLength","RibbonPushLength","RibbonShortLength","RibbonLongLength","RibbonHangerLength","PushOverPull","VisualStrain","PushRadius","PullRadius","JointRadiusFactor","IntervalRole","NexusPush","ColumnPush","Triangle","Ring","Cross","BowMid","BowEnd","FaceConnector","FaceDistancer","FaceAnchor","RibbonPush","RibbonShort","RibbonLong","RibbonHanger","SpherePush","SpherePull","Fabric","this","key","value","ret","__wrap","x","y","z","joint_index","alpha_index","omega_index","interval_role","ideal_length","rest_length","stiffness","linear_density","countdown","index","joint0","joint1","joint2","face_index","attack_countdown","decay_countdown","delta_size_nuance","requested_stage","world","World","undefined","altitude","factor","m","ptr0","len0","new_stiffnesses","new_linear_densities","ptr1","len1","get","arg0","obj","create","prototype","joint_count","View","fabric","joint_locations","joint_velocities","line_locations","line_colors","face_midpoints","face_normals","face_vertex_locations","unit_vectors","ideal_lengths","strains","strain_limits","strain_nuances","stiffnesses","linear_densities","surface_character","push_and_pull","feature","percent","__wbindgen_throw","arg1"],"mappings":"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","file":"static/js/0.816cd59d.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/fluxe/pretenst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fluxe/pretenst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as wasm from './eig_bg.wasm';\nvar cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(\"expected instance of \".concat(klass.name));\n  }\n\n  return instance.ptr;\n}\n\nvar cachegetFloat32Memory0 = null;\n\nfunction getFloat32Memory0() {\n  if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n  }\n\n  return cachegetFloat32Memory0;\n}\n\nvar WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n  var ptr = malloc(arg.length * 4);\n  getFloat32Memory0().set(arg, ptr / 4);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n/**\n* @param {number} fabric_feature\n* @returns {number}\n*/\n\n\nexport function default_world_feature(fabric_feature) {\n  var ret = wasm.default_world_feature(fabric_feature);\n  return ret;\n}\n/**\n*/\n\nexport var Stage = Object.freeze({\n  Growing: 0,\n  Shaping: 1,\n  Slack: 2,\n  Pretensing: 3,\n  Pretenst: 4\n});\n/**\n*/\n\nexport var SurfaceCharacter = Object.freeze({\n  Frozen: 0,\n  Sticky: 1,\n  Bouncy: 2\n});\n/**\n*/\n\nexport var WorldFeature = Object.freeze({\n  Gravity: 0,\n  Antigravity: 1,\n  ShapingDrag: 2,\n  Drag: 3,\n  ShapingPretenstFactor: 4,\n  PretenstFactor: 5,\n  StiffnessFactor: 6,\n  ShapingStiffnessFactor: 7,\n  IterationsPerFrame: 8,\n  IntervalCountdown: 9,\n  PretensingCountdown: 10,\n  NexusPushLength: 11,\n  ColumnPushLength: 12,\n  TriangleLength: 13,\n  RingLength: 14,\n  CrossLength: 15,\n  BowMidLength: 16,\n  BowEndLength: 17,\n  RibbonPushLength: 18,\n  RibbonShortLength: 19,\n  RibbonLongLength: 20,\n  RibbonHangerLength: 21,\n  PushOverPull: 22,\n  VisualStrain: 23,\n  PushRadius: 24,\n  PullRadius: 25,\n  JointRadiusFactor: 26\n});\n/**\n*/\n\nexport var IntervalRole = Object.freeze({\n  NexusPush: 0,\n  ColumnPush: 1,\n  Triangle: 2,\n  Ring: 3,\n  Cross: 4,\n  BowMid: 5,\n  BowEnd: 6,\n  FaceConnector: 7,\n  FaceDistancer: 8,\n  FaceAnchor: 9,\n  RibbonPush: 10,\n  RibbonShort: 11,\n  RibbonLong: 12,\n  RibbonHanger: 13,\n  SpherePush: 14,\n  SpherePull: 15\n});\n/**\n*/\n\nexport var Fabric = /*#__PURE__*/function () {\n  function Fabric() {\n    _classCallCheck(this, Fabric);\n  }\n\n  _createClass(Fabric, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_fabric_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"clear\",\n\n    /**\n    */\n    value: function clear() {\n      wasm.fabric_clear(this.ptr);\n    }\n    /**\n    * @returns {Fabric}\n    */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var ret = wasm.fabric_clone(this.ptr);\n      return Fabric.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_joint_count\",\n    value: function get_joint_count() {\n      var ret = wasm.fabric_get_joint_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_interval_count\",\n    value: function get_interval_count() {\n      var ret = wasm.fabric_get_interval_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_face_count\",\n    value: function get_face_count() {\n      var ret = wasm.fabric_get_face_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_joint\",\n    value: function create_joint(x, y, z) {\n      var ret = wasm.fabric_create_joint(this.ptr, x, y, z);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} joint_index\n    */\n\n  }, {\n    key: \"anchor_joint\",\n    value: function anchor_joint(joint_index) {\n      wasm.fabric_anchor_joint(this.ptr, joint_index);\n    }\n    /**\n    * @param {number} joint_index\n    * @returns {boolean}\n    */\n\n  }, {\n    key: \"is_anchor_joint\",\n    value: function is_anchor_joint(joint_index) {\n      var ret = wasm.fabric_is_anchor_joint(this.ptr, joint_index);\n      return ret !== 0;\n    }\n    /**\n    * @param {number} alpha_index\n    * @param {number} omega_index\n    * @param {number} interval_role\n    * @param {number} ideal_length\n    * @param {number} rest_length\n    * @param {number} stiffness\n    * @param {number} linear_density\n    * @param {number} countdown\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_interval\",\n    value: function create_interval(alpha_index, omega_index, interval_role, ideal_length, rest_length, stiffness, linear_density, countdown) {\n      var ret = wasm.fabric_create_interval(this.ptr, alpha_index, omega_index, interval_role, ideal_length, rest_length, stiffness, linear_density, countdown);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    */\n\n  }, {\n    key: \"remove_interval\",\n    value: function remove_interval(index) {\n      wasm.fabric_remove_interval(this.ptr, index);\n    }\n    /**\n    * @param {number} joint0\n    * @param {number} joint1\n    * @param {number} joint2\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_face\",\n    value: function create_face(joint0, joint1, joint2) {\n      var ret = wasm.fabric_create_face(this.ptr, joint0, joint1, joint2);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    */\n\n  }, {\n    key: \"remove_face\",\n    value: function remove_face(index) {\n      wasm.fabric_remove_face(this.ptr, index);\n    }\n    /**\n    * @param {number} face_index\n    * @param {number} attack_countdown\n    * @param {number} decay_countdown\n    * @param {number} delta_size_nuance\n    */\n\n  }, {\n    key: \"twitch_face\",\n    value: function twitch_face(face_index, attack_countdown, decay_countdown, delta_size_nuance) {\n      wasm.fabric_twitch_face(this.ptr, face_index, attack_countdown, decay_countdown, delta_size_nuance);\n    }\n    /**\n    * @param {number} requested_stage\n    * @param {World} world\n    * @returns {number | undefined}\n    */\n\n  }, {\n    key: \"iterate\",\n    value: function iterate(requested_stage, world) {\n      _assertClass(world, World);\n\n      var ret = wasm.fabric_iterate(this.ptr, requested_stage, world.ptr);\n      return ret === 5 ? undefined : ret;\n    }\n    /**\n    */\n\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      wasm.fabric_centralize(this.ptr);\n    }\n    /**\n    * @param {number} altitude\n    */\n\n  }, {\n    key: \"set_altitude\",\n    value: function set_altitude(altitude) {\n      wasm.fabric_set_altitude(this.ptr, altitude);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"adopt_lengths\",\n    value: function adopt_lengths() {\n      var ret = wasm.fabric_adopt_lengths(this.ptr);\n      return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"finish_growing\",\n    value: function finish_growing() {\n      var ret = wasm.fabric_finish_growing(this.ptr);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @param {number} factor\n    * @param {number} countdown\n    */\n\n  }, {\n    key: \"multiply_rest_length\",\n    value: function multiply_rest_length(index, factor, countdown) {\n      wasm.fabric_multiply_rest_length(this.ptr, index, factor, countdown);\n    }\n    /**\n    * @param {number} index\n    * @param {number} rest_length\n    * @param {number} countdown\n    */\n\n  }, {\n    key: \"change_rest_length\",\n    value: function change_rest_length(index, rest_length, countdown) {\n      wasm.fabric_change_rest_length(this.ptr, index, rest_length, countdown);\n    }\n    /**\n    * @param {number} index\n    * @param {number} interval_role\n    */\n\n  }, {\n    key: \"set_interval_role\",\n    value: function set_interval_role(index, interval_role) {\n      wasm.fabric_set_interval_role(this.ptr, index, interval_role);\n    }\n    /**\n    * @param {Float32Array} m\n    */\n\n  }, {\n    key: \"apply_matrix4\",\n    value: function apply_matrix4(m) {\n      var ptr0 = passArrayF32ToWasm0(m, wasm.__wbindgen_malloc);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.fabric_apply_matrix4(this.ptr, ptr0, len0);\n    }\n    /**\n    * @param {Float32Array} new_stiffnesses\n    * @param {Float32Array} new_linear_densities\n    */\n\n  }, {\n    key: \"copy_material\",\n    value: function copy_material(new_stiffnesses, new_linear_densities) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(new_stiffnesses, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArrayF32ToWasm0(new_linear_densities, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.fabric_copy_material(this.ptr, ptr0, len0, ptr1, len1);\n      } finally {\n        new_stiffnesses.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n\n        new_linear_densities.set(getFloat32Memory0().subarray(ptr1 / 4, ptr1 / 4 + len1));\n\n        wasm.__wbindgen_free(ptr1, len1 * 4);\n      }\n    }\n  }, {\n    key: \"age\",\n    get: function get() {\n      var ret = wasm.__wbg_get_fabric_age(this.ptr);\n\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    ,\n    set: function set(arg0) {\n      wasm.__wbg_set_fabric_age(this.ptr, arg0);\n    }\n    /**\n    * @param {number} joint_count\n    * @returns {Fabric}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Fabric.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(joint_count) {\n      var ret = wasm.fabric_new(joint_count);\n      return Fabric.__wrap(ret);\n    }\n  }]);\n\n  return Fabric;\n}();\n/**\n*/\n\nexport var View = /*#__PURE__*/function () {\n  function View() {\n    _classCallCheck(this, View);\n  }\n\n  _createClass(View, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_view_free(ptr);\n    }\n    /**\n    * @param {Fabric} fabric\n    * @returns {View}\n    */\n\n  }, {\n    key: \"render\",\n\n    /**\n    * @param {Fabric} fabric\n    * @param {World} world\n    */\n    value: function render(fabric, world) {\n      _assertClass(fabric, Fabric);\n\n      _assertClass(world, World);\n\n      wasm.view_render(this.ptr, fabric.ptr, world.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_x\",\n    value: function midpoint_x() {\n      var ret = wasm.view_midpoint_x(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_y\",\n    value: function midpoint_y() {\n      var ret = wasm.view_midpoint_y(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_z\",\n    value: function midpoint_z() {\n      var ret = wasm.view_midpoint_z(this.ptr);\n      return ret;\n    }\n    /**\n    * @param {Float32Array} joint_locations\n    */\n\n  }, {\n    key: \"copy_joint_locations_to\",\n    value: function copy_joint_locations_to(joint_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(joint_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_joint_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        joint_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} joint_velocities\n    */\n\n  }, {\n    key: \"copy_joint_velocities_to\",\n    value: function copy_joint_velocities_to(joint_velocities) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(joint_velocities, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_joint_velocities_to(this.ptr, ptr0, len0);\n      } finally {\n        joint_velocities.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} line_locations\n    */\n\n  }, {\n    key: \"copy_line_locations_to\",\n    value: function copy_line_locations_to(line_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(line_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_line_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        line_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} line_colors\n    */\n\n  }, {\n    key: \"copy_line_colors_to\",\n    value: function copy_line_colors_to(line_colors) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(line_colors, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_line_colors_to(this.ptr, ptr0, len0);\n      } finally {\n        line_colors.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_midpoints\n    */\n\n  }, {\n    key: \"copy_face_midpoints_to\",\n    value: function copy_face_midpoints_to(face_midpoints) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_midpoints, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_midpoints_to(this.ptr, ptr0, len0);\n      } finally {\n        face_midpoints.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_normals\n    */\n\n  }, {\n    key: \"copy_face_normals_to\",\n    value: function copy_face_normals_to(face_normals) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_normals, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_normals_to(this.ptr, ptr0, len0);\n      } finally {\n        face_normals.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_vertex_locations\n    */\n\n  }, {\n    key: \"copy_face_vertex_locations_to\",\n    value: function copy_face_vertex_locations_to(face_vertex_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_vertex_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_vertex_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        face_vertex_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} unit_vectors\n    */\n\n  }, {\n    key: \"copy_unit_vectors_to\",\n    value: function copy_unit_vectors_to(unit_vectors) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(unit_vectors, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_unit_vectors_to(this.ptr, ptr0, len0);\n      } finally {\n        unit_vectors.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} ideal_lengths\n    */\n\n  }, {\n    key: \"copy_ideal_lengths_to\",\n    value: function copy_ideal_lengths_to(ideal_lengths) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(ideal_lengths, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_ideal_lengths_to(this.ptr, ptr0, len0);\n      } finally {\n        ideal_lengths.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} strains\n    */\n\n  }, {\n    key: \"copy_strains_to\",\n    value: function copy_strains_to(strains) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(strains, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_strains_to(this.ptr, ptr0, len0);\n      } finally {\n        strains.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} strain_limits\n    */\n\n  }, {\n    key: \"copy_strain_limits_to\",\n    value: function copy_strain_limits_to(strain_limits) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(strain_limits, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_strain_limits_to(this.ptr, ptr0, len0);\n      } finally {\n        strain_limits.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} strain_nuances\n    */\n\n  }, {\n    key: \"copy_strain_nuances_to\",\n    value: function copy_strain_nuances_to(strain_nuances) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(strain_nuances, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_strain_nuances_to(this.ptr, ptr0, len0);\n      } finally {\n        strain_nuances.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} stiffnesses\n    */\n\n  }, {\n    key: \"copy_stiffnesses_to\",\n    value: function copy_stiffnesses_to(stiffnesses) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(stiffnesses, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_stiffnesses_to(this.ptr, ptr0, len0);\n      } finally {\n        stiffnesses.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} linear_densities\n    */\n\n  }, {\n    key: \"copy_linear_densities_to\",\n    value: function copy_linear_densities_to(linear_densities) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(linear_densities, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_linear_densities_to(this.ptr, ptr0, len0);\n      } finally {\n        linear_densities.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(View.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"on_fabric\",\n    value: function on_fabric(fabric) {\n      _assertClass(fabric, Fabric);\n\n      var ret = wasm.view_on_fabric(fabric.ptr);\n      return View.__wrap(ret);\n    }\n  }]);\n\n  return View;\n}();\n/**\n*/\n\nexport var World = /*#__PURE__*/function () {\n  function World() {\n    _classCallCheck(this, World);\n  }\n\n  _createClass(World, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_world_free(ptr);\n    }\n    /**\n    * @param {number} surface_character\n    * @returns {World}\n    */\n\n  }, {\n    key: \"set_surface_character\",\n\n    /**\n    * @param {number} surface_character\n    */\n    value: function set_surface_character(surface_character) {\n      wasm.world_set_surface_character(this.ptr, surface_character);\n    }\n    /**\n    * @param {boolean} push_and_pull\n    */\n\n  }, {\n    key: \"set_push_and_pull\",\n    value: function set_push_and_pull(push_and_pull) {\n      wasm.world_set_push_and_pull(this.ptr, push_and_pull);\n    }\n    /**\n    * @param {number} feature\n    * @param {number} value\n    * @returns {number}\n    */\n\n  }, {\n    key: \"set_float_value\",\n    value: function set_float_value(feature, value) {\n      var ret = wasm.world_set_float_value(this.ptr, feature, value);\n      return ret;\n    }\n    /**\n    * @param {number} feature\n    * @param {number} percent\n    * @returns {number}\n    */\n\n  }, {\n    key: \"set_float_percent\",\n    value: function set_float_percent(feature, percent) {\n      var ret = wasm.world_set_float_percent(this.ptr, feature, percent);\n      return ret;\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(World.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(surface_character) {\n      var ret = wasm.world_new(surface_character);\n      return World.__wrap(ret);\n    }\n  }]);\n\n  return World;\n}();\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};"],"sourceRoot":""}