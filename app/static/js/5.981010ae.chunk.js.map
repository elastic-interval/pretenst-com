{"version":3,"sources":["fabric/eig-util.ts","fabric/tensegrity-types.ts","bridge/bridge-logic.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/fabric-instance.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/tenscript.ts","fabric/tensegrity-builder.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/island-geometry.ts","gotchi/island.ts","gotchi/patch.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/frozen-tab.tsx","view/stage-button.tsx","view/feature-panel.tsx","view/live-tab.tsx","view/phase-tab.tsx","view/script-tab.tsx","view/shape-tab.tsx","view/control-tabs.tsx","view/interval-stats.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["IntervalRole","FORWARD","Vector3","RIGHT","UP","PHI","roleDefaultLength","intervalRole","ring","Math","sqrt","Push","Pull","PhiPush","RootPush","TipPush","PhiTriangle","Twist","TipOuter","InterTwist","InterTip","TipInner","Ring","Cross","CROSS1","Distancer","Error","FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","long","Version","Spin","FaceName","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","max","toFixed","sub","a","b","subVectors","normalize","avg","addVectors","midpoint","points","mid","forEach","point","add","multiplyScalar","length","normal","radials","copy","norm","index","current","next","crossVectors","vectorFromArray","array","vector","offset","set","oppositeSpin","spin","Left","Right","LeftRight","RightLeft","FaceSelection","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","push","jointLocation","instance","jointDistance","distanceTo","intervalLocation","alpha","omega","intervalLength","addIntervalStats","interval","pushOverPull","pretenstFactor","floatView","stats","stiffness","stiffnesses","strain","strains","idealLength","idealLengths","linearDensity","linearDensities","expectStats","intervalJoins","acrossPush","joint","otherJoint","locationFromFace","face","ends","locationFromFaces","faces","reduce","accum","percentOrHundred","percent","_","factorFromPercent","percentFromFactor","factor","faceFromTwist","twist","faceName","emptySelection","intervals","joints","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","PretensingCountdown","VisualStrain","PretenstFactor","PushOverPull","ribbon","tensegrity","ribbonShort","ribbonLong","x","left","z","ribbonJoint","createJoint","scale","createInterval","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","identities","arch","group","shift","distance","jointIndex","name","hook","sortXY","aa","bb","lengthSq","sort","extractHooks","hanger","rj","floor","hookJoint","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","y","join","extractJointFile","csvIntervals","j","type","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","reverse","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECTED_MATERIAL","MeshBasicMaterial","color","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","ConnectorPull","RadialPull","roleMaterial","roleColor","SURFACE","MeshPhongMaterial","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","addScaledVector","Face3","addSurfaceGeometry","v","patchesGeometry","material","BridgeView","useState","stage$","getValue","updateStage","getFabricOutput","useEffect","subscribe","unsubscribe","id","style","position","right","height","ButtonGroup","vertical","Button","onClick","backgroundColor","Camera","BridgeScene","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","console","log","Pretenst","OrbitControls","onPointerMissed","target","key","lineGeometry","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","unit","unitVector","rotation","Quaternion","setFromUnitVectors","isPush","intervalRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","args","matrixWorldNeedsUpdate","end","props","ref","useRef","setDefaultCamera","useThree","camera","fov","updateMatrixWorld","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","empty","Float32Array","intervalCount","faceCount","BufferGeometry","faceGeometry","jointLocations","unitVectors","strainLimits","strainNuances","createEmptyFloatView","adoptFabric","forward","featuresToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","set_float_value","worldFeature","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","facePosition","faceNormal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","get_stage","requested","request_stage","error","ControlTab","ViewMode","transition","state$","partial","state","nonce","initialStoredState","toConfig","demoCount","DEFAULT_FEATURE_VALUES","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Script","fullScreen","viewMode","Lines","rotating","visibleRoles","currentRole","pushBottom","pushTop","pullBottom","pullTop","saveState","storedState","localStorage","setItem","loadState","item","getItem","parse","featureConfig","percents","Antigravity","ShapingDrag","ShapingStiffnessFactor","ShapingPretenstFactor","StiffnessFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","value","createFloatFeatures","features","FaceAction","TenscriptNode","subtrees","marks","root","subtreeCode","markCode","omniFaceNames","some","isForward","hasScale","toString","parts","entries","code","mark","flat","treeToTenscript","pushesPerTwist","tree","fromUrl","optionalPushes","mainCode","spinChars","markSections","keyNumber","action","Subtree","subtree","Base","Join","Distance","Tip","Anchor","format","subtreesCode","isDigit","toNumber","digits","match","MAIN_CODE","parseMain","main","parsed","exec","chars","spinFromChars","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","s","depth","matchBracket","contentOption","codeToTenscript","fragmentToNode","codeFragment","codeString","codeTree","addMark","markNumber","found","direction","forwardArg","scaleArg","faceNameChar","nonEmpty","split","foundName","find","part","endsWith","test","eq","Number","parseCode","matches","parseFloat","submerged","e","message","BOOTSTRAP","script","tenscript","grow","afterTree","omni","twistToMark","treeWithMarks","builder","baseFace","newTwist","createTwistOn","thisFace","faceMarks","reorient","execute","before","activeBuds","bud","decremented","needsOmniTwist","f","apply","middle","sum","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationX","PI","rotate","makeRotationY","multiply","invert","reorientMatrix","treeMarks","twistMark","markFound","markTree","deleteMark","TensegrityBuilder","origin","at","createTwistAt","twistScale","baseFactor","pushRole","pullRole","bottom","createTwist","faceTwistPointPairs","bottomTopFace","top","createOmniTwist","connect","connectRoles","pair","base","out","tipLength","tipPointPair","tip","innerPulls","outerPulls","pulls","pull","removeInterval","tipA","tipB","distanceScale","trianglePoints","faceToOriginMatrix","actionScale","centerBrickFaceIntervals","averageScaleFactor","where","omniTwist","opposing","faceLocation","closestFace","createRadialPull","pullScale","faceA","indexA","faceB","indexB","radialPulls","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","rotatedWalk","bestRotation","minLength","rotateForBestRing","axis","alphaRays","omegaRays","isOmniSpin","bottomSpin","firstTwistPointPairs","bottomTwist","topTwist","topFace","bottomFace","avoidFaces","connectPulls","pushes","p","removed","createFaceTouching","facePulls","thirdForward","thirdReverse","createFace","topTouching","bottomTouching","roles","reverseA","forwardB","b0","b1","c0","minimal","up","a0","a1","d0","down","faceScale","c1","cN1","removeFace","omniA","omniB","angle","cos","sin","twistPointPairs","initialLength","tinyRadius","bc","cd","ba","Tensegrity","numericFeature","connectors","distancers","jobs","buds","createBud","newJoint","create_joint","alphaJoint","omegaJoint","creatAxis","alphaRestLength","omegaRestLength","createRay","radialPull","restLength","countdown","abs","create_interval","multiply_rest_length","existing","eliminateInterval","f0","f1","f2","create_face","list","faceSelection","None","remove_face","job","collated","possibleMark","FaceStrategy","faceStrategies","strategy","checkConnectors","averagePullStrain","strainFactor","restoreSnapshot","copy_stiffnesses","pushRadius","pullRadius","jointRadius","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","oppositeJoint","chords","pushToA","dot","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","anchor","currentLength","alphaIndex","omegaIndex","CONNECTOR_LENGTH","remove_interval","ray","snapshot","GeneName","faceToOrigin","createRadialPulls","createInterTip","createTipOn","MODIFIER_NAMES","Forward","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","pow","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","Rest","directionGene","reader","TwitchCycle","cycles","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","m","checkDirection","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","center","quaternionForDirection","distanceFromTarget","loc","topJoint","toTarget","degreeForward","degreeRight","oppositeFace","findLimb","oppositeLimb","opposite","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","pop","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","PatchCharacter","ARROW_GEOMETRY","geom","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","countdownToEvolution","evolutionPhase","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","treeNumber","wasSeconds","time","isSeconds","Resting","Evolving","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","Developing","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestStage","evolveWithPattern","toEvolve","pattern","withReducedCyclePattern","nextEvolution","ControlButtons","toRunning","Running","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","shapingTime","deadInterval","nextStage","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","SphereBuilder","sphere","VERTEX","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","hubs","spokes","segmentLength","hub","spoke","pullsForSpoke","set_altitude","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","sphereNumeric","FREQUENCIES","SphereView","createSphere","polygons","setPolygons","freq","setFrequency","setSphere","disabled","fabricOutput","SphereScene","PolygonView","CYLINDER","CylinderGeometry","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","otherSpokes","closest","distanceA","distanceToSquared","FrozenTab","worldFeatures","updateViewMode","updateVisibleRoles","subscription","newState","Grouping","size","StrainSlider","domain","values","setValues","setBottom","setTop","nuanceToStrain","nuance","min","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","FeaturePanel","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LiveTab","centralize","StageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","do","t","Symbol","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","PhaseTab","updateStoredState","subscriptions","active","ScriptTab","rootTenscript","runTenscript","setTenscript","setError","bootstrapOpen","setBootstrapOpen","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","bootstrapProgram","DropdownItem","tenscriptCode","setTenscriptCode","onCodeChange","newCode","compiled","compile","borderColor","Input","changeEvent","ShapeTab","selection","updateCurrentRole","adjustValue","changeIntervalScale","Face","RoleLengthAdjuster","fine","adjustment","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","Content","Phase","Shape","Live","TabPane","tabId","FullScreenButton","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","IntervalStatsSnapshot","Html","Table","event","stopPropagation","colSpan","IntervalStatsLive","pretenst","updateStats","fontFamily","textAlign","AMBIENT_COLOR","FabricView","setSelection","visualStrain","updatePretenstFactor","updateInstance","setSelectedFaces","intervalRec","rec","i","Pulls","Pushes","Both","jointRec","bullseye","updateBullseye","nonBusyCount","updateNonBusyCount","clickInterval","eye","distanceChange","towardsDistance","PerspectiveCamera","makeDefault","autoRotate","enableKeys","enablePan","enableDamping","minPolarAngle","maxPolarAngle","r","strainNuance","intervalStrainNuance","isIntervalVisible","selected","Selecting","Faces","clickFace","intervalsWithStats","Tag","text","Stars","Text","fontSize","anchorY","anchorX","pretenstAdjustment","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","dx","clientX","dy","clientY","intersectObjects","intersection","FrontSide","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","codeToRun","setRootTenscript","updateRotating","updateFullScreen","updateDemoCount","newTenscript","setTimeout","set_surface_character","featureSubscriptions","applyFeature","timer","clearTimeout","visibility","TopMiddle","ViewModeButton","click","preserveJoints","tenscriptError","toTenscript","element","document","getElementById","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","bridgeInstance","sphereInstance","floatFeatures","registerServiceWorker"],"mappings":"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","file":"static/js/5.981010ae.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    Push,\n    Pull,\n    PhiPush,\n    RootPush,\n    TipPush,\n    PhiTriangle,\n    Twist,\n    InterTwist,\n    Ring,\n    Cross,\n    TipInner,\n    TipOuter,\n    InterTip,\n    RadialPull,\n    ConnectorPull,\n    Distancer,\n}\n\nconst ROOT2 = 1.414213562373095\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst CROSS1 = 0.5\nconst CROSS2 = (PHI / 3 - 1 / 6) * ROOT3\nconst CROSS3 = PHI / 3 * ROOT3 - 1 + ROOT2 / ROOT3\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    const ring = Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return 1\n        case IntervalRole.Pull:\n            return 1\n        case IntervalRole.PhiPush:\n            return PHI\n        case IntervalRole.RootPush:\n        case IntervalRole.TipPush:\n            return ROOT2\n        case IntervalRole.PhiTriangle:\n        case IntervalRole.Twist:\n        case IntervalRole.TipOuter:\n        case IntervalRole.InterTwist:\n        case IntervalRole.InterTip:\n            return 1\n        case IntervalRole.TipInner:\n        case IntervalRole.Ring:\n            return ring\n        case IntervalRole.Cross:\n            return Math.sqrt(CROSS1 * CROSS1 + CROSS2 * CROSS2 + CROSS3 * CROSS3)\n        case IntervalRole.Distancer:\n            return 1\n        default:\n            throw new Error(`Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole, long?: boolean): string {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return long ? \"Push\" : \"+\"\n        case IntervalRole.Pull:\n            return long ? \"Pull\" : \"-\"\n        case IntervalRole.PhiPush:\n            return long ? \"Phi-Push\" : \"PP\"\n        case IntervalRole.RootPush:\n            return long ? \"Root-Push\" : \"RP\"\n        case IntervalRole.TipPush:\n            return long ? \"Tip-Push\" : \"TP\"\n        case IntervalRole.PhiTriangle:\n            return long ? \"Phi Triangle\" : \"PT\"\n        case IntervalRole.Ring:\n            return long ? \"Ring\" : \"RI\"\n        case IntervalRole.Twist:\n            return long ? \"Twist\" : \"TW\"\n        case IntervalRole.TipInner:\n            return long ? \"Tip-Inner\" : \"TI\"\n        case IntervalRole.TipOuter:\n            return long ? \"Tip-Outer\" : \"TO\"\n        case IntervalRole.InterTwist:\n            return long ? \"Inter-Twist\" : \"IT\"\n        case IntervalRole.Cross:\n            return long ? \"Cross\" : \"CR\"\n        case IntervalRole.InterTip:\n            return long ? \"Inter-Tip\" : \"TT\"\n        case IntervalRole.Distancer:\n            return long ? \"Distancer\" : \"DI\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PhiPush:\n            case IntervalRole.RootPush:\n            case IntervalRole.TipPush:\n            case IntervalRole.PhiTriangle:\n            case IntervalRole.Twist:\n            case IntervalRole.TipOuter:\n            case IntervalRole.TipInner:\n            case IntervalRole.InterTip:\n            case IntervalRole.InterTwist:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.Distancer:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n        case IntervalRole.PhiPush:\n        case IntervalRole.RootPush:\n        case IntervalRole.TipPush:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, isPushRole, JOINT_RADIUS, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {Left, Right, LeftRight, RightLeft}\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n        case Spin.LeftRight:\n            return Spin.RightLeft\n        case Spin.RightLeft:\n            return Spin.LeftRight\n    }\n}\n\nexport function spinChars(spin: Spin): string {\n    switch (spin) {\n        case Spin.Left:\n            return \"L\"\n        case Spin.Right:\n            return \"R\"\n        case Spin.LeftRight:\n            return \"LR\"\n        case Spin.RightLeft:\n            return \"RL\"\n    }\n}\n\nexport function spinFromChars(chars: string): Spin {\n    switch (chars) {\n        case \"L\":\n            return Spin.Left\n        case \"R\":\n            return Spin.Right\n        case \"LR\":\n            return Spin.LeftRight\n        default:\n            return Spin.RightLeft\n    }\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    instance: FabricInstance\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IIntervalStats {\n    stiffness: number\n    strain: number\n    length: number\n    idealLength: number\n    linearDensity: number\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n    stats?: IIntervalStats\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function addIntervalStats(interval: IInterval, pushOverPull: number, pretenstFactor: number): IIntervalStats {\n    const {floatView} = interval.alpha.instance\n    const stiffness = floatView.stiffnesses[interval.index] * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n    const strain = floatView.strains[interval.index]\n    const length = intervalLength(interval)\n    const idealLength = floatView.idealLengths[interval.index] * (isPushRole(interval.intervalRole) ? 1 + pretenstFactor : 1.0)\n    const linearDensity = floatView.linearDensities[interval.index]\n    const stats: IIntervalStats = {stiffness, strain, length, idealLength, linearDensity}\n    interval.stats = stats\n    return stats\n}\n\nexport function expectStats({stats}: IInterval): IIntervalStats {\n    if (!stats) {\n        throw new Error()\n    }\n    return stats\n}\n\nexport function intervalStrainNuance({alpha, index}: IInterval): number {\n    return alpha.instance.floatView.strainNuances[index]\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport enum FaceSelection {\n    None = \"None\",\n    Face = \"Face\",\n    Pulls = \"Pulls\",\n    Pushes = \"Pushes\",\n    Both = \"Both\",\n}\n\nexport interface ITip {\n    push: IInterval\n    innerPulls: IInterval[]\n    outerPulls: IInterval[]\n}\n\nexport interface IFace {\n    index: number\n    omni: boolean\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    faceSelection: FaceSelection\n    marks: IFaceMark[]\n    tip?: ITip\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function normalFromFace(face: IFace): Vector3 {\n    const origin = locationFromFace(face)\n    const cross = new Vector3()\n    const norm = new Vector3()\n    const toEnds = face.ends.map(jointLocation).map(location => location.sub(origin))\n    for (let index = 0; index < toEnds.length; index++) {\n        cross.crossVectors(toEnds[index], toEnds[(index + 1) % toEnds.length]).normalize()\n        norm.add(cross)\n    }\n    return norm.normalize()\n}\n\nexport function locationFromJoints(joints: IJoint[]): Vector3 {\n    return joints\n        .reduce((accum, joint) => accum.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / joints.length)\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface ITwist {\n    faces: IFace[]\n    scale: IPercent\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n\nexport function locationFromTwist(twist: ITwist): Vector3 {\n    const gatherJoints = (array: IJoint[], push: IInterval) => {\n        array.push(push.alpha, push.omega)\n        return array\n    }\n    return twist.pushes\n        .reduce(gatherJoints, [])\n        .reduce((loc, joint) => loc.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / (twist.pushes.length * 2))\n}\n\nexport function faceFromTwist(twist: ITwist, faceName: FaceName): IFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.a:\n                    return twist.faces[0]\n                case FaceName.A:\n                    return twist.faces[1]\n            }\n            break\n        case 8: // aBCDbcdA\n            switch (faceName) {\n                case FaceName.a: // a\n                    return twist.faces[0]\n                case FaceName.B: // B\n                    return twist.faces[2]\n                case FaceName.C: // C\n                    return twist.faces[1]\n                case FaceName.D: // D\n                    return twist.faces[3]\n                case FaceName.b: // b\n                    return twist.faces[4]\n                case FaceName.c: // c\n                    return twist.faces[5]\n                case FaceName.d: // d\n                    return twist.faces[6]\n                case FaceName.A: // A\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function faceConnectorLengthFromScale(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => isPushRole(interval.intervalRole))\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    return new Matrix4().makeBasis(x, y, z).setPosition(mid).invert()\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationX(Math.PI * -0.27)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n\nexport interface ISelection {\n    faces: IFace[]\n    intervals: IInterval[]\n    joints: IJoint[]\n}\n\nexport function emptySelection(): ISelection {\n    return {faces: [], intervals: [], joints: []}\n}\n\nexport function preserveJoints(selection: ISelection): ISelection {\n    return {faces: [], intervals: [], joints: selection.joints}\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole, roleDefaultLength } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    FaceName,\n    IFace,\n    IInterval,\n    IJoint,\n    jointDistance,\n    jointLocation,\n    percentFromFactor,\n    percentOrHundred,\n} from \"../fabric/tensegrity-types\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\n// const RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst AnchorLength = 5\nconst AnchorScale = 110\n\n/*\n\nconst RIBBON_WIDTH = 6\nconst RIBBON_STEP_LENGTH = 6\n\n        case IntervalRole.RibbonPush:\n            return Math.sqrt(RIBBON_WIDTH * RIBBON_WIDTH + RIBBON_STEP_LENGTH * RIBBON_STEP_LENGTH)\n        case IntervalRole.RibbonShort:\n            return RIBBON_STEP_LENGTH / 2\n        case IntervalRole.RibbonLong:\n            return RIBBON_WIDTH\n        case IntervalRole.RibbonHanger:\n            return 1\n\n\n */\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = roleDefaultLength(IntervalRole.Cross)\n    const ribbonLong = roleDefaultLength(IntervalRole.Cross)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location).index\n        const ribbonJoint: IJoint = {index: jointIndex, instance: tensegrity.instance}\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.Pull)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.Pull)\n        interval(curr[2], curr[3], IntervalRole.Pull)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.Pull)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.Push)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.Push)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.Push)\n        interval(prev[1], curr[0], IntervalRole.Push)\n        interval(prev[2], curr[3], IntervalRole.Push)\n        interval(prev[3], curr[2], IntervalRole.Push)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.Pull\n        const length = jointDistance(alpha, omega)\n        const scale = percentFromFactor(length)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.ends[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    tensegrity.faces.forEach(face => {\n        // const gatherAncestors = (f: IFace, id: FaceName[]): Arch => {\n        // const definition = BRICK_FACE_DEF[f.faceName]\n        // id.push(definition.negative ? definition.opposite : definition.name)\n        // const parentFace = f.brick.parentFace\n        // if (parentFace) {\n        //     return gatherAncestors(parentFace, id)\n        // } else {\n        //     return archFromFaceName(f.faceName)\n        // }\n        // return Arch.FrontRight\n        // }\n        const identities: FaceName[] = []\n        const arch = Arch.FrontRight // TODO: This is wrong! Just so it will compile.\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isFaceExtremity(group)) {\n            return\n        }\n        const distance = identities.length\n        face.ends.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${FaceName[group]}]:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        // switch (hook.faceName) {\n        //     case FaceName.NPN:\n        //         return arch === Arch.BackRight\n        //     case FaceName.NNP:\n        //         return arch === Arch.FrontRight\n        //     case FaceName.PNP:\n        //         return arch === Arch.BackLeft\n        //     case FaceName.PPN:\n        //         return arch === Arch.FrontLeft\n        //     default:\n        //         return false\n        // }\n        return true // TODO: this is wrong!\n    }\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = jointLocation(a.face.ends[a.jointIndex])\n        const bb = jointLocation(b.face.ends[b.jointIndex])\n        return aa.lengthSq() - bb.lengthSq()\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\n// function archFromFaceName(faceName: FaceName): Arch {\n//     switch (faceName) {\n//         case FaceName.NNN:\n//             return Arch.BackLeft\n//         case FaceName.PNN:\n//             return Arch.BackRight\n//         case FaceName.NPP:\n//             return Arch.FrontLeft\n//         case FaceName.PPP:\n//             return Arch.FrontRight\n//         default:\n//             throw new Error(\"Strange arch\")\n//     }\n// }\n\nfunction isFaceExtremity(faceName: FaceName): boolean {\n    return false // TODO\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, DoubleSide, LineBasicMaterial, Material, MeshBasicMaterial, MeshLambertMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return \"#281a4c\"\n        case IntervalRole.TipPush:\n        case IntervalRole.RootPush:\n            return \"#0d1147\"\n        case IntervalRole.PhiTriangle:\n            return \"#938b12\"\n        case IntervalRole.Twist:\n        case IntervalRole.TipOuter:\n            return \"#6d6c6c\"\n        case IntervalRole.InterTwist:\n            return \"#45400d\"\n        case IntervalRole.Ring:\n        case IntervalRole.TipInner:\n            return \"#a71313\"\n        case IntervalRole.Cross:\n            return \"#1b9a32\"\n        case IntervalRole.InterTip:\n            return \"#4393b3\"\n        case IntervalRole.Distancer:\n        case IntervalRole.ConnectorPull:\n        case IntervalRole.RadialPull:\n            return \"#f3f3e6\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, DoubleSide, Face3, Geometry, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#101010\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.5,\n})\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.01\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport {\n    isPushRole,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n    stageName,\n    switchToVersion,\n    Version,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalLength, intervalLocation, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function getFabricOutput(): IFabricOutput {\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput())}><FaDownload/>\n                        <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(getFabricOutput())}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} stage={stage}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, stage}: { tensegrity: Tensegrity, stage: Stage }): JSX.Element {\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const nextStage = Stage.Slack // todo\n        // const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (stage === Stage.Growing) {\n                    // tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    // tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                // tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (stage === Stage.Pretensing) {\n                    // tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        // tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined} target={tensegrity.instance.midpoint}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => (\n                            <IntervalMesh key={`I${interval.index}`} tensegrity={tensegrity} interval={interval}/>\n                        ))}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    onPointerDown?: (event: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = intervalLength(interval)\n    const isPush = isPushRole(interval.intervalRole)\n    const intervalRadius = isPush ? PUSH_RADIUS : PULL_RADIUS\n    const intervalScale = new Vector3(intervalRadius, length + (isPush ? -JOINT_RADIUS * 2 : 0), intervalRadius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {isPush ? (\n                <>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.alpha)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.omega)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.ends.map(end => (\n                <mesh\n                    key={`hook-${end.index}`}\n                    position={jointLocation(end)}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { UP, vectorFromArray } from \"./eig-util\"\nimport { FloatFeature } from \"./float-feature\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES, IntervalRole, isPushRole } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { IInterval, intervalStrainNuance } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Script = \"Script\",\n    Phase = \"Phase\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-11-03\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport enum ViewMode {\n    Lines = \"Lines\",\n    Selecting = \"Selecting\",\n    Frozen = \"Frozen\",\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    controlTab: ControlTab\n    fullScreen: boolean\n    demoCount: number\n    viewMode: ViewMode\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    currentRole: IntervalRole\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nexport function transition(state$: BehaviorSubject<IStoredState>, partial: Partial<IStoredState>): void {\n    const state = state$.getValue()\n    return state$.next({...state, nonce: state.nonce + 1, ...partial})\n}\n\nfunction initialStoredState(\n    toConfig: (feature: WorldFeature) => IFeatureConfig,\n    defaultValue: (feature: WorldFeature) => number,\n    demoCount: number,\n): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        controlTab: ControlTab.Script,\n        demoCount,\n        fullScreen: true,\n        viewMode: ViewMode.Lines,\n        rotating: true,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        currentRole: IntervalRole.PhiPush,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = intervalStrainNuance(interval)\n    if (isPushRole(interval.intervalRole)) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            if (storedState.demoCount === 0) {\n                return initialStoredState(toConfig, defaultValue, storedState.demoCount)\n            }\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue, 0)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Shaping Stiffness\",\n                percents: [10, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness\",\n                percents: [1, 10, 50, 100, 250, 500, 1000, 2500, 5000],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            transition(storedState$, {featureValues})\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    FACE_NAME_CHARS,\n    FACE_NAMES,\n    faceFromTwist,\n    FaceName,\n    faceNameFromChar,\n    IFaceMark,\n    IPercent,\n    isFaceNameChar,\n    ITwist,\n    jointLocation,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChars,\n    spinFromChars,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'Phi':LR()\",\n    \"'One':L(1)\",\n    \"'Tips':L(a(3,MA1,MA2),A(3,MA1,MA2)):1=tip:2=distance-80\",\n    \"'Axoneme':L(30,S95)\",\n    \"'Knee':L(3,b3)\",\n    \"'Snelson Star':LR(a(15,S90,MA1),b(15,S90,MA1),c(15,S90,MA1),d(15,S90,MA1)):1=tip\",\n    \"'Tripod with Knees':RL(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\",\n    \"'Pretenst Lander':LR(B(15,S90),C(15,S90),D(15,S90))\",\n    \"'Zig Zag Loop':LR(d(3,MA1),c(7,b(7,d(7,d(7,d(7,d(3,MA1))))))):1=join\",\n    \"'Bulge Ring':L(A(15,S90,MA1), a(16,S90,MA1)):1=join\",\n    \"'Ring':L(A(19,MA1),a(18,MA1)):1=join\",\n    \"'Convergence':LR(a1,b(15,S92,MA1),c(15,S92,MA1),d(15,S92,MA1)):1=join\",\n    \"'Halo by Crane':L(5,S92,b(12,S92,MA1),d(11,S92,MA1)):1=join\",\n    \"'Thick Tripod':LR(A3,B(8,MA1),C(8,MA1),D(8,MA1)):1=distance-35\",\n    \"'Diamond':RL(a(5,b(5,c(5,c(2,MA3)),d(5,b(2,MA4))),c(5,d(5,b(2,MA5)),c(5,c(2,MA1))),d(5,c(5,c(2,MA6)),d(5,b(2,MA2)))),b(5,b(5,d(2,MA3)),c(5,c(2,MA2))),c(5,b(5,d(2,MA6)),c(5,c(2,MA5))),d(5,c(5,c(2,MA4)),b(5,d(2,MA1)))):*=join\",\n    \"'Composed':L(6,b(4,MA1),c(4,MA1),d(4,MA1)):1=subtree(b5,c5,d5)\",\n    \"'Equus Lunae':LR(A(16,S95,Mb0,MA1),b(16,S95,Md0,MA1),a(16,S95,Md0,MA1),B(16,Mb0,MA1,S95)):0=distance-60:1=tip\",\n    \"'Infinity':LR(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2)):*=join\",\n    \"'Binfinity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2)):*=join\",\n    \"'Mobiosity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3)):*=join\",\n    \"'Cup':L24(15,S105)\",\n    \"'Torus':L24(A(13,S95,MA1),a(14,S95,MA1)):1=join\",\n    \"'Pretenst Squared':L(a(3,MA1),A(2,MA1)):1=distance-70\",\n]\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: number,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly marks: Record<FaceName, IFaceMark[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === -1 && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): TenscriptNode {\n        if (this.forward > 0) {\n            return new TenscriptNode(this.forward - 1, this.scale, this.subtrees, this.marks)\n        }\n        return this\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IFaceMark [] | undefined {\n        return this.marks[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.marks[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.marks[faceName])\n    }\n\n    public get code(): string {\n        const isForward = this.forward > 0\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && isForward && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (isForward) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.marks)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n\nexport enum FaceAction {\n    Subtree,\n    Base,\n    Join,\n    Distance,\n    Tip,\n    Anchor,\n    None,\n}\n\nexport interface IMark {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    spin: Spin\n    pushesPerTwist: number\n    tree: TenscriptNode\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nexport function treeToTenscript(\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    tree: TenscriptNode,\n    marks: Record<number, IMark>,\n    fromUrl: boolean,\n): ITenscript {\n    const optionalPushes = pushesPerTwist > 3 ? pushesPerTwist.toFixed(0) : \"\"\n    const mainCode = spinChars(spin) + optionalPushes + tree.code\n    const markSections: string[] = []\n    Object.entries(marks).forEach(([keyNumber, mark]) => {\n        const key = keyNumber === \"-1\" ? \"*\" : keyNumber\n        switch (mark.action) {\n            case FaceAction.Subtree:\n                const subtree = mark.tree\n                if (!subtree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=subtree${subtree.code}`)\n                break\n            case FaceAction.Base:\n                markSections.push(`${key}=base`)\n                break\n            case FaceAction.Join:\n                markSections.push(`${key}=join`)\n                break\n            case FaceAction.Distance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=distance-${mark.scale._}`)\n                break\n            case FaceAction.Tip:\n                markSections.push(`${key}=tip`)\n                break\n            case FaceAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {\n        name, tree, spin, pushesPerTwist, marks, fromUrl,\n        code: `'${name}':${mainCode}${subtreesCode}`,\n    }\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nconst MAIN_CODE = /([LR]*)(\\d*)(\\(.*\\))/\n\nfunction parseMain(main: string): { mainCode: string, spin: Spin, pushesPerTwist: number } {\n    const parsed = MAIN_CODE.exec(main)\n    if (!parsed) {\n        throw new Error(\"Couldn't parse\")\n    }\n    const spin = spinFromChars(parsed[1])\n    const pushesPerTwist = parsed[2].length === 0 ? 3 : parseInt(parsed[2], 10)\n    const mainCode = parsed[3]\n    return {mainCode, spin, pushesPerTwist}\n}\n\nfunction parseCode(code: string): {\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainCode: string,\n    markCode: Record<number, string>,\n} {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => MAIN_CODE.test(part)) || \"LR()\"\n    const {mainCode, spin, pushesPerTwist} = parseMain(foundMain)\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^(\\d+|\\*)=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const key = part.substring(0, eq)\n        const mark = key === \"*\" ? -1 : Number(key)\n        markCode[mark] = part.substring(eq + 1)\n    })\n    const name = foundName ? foundName.replace(/'/g, \"\") : \"\"\n    return {name, spin, pushesPerTwist, mainCode, markCode}\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToNode(codeFragment: string): TenscriptNode | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n\n        let forward = -1\n        let scale = percentOrHundred()\n        const subtrees = {} as Record<FaceName, TenscriptNode>\n        const marks = {} as Record<FaceName, IFaceMark[]>\n\n        function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToNode(content)\n            return {codeTree, skip}\n        }\n\n        function addMark(faceName: FaceName, markNumber: number): void {\n            const found = marks[faceName]\n            const mark = {_: markNumber}\n            if (found) {\n                found.push(mark)\n            } else {\n                marks[faceName] = [mark]\n            }\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isFaceNameChar(char)) {\n                const direction = subtree(index + 1)\n                const codeTree = direction.codeTree\n                if (!codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                subtrees[faceNameFromChar(char)] = codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forwardArg = argument(codeString, false)\n                forward = toNumber(forwardArg.content)\n                index += forwardArg.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        scale = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const faceNameChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return new TenscriptNode(forward, scale, subtrees, marks).nonEmpty\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, spin, pushesPerTwist, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            error(\"No name\")\n            return undefined\n        }\n        const root = fragmentToNode(mainCode)\n        if (!root) {\n            return undefined\n        }\n        root.root = true\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToNode(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base\")) {\n                marks[key] = <IMark>{action: FaceAction.Base}\n            } else if (c.startsWith(\"tip\")) {\n                marks[key] = <IMark>{action: FaceAction.Tip}\n            } else if (c.startsWith(\"join\")) {\n                marks[key] = <IMark>{action: FaceAction.Join}\n            } else if (c.startsWith(\"distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[1], 10)}\n                marks[key] = <IMark>{action: FaceAction.Distance, scale}\n            } else if (c.startsWith(\"anchor\")) {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: FaceAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, spin, pushesPerTwist, root, marks, fromUrl)\n    } catch (e) {\n        console.error(\"err\", e)\n        error(e.message)\n        return undefined\n    }\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => {\n    const tenscript = codeToTenscript(message => {\n        throw new Error(`Bootstrap parse error in \"${script}\"! ${message}`)\n    }, false, script)\n    if (!tenscript) {\n        throw new Error(`Unable to parse [${script}]`)\n    }\n    return tenscript\n})\n\nexport interface IBud {\n    builder: TensegrityBuilder\n    tree: TenscriptNode\n    twist: ITwist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        faceFromTwist(twistToMark, thisFace).marks.push(...marks)\n    })\n}\n\nfunction grow({builder, twist, marks}: IBud,\n              afterTree: TenscriptNode, faceName: FaceName, omni: boolean, scale: IPercent): IBud {\n    const baseFace = faceFromTwist(twist, faceName)\n    const newTwist = builder.createTwistOn(baseFace, scale, omni)\n    if (afterTree.forward === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, builder, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, builder, reorient} = bud\n        if (tree.forward > 0) {\n            const afterTree = tree.decremented\n            const omni = tree.needsOmniTwist && afterTree.forward === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = builder.tensegrity.joints.map(jointLocation)\n                builder.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const afterTree = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const markFound = marks[twistMark._]\n                        const mark = markFound ? markFound : marks[-1]\n                        if (mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(\"code from URL\", message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { avg, CONNECTOR_LENGTH, IntervalRole, midpoint, normal, roleDefaultLength, sub } from \"./eig-util\"\nimport { FaceAction, IBud, ITenscript } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    faceFromTwist,\n    FaceName,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    IRadialPull,\n    isOmniSpin,\n    ITip,\n    ITwist,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    oppositeSpin,\n    otherJoint,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class TensegrityBuilder {\n    constructor(public readonly tensegrity: Tensegrity) {\n    }\n\n    public createBud({spin, tree, marks}: ITenscript, origin?: Vector3): IBud {\n        const reorient = tree.forward === -1\n        const at = origin ? origin : new Vector3()\n        const twist = this.createTwistAt(at, spin, percentOrHundred())\n        return {builder: this, tree, twist, marks, reorient}\n    }\n\n    public createTwistOn(baseFace: IFace, twistScale: IPercent, omni: boolean): ITwist {\n        const baseFactor = factorFromPercent(baseFace.scale)\n        const scale = percentFromFactor(factorFromPercent(twistScale) * baseFactor)\n        if (omni) {\n            const pushRole = IntervalRole.PhiPush\n            const pullRole = IntervalRole.PhiTriangle\n            const bottom = this.createTwist(faceTwistPointPairs(baseFace, scale), scale, oppositeSpin(baseFace.spin), pushRole, pullRole)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.A)\n            const top = this.createTwist(faceTwistPointPairs(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), pushRole, pullRole)\n            const twist = this.createOmniTwist(bottom, top)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.a), connectRoles(baseFace.omni, true))\n            return twist\n        } else {\n            const points = faceTwistPointPairs(baseFace, scale)\n            const twist = this.createTwist(points, scale, oppositeSpin(baseFace.spin), IntervalRole.RootPush, IntervalRole.InterTwist)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.a), connectRoles(baseFace.omni, false))\n            return twist\n        }\n    }\n\n    public createTipOn(baseFace: IFace): ITip {\n        const pair = tipPointPair(baseFace)\n        const alpha = this.tensegrity.createJoint(pair.alpha)\n        const omega = this.tensegrity.createJoint(pair.omega)\n        this.tensegrity.instance.refreshFloatView()\n        const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.TipPush, baseFace.scale)\n        const tip: ITip = {push, innerPulls: [], outerPulls: []}\n        baseFace.ends.forEach(joint => {\n            tip.innerPulls.push(this.tensegrity.createInterval(joint, alpha, IntervalRole.TipInner, baseFace.scale))\n            tip.outerPulls.push(this.tensegrity.createInterval(joint, omega, IntervalRole.TipOuter, baseFace.scale))\n        })\n        baseFace.pulls.forEach(pull => this.tensegrity.removeInterval(pull))\n        baseFace.tip = tip\n        return tip\n    }\n\n    public createInterTip(tipA: ITip, tipB: ITip, distanceScale: IPercent): IInterval {\n        const alpha = tipA.push.alpha\n        const omega = tipB.push.alpha\n        const distance = jointDistance(alpha, omega)\n        const scale = percentFromFactor(factorFromPercent(distanceScale) * distance)\n        return this.tensegrity.createInterval(alpha, omega, IntervalRole.InterTip, scale)\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createRadialPulls(faces: IFace[], action: FaceAction, actionScale?: IPercent): void {\n        const centerBrickFaceIntervals = () => {\n            const scale = percentFromFactor(averageScaleFactor(faces))\n            const where = locationFromFaces(faces)\n            const omniTwist = this.createTwistAt(where, Spin.LeftRight, scale)\n            this.tensegrity.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.tensegrity.createRadialPull(closestFace, face)\n            })\n        }\n        switch (action) {\n            case FaceAction.Distance:\n                const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        this.tensegrity.createRadialPull(faceA, faceB, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.tensegrity.createRadialPull(faces[0], faces[1])\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n        if (action === FaceAction.Distance) {\n        } else if (action === FaceAction.Join) {\n        }\n    }\n\n    public checkConnectors(radialPulls: IRadialPull[], removeInterval: (interval: IInterval) => void): IRadialPull[] {\n        if (radialPulls.length === 0) {\n            return radialPulls\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega, connectRoles(alpha.omni, omega.omni))\n        }\n        return radialPulls.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.ConnectorPull) {\n                const distance = jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    removeInterval(axis)\n                    alphaRays.forEach(removeInterval)\n                    omegaRays.forEach(removeInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    // =====================================================\n\n    private createTwistAt(location: Vector3, spin: Spin, scale: IPercent): ITwist {\n        const pushesPerTwist = this.tensegrity.pushesPerTwist\n        if (isOmniSpin(spin)) {\n            const pushRole = IntervalRole.PhiPush\n            const pullRole = IntervalRole.PhiTriangle\n            const bottomSpin = spin === Spin.LeftRight ? Spin.Left : Spin.Right\n            const bottom = this.createTwist(firstTwistPointPairs(location, pushesPerTwist, bottomSpin, scale), scale, bottomSpin, pushRole, pullRole)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.A)\n            const top = this.createTwist(faceTwistPointPairs(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), pushRole, pullRole)\n            return this.createOmniTwist(bottom, top)\n        } else {\n            return this.createTwist(firstTwistPointPairs(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.RootPush, IntervalRole.InterTwist)\n        }\n    }\n\n    private createOmniTwist(bottomTwist: ITwist, topTwist: ITwist): ITwist {\n        const topFace = topTwist.faces[1]\n        const bottomFace = bottomTwist.faces[0]\n        const avoidFaces = (joint: IJoint) => !(topFace.ends.some(end => joint.index === end.index) || bottomFace.ends.some(end => joint.index === end.index))\n        const connectPulls = this.connect(bottomTwist.faces[1], topTwist.faces[0], connectRoles(true, true))\n        const pushes = [...bottomTwist.pushes, ...topTwist.pushes]\n        const pulls = [...bottomTwist.pulls.filter(p => !p.removed), ...topTwist.pulls.filter(p => !p.removed), ...connectPulls]\n        const {scale} = bottomTwist\n        const createFaceTouching = (joint: IJoint, spin: Spin): IFace => {\n            const facePulls = pulls.filter(({alpha, omega}) =>\n                joint.index === alpha.index || joint.index === omega.index)\n            const ends = facePulls.map(pull => otherJoint(joint, pull)).filter(avoidFaces)\n            const thirdForward = pulls.find(({alpha, omega}) =>\n                alpha.index === ends[0].index && omega.index === ends[1].index)\n            const thirdReverse = pulls.find(({alpha, omega}) =>\n                alpha.index === ends[1].index && omega.index === ends[0].index)\n            ends.push(joint)\n            if (spin === Spin.Left) {\n                ends.reverse()\n            }\n            if (thirdForward) {\n                facePulls.push(thirdForward)\n            } else if (thirdReverse) {\n                facePulls.push(thirdReverse)\n            } else {\n                throw new Error(\"Interval not found\")\n            }\n            return this.tensegrity.createFace(ends, true, spin, scale)\n        }\n        const topTouching = topFace.ends.map(end => createFaceTouching(end, oppositeSpin(topFace.spin)))\n        const bottomTouching = bottomFace.ends.map(end => createFaceTouching(end, oppositeSpin(bottomFace.spin)))\n        bottomFace.omni = topFace.omni = true\n        const faces = [bottomFace, ...bottomTouching, ...topTouching, topFace]\n        return {scale, pushes, pulls, faces}\n    }\n\n    private connect(faceA: IFace, faceB: IFace, roles: IConnectRoles): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            const b0 = b[index]\n            const b1 = b[(index + 1) % b.length]\n            const c0 = c[index]\n            pulls.push(this.tensegrity.createInterval(b0, c0, roles.ring, scale))\n            pulls.push(this.tensegrity.createInterval(c0, b1, roles.ring, scale))\n        }\n        if (!this.tensegrity.minimal || roles.ring === roles.up) {\n            for (let index = 0; index < b.length; index++) {\n                const a0 = a[index]\n                const a1 = a[(index + 1) % a.length]\n                const b0 = b[index]\n                const b1 = b[(index + 1) % b.length]\n                const c0 = c[index]\n                const d0 = d[index]\n                if (faceA.spin === Spin.Left) {\n                    pulls.push(this.tensegrity.createInterval(c0, a1, roles.down, scale))\n                } else {\n                    pulls.push(this.tensegrity.createInterval(c0, a0, roles.down, scale))\n                }\n                if (faceB.spin === Spin.Left) {\n                    pulls.push(this.tensegrity.createInterval(b1, d0, roles.up, scale))\n                } else {\n                    pulls.push(this.tensegrity.createInterval(b0, d0, roles.up, scale))\n                }\n            }\n        }\n        if (roles.ring === IntervalRole.Ring) {\n            const faceScale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n            for (let index = 0; index < b.length; index++) {\n                const a0 = a[index]\n                const a1 = a[(index + 1) % a.length]\n                const b0 = b[index]\n                const b1 = b[(index + 1) % b.length]\n                const c0 = c[index]\n                const c1 = c[(index + 1) % c.length]\n                const cN1 = c[(index + c.length - 1) % c.length]\n                const d0 = d[index]\n                if (faceA.spin === Spin.Left) {\n                    this.tensegrity.createFace([c0, a1, b0], false, oppositeSpin(faceA.spin), faceScale)\n                } else {\n                    this.tensegrity.createFace([c0, b1, a0], false, oppositeSpin(faceA.spin), faceScale)\n                }\n                if (faceB.spin === Spin.Left) {\n                    this.tensegrity.createFace([b1, d0, c1], false, oppositeSpin(faceB.spin), faceScale)\n                } else {\n                    this.tensegrity.createFace([b0, cN1, d0], false, oppositeSpin(faceB.spin), faceScale)\n                }\n            }\n        }\n        this.tensegrity.removeFace(faceB)\n        this.tensegrity.removeFace(faceA)\n        return pulls\n    }\n\n    private createTwist(points: IPointPair[], scale: IPercent, spin: Spin, pushRole: IntervalRole, pullRole: IntervalRole): ITwist {\n        const twist: ITwist = {scale, pushes: [], pulls: [], faces: []}\n        const ends = points.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, pushRole, scale)\n            twist.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const alphaEnds = ends.map(({alpha}) => alpha)\n        const omegaEnds = ends.map(({omega}) => omega).reverse()\n        twist.pulls.push(...alphaEnds.map((alpha, index) =>\n            this.tensegrity.createInterval(alpha, alphaEnds[(index + 1) % alphaEnds.length], pullRole, scale)))\n        twist.faces.push(this.tensegrity.createFace(alphaEnds, false, spin, scale))\n        twist.pulls.push(...omegaEnds.map((omega, index) =>\n            this.tensegrity.createInterval(omega, omegaEnds[(index + 1) % omegaEnds.length], pullRole, scale)))\n        twist.faces.push(this.tensegrity.createFace(omegaEnds, false, spin, scale))\n        ends.forEach(({alpha}, index) => {\n            const offset = spin === Spin.Left ? ends.length - 1 : 1\n            const omega = ends[(index + offset) % ends.length].omega\n            twist.pulls.push(this.tensegrity.createInterval(alpha, omega, pullRole, scale))\n        })\n        return twist\n    }\n}\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\ninterface IConnectRoles {\n    ring: IntervalRole\n    up: IntervalRole\n    down: IntervalRole\n}\n\nfunction connectRoles(omniA: boolean, omniB: boolean): IConnectRoles {\n    if (!omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.InterTwist}\n    } else if (omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Cross, down: IntervalRole.InterTwist}\n    } else if (!omniA && omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.Cross}\n    } else {\n        return {ring: IntervalRole.PhiTriangle, down: IntervalRole.PhiTriangle, up: IntervalRole.PhiTriangle}\n    }\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction firstTwistPointPairs(location: Vector3, pushesPerTwist: number, spin: Spin, scale: IPercent): IPointPair[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return twistPointPairs(base, spin, scale)\n}\n\nfunction faceTwistPointPairs(face: IFace, scale: IPercent): IPointPair[] {\n    const base = face.ends.map(jointLocation).reverse()\n    return twistPointPairs(base, oppositeSpin(face.spin), scale)\n}\n\nfunction tipPointPair(face: IFace): IPointPair {\n    const base = face.ends.map(jointLocation).reverse()\n    const mid = midpoint(base)\n    const out = normal(base)\n    const tipLength = factorFromPercent(face.scale) * roleDefaultLength(IntervalRole.TipPush)\n    const alpha = new Vector3().copy(mid).addScaledVector(out, 0.1 * tipLength)\n    const omega = new Vector3().copy(mid).addScaledVector(out, -0.1 * tipLength)\n    return {alpha, omega}\n}\n\nfunction twistPointPairs(base: Vector3[], spin: Spin, scale: IPercent): IPointPair[] {\n    const initialLength = roleDefaultLength(IntervalRole.PhiTriangle) * factorFromPercent(scale) / Math.sqrt(3)\n    const tinyRadius = initialLength * base.length / 3 / Math.sqrt(3)\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const up = normal(base).multiplyScalar(-initialLength)\n    for (let index = 0; index < base.length; index++) {\n        const a = sub(base[(index + base.length - 1) % base.length], mid)\n        const b = sub(base[index], mid)\n        const c = sub(base[(index + 1) % base.length], mid)\n        const d = sub(base[(index + 2) % base.length], mid)\n        const bc = avg(b, c)\n        const cd = avg(c, d)\n        const ba = avg(b, a)\n        const alpha = new Vector3().copy(mid)\n        const omega = new Vector3().copy(mid).add(up)\n        if (spin === Spin.Left) {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(cd, tinyRadius)\n        } else {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(ba, tinyRadius)\n        }\n        points.push({alpha, omega})\n    }\n    return points\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, intervalRoleName, isPushRole, roleDefaultLength } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { execute, FaceAction, IBud, IMark, ITenscript } from \"./tenscript\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    expectPush,\n    FaceSelection,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    intervalLength,\n    IPercent,\n    IRadialPull,\n    jointDistance,\n    jointHolesFromJoint,\n    jointLocation,\n    locationFromFace,\n    percentFromFactor,\n    percentOrHundred,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport type Job = (tensegrity: Tensegrity) => void\n\nexport class Tensegrity {\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n    public faces: IFace[] = []\n    public pushesPerTwist: number\n    public readonly builder: TensegrityBuilder\n\n    private jobs: Job[] = []\n    private buds: IBud[]\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly scale: IPercent,\n        public readonly minimal: boolean,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.pushesPerTwist = this.tenscript.pushesPerTwist\n        this.builder = new TensegrityBuilder(this)\n        this.buds = [this.builder.createBud(this.tenscript)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public get intervalsWithStats(): IInterval[] {\n        return this.intervals.filter(interval => interval.stats)\n    }\n\n    public createJoint(location: Vector3): IJoint { // TODO: remove joint, reuse them\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const alphaJoint = this.createJoint(locationFromFace(alpha))\n        const omegaJoint = this.createJoint(locationFromFace(omega))\n        this.instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.intervalRole) {\n            case IntervalRole.ConnectorPull:\n                this.connectors.push(radialPull)\n                break\n            case IntervalRole.Distancer:\n                this.distancers.push(radialPull)\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent): IInterval {\n        const restLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const idealLength = jointDistance(alpha, omega)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, isPushRole(intervalRole), idealLength, restLength, countdown)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(ends: IJoint[], omni: boolean, spin: Spin, scale: IPercent): IFace {\n        const f0 = ends[0]\n        const f1 = ends[Math.floor(2 * ends.length / 3)]\n        const f2 = ends[Math.floor(ends.length / 3)]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const pulls = [[f0, f1], [f1, f2], [f2, f0]].reduce((list: IInterval[], pair) => {\n            const p = this.intervals.find(intervalJoins(pair[0], pair[1]))\n            return p ? [...list, p] : list\n        }, [])\n        const faceSelection = FaceSelection.None\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {index, omni, spin, scale, ends, pushes, pulls, faceSelection, marks: []}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public do(job: Job): void {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const job = this.jobs.shift()\n        if (job) {\n            job(this)\n            return true\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this.faces, this.tenscript.marks, this.builder).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.builder.checkConnectors(this.connectors, interval => this.removeInterval(interval))\n                return false\n            }\n            this.stage = Stage.Shaping\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const floatView = this.instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return jointLocation(interval.alpha).y >= 0 || jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        this.instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public findInterval(a: IJoint, b: IJoint): IInterval | undefined {\n        return this.intervals.find(intervalJoins(a, b))\n    }\n\n    public getFabricOutput(pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const holes = jointHolesFromJoint(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    radius: jointRadius,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor: false, // TODO: can this be determined?\n                    holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const isPush = isPushRole(interval.intervalRole)\n                const radius = isPush ? pushRadius : pullRadius\n                const currentLength = intervalLength(interval)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    scale: interval.scale._,\n                    idealLength: idealLengths[interval.index],\n                    isPush,\n                    length: currentLength,\n                    radius,\n                }\n            }),\n        }\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.Distancer : IntervalRole.ConnectorPull\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const scale = percentOrHundred()\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.RadialPull\n        const scale = percentFromFactor(restLength)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        face.marks.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case FaceAction.Base:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case FaceAction.Join:\n                this.builder.createRadialPulls(this.faces, this.mark.action, this.mark.scale)\n                break\n            case FaceAction.Distance:\n                if (this.faces.length === 2 && this.faces[0].tip && this.faces[1].tip && this.mark.scale) {\n                    this.builder.createInterTip(this.faces[0].tip, this.faces[1].tip, this.mark.scale)\n                } else {\n                    this.builder.createRadialPulls(this.faces, this.mark.action, this.mark.scale)\n                }\n                break\n            case FaceAction.Tip:\n                this.faces.forEach(face => this.builder.createTipOn(face))\n                break\n            case FaceAction.Anchor:\n                // this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceName } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: FaceName\n    faceName: FaceName\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    // private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            return true // todo\n            // const nextStage = embryo.iterate()\n            // const life = embryo.life$.getValue()\n            // if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            //     embryo.transition = {stage: Stage.Pretenst}\n            // } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n            //     embryo.transition = {stage: nextStage}\n            // }\n            // switch (nextStage) {\n            //     case Stage.Shaping:\n            //         if (this.shapingTime <= 0) {\n            //             instance.fabric.adopt_lengths()\n            //             // const faceIntervals = [...embryo.faceIntervals]\n            //             // faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n            //             // instance.iterate(Stage.Slack)\n            //             // instance.iterate(Stage.Pretensing)\n            //         } else {\n            //             this.shapingTime--\n            //         }\n            //         return false\n            //     case Stage.Pretensing:\n            //         return true\n            //     case Stage.Pretenst:\n            //         extractGotchiFaces(embryo, state.muscles, state.extremities)\n            //         embryo.transition = {stage: Stage.Pretenst}\n            //         embryo.iterate()\n            //         this.embryo = undefined\n            //         this.twitcher = new Twitcher(state)\n            //         return true\n            //     default:\n            //         return false\n            // }\n        } else {\n            // instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance} = muscle\n    const oppositeFace = FaceName.a\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.faceName === oppositeFace)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\n// function extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    // tensegrity.brickFaces\n    //     .filter(face => !face.removed && face.brick.parentFace)\n    //     .forEach(face => {\n    //         const gatherAncestors = (f: IBrickFace, faceNames: FaceName[]): Limb => {\n    //             const definition = BRICK_FACE_DEF[f.faceName]\n    //             faceNames.push(definition.negative ? definition.opposite : definition.name)\n    //             const parentFace = f.brick.parentFace\n    //             if (parentFace) {\n    //                 return gatherAncestors(parentFace, faceNames)\n    //             } else {\n    //                 return limbFromFaceName(f.faceName)\n    //             }\n    //         }\n    //         const identities: FaceName[] = []\n    //         const limb = gatherAncestors(face, identities)\n    //         const group = identities.shift()\n    //         const faceName = face.faceName\n    //         if (!group) {\n    //             throw new Error(\"no top!\")\n    //         }\n    //         const distance = identities.length\n    //         const faceIndex = face.index\n    //         if (isExtremity(group)) {\n    //             const name = `[${limb}]`\n    //             extremities.push({faceIndex, name, limb})\n    //         } else {\n    //             const name = `[${limb}]:[${distance}:${FaceName[group]}]:{tri=${FaceName[faceName]}}`\n    //             muscles.push({faceIndex, name, limb, distance, group, faceName})\n    //         }\n    //     })\n// }\n\n// function isExtremity(faceName: FaceName): boolean {\n//     const definition = BRICK_FACE_DEF[faceName]\n//     const normalizedFace = definition.negative ? definition.opposite : faceName\n//     return normalizedFace === FaceName.PPP\n// }\n//\n// function limbFromFaceName(face: FaceName): Limb {\n//     switch (face) {\n//         case FaceName.NNN:\n//             return Limb.BackLeft\n//         case FaceName.PNN:\n//             return Limb.BackRight\n//         case FaceName.NPP:\n//             return Limb.FrontLeft\n//         case FaceName.PPP:\n//             return Limb.FrontRight\n//         default:\n//             throw new Error(\"Strange limb\")\n//     }\n// }\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateStage(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.stage$.subscribe((latestStage) => {\n            if (stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(latestStage)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\n// const TOWARDS_POSITION = 0.003\n// const TOWARDS_TARGET = 0.01\n// const TARGET_HEIGHT = 3\n// const TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    // const midpoint = new Vector3()\n\n    // function developing(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 6\n    // }\n    //\n    // function resting(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 10\n    // }\n    //\n    // function running(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 6\n    // }\n    //\n    // function evolving(e: Evolution): number {\n    //     switch (e.iterate()) {\n    //         case EvolutionPhase.EvolutionDone:\n    //             console.log(\"Evolution DONE\")\n    //             stopEvolution()\n    //             break\n    //         case EvolutionPhase.EvolutionHarder:\n    //             console.log(\"Evolution advance...\")\n    //             stopEvolution(e.withReducedCyclePattern)\n    //             break\n    //     }\n    //     e.getMidpoint(midpoint)\n    //     return 15\n    // }\n\n    useFrame(() => {\n        // const approachDistance = (distance: number) => {\n        //     const position = control.object.position\n        //     const positionToTarget = new Vector3().subVectors(position, control.target)\n        //     const deltaDistance = distance - positionToTarget.length()\n        //     positionToTarget.normalize()\n        //     position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n        //     position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        // }\n        // switch (happening) {\n        //     case Happening.Developing:\n        //         if (gotchi) {\n        //             approachDistance(developing(gotchi))\n        //         }\n        //         break\n        //     case Happening.Resting:\n        //         if (gotchi) {\n        //             approachDistance(resting(gotchi))\n        //         }\n        //         break\n        //     case Happening.Running:\n        //         if (gotchi) {\n        //             approachDistance(running(gotchi))\n        //         }\n        //         break\n        //     case Happening.Evolving:\n        //         if (evolution) {\n        //             approachDistance(evolving(evolution))\n        //             evolutionPhase(evolution.phase)\n        //         }\n        //         break\n        // }\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined}/>\n            {/*todo: chase the gotchi*/}\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.stage$.getValue() === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.stage$.getValue()\n        this.tensegrity.iterate()\n        const nextStage = Stage.Slack // todo\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            // this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            // this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    // instance.iterate(Stage.Slack)\n                    // instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { jointDistance } from \"../fabric/tensegrity-types\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const push = this.sphere.hubs[0].spokes[0].push\n        const segmentLength = jointDistance(push.alpha, push.omega) * 0.28\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.VisualStrain:\n            return 0\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaCamera, FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, CylinderGeometry, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, PULL_RADIUS, PUSH_RADIUS, switchToVersion, UP, Version } from \"../fabric/eig-util\"\nimport { jointDistance } from \"../fabric/tensegrity-types\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [polygons, setPolygons] = useState(false)\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => setPolygons(!polygons)}><FaCamera/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere} polygons={polygons}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere, polygons}: {\n    sphere: TensegritySphere,\n    polygons: boolean,\n}): JSX.Element {\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        if (!polygons) {\n            sphere.iterate()\n        }\n        // const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        // control.target.add(toMidpoint)\n        // control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: {\n    sphere: TensegritySphere,\n}): JSX.Element {\n    return (\n        <group>\n            {sphere.pulls.map((pull: IPull) => {\n                const unit = sphere.instance.unitVector(pull.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.PhiTriangle)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {sphere.pushes.map((push: IPush) => {\n                const unit = sphere.instance.unitVector(push.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.RootPush)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 4, 2.5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint, jointDistance, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const idealLength = alphaHub.location.distanceTo(omegaHub.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(alpha.index, omega.index, true, idealLength, idealLength, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub,\n            location: () => new Vector3()\n                .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, restLength: number) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const idealLength = jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, 100)\n            const interval: IPull = {\n                index, alpha, omega,\n                location: () => new Vector3()\n                    .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2)\n        return pulls\n    }\n\n    public iterate(): void {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return\n        }\n        switch (this.instance.stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.instance.stage = Stage.Shaping\n                break\n            case Stage.Shaping:\n                if (this.fabric.age > 8000) {\n                    this.instance.stage = Stage.Slack\n                }\n                break\n            case Stage.Slack:\n                this.instance.stage = Stage.Pretensing\n                break\n            case Stage.Pretensing:\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const jointRadius = radius * JOINT_RADIUS / PUSH_RADIUS\n                    const currentLength = jointDistance(push.alpha, push.omega)\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const jointRadius = JOINT_RADIUS\n                    const currentLength = jointDistance(interval.alpha, interval.omega)\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index, instance: this.instance}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (this.twist < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    intervalRoleName,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n} from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 1000\n\nexport function FrozenTab({tensegrity, worldFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updateViewMode(newState.viewMode)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function getFabricOutput(): IFabricOutput {\n        if (!tensegrity) {\n            throw new Error(\"No tensegrity\")\n        }\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    const disabled = viewMode !== ViewMode.Frozen\n    return (\n        <>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={viewMode !== ViewMode.Frozen}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    transition(storedState$, {visibleRoles: [...visibleRoles, intervalRole]})\n                                } else {\n                                    transition(storedState$, {visibleRoles: visibleRoles.filter(role => role !== intervalRole)})\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={disabled} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={disabled} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(getFabricOutput())} disabled={disabled}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(getFabricOutput())} disabled={disabled}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Pretensing)}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.do(t => t.stage = Stage.Shaping)}\n                    >\n                        Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Shaping}/> Shaping\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : \"#919191\"\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaCompressArrowsAlt, FaHandRock, FaParachuteBox } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {worldFeatures, tensegrity, storedState$}: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <Grouping>\n                <FeaturePanel feature={worldFeatures[WorldFeature.IterationsPerFrame]}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.IntervalCountdown]}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.PushOverPull]}/>\n            </Grouping>\n            {stage < Stage.Slack ? (\n                <Grouping>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingPretenstFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingDrag]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingStiffnessFactor]}/>\n                    <ButtonGroup className=\"w-100 my-3\">\n                        <Button disabled={stage !== Stage.Shaping}\n                                onClick={() => tensegrity.fabric.centralize()}>\n                            <FaCompressArrowsAlt/> Centralize\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            ) : stage > Stage.Slack ? (\n                <Grouping>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.PretenstFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.StiffnessFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.Gravity]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.Drag]}/>\n                    <ButtonGroup className=\"w-100 my-3\">\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(1)}>\n                            <FaHandRock/> Nudge\n                        </Button>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/> Drop\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            ) : undefined}\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { StageButton, StageTransition } from \"./stage-button\"\n\nexport function PhaseTab({worldFeatures, tensegrity, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updateViewMode(newState.viewMode)\n                updateStoredState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const disabled = viewMode === ViewMode.Frozen\n    return (\n        <div>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabled}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabled}\n                />\n            </Grouping>\n            <Grouping>\n                <FeaturePanel key=\"pc\" feature={worldFeatures[WorldFeature.PretensingCountdown]} disabled={stage !== Stage.Slack}/>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={stage !== Stage.Slack}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => transition(storedState$, {surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabled}\n                />\n            </Grouping>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabled}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabled}\n                />\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaCanadianMapleLeaf, FaFutbol, FaHiking, FaPlay, FaRocket, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function ScriptTab({worldFeatures, rootTenscript,  tensegrity, runTenscript, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    rootTenscript: ITenscript,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Grow <FaCanadianMapleLeaf/> tensegrity</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/> Spheres\n                    </Button>\n                    <Button onClick={() => {\n                        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n                        runTenscript(BOOTSTRAP[0])\n                    }}>\n                        <FaPlay/> Demo\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowDown, FaArrowUp, FaHandPointUp, FaList, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { FaceAction } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceSelection, IInterval, ISelection, percentFromFactor } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function ShapeTab(\n    {tensegrity, selection, storedState$}: {\n        tensegrity: Tensegrity,\n        selection: ISelection,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [currentRole, updateCurrentRole] = useState(storedState$.getValue().currentRole)\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateCurrentRole(newState.currentRole))\n        return () => sub.unsubscribe()\n    }, [])\n\n    const adjustValue = (up: boolean) => () => {\n        const factor = 1.03\n        selection.intervals.forEach(interval => {\n            tensegrity.changeIntervalScale(interval, up ? factor : (1 / factor))\n        })\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={selection.intervals.length === 0} onClick={adjustValue(true)}>\n                        <FaArrowUp/> Lengthen\n                    </Button>\n                    <Button disabled={selection.intervals.length === 0} onClick={adjustValue(false)}>\n                        <FaArrowDown/> Shorten\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        onClick={() => tensegrity.do(t =>\n                            selection.faces\n                                .filter(({faceSelection}) => faceSelection === FaceSelection.Face)\n                                .forEach(face => t.builder.createTipOn(face)))}>\n                        <span>Tip</span>\n                    </Button>\n                    <Button\n                        onClick={() => tensegrity.do(t => {\n                            const faces = selection.faces.filter(({faceSelection}) => faceSelection === FaceSelection.Face)\n                            return t.builder.createRadialPulls(faces, FaceAction.Distance, percentFromFactor(0.75))\n                        })}>\n                        <span>Distance-75</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Interval Groups</h6>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map((intervalRole, index) => (\n                            <Button size=\"sm\" key={`IntervalRole[${index}]`}\n                                    onClick={() => transition(storedState$, {currentRole: intervalRole})}\n                                    color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n                <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                [{floatString(defaultLength())}]\n            </div>\n            <div>\n                {intervalRoleName(intervalRole, true)}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { ISelection } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { PhaseTab } from \"./phase-tab\"\nimport { ScriptTab } from \"./script-tab\"\nimport { ShapeTab } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        worldFeatures, rootTenscript, selection, tensegrity, runTenscript, toFullScreen, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        selection: ISelection,\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => transition(storedState$, {controlTab: tab})}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Script:\n                    return (\n                        <ScriptTab\n                            worldFeatures={worldFeatures}\n                            rootTenscript={rootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Phase:\n                    return !tensegrity ? NO_FABRIC : (\n                        <PhaseTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            tensegrity={tensegrity}\n                            selection={selection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            worldFeatures={worldFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaArrowsAltH, FaMousePointer } from \"react-icons/all\"\nimport { useFrame } from \"react-three-fiber\"\nimport { Table } from \"reactstrap\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { addIntervalStats, expectStats, IInterval, intervalLocation } from \"../fabric/tensegrity-types\"\n\nexport function IntervalStatsSnapshot({interval}: { interval: IInterval }): JSX.Element {\n    const {alpha, omega, intervalRole} = interval\n    const stats = expectStats(interval)\n    return (\n        <Html\n            className=\"interval-stats\"\n            style={{width: \"10em\"}}\n            position={intervalLocation(interval)}\n        >\n            <div style={{position: \"absolute\", top: \"0\", left: \"0\", color: \"red\"}}>\n                <FaMousePointer/>\n            </div>\n            <Table\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}>\n                <thead>\n                <tr>\n                    <th colSpan={2}>\n                        ({alpha.index} <FaArrowsAltH/> {omega.index}): {intervalRoleName(intervalRole, true)}\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td className=\"text-right\">Stiffness:</td>\n                    <td>{stats.stiffness.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Strain:</td>\n                    <td>{stats.strain.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Length:</td>\n                    <td>{stats.length.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Ideal Length:</td>\n                    <td>{stats.idealLength.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Linear Density:</td>\n                    <td>{stats.linearDensity.toFixed(8)}</td>\n                </tr>\n                </tbody>\n            </Table>\n        </Html>\n    )\n}\n\nexport function IntervalStatsLive({interval, pushOverPull, pretenst}: {\n    interval: IInterval, pushOverPull: number, pretenst: number,\n}): JSX.Element {\n    const [stats, updateStats] = useState(expectStats(interval))\n    useFrame(() => updateStats(addIntervalStats(interval, pushOverPull, pretenst)))\n    return (\n        <Html className=\"interval-stats\"\n              style={{\n                  fontFamily: \"fixed\",\n                  padding: \"0.1em\",\n                  width: \"7em\",\n                  textAlign: \"center\",\n              }}\n              position={intervalLocation(interval)}>\n            <div\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}\n            >\n                {stats.strain.toFixed(8)}\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// export { ExtrudeGeometry, ExtrudeGeometryOptions } from './ExtrudeGeometry';\n// client/node_modules/three/src/geometries/Geometries.d.ts\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Text } from \"@react-three/drei/Text\"\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    Color,\n    CylinderGeometry,\n    Euler,\n    Face3,\n    FrontSide,\n    Geometry,\n    Mesh,\n    Object3D,\n    PerspectiveCamera as Cam,\n    Quaternion,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, isPushRole, UP } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    addIntervalStats,\n    FaceSelection,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLocation,\n    ISelection,\n    jointLocation,\n    locationFromFaces,\n    locationFromJoints,\n} from \"../fabric/tensegrity-types\"\nimport { isIntervalVisible, IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { IntervalStatsLive, IntervalStatsSnapshot } from \"./interval-stats\"\nimport { LINE_VERTEX_COLORS, roleMaterial, SELECTED_MATERIAL } from \"./materials\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst RADIUS_FACTOR = 0.01\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({worldFeatures, tensegrity, selection, setSelection, storedState$, viewMode}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    selection: ISelection,\n    setSelection: (selection: ISelection) => void,\n    viewMode: ViewMode,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const pushOverPull = worldFeatures[WorldFeature.PushOverPull]\n    const visualStrain = worldFeatures[WorldFeature.VisualStrain]\n    const [pretenstFactor, updatePretenstFactor] = useState(0)\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        updatePretenstFactor(stage < Stage.Pretenst ?\n            worldFeatures[WorldFeature.ShapingPretenstFactor].numeric :\n            worldFeatures[WorldFeature.PretenstFactor].numeric)\n    }, [stage])\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        updateInstance(tensegrity.instance)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const current = camera.current\n        if (!current) {\n            return\n        }\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        current.position.set(0, 1, instance.view.radius() * 2)\n        return () => sub.unsubscribe()\n    }, [])\n\n    function setSelectedFaces(faces: IFace[]): void {\n        const intervalRec = faces.reduce((rec: Record<number, IInterval>, face) => {\n            const add = (i: IInterval) => rec[i.index] = i\n            switch (face.faceSelection) {\n                case FaceSelection.Pulls:\n                    face.pulls.forEach(add)\n                    break\n                case FaceSelection.Pushes:\n                    face.pushes.forEach(add)\n                    break\n                case FaceSelection.Both:\n                    face.pulls.forEach(add)\n                    face.pushes.forEach(add)\n                    break\n            }\n            return rec\n        }, {})\n        const jointRec = faces.reduce((rec: Record<number, IJoint>, face) => {\n            face.ends.forEach(end => rec[end.index] = end)\n            return rec\n        }, {})\n        const intervals = Object.keys(intervalRec).map(k => intervalRec[k])\n        const joints = Object.keys(jointRec).map(k => jointRec[k])\n        setSelection({faces, intervals, joints})\n    }\n\n    const [bullseye, updateBullseye] = useState(new Vector3(0, 1, 0))\n    const [nonBusyCount, updateNonBusyCount] = useState(0)\n    useFrame(() => {\n        const current = camera.current\n        if (!current) {\n            return\n        }\n        const view = instance.view\n        const target =\n            selection.faces.length > 0 ? locationFromFaces(selection.faces) :\n                selection.joints.length > 0 ? locationFromJoints(selection.joints) :\n                    new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        updateBullseye(new Vector3().subVectors(target, bullseye).multiplyScalar(TOWARDS_TARGET).add(bullseye))\n        if (storedState.demoCount >= 0) {\n            const eye = current.position\n            eye.y += (target.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(target) - view.radius() * 2\n            const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        }\n        if (viewMode !== ViewMode.Frozen) {\n            const busy = tensegrity.iterate()\n            if (busy) {\n                return\n            }\n            if (storedState.demoCount >= 0) {\n                switch (stage) {\n                    case Stage.Shaping:\n                        if (nonBusyCount === 50) {\n                            tensegrity.stage = Stage.Slack\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Slack:\n                        if (nonBusyCount === 10) {\n                            tensegrity.stage = Stage.Pretensing\n                            transition(storedState$, {rotating: false})\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Pretenst:\n                        if (nonBusyCount === 100) {\n                            transition(storedState$, {demoCount: storedState.demoCount + 1, rotating: true})\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                }\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    function clickInterval(interval: IInterval): void {\n        if (interval.stats) {\n            interval.stats = undefined\n        } else {\n            addIntervalStats(interval, pushOverPull.numeric, pretenstFactor)\n        }\n    }\n\n    function clickFace(face: IFace): void {\n        switch (face.faceSelection) {\n            case FaceSelection.None:\n                face.faceSelection = FaceSelection.Face\n                setSelectedFaces([...selection.faces, face])\n                break\n            case FaceSelection.Face:\n                face.faceSelection = FaceSelection.Pulls\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pulls:\n                face.faceSelection = FaceSelection.Pushes\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pushes:\n                face.faceSelection = FaceSelection.Both\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Both:\n                face.faceSelection = FaceSelection.None\n                setSelectedFaces(selection.faces.filter(({index}) => index !== face.index))\n                break\n        }\n    }\n\n    const camera = useRef<Cam>()\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true} onPointerMissed={undefined}/>\n            <OrbitControls target={bullseye} autoRotate={storedState.rotating} enableKeys={false} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined}\n            />\n            <scene>\n                {viewMode === ViewMode.Frozen ? (\n                    <group>\n                        {tensegrity.intervals\n                            .filter(interval => isIntervalVisible(interval, storedState))\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull.numeric}\n                                    visualStrain={visualStrain.numeric}\n                                    pretenstFactor={pretenstFactor}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    onPointerDown={event => {\n                                        event.stopPropagation()\n                                        clickInterval(interval)\n                                    }}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <>\n                        <lineSegments\n                            geometry={tensegrity.instance.floatView.lineGeometry}\n                            material={LINE_VERTEX_COLORS}\n                            onUpdate={self => self.geometry.computeBoundingSphere()}\n                        />\n                    </>\n                )}\n                {viewMode !== ViewMode.Selecting ? undefined : (\n                    <Faces\n                        tensegrity={tensegrity}\n                        stage={stage}\n                        clickFace={face => clickFace(face)}\n                    />\n                )}\n                {selection.intervals.map(interval => (\n                    <IntervalMesh\n                        key={`SI${interval.index}`}\n                        pushOverPull={pushOverPull.numeric}\n                        visualStrain={visualStrain.numeric}\n                        pretenstFactor={pretenstFactor}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            clickInterval(interval)\n                        }}\n                    />\n                ))}\n                {viewMode === ViewMode.Frozen ?\n                    tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsSnapshot key={`S${interval.index}`} interval={interval}/>)\n                    : tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsLive key={`SL${interval.index}`} interval={interval}\n                                           pushOverPull={pushOverPull.numeric} pretenst={pretenstFactor}/>)\n                }\n                {selection.faces.filter(f => (f.faceSelection === FaceSelection.Face)).map(face => {\n                    const geometry = new Geometry()\n                    geometry.vertices = face.ends.map(jointLocation)\n                    geometry.faces.push(new Face3(0, 1, 2))\n                    return <mesh key={`SJ${face.index}`} geometry={geometry} material={SELECTED_MATERIAL}/>\n                })}\n                {viewMode === ViewMode.Frozen ? undefined : selection.joints.map(joint => {\n                    const key = `${joint.index}`\n                    return <Tag key={key} position={jointLocation(joint)} text={key}/>\n                })}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction Tag({position, text}: {\n    position: Vector3,\n    text: string,\n}): JSX.Element | null {\n    const {camera} = useThree()\n    const ref = useRef<Mesh>()\n    useFrame(() => {\n        if (ref.current) {\n            ref.current.quaternion.copy(camera.quaternion)\n        }\n    })\n    return <Text\n        ref={ref} fontSize={0.1} position={position} anchorY=\"middle\" anchorX=\"center\"\n        onPointerMissed={undefined}\n    >{text}</Text>\n}\n\nfunction IntervalMesh({pushOverPull, visualStrain, pretenstFactor, tensegrity, interval, selected, onPointerDown}: {\n    pushOverPull: number,\n    visualStrain: number,\n    pretenstFactor: number\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    onPointerDown?: (e: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const material = selected ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)\n    const stiffness = tensegrity.instance.floatView.stiffnesses[interval.index]\n        * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n    const radius = RADIUS_FACTOR * Math.sqrt(stiffness) * (selected ? 1.5 : 1)\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n    const strain = tensegrity.instance.floatView.strains[interval.index]\n    const pretenstAdjustment = 1 + (isPushRole(interval.intervalRole) ? pretenstFactor : 0)\n    const idealLength = tensegrity.instance.floatView.idealLengths[interval.index] * pretenstAdjustment\n    const length = idealLength + strain * idealLength * (1 - visualStrain)\n    const intervalScale = new Vector3(radius, (length < 0) ? 0.01 : length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={onPointerDown}\n        />\n    )\n}\n\nfunction Faces({tensegrity, stage, clickFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    clickFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<React.MouseEvent<Element, MouseEvent> | undefined>()\n    const onPointerDown = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        setDownEvent(event)\n    }\n    const onPointerUp = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 36) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        clickFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\" ref={meshRef} onPointerDown={onPointerDown} onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial attach=\"material\"\n                               transparent={true} side={FrontSide} depthTest={false} opacity={0.2} color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaHandPointUp, FaPlay, FaSignOutAlt, FaSnowflake, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version, versionFromUrl } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { emptySelection, ISelection, percentOrHundred, preserveJoints } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nconst MINIMAL = false\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript | undefined {\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    } else {\n        const fromUrl = getCodeFromUrl()\n        if (fromUrl) {\n            return fromUrl\n        }\n        if (state.demoCount >= 0) {\n            return BOOTSTRAP[state.demoCount % BOOTSTRAP.length]\n        }\n    }\n    return undefined\n}\n\nexport function TensegrityView({createInstance, worldFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selection, setSelection] = useState<ISelection>(emptySelection)\n    const [rootTenscript, setRootTenscript] = useState(() => {\n        const codeToRun = getCodeToRun(storedState$.getValue())\n        if (codeToRun) {\n            return codeToRun\n        }\n        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n        return BOOTSTRAP[0]\n    })\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [demoCount, updateDemoCount] = useState(storedState$.getValue().demoCount)\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            if (storedState.demoCount < 0) {\n                updateDemoCount(storedState.demoCount)\n            } else if (storedState.demoCount > demoCount) {\n                if (demoCount + 1 === BOOTSTRAP.length) {\n                    setRootTenscript(BOOTSTRAP[0])\n                    setTimeout(() => {\n                        transition(storedState$, {demoCount: -1, fullScreen: false, rotating: false})\n                    }, 200)\n                } else {\n                    updateDemoCount(storedState.demoCount)\n                    setRootTenscript(BOOTSTRAP[storedState.demoCount])\n                }\n            }\n            updateViewMode(storedState.viewMode)\n            updateRotating(storedState.rotating)\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(worldFeatures).map(k => worldFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe(() => {\n                if (tensegrity) {\n                    tensegrity.instance.applyFeature(feature)\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        transition(storedState$, {viewMode: ViewMode.Lines})\n        setSelection(emptySelection)\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), MINIMAL, numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => runTenscript(rootTenscript), 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        transition(storedState$, {fullScreen: value})\n    }\n\n    return (\n        <>\n            {fullScreen ? demoCount >= 0 ? undefined : (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        worldFeatures={worldFeatures}\n                        rootTenscript={rootTenscript}\n                        tensegrity={tensegrity}\n                        selection={selection}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        {demoCount >= 0 ? (\n                            <div id=\"bottom-right\">\n                                <ButtonGroup>\n                                    <Button\n                                        color=\"success\"\n                                        onClick={() => {\n                                            transition(storedState$, {\n                                                demoCount: -1,\n                                                fullScreen: false,\n                                                rotating: false,\n                                            })\n                                        }}\n                                    >\n                                        <FaSignOutAlt/> Exit demo\n                                    </Button>\n                                </ButtonGroup>\n                            </div>\n                        ) : (\n                            <div>\n                                <div id=\"bottom-right\">\n                                    <ButtonGroup>\n                                        <Button\n                                            color={rotating ? \"warning\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {rotating: !rotating})}\n                                        >\n                                            <FaSyncAlt/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                                <div id=\"bottom-middle\">\n                                    <FeaturePanel feature={worldFeatures[WorldFeature.VisualStrain]}/>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <ButtonGroup>\n                                        <ViewModeButton item={ViewMode.Lines} storedState$={storedState$}\n                                                        click={() => setSelection(preserveJoints(selection))}>\n                                            <FaPlay/>\n                                        </ViewModeButton>\n                                        <ViewModeButton item={ViewMode.Selecting} storedState$={storedState$}>\n                                            <FaHandPointUp/>\n                                        </ViewModeButton>\n                                        <ViewModeButton item={ViewMode.Frozen} storedState$={storedState$}>\n                                            <FaSnowflake/>\n                                        </ViewModeButton>\n                                    </ButtonGroup>\n                                </div>\n                            </div>\n                        )}\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas\n                                style={{\n                                    backgroundColor: \"black\",\n                                    borderStyle: \"solid\",\n                                    borderColor: viewMode === ViewMode.Frozen ? \"#f0ad4e\" : \"black\",\n                                    cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                                    borderWidth: \"2px\",\n                                }}\n                            >\n                                <FabricView\n                                    worldFeatures={worldFeatures}\n                                    tensegrity={tensegrity}\n                                    selection={selection}\n                                    setSelection={setSelection}\n                                    viewMode={viewMode}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n\nfunction ViewModeButton({item, storedState$, children, click}: {\n    item: ViewMode, storedState$: BehaviorSubject<IStoredState>, click?: () => void,\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n}): JSX.Element {\n    const viewMode = storedState$.getValue().viewMode\n    return (\n        <Button\n            disabled={item === viewMode}\n            color={item === viewMode ? \"success\" : \"secondary\"}\n            onClick={() => {\n                transition(storedState$, {viewMode: item})\n                if (click) {\n                    click()\n                }\n            }}\n        >\n            {children}\n        </Button>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { percentFromFactor, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n            ) => {\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, percentOrHundred(), false, gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = percentFromFactor(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), scale, false, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => {\n                const sphereInstance = createInstance(false)\n                FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n                return new TensegritySphere(at, 0.7, frequency, 0.52, numeric, sphereInstance)\n            }\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   worldFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}