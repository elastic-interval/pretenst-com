{"version":3,"sources":["fabric/eig-util.ts","fabric/fabric-instance.ts","service-worker.ts","fabric/tensegrity-types.ts","fabric/twist.ts","fabric/tenscript.ts","fabric/bootstrap.ts","fabric/tensegrity.ts","fabric/tensegrity-logic.ts","view/feature-mapping.ts","storage/recoil.ts","view/bottom-left.tsx","view/feature-slider.tsx","view/bottom-middle.tsx","storage/download.ts","view/bottom-right.tsx","view/interval-stats.tsx","view/materials.ts","view/surface-component.tsx","view/fabric-view.tsx","view/stage-button.tsx","view/script-panel.tsx","view/top-left.tsx","view/top-middle.tsx","view/top-right.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["IntervalRole","UP","Vector3","Object","keys","filter","k","isNaN","parseInt","map","roleDefaultLength","intervalRole","PushA","PushB","PHI","PullA","PullB","PullAA","PullBB","Error","WORLD_FEATURES","WorldFeature","intervalRoleName","Version","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","floatString","numeric","expo","toExponential","zero","indexOf","substring","Math","max","toFixed","sub","a","b","subVectors","normalize","midpoint","points","mid","forEach","point","add","multiplyScalar","length","vectorFromArray","array","index","vector","offset","set","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","floatView","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","forward","right","left","valuesToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","refreshFloatView","current","shift","set_float_value","feature","value","satisfied","updateFloatView","console","log","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","percent","push","jointIndex","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","face","position","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","y","crossVectors","get_stage","requested","request_stage","error","isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","Spin","FaceName","Left","Right","LeftRight","RightLeft","FaceSelection","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","jointPulls","pulls","jointLocation","instance","jointDistance","distanceTo","twoJointKey","alpha","omega","pairKey","filterRole","intervalLocation","intervalLength","addIntervalStats","interval","pushOverPull","pretenstFactor","stats","stiffness","strain","idealLength","linearDensity","expectStats","intervalJoins","acrossPush","joint","otherJoint","locationFromFace","ends","locationFromFaces","faces","reduce","accum","percentOrHundred","_","factorFromPercent","percentFromFactor","factor","emptySelection","intervals","joints","FaceAction","Twist","tensegrity","spin","scale","baseKnown","pushes","base","createBase","createSingle","createDouble","faceName","leftSpin","pairs","pointPairs","createJoint","alphaJoint","omegaJoint","createInterval","makeFace","midJoint","j","createFace","reverse","botPairs","topPairs","bot","top","faceJoints","midJoints","some","n","midVector","copy","up","radials","norm","next","fromMid","between","idx1","idx2","addVectors","addScaledVector","pushesPerTwist","angle","PI","x","cos","sin","compileTenscript","tenscript","root","codeToNode","code","join","e","message","createBud","tree","marks","reorient","twist","markStringsToMarks","markStrings","key","startsWith","subtree","action","Subtree","Base","Join","split","Distance","matches","parseFloat","submerged","Anchor","codeFragment","codeString","argument","content","subtrees","skip","codeTree","addMark","markNumber","found","mark","charAt","direction","isDigit","forwardArg","toNumber","scaleArg","faceNameChar","TenscriptNode","nonEmpty","grow","afterTree","omni","scaleChange","twistToMark","treeWithMarks","baseFace","omniOppositeSpin","oppositeSpin","newTwist","createTwistOn","thisFace","faceMarks","execute","before","activeBuds","bud","decremented","needsOmniTwist","f","apply","rotation","z","middle","sum","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationZ","rotate","makeRotationY","multiply","invert","reorientMatrix","treeMarks","twistMark","markTree","deleteMark","subtreeCode","markCode","undefined","omniFaceNames","isForward","hasScale","parts","entries","v","flat","digits","maybeBracketed","stripBrackets","commaPos","commaPresent","finalBracket","s","depth","matchBracket","contentOption","PostGrowthOp","PairSelection","featureValues","BOOTSTRAP","name","surfaceCharacter","SurfaceCharacter","Frozen","Bouncy","1","2","3","4","5","6","0","bowtiePairs","onlyA","onlyB","common","find","aj","bj","intersection","pullA","withPulls","pairMap","addPair","pair","addPairFor","near","pullB","far","otherFar","otherNear","commonNear","commonFar","acrossFar","acrossNear","nextPair","joint3APush","faceJoint","a3A","end","outwards","fjA","sort","f1","f2","dot","Tensegrity","countdown","postGrowthOperation","stage$","connectors","distancers","jobs","buds","BehaviorSubject","newJoint","create_joint","remove_joint","pullScale","axis","creatAxis","alphaRestLength","omegaRestLength","alphaRays","createRay","omegaRays","radialPull","Connector","Distancer","patience","targetLength","currentLength","patienceFactor","abs","attack","create_interval","removed","multiply_rest_length","existing","remove_interval","f0","create_face","faceSelection","None","pull","removeInterval","removeJoint","remove_face","endA","endB","turnFaceToTriangle","work","addPull","pairSelection","Bowtie","Snelson","snelsonPair","acrossA","acrossB","jointA","jointB","snelsonPairs","selectPairs","pullC","connect","job","stage","Stage","Growing","collated","possibleMark","FaceStrategy","faceStrategies","strategy","checkConnectors","Shaping","NoOp","Faces","triangleFaces","createPulls","averagePullStrain","strainFactor","restoreSnapshot","copy_stiffnesses","actionScale","centerBrickFaceIntervals","omniTwist","averageScaleFactor","opposing","faceLocation","closestFace","createRadialPull","faceA","indexA","faceB","indexB","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","walk","rotatedWalk","bestRotation","minLength","rotateForBestRing","i","trianglePoints","faceToOriginMatrix","reverseA","forwardB","indexJoints","a0","a1","b0","b1","c0","c1","cN1","d0","d1","removeFace","restLength","CONNECTOR_LENGTH","Radial","getValue","Slack","ray","snapshot","FeatureStage","faceToOrigin","createRadialPulls","linearMapping","featureStage","low","high","nuanceToPercent","nuance","percentToNuance","percentToValue","default_world_feature","valueToPercent","featureMapping","Gravity","Postslack","Antigravity","All","ShapingDrag","Preslack","ShapingStiffnessFactor","Drag","ShapingPretenstFactor","PretenstFactor","StiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","VisualStrain","PushOverPull","effects_UNSTABLE","recoilPersist","storage","localStorage","persistAtom","demoModeAtom","atom","default","startDemoAtom","endDemoAtom","postGrowthAtom","bootstrapIndexAtom","tenscriptAtom","ViewMode","rotatingAtom","viewModeAtom","Lines","visibleRolesAtom","FEATURE_VALUES","mapping","percentAtom","BottomLeft","useRecoilState","demoMode","viewMode","setViewMode","ViewModeButton","item","children","Button","disabled","onClick","ButtonGroup","Selecting","domain","FeatureSlider","featureValue","sliderValue","p","floor","setPercent","useState","values","setValues","useEffect","round","className","percentString","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","handles","getHandleProps","handle","Handle","id","tracks","getTrackProps","source","target","Track","min","style","aria-valuemin","aria-valuemax","aria-valuenow","width","margin","BottomMiddle","updateStage","subscribe","unsubscribe","open","setOpen","setFeatureValue","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","featureFilter","DropdownItem","applyFeature","csvNumber","replace","dateString","Date","toISOString","getFabricOutput","pushRadius","pullRadius","jointRadius","holes","here","touching","unitFromHere","pushUnit","adjacent","unit","hole","oppositeJoint","chords","pushToA","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","anchor","isPush","alphaIndex","omegaIndex","type","saveCSVZip","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","blob","FileSaver","BottomRight","setStartDemo","useSetRecoilState","setEndDemo","rotating","setRotating","JSON","stringify","saveJSONZip","centralize","Pretenst","removeSlackPulls","set_altitude","IntervalStatsSnapshot","Html","Table","event","stopPropagation","colSpan","IntervalStatsLive","pretenst","updateStats","useFrame","fontFamily","padding","textAlign","RAINBOW_COLORS","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECTED_MATERIAL","MeshBasicMaterial","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","SURFACE","MeshPhongMaterial","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","Face3","addSurfaceGeometry","patchesGeometry","material","CYLINDER","CylinderGeometry","AMBIENT_COLOR","FabricView","runTenscript","selection","setSelection","visibleRoles","pushOverPullPercent","visualStrainPercent","visualStrain","shapingPretenstFactorPercent","pretenstFactorPercent","setDemoMode","startDemo","endDemo","bootstrapIndex","setBootstrapIndex","nonBusyCount","updateNonBusyCount","bullseye","updateBullseye","updatePretenst","setSelectedFaces","intervalRec","rec","Pulls","Pushes","Both","jointRec","camera","emergency","clickInterval","eye","distanceChange","towardsDistance","Pretensing","nextIndex","useRef","PerspectiveCamera","ref","makeDefault","onPointerMissed","OrbitControls","autoRotate","enableKeys","enablePan","enableDamping","minPolarAngle","maxPolarAngle","IntervalMesh","selected","onPointerDown","onUpdate","self","computeBoundingSphere","clickFace","Face","intervalsWithStats","Tag","text","Stars","intensity","useThree","quaternion","Text","fontSize","anchorY","anchorX","sqrt","unitVector","Quaternion","setFromUnitVectors","pretenstAdjustment","intervalScale","Euler","setFromQuaternion","matrixWorldNeedsUpdate","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","dx","clientX","dy","clientY","intersectObjects","faceIndex","pop","attach","FrontSide","StageTransition","ScriptPanel","setTenscript","postGrowth","json","setJson","setError","toJson","flexDirection","backgroundColor","height","Input","borderRadius","marginBottom","changeEvent","vertical","newTenscript","parse","STAGE_TRANSITIONS","StageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","do","t","Symbol","SlackToPretensingFrozen","set_surface_character","SlackToPretensingSticky","Sticky","SlackToPretensingBouncy","CapturePretenstToSlack","CaptureStrainForStiffness","strainToStiffness","TopLeft","setPostGrowth","showScriptPanel","setShowScriptPanel","bootstrapOpen","setBootstrapOpen","run","pgo","opColor","bootstrapProgram","TopMiddle","stageName","TopRight","updateVisibleRoles","currentRole","updateCurrentRole","adjustSelection","changeIntervalScale","RoleLengthAdjuster","nextRoles","adjustValue","fine","adjustment","TensegrityView","createInstance","mainInstance","worldFeatures","setTensegrity","ts","pg","localValue","removeItem","RecoilBridge","useRecoilBridgeAcrossReactRoots_UNSTABLE","borderStyle","borderColor","cursor","borderWidth","element","document","getElementById","ReactDOM","startReact","stickyWorld","frozenWorld","registerServiceWorker"],"mappings":"mHAcYA,E,6EAJCC,GAFU,IAAIC,UAAQ,EAAG,EAAG,GACpB,IAAIA,UAAQ,EAAG,EAAG,GACrB,IAAIA,UAAQ,EAAG,EAAG,K,SAIxBF,O,iBAAAA,I,iBAAAA,I,iBAAAA,I,iBAAAA,I,mBAAAA,I,mBAAAA,I,mBAAAA,I,yBAAAA,I,0BAAAA,M,KAYkBG,OAAOC,KAAKJ,GACrCK,QAAO,SAAAC,GAAC,OAAIC,MAAMC,SAASF,EAAG,QAC9BG,KAAI,SAAAH,GAAC,OAAIN,EAAaM,MAQpB,SAASI,EAAkBC,GAC9B,OAAQA,GACJ,KAAKX,EAAaY,MACd,OANE,cAON,KAAKZ,EAAaa,MACd,OAAOC,mBACX,KAAKd,EAAae,MACd,OAAO,EACX,KAAKf,EAAagB,MACd,OAfE,kBAgBN,KAAKhB,EAAaiB,OACd,MAbO,GAaAP,EAAkBV,EAAae,OAC1C,KAAKf,EAAakB,OACd,MAfO,GAeAR,EAAkBV,EAAagB,OAC1C,QACI,MAAM,IAAIG,MAAJ,0BAA6BnB,EAAaW,GAA1C,OAYX,IAAMS,EAAiCjB,OAAOC,KAAKiB,gBACrDhB,QAAO,SAAAC,GAAC,OAAIC,MAAMC,SAASF,EAAG,QAC9BG,KAAI,SAAAH,GAAC,OAAIe,eAAaf,MAEpB,SAASgB,EAAiBX,GAC7B,OAAQA,GACJ,KAAKX,EAAaY,MACd,MAAO,MACX,KAAKZ,EAAaa,MACd,MAAO,MACX,KAAKb,EAAae,MACd,MAAO,MACX,KAAKf,EAAagB,MACd,MAAO,MACX,KAAKhB,EAAaiB,OACd,MAAO,OACX,KAAKjB,EAAakB,OACd,MAAO,OACX,QACI,MAAO,KAIZ,IAwCKK,EAxCCC,EAA4CrB,OAAOC,KAAKJ,GAChEK,QAAO,SAAAoB,GACJ,OAAQzB,EAAayB,IACjB,KAAKzB,EAAaY,MAClB,KAAKZ,EAAaa,MAClB,KAAKb,EAAae,MAClB,KAAKf,EAAagB,MAClB,KAAKhB,EAAaiB,OAClB,KAAKjB,EAAakB,OACd,OAAO,EACX,QACI,OAAO,MAGlBT,KAAI,SAAAgB,GAAI,OAAIzB,EAAayB,MAEvB,SAASC,EAAWf,GACvB,OAAQA,GACJ,KAAKX,EAAaY,MAClB,KAAKZ,EAAaa,MACd,OAAO,EAEf,OAAO,EAoCJ,SAASc,EAAYC,GACxB,IAAMC,EAAOD,EAAQE,cAAc,GAC7BC,EAAOF,EAAKG,QAAQ,OAC1B,OAAID,EAAO,EACAF,EAAKI,UAAU,EAAGF,GAEfG,KAAKC,IAAIN,EAAKG,QAAQ,OAAQH,EAAKG,QAAQ,QAC7C,EACDJ,EAAQQ,QAAQ,GAEdF,KAAKC,IAAIN,EAAKG,QAAQ,OAAQH,EAAKG,QAAQ,OAAQH,EAAKG,QAAQ,QAClE,EACAJ,EAAQQ,QAAQ,GAEpBP,EAgBJ,SAASQ,EAAIC,EAAYC,GAC5B,OAAO,IAAIrC,WAAUsC,WAAWF,EAAGC,GAAGE,YAOnC,SAASC,EAASC,GACrB,IAAMC,EAAM,IAAI1C,UAEhB,OADAyC,EAAOE,SAAQ,SAAAC,GAAK,OAAIF,EAAIG,IAAID,MACzBF,EAAII,eAAe,EAAIL,EAAOM,QAelC,SAASC,EAAgBC,EAAqBC,EAAeC,GAChE,IAAMC,EAAiB,EAARF,EACf,OAAIC,GACAA,EAAOE,IAAIJ,EAAMG,GAASH,EAAMG,EAAS,GAAIH,EAAMG,EAAS,IACrDD,GAEA,IAAInD,UAAQiD,EAAMG,GAASH,EAAMG,EAAS,GAAIH,EAAMG,EAAS,K,SAhFhE/B,K,gBAAAA,E,gBAAAA,E,iBAAAA,M,KClGL,IAAMiC,EAAb,WAcI,WAAYC,EAA2BC,EAAoBC,EAAqBC,GAAwB,IAAD,gCAbhGC,YAagG,OAZhGC,WAYgG,OAXhGC,UAWgG,OAVhGC,UAgNX,WACI,IAAMC,EAAQ,IAAIC,aAAa,GAI/B,MAAO,CACHR,WAJe,EAIHS,cAHM,EAGSC,UAFb,EAGdC,aAAc,IAAIC,iBAAkBC,aAAc,IAAID,iBACtDE,eAAgBP,EAAOQ,YAAaR,EAAOS,aAAcT,EACzDU,QAASV,EAAOW,aAAc,IAAIV,aAAa,GAAIW,cAAeZ,EAClEa,YAAab,EAAOc,gBAAiBd,GA1NVe,GAUwE,KAThGC,iBASgG,OARhGvC,SAAW,IAAIxC,UAAQ,EAAG,EAAG,GAQmE,KAPhGgF,QAAU,IAAIhF,UAAQ,EAAG,EAAG,GAOoE,KANhGiF,MAAQ,IAAIjF,UAAQ,EAAG,EAAG,GAMsE,KALhGkF,KAAO,IAAIlF,UAAQ,EAAG,GAAI,GAKsE,KAH/FmF,cAAiC,GAG8D,KAF/FC,kBAE+F,EACnGC,KAAKzB,MAAQH,EACb4B,KAAKN,YAAc,SAACpB,GAIhB,OAHA,EAAK2B,OACL,EAAK3B,OAASA,EACd,EAAKE,KAAON,EAAIgC,KAAKC,UAAU7B,GACxB,GAEX0B,KAAKN,YAAYrB,GAAwCH,EAAIkC,OAAOC,IAAIlC,IAtBhF,sDA0BQ,IAAMmC,EAAON,KAAK1B,OAAOiC,QAAQP,KAAKzB,OACtCyB,KAAKQ,mBACL,IAAMC,EAAUT,KAAKF,cAAcY,QAInC,OAHID,GACAT,KAAKzB,MAAMoC,gBAAgBF,EAAQG,QAASH,EAAQI,OAEjDP,IAhCf,iCA8CsBQ,GACdd,KAAKe,iBAAgB,EAAMD,KA/CnC,iCAuDQE,QAAQC,IAAI,YACZjB,KAAKD,aAAeC,KAAKkB,cAxDjC,wCA4DQF,QAAQC,IAAI,mBACZ,IAAME,EAASnB,KAAKD,aACpB,IAAKoB,EACD,MAAM,IAAIvF,MAAM,kBAEpBoE,KAAKN,YAAYyB,EAAOC,WAjEhC,yCAqEQpB,KAAKxB,KAAK6C,OAAOrB,KAAK1B,OAAQ0B,KAAKzB,OACnCyB,KAAK7C,SAASa,IAAIgC,KAAKxB,KAAK8C,aAActB,KAAKxB,KAAK+C,aAAcvB,KAAKxB,KAAKgD,cAC5ExB,KAAKe,iBAAgB,GAAO,KAvEpC,8BA6EQ,OAFAf,KAAK1B,OAAOmD,QACZzB,KAAKQ,mBACER,OA7Ef,mCAgFwBY,EAAuBc,EAAiBb,GACxDb,KAAKF,cAAc6B,KAAK,CAACf,UAASc,UAASb,YAjFnD,oCAoFyBe,GACjB,OAAOjE,EAAgBqC,KAAKvB,UAAUQ,eAAgB2C,KArF9D,4BAwFiBC,GACT7B,KAAK1B,OAAOwD,cAAc,IAAInD,aAAakD,EAAOE,YAClD/B,KAAKQ,qBA1Fb,iCA6FsBwB,GACd,OAAOrE,EAAgBqC,KAAKvB,UAAUS,YAAa8C,KA9F3D,6BAkGQ,IAAM1D,EAAS0B,KAAK1B,OAChBA,GACAA,EAAO2B,OAEX,IAAMzB,EAAOwB,KAAKxB,KACdA,GACAA,EAAKyB,SAxGjB,sCA4G4BgC,EAAiBnB,GACrC,IAAMxC,EAAS0B,KAAK1B,OACdE,EAAOwB,KAAKxB,KACZL,EAAaG,EAAO4D,kBACpBtD,EAAgBN,EAAO6D,qBACvBtD,EAAYP,EAAO8D,iBACnB3D,EAAYuB,KAAKvB,UAEvB,GADwBA,EAAUN,aAAeA,GAAcM,EAAUG,gBAAkBA,GAAiBH,EAAUI,YAAcA,EAC/G,CAEjBJ,EAAUN,WAAaA,EACvBM,EAAUG,cAAgBA,EAC1BH,EAAUI,UAAYA,EACtBJ,EAAUK,aAAauD,UACvB5D,EAAUK,aAAe,IAAIC,iBAC7B,IAAMuD,EAAgB,IAAI3D,aAA6B,EAAhBC,EAAoB,GAC3DJ,EAAK+D,uBAAuBD,GAC5B7D,EAAUK,aAAa0D,aAAa,WAAY,IAAIC,yBAAuBH,EAAe,IAC1F,IAAMI,EAAa,IAAI/D,aAA6B,EAAhBC,EAAoB,GACxD,GAAIqD,EACA,GAAInB,EAAW,CACX4B,EAAWC,KAAK,GAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQF,EAAWhF,OAAQkF,GAAS,EACpDF,EAAWE,GAAS,OAGxBF,EAAWC,KAAK,QAGpBnE,EAAKqE,oBAAoBH,GAE7BjE,EAAUK,aAAa0D,aAAa,QAAS,IAAIC,yBAAuBC,EAAY,IACpFjE,EAAUO,aAAaqD,UACvB5D,EAAUO,aAAe,IAAID,iBAC7B,IAAM+D,EAAgB,IAAInE,aAAyB,EAAZE,EAAgB,GACvDL,EAAKuE,8BAA8BD,GACnCrE,EAAUO,aAAawD,aAAa,WAAY,IAAIC,yBAAuBK,EAAe,IAC1F,IAAME,EAAc,IAAIrE,aAAyB,EAAZE,EAAgB,GACrDL,EAAKyE,qBAAqBD,GAC1BvE,EAAUO,aAAawD,aAAa,SAAU,IAAIC,yBAAuBO,EAAa,IACtFvE,EAAUQ,eAAiB,IAAIN,aAA0B,EAAbR,GAC5CM,EAAUS,YAAc,IAAIP,aAA6B,EAAhBC,GACzCH,EAAUU,aAAe,IAAIR,aAAaC,GAC1CH,EAAUW,QAAU,IAAIT,aAAaC,GACrCH,EAAUa,cAAgB,IAAIX,aAAaC,GAC3CH,EAAUc,YAAc,IAAIZ,aAAaC,GACzCH,EAAUe,gBAAkB,IAAIb,aAAaC,OAC1C,CACH,IAAMsE,EAAOlD,KAAKvB,UAAUK,aAAaqE,WACnCC,EAAOpD,KAAKvB,UAAUO,aAAamE,WACzC,GAAID,EAAKG,SAAU,CAEf,IAAMC,EAAeJ,EAAKG,SAC1B7E,EAAK+D,uBAAuBe,EAAa1F,OACzC0F,EAAaC,aAAc,EAC3B,IAAMC,EAAYN,EAAKO,MACjBf,EAAac,EAAU5F,MAC7B,GAAIqE,EACA,GAAInB,EAAW,CACX4B,EAAWC,KAAK,GAChB,IAAK,IAAIC,EAAQ,EAAGA,EAAQF,EAAWhF,OAAQkF,GAAS,EACpDF,EAAWE,GAAS,OAGxBF,EAAWC,KAAK,QAGpBnE,EAAKqE,oBAAoBH,GAE7Bc,EAAUD,aAAc,EACxB,IAAMG,EAAeN,EAAKC,SAC1B7E,EAAKuE,8BAA8BW,EAAa9F,OAChD8F,EAAaH,aAAc,EAC3B,IAAMI,EAAaP,EAAKQ,OACxBpF,EAAKyE,qBAAqBU,EAAW/F,OACrC+F,EAAWJ,aAAc,GAGjC/E,EAAKqF,wBAAwBpF,EAAUQ,gBACvCT,EAAKsF,qBAAqBrF,EAAUS,aACpCV,EAAKuF,sBAAsBtF,EAAUU,cACrCX,EAAKwF,gBAAgBvF,EAAUW,SAC/BZ,EAAKyF,sBAAsBxF,EAAUY,cACrCb,EAAK0F,uBAAuBzF,EAAUa,eACtCd,EAAK2F,oBAAoB1F,EAAUc,aACnCf,EAAK4F,yBAAyB3F,EAAUe,iBACxC,IAAM6E,EAAY5F,EAAUQ,gBACb,SAACqF,EAAmBC,EAAiBzG,GAChD,IAAM0G,EAAmB,EAAZF,EACPG,EAAe,EAAVF,EACXzG,EAAOE,IACHqG,EAAUI,GAAMJ,EAAUG,GAC1BH,EAAUI,EAAK,GAAKJ,EAAUG,EAAO,GACrCH,EAAUI,EAAK,GAAKJ,EAAUG,EAAO,IAG7CE,CAAO,EAAG,EAAG1E,KAAKL,SAClBK,KAAKL,QAAQgF,EAAI,EACjB3E,KAAKL,QAAQzC,YACb8C,KAAKJ,MAAMgF,aAAa5E,KAAKL,QAASjF,GAAIwC,YAC1C8C,KAAKH,KAAK7B,IAAI,EAAG,EAAG,GAAGlB,IAAIkD,KAAKJ,SAhNxC,4BAoCQ,OAAOI,KAAK1B,OAAOuG,aApC3B,aAuCqBC,GACC9E,KAAK1B,OAAOyG,cAAcD,EAAW9E,KAAKzB,QAEpDyC,QAAQgE,MAAR,kCAAyCF,EAAzC,QA1CZ,kCAmDQ,OAAO9E,KAAK1B,OAAO8C,YAnD3B,KCZA,IAAM6D,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DAIO,SAASC,IACpB,GAA6C,kBAAmBC,UAAW,CAMvE,GAJkB,IAAIC,IAClBC,OACAP,OAAOC,SAASO,YAENC,SAAWT,OAAOC,SAASQ,OAIrC,OAGJT,OAAOU,iBAAiB,QAAQ,WAC5B,IAAMC,EAAK,UAAMJ,OAAN,sBAEPT,IAmDhB,SAAiCa,GAE7BC,MAAMD,GACDE,MAAK,SAAAC,GAGsB,MAApBA,EAASC,SACwD,IAAjED,EAASE,QAAQC,IAAI,gBAAiB3J,QAAQ,cAG9C+I,UAAUa,cAAcC,MAAMN,MAAK,SAAAO,GAC/BA,EAAaC,aAAaR,MAAK,WAC3Bb,OAAOC,SAASqB,eAKxBC,EAAgBZ,MAGvBa,OAAM,WACH3F,QAAQC,IACJ,oEAvEA2F,CAAwBd,GAIxBN,UAAUa,cAAcC,MAAMN,MAAK,WAC/BhF,QAAQC,IACJ,gHAMRyF,EAAgBZ,OAMhC,SAASY,EAAgBZ,GACrBN,UAAUa,cACLd,SAASO,GACTE,MAAK,SAAAO,GACFA,EAAaM,cAAgB,WACzB,IAAMC,EAAmBP,EAAaQ,WAClCD,IACAA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbzB,UAAUa,cAAca,WAKxBlG,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,6CAOnC0F,OAAM,SAAA3B,GACHhE,QAAQgE,MAAM,4CAA6CA,M,IChF3DmC,E,mDAAAA,K,YAAAA,E,cAAAA,E,uBAAAA,E,wBAAAA,M,KAOL,IAmCKC,EAnCUD,EAAKE,KAAMF,EAAKG,MAAOH,EAAKI,UAAWJ,EAAKK,W,SAmCtDJ,O,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,UAAAA,M,KAEL,IAkKKK,EAlKCC,EAAa,CAACN,EAASrK,EAAGqK,EAASO,EAAGP,EAASQ,EAAGR,EAASS,EAAGT,EAASpK,EAAGoK,EAASU,EAAGV,EAASW,EAAGX,EAASY,GAIjH,SAASC,EAAeC,GAC3B,MAH2B,WAGJzL,QAAQyL,IAAS,EAGrC,SAASC,EAAiBD,GAC7B,IAAMrK,EAPqB,WAOGpB,QAAQyL,GACtC,GAAIrK,EAAQ,EACR,MAAM,IAAIjC,MAAJ,WAAcsM,EAAd,yBAEV,OAAOR,EAAW7J,GAUf,SAASuK,EAAT,GAAgD,IAA3BzG,EAA0B,EAA1BA,KACxB,IAAKA,EACD,MAAM,IAAI/F,MAAM,iBAEpB,OAAO+F,EAGJ,SAAS0G,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,MACxB,IAAKA,EACD,MAAM,IAAI1M,MAAM,YAEpB,OAAO0M,EAGJ,SAASC,EAAT,GAA4D,IAApCC,EAAmC,EAAnCA,SAAU3K,EAAyB,EAAzBA,MACrC,OAAO2K,EAASD,cAAc1K,GAG3B,SAAS4K,EAAc1L,EAAWC,GACrC,OAAOuL,EAAcxL,GAAG2L,WAAWH,EAAcvL,IAe9C,SAAS2L,EAAYC,EAAeC,GACvC,OALc9L,EAKE6L,EAAM/K,MALGb,EAKI6L,EAAMhL,MAJ5Bd,EAAIC,EAAJ,WAAYD,EAAZ,YAAiBC,EAAjB,gBAA4BA,EAA5B,YAAiCD,EAAjC,KADX,IAAkBA,EAAWC,EAetB,SAAS8L,EAAT,GACH,OAAOH,EAD4C,EAA9BC,MAA8B,EAAvBC,OAczB,SAASE,EAAW7M,GACvB,OAAO,qBAAEd,eAAmCc,GAWzC,SAAS8M,EAAT,GAA+D,IAApCJ,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MACrC,OAAON,EAAcK,GAAOpL,IAAI+K,EAAcM,IAAQpL,eAAe,IAGlE,SAASwL,EAAT,GACH,OAAOR,EADuD,EAAlCG,MAAkC,EAA3BC,OAIhC,SAASK,EAAiBC,EAAqBC,EAAsBC,GAAyC,IAC1G5K,EAAa0K,EAASP,MAAMJ,SAA5B/J,UAMD6K,EAAwB,CAACC,UALb9K,EAAUc,YAAY4J,EAAStL,QAAU1B,EAAWgN,EAAS/N,cAAgBgO,EAAe,GAKpEI,OAJ3B/K,EAAUW,QAAQ+J,EAAStL,OAIQH,OAHnCuL,EAAeE,GAG4BM,YAFtChL,EAAUU,aAAagK,EAAStL,QAAU1B,EAAWgN,EAAS/N,cAAgB,EAAIiO,EAAiB,GAEhDK,cADjDjL,EAAUe,gBAAgB2J,EAAStL,QAGzD,OADAsL,EAASG,MAAQA,EACVA,EAGJ,SAASK,EAAT,GAA0D,IAApCL,EAAmC,EAAnCA,MACzB,IAAKA,EACD,MAAM,IAAI1N,MAEd,OAAO0N,EAGJ,SAASM,EAAc7M,EAAWC,GACrC,OAAO,gBAAE4L,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,OACHD,EAAM/K,QAAUd,EAAEc,OAASgL,EAAMhL,QAAUb,EAAEa,OAASgL,EAAMhL,QAAUd,EAAEc,OAAS+K,EAAM/K,QAAUb,EAAEa,OAOpG,SAASgM,EAAWC,GACvB,IAAKA,EAAMnI,KACP,MAAM,IAAI/F,MAAM,WAEpB,IAAM+F,EAAOmI,EAAMnI,KACnB,GAAIA,EAAKiH,MAAM/K,QAAUiM,EAAMjM,MAC3B,OAAO8D,EAAKkH,MAEhB,GAAIlH,EAAKkH,MAAMhL,QAAUiM,EAAMjM,MAC3B,OAAO8D,EAAKiH,MAEhB,MAAM,IAAIhN,MAAM,eAGb,SAASmO,EAAWD,EAAeX,GACtC,GAAIA,EAASP,MAAM/K,QAAUiM,EAAMjM,MAC/B,OAAOsL,EAASN,MAEpB,GAAIM,EAASN,MAAMhL,QAAUiM,EAAMjM,MAC/B,OAAOsL,EAASP,MAEpB,MAAM,IAAIhN,MAAM,kBA8Eb,SAASoO,GAAiB5G,GAC7B,OAAOjG,EAASiG,EAAK6G,KAAK/O,IAAIqN,IAqB3B,SAAS2B,GAAkBC,GAC9B,OAAOA,EACFC,QAAO,SAACC,EAAOjH,GAAR,OAAiBiH,EAAM7M,IAAIwM,GAAiB5G,MAAQ,IAAIzI,WAC/D8C,eAAe,EAAI0M,EAAMzM,QAO3B,SAAS4M,GAAiB5I,GAC7B,OAAOA,GAAoB,CAAC6I,EAAG,KAG5B,SAASC,GAAT,GACH,OAD8D,EAA/BD,EACd,IAGd,SAASE,GAAkBC,GAE9B,MAAO,CAACH,EADW,IAATG,GAqGP,SAASC,KACZ,MAAO,CAACR,MAAO,GAAIS,UAAW,GAAIC,OAAQ,K,SAlNlCpD,K,YAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,aAAAA,M,KCzML,ICsBKqD,GDtBCC,GAAb,WAMI,WACoBC,EACAC,EACAC,EAChBC,GACD,yBAJiBH,aAIlB,KAHkBC,OAGlB,KAFkBC,QAElB,KATcf,MAAiB,GAS/B,KARciB,OAAsB,GAQpC,KAPc9C,MAAqB,GAQjC,IAAM+C,EAAQF,EACW,IAArBA,EAAUzN,OAAeyN,EAAYG,GAAWH,EAAU,GAAI,GADxCG,GAAW,IAAI3Q,UAAW,GAEpD,OAAQqF,KAAKiL,MACT,KAAK9D,EAAKE,KACNrH,KAAKuL,aAAaF,GAAM,GACxB,MACJ,KAAKlE,EAAKG,MACNtH,KAAKuL,aAAaF,GAAM,GACxB,MACJ,KAAKlE,EAAKI,UACNvH,KAAKwL,aAAaH,GAAM,GACxB,MACJ,KAAKlE,EAAKK,UACNxH,KAAKwL,aAAaH,GAAM,GACxB,MACJ,QACI,MAAM,IAAIzP,MAAM,UA5BhC,iDAgCgB6P,GACR,OAAQzL,KAAKmK,MAAMzM,QACf,KAAK,EACD,OAAQ+N,GACJ,KAAKrE,EAASrK,EACV,OAAOiD,KAAKmK,MAAM,GACtB,KAAK/C,EAASY,EACV,OAAOhI,KAAKmK,MAAM,GAE1B,MACJ,KAAK,EACD,OAAQsB,GACJ,KAAKrE,EAASrK,EACV,OAAOiD,KAAKmK,MAAM,GACtB,KAAK/C,EAASO,EACV,OAAO3H,KAAKmK,MAAM,GACtB,KAAK/C,EAASQ,EACV,OAAO5H,KAAKmK,MAAM,GACtB,KAAK/C,EAASS,EACV,OAAO7H,KAAKmK,MAAM,GACtB,KAAK/C,EAASpK,EACV,OAAOgD,KAAKmK,MAAM,GACtB,KAAK/C,EAASU,EACV,OAAO9H,KAAKmK,MAAM,GACtB,KAAK/C,EAASW,EACV,OAAO/H,KAAKmK,MAAM,GACtB,KAAK/C,EAASY,EACV,OAAOhI,KAAKmK,MAAM,IAIlC,MAAM,IAAIvO,MAAJ,eAAkBwL,EAASqE,GAA3B,oCAAgEzL,KAAKmK,MAAMzM,OAA3E,aA/Dd,mCAkEyB2N,EAAiBK,GAA0B,IAAD,OACrDC,EAAQC,GAAWP,EAAMrL,KAAKkL,MAAOQ,GACrCzB,EAAO0B,EAAMzQ,KAAI,gBAAE0N,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,MAAqB,CACxCD,MAAO,EAAKoC,WAAWa,YAAYjD,GACnCC,MAAO,EAAKmC,WAAWa,YAAYhD,OAEjCiD,EAAa9L,KAAKgL,WAAWa,YAAY1O,EAASwO,EAAMzQ,KAAI,qBAAE0N,WAC9DmD,EAAa/L,KAAKgL,WAAWa,YAAY1O,EAASwO,EAAMzQ,KAAI,qBAAE2N,WACpE7I,KAAKgL,WAAWxC,SAAShI,mBACzByJ,EAAK3M,SAAQ,YAAqB,IAAnBsL,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACZlH,EAAO,EAAKqJ,WAAWgB,eAAepD,EAAOC,EAAOpO,EAAaY,MAAO,EAAK6P,OACnF,EAAKE,OAAOzJ,KAAKA,GACjBiH,EAAMjH,KAAOkH,EAAMlH,KAAOA,KAE9B,IAAMsK,EAAW,SAACpB,EAAkBqB,GAAsB,IAAD,EAC/C5D,EAAQuC,EAAO3P,KAAI,SAAAiR,GAAC,OAAI,EAAKnB,WAAWgB,eAAeG,EAAGD,EAAUzR,EAAae,MAAO,EAAK0P,WACnG,IAAK5C,OAAM3G,KAAX,oBAAmB2G,IACnB,EAAK6B,MAAMxI,KAAK,EAAKqJ,WAAWoB,WAAWvB,EAAQvC,EAAO,EAAK2C,KAAM,EAAKC,MAAOgB,KAErFD,EAAShC,EAAK/O,KAAI,qBAAE0N,SAAmBkD,GACvCG,EAAShC,EAAK/O,KAAI,qBAAE2N,SAAkBwD,UAAWN,GACjD9B,EAAK3M,SAAQ,WAAUO,GAAW,IAAnB+K,EAAkB,EAAlBA,MACLC,EAAQoB,GAAMA,EAAKvM,OAASG,GAAS6N,GAAY,EAAI,IAAMzB,EAAKvM,QAAQmL,MAC9E,EAAKP,MAAM3G,KAAK,EAAKqJ,WAAWgB,eAAepD,EAAOC,EAAOpO,EAAagB,MAAO,EAAKyP,aAzFlG,mCA6FyBG,EAAiBK,GAA0B,IAAD,OACrDY,EAAWV,GAAWP,EAAMrL,KAAKkL,MAAOQ,GACxCa,EAAWX,GAAWU,EAASpR,KAAI,qBAAE2N,SAAmB7I,KAAKkL,OAAQQ,GACrEc,EAAMF,EAASpR,KAAI,gBAAE0N,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,MAAqB,CAC1CD,MAAO,EAAKoC,WAAWa,YAAYjD,GACnCC,MAAO,EAAKmC,WAAWa,YAAYhD,OAEjC4D,EAAMF,EAASrR,KAAI,gBAAE0N,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAT,MAAqB,CAC1CD,MAAO,EAAKoC,WAAWa,YAAYjD,GACnCC,MAAO,EAAKmC,WAAWa,YAAYhD,OAEvC7I,KAAKgL,WAAWxC,SAAShI,mBACf,sBAAOgM,GAAP,YAAeC,IACpBnP,SAAQ,YAAqB,IAAnBsL,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACZlH,EAAO,EAAKqJ,WAAWgB,eAAepD,EAAOC,EAAOpO,EAAaa,MAAO,EAAK4P,OACnF,EAAKE,OAAOzJ,KAAKA,GACjBiH,EAAMjH,KAAOkH,EAAMlH,KAAOA,KAE9B,IAAM+K,EAAahB,EACf,CACI,CAACc,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OACpC,CAAC6D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OAAOwD,UAC3C,CAACI,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OAAOwD,UAC3C,CAACI,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OAAOwD,UAC3C,CAACI,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,OAAOwD,WAC3C,CACA,CAACG,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OAAOyD,UAC3C,CAACG,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OAAOyD,UAC3C,CAACG,EAAI,GAAG5D,MAAO4D,EAAI,GAAG3D,MAAO4D,EAAI,GAAG7D,OAAOyD,UAC3C,CAACI,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG7D,MAAO4D,EAAI,GAAG3D,OACpC,CAAC4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,MAAO4D,EAAI,GAAG5D,OAAOwD,WAE7CM,EAAYD,EAAWxR,KAAI,SAAA2P,GAAM,OAAI,EAAKG,WAAWa,YAAY1O,EAAS0N,EAAO3P,IAAIqN,QAC3FvI,KAAKgL,WAAWxC,SAAShI,mBACzBkM,EAAWpP,SAAQ,SAACuN,EAAQhN,GAAW,IAAD,EAC5BqO,EAAWS,EAAU9O,GACrByK,EAAQuC,EAAO3P,KAAI,SAAAiR,GAAC,OAAI,EAAKnB,WAAWgB,eAAeG,EAAGD,EAAUzR,EAAae,MAAO,EAAK0P,WACnG,IAAK5C,OAAM3G,KAAX,oBAAmB2G,IACnB,IAAM2C,EAAOS,IAAc,CAAC,EAAG,EAAG,EAAG,GAAGkB,MAAK,SAAAC,GAAC,OAAIA,IAAMhP,KAAUsJ,EAAKE,KAAOF,EAAKG,MACnF,EAAK6C,MAAMxI,KAAK,EAAKqJ,WAAWoB,WAAWvB,EAAQvC,EAAO2C,EAAM,EAAKC,MAAOgB,WA1IxF,KAoJA,SAASN,GAAWP,EAAiBH,EAAiBQ,GAMlD,IALA,IAAMtO,EAAuB,GACvBC,EAAMF,EAASkO,GACfyB,EAAY,kBAAM,IAAInS,WAAUoS,KAAK1P,IACrCqN,EAASF,GAAkBU,GAC3B8B,EJoBH,SAAgB5P,GAInB,IAHA,IAAMC,EAAMF,EAASC,GACf6P,EAAU7P,EAAOlC,KAAI,SAAAqC,GAAK,OAAI,IAAI5C,WAAUoS,KAAKxP,GAAOT,IAAIO,MAC5D6P,EAAO,IAAIvS,UACRkD,EAAQ,EAAGA,EAAQoP,EAAQvP,OAAQG,IAAS,CACjD,IAAM4C,EAAUwM,EAAQpP,GAClBsP,EAAOF,GAASpP,EAAQ,GAAKoP,EAAQvP,QAC3CwP,EAAK1P,KAAI,IAAI7C,WAAUiK,aAAanE,EAAS0M,GAAMjQ,aAEvD,OAAOgQ,EAAKhQ,YI7BD0G,CAAOyH,GAAM5N,gBAAgBiN,GAL2C,WAM1E7M,GACL,IAAMuP,EAAU,SAACrP,GAAD,OAAoBjB,EAAIuO,GAAMxN,EAAQwN,EAAK3N,OAASK,GAAUsN,EAAK3N,QAASL,IACtFgQ,EAAU,SAACC,EAAcC,GAAf,OJOJxQ,EIPwCqQ,EAAQE,GJOpCtQ,EIP2CoQ,EAAQG,IJQxE,IAAI5S,WAAU6S,WAAWzQ,EAAGC,GAAGE,YADnC,IAAaH,EAAYC,GINlB4L,EAAQkE,IAAYW,gBAAgBJ,EAAQ,EAAG,GAAI3C,GACnD7B,EAAQiE,IAAYtP,IAAIwP,GAAIS,gBAAgB/B,EAAW2B,EAAQ,EAAG,GAAKA,GAAS,EAAG,GAAI3C,GAC7FtN,EAAOuE,KAAK,CAACiH,QAAOC,WALfhL,EAAQ,EAAGA,EAAQwN,EAAK3N,OAAQG,IAAU,EAA1CA,GAOT,OAAOT,EAGX,SAASkO,GAAWlG,EAAmBsI,GAEnC,IADA,IAAMrC,EAAkB,GACfxN,EAAQ,EAAGA,EAAQ6P,EAAgB7P,IAAS,CACjD,IAAM8P,EAAQ9P,EAAQlB,KAAKiR,GAAK,EAAIF,EAC9BG,EAAIlR,KAAKmR,IAAIH,GACbhJ,EAAIhI,KAAKoR,IAAIJ,GACnBtC,EAAK1J,KAAK,IAAIhH,UAAQkT,EAAG,EAAGlJ,GAAGnH,IAAI4H,IAEvC,OAAOiG,ECtIJ,SAAS2C,GAAiBC,EAAuBjJ,GACpD,IACI,IACMkJ,EAAOC,GADAF,EAAUG,KAAKC,QAE5B,OAAKH,GAILA,EAAKA,MAAO,EACLA,QAJHlJ,EAAM,sBAKZ,MAAOsJ,GAEL,YADAtJ,EAAMsJ,EAAEC,UAcT,SAASC,GAAUxD,EAAnB,EAAsEyD,GAA4B,IAAtDxD,EAAqD,EAArDA,KAAMyD,EAA+C,EAA/CA,MACrD,IAAKD,EACD,MAAM,IAAI7S,MAAM,2BAEpB,IAAM+S,GAA6B,IAAlBF,EAAK9O,QAEtB,MAAO,CAAC8O,OAAMG,MADA,IAAI7D,GAAMC,EAAYC,EAAMX,KAAoB,CAAC,IAAI3P,YAC9C+T,MAAOG,GAAmBH,GAAQC,YAGpD,SAASE,GAAmBC,GAC/B,IAAMJ,EAA+B,GA6BrC,OA5BII,GACAlU,OAAOC,KAAKiU,GAAaxR,SAAQ,SAAAyR,GAC7B,IAAMjH,EAAYgH,EAAYC,GAC9B,GAAIjH,EAAEkH,WAAW,WAAY,CACzB,IAAMC,EAAUd,GAAWrG,EAAEpL,UAAU,UAAUgB,SACjDgR,EAAMK,GAAc,CAACG,OAAQpE,GAAWqE,QAASV,KAAMQ,QACpD,GAAInH,EAAEkH,WAAW,QACpBN,EAAMK,GAAc,CAACG,OAAQpE,GAAWsE,WACrC,GAAItH,EAAEkH,WAAW,QACpBN,EAAMK,GAAc,CAACG,OAAQpE,GAAWuE,WACrC,GAAIvH,EAAEkH,WAAW,aAAc,CAClC,IAAM9D,EAAkB,CAACX,EAAGtP,SAAS6M,EAAEwH,MAAM,KAAK,GAAI,KACtDZ,EAAMK,GAAc,CAACG,OAAQpE,GAAWyE,SAAUrE,cAC/C,GAAIpD,EAAEkH,WAAW,UAAW,CAC/B,IACMQ,EAAU1H,EAAExC,MADI,gDAEtB,IAAKkK,EACD,MAAM,IAAI5T,MAAJ,mCAAsCkM,EAAtC,MAEV,IAAM+F,EAAI4B,WAAWD,EAAQ,IACvB7K,EAAI8K,WAAWD,EAAQ,IACvBE,EAAYD,WAAWD,EAAQ,IAC/BtE,EAAkB,CAACX,EAAGtP,SAASuU,EAAQ,GAAI,KAC3CjS,EAAQ,IAAI5C,UAAQkT,GAAI6B,EAAW/K,GACzC+J,EAAMK,GAAc,CAACG,OAAQpE,GAAW6E,OAAQpS,QAAO2N,aAI5DwD,EAGX,SAASP,GAAWyB,GAChB,IACMC,EADcC,GAASF,GAAc,GACZG,QAE3BpQ,GAAW,EACXuL,EAAQZ,KACN0F,EAAW,GACXtB,EAAQ,GAEd,SAASO,EAAQpR,GAA4D,IAAD,EAChDiS,GAASD,EAAWnT,UAAUmB,IAAQ,GAAvDkS,EADiE,EACjEA,QAASE,EADwD,EACxDA,KAEhB,MAAO,CAACC,SADS/B,GAAW4B,GACVE,QAGtB,SAASE,EAAQ1E,EAAoB2E,GACjC,IAAMC,EAAQ3B,EAAMjD,GACd6E,EAAO,CAAC/F,EAAG6F,GACbC,EACAA,EAAM1O,KAAK2O,GAEX5B,EAAMjD,GAAY,CAAC6E,GAI3B,IAAK,IAAIzS,EAAQ,EAAGA,EAAQgS,EAAWnS,OAAQG,IAAS,CACpD,IAAMqK,EAAO2H,EAAWU,OAAO1S,GAC/B,GAAIoK,EAAeC,GAAO,CACtB,IAAMsI,EAAYvB,EAAQpR,EAAQ,GAC5BqS,EAAWM,EAAUN,SAC3B,IAAKA,EACD,MAAM,IAAItU,MAAJ,sBAAyBiU,EAAWnT,UAAUmB,KAExDmS,EAAS7H,EAAiBD,IAASgI,EACnCrS,GAAS2S,EAAUP,UAChB,GAAIQ,GAAQvI,GAAO,CACtB,IAAMwI,EAAaZ,GAASD,GAAY,GACxClQ,EAAUgR,GAASD,EAAWX,SAC9BlS,GAAS6S,EAAWT,UAEpB,OAAQ/H,GACJ,IAAK,IACD,IAAM0I,EAAWd,GAASD,EAAWnT,UAAUmB,EAAQ,IAAI,GAC3DqN,EAAQ,CAACX,EAAGoG,GAASC,EAASb,UAC9BlS,GAAS+S,EAASX,KAClB,MACJ,IAAK,IACD,IAAMY,EAAehB,EAAWU,OAAO1S,EAAQ,GACzCuS,EAAaN,GAASD,EAAWnT,UAAUmB,EAAQ,IAAI,GAC7DsS,EAAQhI,EAAiB0I,GAAeF,GAASP,EAAWL,UAC5DlS,GAASuS,EAAWH,KAAO,EAC3B,MACJ,IAAK,IACL,IAAK,IACL,IAAK,KACD,MACJ,QACI,MAAM,IAAIrU,MAAJ,gCAAmCsM,KAIzD,OAAO,IAAI4I,GAAcnR,EAASuL,EAAO8E,EAAUtB,GAAOqC,SAa9D,SAASC,GAAT,EACcC,EAA0BxF,EAAoByF,EAAeC,GAA8B,IAXtFC,EAAoBC,EAUxBzC,EACyF,EADzFA,MAAOF,EACkF,EADlFA,MAEZ4C,EAAW1C,EAAMxL,KAAKqI,GACtBR,EAAOiG,EFrKV,SAA0BjG,GAC7B,OAAQA,GACJ,KAAK9D,EAAKE,KACN,OAAOF,EAAKK,UAChB,KAAKL,EAAKG,MACN,OAAOH,EAAKI,UAChB,QACI,MAAM,IAAI3L,MAAM,kBE8JJ2V,CAAiBD,EAASrG,MFlL3C,SAAsBA,GACzB,OAAQA,GACJ,KAAK9D,EAAKE,KACN,OAAOF,EAAKG,MAChB,KAAKH,EAAKG,MACN,OAAOH,EAAKE,KAChB,KAAKF,EAAKI,UACN,OAAOJ,EAAKK,UAChB,KAAKL,EAAKK,UACN,OAAOL,EAAKI,WEyKkCiK,CAAaF,EAASrG,MACtEC,EAAQT,GAAkBD,GAAkB8G,EAASpG,OAASV,GAAkB2G,IAChFM,EAAW7C,EAAM5D,WAAW0G,cAAcJ,EAAUrG,EAAMC,GAIhE,OAH0B,IAAtB+F,EAAUtR,UAhBCyR,EAiBDK,EAjBqBJ,EAiBXJ,EAhBxBvJ,EAAWpK,SAAQ,SAAAqU,GAAa,IAAD,EACrBjD,EAAQ2C,EAAcO,UAAUD,GACjCjD,IAGL,EAAA0C,EAAYhO,KAAKuO,GAAUjD,OAAM/M,KAAjC,oBAAyC+M,QAatC,CAACD,KAAMwC,EAAWrC,MAAO6C,EAAU/C,QAAOC,UAAU,GAGxD,SAASkD,GAAQC,GACpB,IAAMC,EAAqB,GAyC3B,OAxCAD,EAAOxU,SAAQ,SAAA0U,GAAQ,IACZvD,EAAgCuD,EAAhCvD,KAAMC,EAA0BsD,EAA1BtD,MAAOC,EAAmBqD,EAAnBrD,SAAUC,EAASoD,EAATpD,MAC9B,GAAIH,EAAK9O,QAAU,EAAnB,CACI,IAAMsR,EAAYxC,EAAKwD,YACjBf,EAAOzC,EAAKyD,gBAAwC,IAAtBjB,EAAUtR,QAC9CoS,EAAWpQ,KAAKqP,GAAKgB,EAAKf,EAAW7J,EAASY,EAAGkJ,EAAMzC,EAAKvD,YAHhE,CAMA,GAAIyD,EAEA,IADuB,CAACvH,EAASY,EAAGZ,EAASrK,EAAGqK,EAASO,EAAGP,EAASpK,GAAG4P,MAAK,SAAAuF,GAAC,OAAK1D,EAAKQ,QAAQkD,MAC7E,CACf,IAAM/U,EAASwR,EAAM5D,WAAWH,OAAO3P,IAAIqN,GAC3CqG,EAAM5D,WAAWxC,SAAS4J,MF0LnC,SAAwBhV,EAAmBiV,GAC9C,IAAMxE,EAAI/Q,EAAIM,EAAO,GAAIA,EAAO,IAC1BuH,EAAI7H,EAAIM,EAAO,GAAIA,EAAO,IAC1BkV,EAAIxV,EAAIM,EAAO,GAAIA,EAAO,IAC1BmV,EAASnV,EACVgN,QAAO,SAACoI,EAAKjV,GAAN,OAAgBiV,EAAIhV,IAAID,KAAQ,IAAI5C,WAC3C8C,eAAe,EAAML,EAAOM,QAC3B+U,GAAY,IAAIC,WAAUC,UAAU9E,EAAGlJ,EAAG2N,GAAGM,YAAYL,GACzDM,GAAQ,IAAIH,WAAUI,eAAyB,IAAXnW,KAAKiR,IACzCmF,GAAS,IAAIL,WAAUM,eAAeX,EAAW1V,KAAKiR,GAAK,GACjE,OAAO6E,EAAUQ,SAASJ,GAAOI,SAASF,GAAQG,SEpMNC,CAAe/V,EAAQ,IAG/DsK,EAAWpK,SAAQ,SAAAmO,GACf,IAAMwD,EAAUR,EAAKQ,QAAQxD,GAC7B,GAAIwD,EAAS,CACT,IAAMgC,EAAYhC,EAAQgD,YACpBf,EAAOjC,EAAQiD,gBAAsC,IAApBjD,EAAQtP,QAC/CoS,EAAWpQ,KAAKqP,GAAKgB,EAAKf,EAAWxF,EAAUyF,EAAMjC,EAAQ/D,YAC1D,CACH,IAAMkI,EAAY3E,EAAKmD,UAAUnG,GAC7B2H,GACAA,EAAU9V,SAAQ,SAAA+V,GACd,IAAM/C,EAAO5B,EAAM2E,EAAU9I,GAC7B,GAAI+F,GAAQA,EAAKpB,SAAWpE,GAAWqE,QAAS,CAC5C,IAAMmE,EAAWhD,EAAK7B,KACtB,IAAK6E,EACD,MAAM,IAAI1X,MAAM,mBAEpB6S,EAAK8E,WAAW9H,GAChB,IAAMyF,EAAOoC,EAASpB,eACtBH,EAAWpQ,KAAKqP,GAAKgB,EAAKsB,EAAU7H,EAAUyF,EAAM5G,GAAiBgJ,EAASpI,qBAO/F6G,G,SAnNCjH,O,qBAAAA,I,eAAAA,I,eAAAA,I,uBAAAA,I,mBAAAA,I,gBAAAA,Q,KAsNL,IAAMgG,GAAb,WAGI,WACoBnR,EACAuL,EACA8E,EACAtB,GACjB,yBAJiB/O,UAIlB,KAHkBuL,QAGlB,KAFkB8E,WAElB,KADkBtB,QAClB,KAPKR,UAOL,EARN,oDAuBmBzC,GACX,OAAOzL,KAAKgQ,SAASvE,KAxB7B,gCA2BqBA,GACb,OAAOzL,KAAK0O,MAAMjD,KA5B1B,iCA+BsBA,UACPzL,KAAK0O,MAAMjD,KAhC1B,+BAaQ,OADgC,IAAlBzL,KAAKL,SAA8C,IAA5BK,KAAKwT,YAAY9V,QAAyC,IAAzBsC,KAAKyT,SAAS/V,YACrEgW,EAAY1T,OAbnC,kCAiBQ,OAAIA,KAAKL,QAAU,EACR,IAAImR,EAAc9Q,KAAKL,QAAU,EAAGK,KAAKkL,MAAOlL,KAAKgQ,SAAUhQ,KAAK0O,OAExE1O,OApBf,qCAmC0C,IAAD,OAC3B2T,EAAgBjM,EAAW5M,QAAO,SAAA2Q,GAAQ,OAAIA,IAAarE,EAASY,GAAKyD,IAAarE,EAASrK,KACrG,OAAO4W,EAAc/G,MAAK,SAAAnB,GAAQ,OAAI,EAAKuE,SAASvE,OAAckI,EAAc/G,MAAK,SAAAnB,GAAQ,OAAI,EAAKiD,MAAMjD,QArCpH,2BAyCQ,IAAMmI,EAAY5T,KAAKL,QAAU,EAC3BkU,EAA4B,MAAjB7T,KAAKkL,MAAMX,EACtBiJ,EAAcxT,KAAKwT,YACnBC,EAAWzT,KAAKyT,SACtB,IAAKzT,KAAKkO,MAAQ0F,IAAcC,GAAmC,IAAvBL,EAAY9V,QAAoC,IAApB+V,EAAS/V,OAC7E,OAAOsC,KAAKL,QAAQgG,WAExB,IAAMmO,EAAQ,GASd,OARIF,GACAE,EAAMnS,KAAK3B,KAAKL,QAAQgG,YAExBkO,GACAC,EAAMnS,KAAN,WAAe3B,KAAKkL,MAAMX,IAE9BuJ,EAAMnS,KAAN,MAAAmS,EAAK,YAASN,IACdM,EAAMnS,KAAN,MAAAmS,EAAK,YAASL,IACR,IAAN,OAAWK,EAAMzF,KAAK,KAAtB,OAzDR,kCA6DQ,OAAOzT,OAAOmZ,QAAQ/T,KAAKgQ,UAAU9U,KAAI,mCAAEH,EAAF,KAAKiZ,EAAL,qBFhQlB,WEgQiDjZ,IAA/B,OAAoCiZ,EAAE5F,WA7DvF,+BAiEQ,OAAOxT,OAAOmZ,QAAQ/T,KAAK0O,OACtBxT,KAAI,mCAAEH,EAAF,iBAAsBG,KAAI,SAAAoV,GAAI,iBFrQhB,WEqQwCvV,IAAxB,OAA6BuV,EAAK/F,SAAM0J,WAlEvF,KAsEA,SAASxD,GAAQvI,GACb,MAAO,aAAazL,QAAQyL,IAAS,EAGzC,SAASyI,GAASuD,GACd,IAAKA,EAAO5O,MAAM,SACd,MAAM,IAAI1J,MAAJ,wBAA2BsY,IAErC,OAAsB,IAAlBA,EAAOxW,OACA,EAEJzC,SAASiZ,EAAQ,IAsB5B,SAASpE,GAASqE,EAAwBC,GACtC,IAAMC,EAAWF,EAAe1X,QAAQ,KAClC6X,EAAeD,GAAY,EACjC,GAAiC,MAA7BF,EAAe5D,OAAO,GACtB,OAAI+D,EACO,CAACvE,QAASoE,EAAezX,UAAU,EAAG2X,GAAWpE,KAAMoE,GAE3D,CAACtE,QAASoE,EAAgBlE,KAAMkE,EAAezW,QAE1D,IAAM6W,EA5BV,SAAsBC,GAClB,GAAoB,MAAhBA,EAAEjE,OAAO,GACT,MAAM,IAAI3U,MAAJ,oCAAuC4Y,EAAvC,YAA4CA,EAAEjE,OAAO,KAG/D,IADA,IAAIkE,EAAQ,EACH5W,EAAQ,EAAGA,EAAQ2W,EAAE9W,OAAQG,IAAS,CAC3C,IAAMqK,EAAOsM,EAAEjE,OAAO1S,GACtB,GAAa,MAATqK,EACAuM,SACG,GAAa,MAATvM,GAEO,MADduM,EAEI,OAAO5W,EAInB,MAAM,IAAIjC,MAAJ,oCAAuC4Y,EAAvC,MAYeE,CAAaP,GAC5BQ,EAAgBP,EAAgBD,EAAezX,UAAU,EAAG6X,GAAgBJ,EAAezX,UAAU,EAAG6X,EAAe,GAE7H,MAAO,CAACxE,QADQ4E,EAAcjX,OAAS,EAAIiX,EAAgB,IAC1C1E,KAAMsE,EAAe,GCzW1C,ICmCYK,GAOAC,GD1CNC,GAA8C,GAC9CpG,GAAgC,GA2KzBqG,GAzK8B,CACvC,CACIC,KAAM,MACN/J,KAAM9D,EAAKI,UACX0N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,MACP0G,iBAAepG,UAEnB,CACIsG,KAAM,MACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,OACP0G,iBAAepG,UAEnB,CACIsG,KAAM,UACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,YACP0G,iBAAepG,UAEnB,CACIsG,KAAM,OACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,UACP0G,iBAAepG,UAEnB,CACIsG,KAAM,OACNC,iBAAkBC,mBAAiBC,OACnClK,KAAM9D,EAAKI,UACX6G,KAAM,CAAC,iBACP0G,iBAAepG,UAEnB,CACIsG,KAAM,OACNC,iBAAkBC,mBAAiBC,OACnClK,KAAM9D,EAAKI,UACX6G,KAAM,CAAC,6CACP0G,iBAAepG,UAEnB,CACIsG,KAAM,oBACNC,iBAAkBC,mBAAiBC,OACnClK,KAAM9D,EAAKK,UACX4G,KAAM,CAAC,8DACP0G,iBAAepG,UAEnB,CACIsG,KAAM,kBACNC,iBAAkBC,mBAAiBE,OACnCnK,KAAM9D,EAAKI,UACX6G,KAAM,CAAC,+CACP0G,iBACApG,MAAO,CACH2G,EAAG,gBAGX,CACIL,KAAM,SACN/J,KAAM9D,EAAKI,UACX0N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,gDACPM,MAAO,CACH2G,EAAG,QAEPP,kBAEJ,CACIE,KAAM,aACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBE,OACnChH,KAAM,CAAC,kCACPM,MAAO,CACH2G,EAAG,QAEPP,kBAEJ,CACIE,KAAM,cACN/J,KAAM9D,EAAKI,UACX0N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,kDACPM,MAAO,CACH2G,EAAG,QAEPP,kBAEJ,CACIE,KAAM,gBACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,uCACPM,MAAO,CACH2G,EAAG,QAEPP,kBAEJ,CACIE,KAAM,eACN/J,KAAM9D,EAAKI,UACX0N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,mCACPM,MAAO,CACH2G,EAAG,eAEPP,kBAEJ,CACIE,KAAM,UACN/J,KAAM9D,EAAKK,UACXyN,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CACF,IACA,UACA,0CACA,0CACA,yCACA,QACA,uCACA,uCACA,sCACA,KAEJM,MAAO,CACH2G,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,QAEPZ,kBAEJ,CACIE,KAAM,gBACN/J,KAAM9D,EAAKE,KACX4N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CAAC,kCACPM,MAAO,CACH2G,EAAG,qBAEPP,kBAEJ,CACIE,KAAM,cACN/J,KAAM9D,EAAKI,UACX0N,iBAAkBC,mBAAiBC,OACnC/G,KAAM,CACF,IACA,mBACA,mBACA,mBACA,kBACA,KAEJM,MAAO,CACHiH,EAAG,eAEPb,mBAQsC5Z,KAAI,SAAA+S,GAI9C,OAHAD,GAAiBC,GAAW,SAACM,GACzB,MAAM,IAAI3S,MAAJ,sCAAyCqS,EAAzC,cAAwDM,OAE3DN,K,UErHJ,SAAS2H,GAAY5K,GACxB,IAAMW,EAAiB,GACjBkK,EAAQ9M,EAAWtO,EAAae,OAChCsa,EAAQ/M,EAAWtO,EAAagB,OAEhCsa,EAAS,SAAChZ,EAAWC,GAAZ,OADM,SAACD,EAAaC,GAAd,OAA8BD,EAAEiZ,MAAK,SAAAC,GAAE,OAAIjZ,EAAEgZ,MAAK,SAAAE,GAAE,OAAID,EAAGpY,QAAUqY,EAAGrY,YACpDsY,CACrC9N,EAAWtL,GAAGjC,OAAO+a,GAAO3a,KAAI,SAAAkb,GAAK,OAAIrM,EAAWhN,EAAGqZ,MACvD/N,EAAWrL,GAAGlC,OAAO+a,GAAO3a,KAAI,SAAAkb,GAAK,OAAIrM,EAAW/M,EAAGoZ,QAgF3D,OAlDApL,EAAWqL,WAAU,SAAAC,GACjB,IAAMC,EAAU,SAACC,GACb,IAAMzH,EAAMjG,EAAQ0N,GACLF,EAAQvH,KAEnBpD,EAAMhK,KAAK6U,GACXF,EAAQvH,GAAOyH,IAGjBC,EAAa,SAAC3M,GAChB,IAAM0M,EAtCG,SAACE,GACd,IAAMC,EAAQtO,EAAWqO,GAAM5b,OAAOgb,GAAO,GACvCc,EAAM7M,EAAW2M,EAAMC,GACvBE,EAAWhN,EAAW6M,GAEtBI,EAAY/M,EAAW8M,EADdxO,EAAWwO,GAAU/b,OAAOgb,GAAO,IAE5CiB,EAAahB,EAAOW,EAAMI,GAC1BE,EAAYjB,EAAOa,EAAKC,GAC9B,GAAKE,GAAeC,EAApB,CAGA,GAAID,EAAWpV,OAASqV,EAAUrV,KAAM,CACpC,IAAMsV,EAAYpN,EAAW+M,GAC7B,IAAKvO,EAAW4O,GAAWrK,KAAKhD,EAAcmN,EAAYE,IACtD,YAED,GAAID,EAAUrV,OAASoV,EAAWpV,KAAM,CAC3C,IAAMuV,EAAarN,EAAW6M,GAC9B,IAAKrO,EAAW6O,GAAYtK,KAAKhD,EAAcoN,EAAWE,IACtD,OAOR,MAAO,CAACtO,MAJMmO,EAAWpV,KAAOoV,EAAaL,EAI9B7N,MAHDmO,EAAUrV,KAAOqV,EAAYJ,EAGrB1L,MAFRyL,EAAMzL,MAES9P,aADP2b,EAAWpV,MAASqV,EAAUrV,KAA4BlH,EAAakB,OAAlClB,EAAagB,QAavD0b,CAASrN,GAClB0M,GACAD,EAAQC,IAGhBxL,EAAWJ,UACN9P,OAAOiO,EAAWtO,EAAagB,QAC/B6B,SAAQ,YAAqB,IAAnBsL,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACd4N,EAAW7N,GACX6N,EAAW5N,MAEnBmC,EAAWH,OACN/P,QAAO,SAAAgP,GAAK,OAAIA,EAAMnI,MAAmD,IAA3C0G,EAAWyB,GAAOhP,OAAO+a,GAAOnY,UAC9DJ,SAAQ,SAAA8Z,GACL,IACM/G,EAAQhI,EAAW+O,GAAatc,OAAO+a,GAAOG,MAD/B,SAAC7M,GAAD,OAA0BY,EAAWqN,EAAajO,GAAUxH,QAEjF,IAAK0O,EACD,MAAM,IAAIzU,MAAM,qBAEpB,IAAMyb,EAAYtN,EAAWqN,EAAa/G,GACpCiH,EAAMjP,EAAW+O,GAAatc,OAAO+a,GAAO3a,KAAI,SAAAkb,GAAK,OAAIrM,EAAWqN,EAAahB,MAClFlb,KAAI,SAAAqc,GAED,MAAO,CAACA,MAAKC,UADI,IAAI7c,WAAUsC,WAAWsL,EAAcgP,GAAMhP,EAAc6O,IAAcla,gBAG5Fua,EAAMpP,EAAWgP,GAAWvc,OAAO+a,GAAO3a,KAAI,SAAAkb,GAAK,OAAIrM,EAAWsN,EAAWjB,MAC9Elb,KAAI,SAAAqc,GAED,MAAO,CAACA,MAAKC,UADI,IAAI7c,WAAUsC,WAAWsL,EAAcgP,GAAMhP,EAAc6O,IAAcla,gBAGlGoa,EAAIpc,KAAI,SAAA6B,GACJ,IAAMC,EAAIya,EAAIC,MAAK,SAACC,EAAIC,GAAL,OACf7a,EAAEya,SAASK,IAAID,EAAGJ,UAAYza,EAAEya,SAASK,IAAIF,EAAGH,aAAW,GACzDpc,EAAeX,EAAaiB,OAC5BwP,EAAQmF,EAAMnF,MACdsL,EAAc,CAAC5N,MAAO7L,EAAEwa,IAAK1O,MAAO7L,EAAEua,IAAKrM,QAAO9P,gBACxDmb,EAAQC,YAIjB7K,G,SD/GCiJ,O,eAAAA,I,iBAAAA,I,qBAAAA,I,oBAAAA,Q,cAOAC,O,mBAAAA,I,sBAAAA,Q,KAOL,IAAMiD,GAAb,WAaI,WACoB1S,EACA8F,EACA1C,EACAuP,EACAC,EAChB/J,EACAQ,GACD,yBAPiBrJ,WAOlB,KANkB8F,QAMlB,KALkB1C,WAKlB,KAJkBuP,YAIlB,KAHkBC,sBAGlB,KApBKhD,UAoBL,OAnBKiD,YAmBL,OAlBKpN,OAAmB,GAkBxB,KAjBKD,UAAyB,GAiB9B,KAhBKsN,WAA4B,GAgBjC,KAfKC,WAA4B,GAejC,KAdKhO,MAAiB,GActB,KAZMiO,KAAc,GAYpB,KAXMC,UAWN,OAVM3J,MAAgC,GAWpC1O,KAAKwI,SAAS/G,QACdzB,KAAKiY,OAAS,IAAIK,KAAgBtY,KAAK1B,OAAOuG,aAC9C7E,KAAK0O,MAAQT,EAAUS,MACvB1O,KAAKgV,KAAO/G,EAAU+G,KACtBhV,KAAKqY,KAAO,CAAC7J,GAAUxO,KAAMiO,EAAWQ,IA1BhD,wDAqCuBrJ,GACf,IACMmT,EAAmB,CAAC1a,MADZmC,KAAK1B,OAAOka,aAAapT,EAASyI,EAAGzI,EAAST,EAAGS,EAASkN,GACvC9J,SAAUxI,KAAKwI,UAEhD,OADAxI,KAAK6K,OAAOlJ,KAAK4W,GACVA,IAzCf,kCA4CuBzO,GACf,IAAMjM,EAAQiM,EAAMjM,MACpBmC,KAAK1B,OAAOma,aAAa5a,GACzBmC,KAAK6K,OAAS7K,KAAK6K,OAAO/P,QAAO,SAAAqR,GAAC,OAAIA,EAAEtO,QAAUA,KAClDiM,EAAMjM,OAASA,EACfmC,KAAK6K,OAAOvN,SAAQ,SAAA6O,GAAC,OAAIA,EAAEtO,MAAQsO,EAAEtO,MAAQA,EAAQsO,EAAEtO,MAAQ,EAAIsO,EAAEtO,SACrEmC,KAAKwI,SAAShI,qBAlDtB,uCAqD4BoI,EAAcC,EAAc6P,GAAoC,IAAD,OAC7E5M,EAAa9L,KAAK6L,YAAY7B,GAAiBpB,IAC/CmD,EAAa/L,KAAK6L,YAAY7B,GAAiBnB,IACrD7I,KAAKwI,SAAShI,mBACd,IAAMmY,EAAO3Y,KAAK4Y,UAAU9M,EAAYC,EAAY2M,GAC9CG,EAAkBjQ,EAAMqB,KAAKG,QAAO,SAACoI,EAAK+E,GAAN,OAAc/E,EAAM/J,EAAcqD,EAAYyL,KAAM,GAAK3O,EAAMqB,KAAKvM,OACxGob,EAAkBjQ,EAAMoB,KAAKG,QAAO,SAACoI,EAAK+E,GAAN,OAAc/E,EAAM/J,EAAcsD,EAAYwL,KAAM,GAAK1O,EAAMoB,KAAKvM,OACxGqb,EAAYnQ,EAAMqB,KAAK/O,KAAI,SAAAqc,GAAG,OAAI,EAAKyB,UAAUlN,EAAYyL,EAAKsB,MAClEI,EAAYpQ,EAAMoB,KAAK/O,KAAI,SAAAqc,GAAG,OAAI,EAAKyB,UAAUjN,EAAYwL,EAAKuB,MAClEI,EAA0B,CAACtQ,QAAOC,QAAO8P,OAAMI,YAAWE,aAChE,OAAQN,EAAKvd,cACT,KAAKX,EAAa0e,UACdnZ,KAAKkY,WAAWvW,KAAKuX,GACrB,MACJ,KAAKze,EAAa2e,UACdpZ,KAAKmY,WAAWxW,KAAKuX,GAG7B,OAAOA,IAvEf,qCA0E0BtQ,EAAeC,EAAezN,EAA4B8P,EAAiBmO,GAC7F,IAAM1X,EAAOxF,EAAWf,GAClBke,EAAene,EAAkBC,GAAgBoP,GAAkBU,GACnEqO,EAAiC,IAAjBD,EAAqB,EAAI7Q,EAAcG,EAAOC,GAC9D2Q,OAA8B9F,IAAb2F,EAAyB,EAAIA,EAC9CtB,EAAY/X,KAAK+X,UAAYpb,KAAK8c,IAAIH,EAAeC,GAAiBC,EACtEE,EAAS3B,GAAa,EAAI,EAAI,EAAIA,EAElC5O,EAAsB,CAACtL,MADfmC,KAAK1B,OAAOqb,gBAAgB/Q,EAAM/K,MAAOgL,EAAMhL,MAAO8D,EAAM4X,EAAeD,EAAcI,GACnEte,eAAc8P,QAAOtC,QAAOC,QAAO+Q,SAAS,GAEhF,OADA5Z,KAAK4K,UAAUjJ,KAAKwH,GACbA,IApFf,0CAuF+BA,EAAqBuB,GAC5CvB,EAAS+B,MAAQT,GAAkBD,GAAkBrB,EAAS+B,OAASR,GACvE1K,KAAK1B,OAAOub,qBAAqB1Q,EAAStL,MAAO6M,EAAQ,OAzFjE,qCA4F0BvB,GAClB,IAAMtL,EAAQsL,EAAStL,MACvBmC,KAAK4K,UAAY5K,KAAK4K,UAAU9P,QAAO,SAAAgf,GAAQ,OAAIA,EAASjc,QAAUA,KACtEmC,KAAK1B,OAAOyb,gBAAgBlc,GAC5BmC,KAAK4K,UAAUtN,SAAQ,SAAAwc,GACfA,EAASjc,MAAQA,GACjBic,EAASjc,WAGjBsL,EAASyQ,SAAU,IArG3B,iCAwGsB3P,EAAgB3B,EAAoB2C,EAAYC,EAAiBpB,GAC/E,IAAMkQ,EAAK/P,EAAK,GACV0N,EAAK1N,EAAK,GACV2N,EAAK3N,EAAK,GACVpM,EAAQmC,KAAK1B,OAAO2b,YAAYD,EAAGnc,MAAO+Z,EAAG/Z,MAAO8Z,EAAG9Z,OACvDqc,EAAgBzS,EAAc0S,KAE9B/W,EAAc,CAACvF,QAAOoN,OAAMC,QAAOjB,OAAMmB,OADhC,CAAChD,EAAW4R,GAAK5R,EAAWuP,GAAKvP,EAAWwP,IACJtP,QAAO4R,gBAAexL,MAAO,GAAI5E,SAExF,OADA9J,KAAKmK,MAAMxI,KAAKyB,GACTA,IAjHf,iCAoHsBA,GAAoB,IAAD,OACjCA,EAAKkF,MAAMhL,SAAQ,SAAA8c,GAAI,OAAI,EAAKC,eAAeD,MAC/ChX,EAAKkF,MAAQ,GACTlF,EAAK0G,OACL9J,KAAKsa,YAAYlX,EAAK0G,OAE1B9J,KAAK1B,OAAOic,YAAYnX,EAAKvF,OAC7BmC,KAAKmK,MAAQnK,KAAKmK,MAAMrP,QAAO,SAAAgf,GAAQ,OAAIA,EAASjc,QAAUuF,EAAKvF,SACnEmC,KAAKmK,MAAM7M,SAAQ,SAAAwc,GACXA,EAASjc,MAAQuF,EAAKvF,OACtBic,EAASjc,aA9HzB,yCAmI8BuF,GAAoB,IAAD,OACzCA,EAAKkF,MAAMhL,SAAQ,SAAA8c,GAAI,OAAI,EAAKC,eAAeD,MAC/ChX,EAAKkF,MAAQ,GACTlF,EAAK0G,OACL9J,KAAKsa,YAAYlX,EAAK0G,OAE1B,IAAK,IAAIjM,EAAQ,EAAGA,EAAQuF,EAAK6G,KAAKvM,OAAQG,IAAS,CACnD,IAAM2c,EAAOpX,EAAK6G,KAAKpM,GACjB4c,EAAOrX,EAAK6G,MAAMpM,EAAQ,GAAKuF,EAAK6G,KAAKvM,QAC/C0F,EAAKkF,MAAM3G,KAAK3B,KAAKgM,eAAewO,EAAMC,EAAMhgB,EAAagB,MAAO2H,EAAK8H,WA5IrF,sCAgJkC,IAAD,OACzBlL,KAAKmK,MAAM7M,SAAQ,SAAA8F,GAAI,OAAI,EAAKsX,mBAAmBtX,QAjJ3D,gCAoJqBuX,GACb,IAAMC,EAAU,SAACrD,EAAa6C,GACtB7C,EAAIjP,MACJiP,EAAIjP,MAAM3G,KAAKyY,GAEf7C,EAAIjP,MAAQ,CAAC8R,IAGrBpa,KAAK4K,UACA9P,QAAO,mBAAqBqB,EAArB,EAAEf,iBACTkC,SAAQ,SAAA8c,GACLQ,EAAQR,EAAKxR,MAAOwR,GACpBQ,EAAQR,EAAKvR,MAAOuR,MAE5B,IAAM9D,EAAiC,GACvCtW,KAAK4K,UAAUtN,SAAQ,SAAA6L,GAAQ,OAAImN,GJzEpC,EIyEwDnN,EJxEpDR,EADoD,EAAlCC,MAAkC,EAA3BC,SAHzB,CAACD,OADL,EI6EoFO,GJ7E3DP,MACbC,MADmE,EAA/CA,MACbqC,MAD4D,EAAxCA,MACb9P,aADqD,EAAjCA,cAA9C,MAIA,KI0ECuf,EAAKrE,GACLtW,KAAK6K,OAAOvN,SAAQ,SAAAwM,GAAK,OAAIA,EAAMxB,WAAQoL,OArKnD,kCAwKuBmH,GAAqC,IAAD,QAC/B,WAChB,OAAQA,GACJ,KAAKhG,GAAciG,OACf,OAAOlF,GAAY,GACvB,KAAKf,GAAckG,QACf,OC5Mb,SAAsB/P,GACzB,IAAMW,EAAiB,GACjBqP,EAAc,SAACpS,EAAe+N,GAChC,IAAM5Z,EAAI8M,EAAWjB,GACf5L,EAAI+M,EAAWnB,EAAO+N,GAC5B,GAAK5Z,EAAE4E,MAAS3E,EAAE2E,KAAlB,CAGA,IAAMsZ,EAAU5S,EAAWtL,GAAGjC,OAAOiO,EAAWtO,EAAae,QAAQN,KAAI,SAAAkb,GAAK,OAAIrM,EAAWhN,EAAGqZ,MAC1F8E,EAAU7S,EAAWrL,GAAGlC,OAAOiO,EAAWtO,EAAae,QAAQN,KAAI,SAAAkb,GAAK,OAAIrM,EAAW/M,EAAGoZ,MAC1FvN,EAAQoS,EAAQjF,MAAK,SAAAmF,GAAM,QAAMD,EAAQlF,MAAK,SAAAoF,GAAM,OAAID,EAAOtd,QAAUud,EAAOvd,YACtF,GAAKgL,GAAUA,EAAMlH,KAKrB,MAAO,CAACiH,QAAOC,QAAOzN,aAFDX,EAAagB,MAEEyP,MADtByL,EAAMzL,SAsBxB,OAnBAF,EAAWqL,WAAU,SAAAC,GACFtL,EAAWJ,UAAU9P,OAAOiO,EAAWtO,EAAagB,QAC5D6B,SAAQ,SAAAqZ,GACX,IAAM/N,EAAQoS,EAAYrE,EAAM/N,MAAO+N,GACnC/N,IACsB0N,EAAQxN,EAAQF,KAElC+C,EAAMhK,KAAKiH,IAGnB,IAAMC,EAAQmS,EAAYrE,EAAM9N,MAAO8N,GACnC9N,IACsByN,EAAQxN,EAAQD,KAElC8C,EAAMhK,KAAKkH,UAKpB8C,EDuKgB0P,CAAa,GACxB,QACI,MAAM,IAAIzf,QAItB0f,GAAche,SAAQ,YAA0C,IAAxCsL,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOzN,EAAyB,EAAzBA,aAAc8P,EAAW,EAAXA,MAChD,EAAKc,eAAepD,EAAOC,EAAOzN,EAAc8P,EAAO,QArLnE,yCAyLqC,IAAD,OACdlL,KAAK4K,UACd9P,QAAO,qBAAEM,eAAmCX,EAAaiB,UACzDZ,QAAO,SAAAygB,GAAK,OAA4D,IAAxDA,EAAM3S,MAAMJ,SAAS/J,UAAUW,QAAQmc,EAAM1d,UAC5DP,SAAQ,SAAA6L,GAAQ,OAAI,EAAKkR,eAAelR,QA7LtD,oCAgMyBmI,EAAiBrG,EAAYC,GAC9C,IAAM0D,EAAQ,IAAI7D,GAAM/K,KAAMiL,EAAMC,EAAOoG,EAASrH,KAAK/O,IAAIqN,GAAe8D,WACtEjJ,EAAOwL,EAAMxL,KAAKgE,EAASrK,GAEjC,OADAiD,KAAKwb,QAAQlK,EAAUlO,GAChBwL,IApMf,yBAyNc6M,GACNzb,KAAKoY,KAAKzW,KAAK8Z,KA1NvB,gCA8NQ,IAAMnb,EAAON,KAAKwI,SAASjI,UAC3B,GAAID,EACA,OAAOA,EAEX,IAAMmb,EAAMzb,KAAKoY,KAAK1X,QACtB,GAAI+a,EAEA,OADAA,EAAIzb,OACG,EAEX,GAAIA,KAAK0b,QAAUC,QAAMC,QAAS,CAC9B,GAAI5b,KAAKqY,KAAK3a,OAAS,EAKnB,OAJAsC,KAAKqY,KAAOxG,GAAQ7R,KAAKqY,MACA,IAArBrY,KAAKqY,KAAK3a,QA2M9B,SAAwBsN,EAAwBb,EAAgB2E,GAC5D,IAAMJ,EAAQG,GAAmBC,GAC3B+M,EAAoC,GAW1C,OAVA1R,EAAM7M,SAAQ,SAAA8F,GACVA,EAAKsL,MAAMpR,SAAQ,SAAAgT,GACf,IAAMD,EAAQwL,EAASvL,EAAK/F,GACxB8F,EACAA,EAAM1O,KAAKyB,GAEXyY,EAASvL,EAAK/F,GAAK,CAACnH,SAIzBxI,OAAOmZ,QAAQ8H,GAAU3gB,KAAI,YAAY,IAAV6T,EAAS,oBACrC+M,EAAepN,EAAMK,IAAQL,GAAO,GACpC4B,EAAOwL,GAA8BhR,GAAWqP,KACtD,OAAO,IAAI4B,GAAa/Q,EAAY6Q,EAAS9M,GAAMuB,MA1NvC0L,CAAehc,KAAMA,KAAKmK,MAAOnK,KAAK0O,OAAOpR,SAAQ,SAAA2e,GAAQ,OAAIA,EAASpK,cAEvE,EACJ,GAAI7R,KAAKkY,WAAWxa,OAAS,EAEhC,OADAsC,KAAKkY,WAAalY,KAAKkc,mBAChB,EAGX,OADAlc,KAAK0b,MAAQC,QAAMQ,QACXnc,KAAKgY,qBACT,KAAKpD,GAAawH,KACd,MACJ,KAAKxH,GAAayH,MACdrc,KAAKsc,gBACL,MACJ,KAAK1H,GAAamG,QACd/a,KAAKuc,YAAY1H,GAAckG,SAC/B/a,KAAKsc,gBACL,MACJ,KAAK1H,GAAakG,OACd9a,KAAKuc,YAAY1H,GAAciG,QAC/B9a,KAAKsc,iBAIjB,OAAO,IAnQf,0CAuQQ,IAAM7d,EAAYuB,KAAKwI,SAAS/J,UAC1B6J,EAAQtI,KAAK4K,UAAU9P,QAAO,SAAAqO,GAChC,OAAIhN,EAAWgN,EAAS/N,gBAGjBmN,EAAcY,EAASP,OAAOjE,GAAK,GAAK4D,EAAcY,EAASN,OAAOlE,GAAK,MAEhFvF,EAAUX,EAAUW,QACpBod,EAAoBlU,EAAM8B,QAAO,SAACoI,EAAKrJ,GAAN,OAAmBqJ,EAAMpT,EAAQ+J,EAAStL,SAAQ,GAAKyK,EAAM5K,OAC9F6B,EAAc,IAAIZ,aAAaF,EAAUc,aAC/C+I,EAAMhL,SAAQ,SAAA8c,GACV,IAEMqC,GAFard,EAAQgb,EAAKvc,OACM2e,GACEA,EACxCjd,EAAY6a,EAAKvc,QAAU,EAAI4e,KAEnCzc,KAAKwI,SAASkU,kBACd1c,KAAK1B,OAAOqe,iBAAiBpd,KAxRrC,mCA2RwBxC,EAAWC,GAC3B,OAAOgD,KAAK4K,UAAUoL,KAAKpM,EAAc7M,EAAGC,MA5RpD,wCAgS6BmN,EAAgB+E,EAAoB0N,GAA+B,IAAD,OACjFC,EAA2B,WAC7B,IAAMC,EAAY,IAAI/R,GAAM,EAAM5D,EAAKI,UAAWkD,GJgDvD,SAA4BN,GAC/B,OAAOA,EAAMC,QAAO,SAACoI,EAAKpP,GAAN,OAAeoP,EAAMhI,GAAkBpH,EAAK8H,SAAQ,GAAKf,EAAMzM,OIjDPqf,CAAmB5S,IAAS,CAACD,GAAkBC,KAEnH,OADA,EAAK3B,SAAShI,mBACP2J,EAAMjP,KAAI,SAAAkI,GACb,IAAM4Z,EAAWF,EAAU3S,MAAMrP,QAAO,gBAAEmQ,EAAF,EAAEA,KAAF,SAAQ3C,MAAiB5K,OAAS,GAAKuN,IAAS7H,EAAK6H,QACvFgS,EAAejT,GAAiB5G,GAChC8Z,EAAcF,EAAS5S,QAAO,SAACrN,EAAGC,GAGpC,OAFWgN,GAAiBjN,GAAG2L,WAAWuU,GAC/BjT,GAAiBhN,GAAG0L,WAAWuU,GACzBlgB,EAAIC,KAEzB,OAAO,EAAKmgB,iBAAiBD,EAAa9Z,OAGlD,OAAQ8L,GACJ,KAAKpE,GAAWyE,SACZ,IAAMmJ,EAAYkE,GAA4BnS,GAAkB,KAChE,IAAKiO,EACD,MAAM,IAAI9c,MAAM,sBAEpBuO,EAAM7M,SAAQ,SAAC8f,EAAOC,GAClBlT,EAAM7M,SAAQ,SAACggB,EAAOC,GACdF,GAAUE,GAGd,EAAKJ,iBAAiBC,EAAOE,EAAO5E,SAG5C,MACJ,KAAK5N,GAAWuE,KACZ,OAAQlF,EAAMzM,QACV,KAAK,EACGyM,EAAM,GAAGc,OAASd,EAAM,GAAGc,KAC3B4R,IAEA7c,KAAKmd,iBAAiBhT,EAAM,GAAIA,EAAM,IAE1C,MACJ,KAAK,EACD0S,QAxUxB,wCA+U6C,IAAD,OACpC,GAA+B,IAA3B7c,KAAKkY,WAAWxa,OAChB,OAAOsC,KAAKkY,WAEhB,IAAMsF,EAAe,SAAC5U,EAAcC,IJrJrC,SAA2BD,EAAcC,GAI5C,IAHA,IAAM4U,EAAY,YAAI7U,EAAMqB,MAAMoC,UAC5BqR,EAAY7U,EAAMoB,KAClB0T,EAAwB,GACrBtL,EAAW,EAAGA,EAAWoL,EAAU/f,OAAQ2U,IAAY,CAE5D,IADA,IAAIuL,EAAa,EACRC,EAAO,EAAGA,EAAOJ,EAAU/f,OAAQmgB,IAAQ,CAChD,IAAMC,GAAeD,EAAOxL,GAAYoL,EAAU/f,OAClDkgB,GAAcnV,EAAcgV,EAAUI,GAAOH,EAAUI,IACvDF,GAAcnV,EAAciV,EAAUI,GAAcL,GAAWI,EAAO,GAAKJ,EAAU/f,SAEzFigB,EAAYhc,KAAKic,GAErB,IAAIG,EAAe,EACfC,EAAYL,EAAYI,GAC5BJ,EAAYrgB,SAAQ,SAACsgB,EAAY/f,GACzB+f,EAAaI,IACbD,EAAelgB,EACfmgB,EAAYJ,MAGhBG,EAAe,IACflV,EAAMoB,KAAOpB,EAAMoB,KAAK/O,KAAI,WAAK2C,GAAL,sBAAegL,EAAMoB,MAAMpM,EAAQkgB,GAAgBlV,EAAMoB,KAAKvM,YIgItFugB,CAAkBrV,EAAOC,GACzB,EAAK2S,QAAQ5S,EAAOC,IAExB,OAAO7I,KAAKkY,WAAWpd,QAAO,YAAiD,IAA/C6d,EAA8C,EAA9CA,KAAM/P,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOkQ,EAA0B,EAA1BA,UAAWE,EAAe,EAAfA,UAC3D,GAAIN,EAAKvd,eAAiBX,EAAa0e,WAClB1Q,EAAckQ,EAAK/P,MAAO+P,EAAK9P,QPnYhC,IOyYZ,OAJA2U,EAAa5U,EAAOC,GACpB,EAAKwR,eAAe1B,GACpBI,EAAUzb,SAAQ,SAAA4gB,GAAC,OAAI,EAAK7D,eAAe6D,MAC3CjF,EAAU3b,SAAQ,SAAA4gB,GAAC,OAAI,EAAK7D,eAAe6D,OACpC,EAGf,OAAO,OAlWnB,mCAsWwB9a,GAChBpD,KAAKwI,SAAS4J,MJjBf,SAA4BhP,GAC/B,IAAM+a,EAAiB/a,EAAK6G,KAAK/O,IAAIqN,GAC/BlL,EAAMF,EAASghB,GACftQ,GAAI,IAAIlT,WAAUsC,WAAWkhB,EAAe,GAAI9gB,GAAKH,YACrDoV,GAAI,IAAI3X,WAAUsC,WAAWkhB,EAAe,GAAI9gB,GAAKH,YACrDyH,GAAI,IAAIhK,WAAUiK,aAAaiJ,EAAGyE,GAAGpV,YAE3C,OADAoV,EAAE1N,aAAaiJ,EAAGlJ,GAAGzH,aACd,IAAIwV,WAAUC,UAAU9E,EAAGlJ,EAAG2N,GAAGM,YAAYvV,GAAK6V,SIUjCkL,CAAmBhb,IACvCpD,KAAKwI,SAAShI,qBAxWtB,8BA2WoB4c,EAAcE,GAC1B,IAAMe,EAAW,YAAIjB,EAAMnT,MAAMoC,UAC3BiS,EAAWhB,EAAMrT,KACjBlN,EAAIshB,EAASnjB,IAAI2O,GACjB7M,EAAIqhB,EACJvW,EAAIwW,EACJvW,EAAIuW,EAASpjB,IAAI2O,GAEvB,SAAS0U,EAAY1gB,GACjB,MAAO,CACH2gB,GAAIzhB,EAAEc,GACN4gB,GAAI1hB,GAAGc,EAAQ,GAAKd,EAAEW,QACtBghB,GAAI1hB,EAAEa,GACN8gB,GAAI3hB,GAAGa,EAAQ,GAAKb,EAAEU,QACtBkhB,GAAI9W,EAAEjK,GACNghB,GAAI/W,GAAGjK,EAAQ,GAAKiK,EAAEpK,QACtBohB,IAAKhX,GAAGjK,EAAQiK,EAAEpK,OAAS,GAAKoK,EAAEpK,QAClCqhB,GAAIhX,EAAElK,GACNmhB,GAAIjX,GAAGlK,EAAQ,GAAKkK,EAAErK,SAM9B,IAFA,IAAMwN,EAAQT,IAAmBD,GAAkB4S,EAAMlS,OAASV,GAAkB8S,EAAMpS,QAAU,GAC9F5C,EAAqB,GAClBzK,EAAQ,EAAGA,EAAQb,EAAEU,OAAQG,IAAS,CAAC,IAAD,EACtB0gB,EAAY1gB,GAA1B6gB,EADoC,EACpCA,GAAIC,EADgC,EAChCA,GAAIC,EAD4B,EAC5BA,GACftW,EAAM3G,KAAK3B,KAAKgM,eAAe0S,EAAIE,EAAInkB,EAAae,MAAO0P,IAC3D5C,EAAM3G,KAAK3B,KAAKgM,eAAe4S,EAAID,EAAIlkB,EAAae,MAAO0P,IAI/D,OAFAlL,KAAKif,WAAW3B,GAChBtd,KAAKif,WAAW7B,GACT9U,IA1Yf,gCA+YsBM,EAAeC,EAAe6P,GAC5C,IAAMjP,EAAchB,EAAcG,EAAOC,GACnCzN,EAAesd,EAAYje,EAAa2e,UAAY3e,EAAa0e,UACjE+F,EAAaxG,EAAYlO,GAAkBkO,GAAajP,EAAc0V,KACtEjU,EAAQZ,KAERoP,EAAS,GADG1Z,KAAK+X,UAAYpb,KAAK8c,IAAIyF,EAAazV,IAGnDN,EAAsB,CAACtL,MADfmC,KAAK1B,OAAOqb,gBAAgB/Q,EAAM/K,MAAOgL,EAAMhL,OAAO,EAAO4L,EAAayV,EAAYxF,GAChE9Q,QAAOC,QAAOzN,eAAc8P,QAAO0O,SAAS,GAEhF,OADA5Z,KAAK4K,UAAUjJ,KAAKwH,GACbA,IAzZf,gCA4ZsBP,EAAeC,EAAeqW,GAC5C,IAAMzV,EAAchB,EAAcG,EAAOC,GACnCzN,EAAeX,EAAa2kB,OAC5BlU,EAAQT,GAAkByU,GAE1BxF,EAAS,GADG1Z,KAAK+X,UAAYpb,KAAK8c,IAAIyF,EAAazV,IAGnDN,EAAsB,CAACtL,MADfmC,KAAK1B,OAAOqb,gBAAgB/Q,EAAM/K,MAAOgL,EAAMhL,OAAO,EAAO4L,EAAayV,EAAYxF,GAChE9Q,QAAOC,QAAOzN,eAAc8P,QAAO0O,SAAS,GAEhF,OADA5Z,KAAK4K,UAAUjJ,KAAKwH,GACbA,IAraf,6BA8BQ,OAAOnJ,KAAKwI,SAASlK,SA9B7B,yCAkCQ,OAAO0B,KAAK4K,UAAU9P,QAAO,SAAAqO,GAAQ,OAAIA,EAASG,WAlC1D,4BAwMQ,OAAOtJ,KAAKiY,OAAOoH,YAxM3B,aA2MqB3D,GAAe,IAAD,OAC3B1b,KAAKwI,SAASkT,MAAQA,EAClBA,IAAUC,QAAM2D,QAChBtf,KAAKmY,WAAW7a,SAAQ,SAAA4b,GAAe,IAC5BP,EAA8BO,EAA9BP,KAAMI,EAAwBG,EAAxBH,UAAWE,EAAaC,EAAbD,UACT,CAAIN,GAAJ,mBAAaI,GAAb,YAA2BE,IAChC3b,SAAQ,SAAAiiB,GAAG,OAAI,EAAKlF,eAAekF,SAEjDvf,KAAKmY,WAAa,GAClBnY,KAAKwI,SAASgX,YAElBxf,KAAKiY,OAAO9K,KAAKuO,OAtNzB,K,IE/CY+D,GFwfN1D,G,WACF,WAAoB/Q,EAAgCb,EAAwBmG,GAAc,yBAAtEtF,aAAqE,KAArCb,QAAqC,KAAbmG,O,sDAIxE,OAAQtQ,KAAKsQ,KAAKpB,QACd,KAAKpE,GAAWsE,KACZpP,KAAKgL,WAAW0U,aAAa1f,KAAKmK,MAAM,IACxC,MACJ,KAAKW,GAAWuE,KAGhB,KAAKvE,GAAWyE,SACZvP,KAAKgL,WAAW2U,kBAAkB3f,KAAKmK,MAAOnK,KAAKsQ,KAAKpB,OAAQlP,KAAKsQ,KAAKpF,OAC1E,MACJ,KAAKJ,GAAW6E,a,cEvf5B,SAASiQ,GAAchf,EAAuBoU,EAAc6K,EAA4BC,EAAaC,GAKjG,MAAO,CAACnf,UAASoU,OAAM6K,eAAcG,gBAJb,SAACC,GAAD,OAAqBH,GAAO,EAAIG,GAAUF,EAAOE,GAInBC,gBAH9B,SAACxe,GAAD,OAAsBA,EAAUoe,IAAQC,EAAOD,IAGAK,eAFhD,SAACze,GAAD,OAAqB0e,gCAAsBxf,GAAWc,EAAU,KAEA2e,eADhE,SAACxf,GAAD,OAAmBA,EAAQuf,gCAAsBxf,GAAW,MAIhF,SAAS0f,GAAe1f,GAC3B,OAAQA,GACJ,KAAK9E,eAAaykB,QAEd,OAAOX,GAAchf,EAAS,UAAW6e,GAAae,UAAW,EAAG,KACxE,KAAK1kB,eAAa2kB,YAEd,OAAOb,GAAchf,EAAS,eAAgB6e,GAAaiB,IAAK,EAAG,KACvE,KAAK5kB,eAAa6kB,YAEd,OAAOf,GAAchf,EAAS,eAAgB6e,GAAamB,SAAU,EAAG,KAC5E,KAAK9kB,eAAa+kB,uBAEd,OAAOjB,GAAchf,EAAS,oBAAqB6e,GAAamB,SAAU,GAAI,KAClF,KAAK9kB,eAAaglB,KAEd,OAAOlB,GAAchf,EAAS,OAAQ6e,GAAae,UAAW,EAAG,KACrE,KAAK1kB,eAAailB,sBAEd,OAAOnB,GAAchf,EAAS,mBAAoB6e,GAAamB,SAAU,EAAG,KAChF,KAAK9kB,eAAaklB,eAEd,OAAOpB,GAAchf,EAAS,kBAAmB6e,GAAae,UAAW,EAAG,KAChF,KAAK1kB,eAAamlB,gBAEd,OAAOrB,GAAchf,EAAS,YAAa6e,GAAae,UAAW,EAAG,KAC1E,KAAK1kB,eAAaolB,mBAEd,OAAOtB,GAAchf,EAAS,mBAAoB6e,GAAaiB,IAAK,EAAG,KAC3E,KAAK5kB,eAAaqlB,kBAEd,OAAOvB,GAAchf,EAAS,sBAAuB6e,GAAamB,SAAU,GAAI,KACpF,KAAK9kB,eAAaslB,oBAEd,OAAOxB,GAAchf,EAAS,sBAAuB6e,GAAaiB,IAAK,GAAI,KAC/E,KAAK5kB,eAAaulB,aAEd,OAAOzB,GAAchf,EAAS,gBAAiB6e,GAAaiB,IAAK,EAAG,KACxE,KAAK5kB,eAAawlB,aAEd,OAAO1B,GAAchf,EAAS,YAAa6e,GAAaiB,IAAK,GAAI,KACrE,QACI,MAAM,IAAI9kB,MAAM,c,SAlEhB6jB,O,uBAAAA,I,yBAAAA,I,cAAAA,Q,KCOL,IASD8B,GAAmB,CANHC,yBAAc,CAChCzS,IAJuB,sBAKvB0S,QAASC,eAFNC,aAQMC,GAAeC,YAAK,CAC7B9S,IAAK,WACL+S,SAAS,EACTP,sBAGSQ,GAAgBF,YAAK,CAC9B9S,IAAK,YACL+S,SAAS,IAGAE,GAAcH,YAAK,CAC5B9S,IAAK,UACL+S,SAAS,IAGAG,GAAiBJ,YAAK,CAC/B9S,IAAK,aACL+S,QAASlN,GAAawH,KACtBmF,sBAGSW,GAAqBL,YAAK,CACnC9S,IAAK,iBACL+S,QAlCsB,EAmCtBP,sBAGSY,GAAgBN,YAA6B,CACtD9S,IAAK,YACL+S,aAASpO,EACT6N,sBAeG,IAKKa,GALCC,GAAeR,YAAK,CAC7B9S,IAAK,WACL+S,SAAS,K,SAGDM,K,cAAAA,E,sBAAAA,E,iBAAAA,Q,KAML,IAAME,GAAeT,YAAe,CACvC9S,IAAK,WACL+S,QAASM,GAASG,QAQTC,IALuBX,YAAK,CACrC9S,IAAK,mBACL+S,QAAS5M,mBAAiBC,SAGE0M,YAAqB,CACjD9S,IAAK,eACL+S,QAAS7lB,KAQAwmB,GA1CF5mB,EAAeX,KAAI,SAAA0F,GACtB,IAAM8hB,EAAUpC,GAAe1f,GAM/B,MAA2B,CAAC8hB,UAASC,YALjBd,YAAK,CACrB9S,IAAK2T,EAAQ1N,KACb8M,QAAS,IACTP,0B,uBCrDL,SAASqB,KAA2B,IAAD,EACnBC,YAAejB,IAA3BkB,EAD+B,sBAEND,YAAeP,IAFT,mBAE/BS,EAF+B,KAErBC,EAFqB,KAItC,SAASC,EAAT,GAGiB,IAHQC,EAGT,EAHSA,KAAMC,EAGf,EAHeA,SAI3B,OAAOL,EAAW,4BACd,gBAACM,GAAA,EAAD,CACIC,SAAUH,IAASH,EACnBtf,MAAOyf,IAASH,EAAW,UAAY,YACvCO,QAAS,kBAAMN,EAAYE,KAE1BC,GAKb,OACI,gBAACI,GAAA,EAAD,KACI,gBAACN,EAAD,CAAgBC,KAAMd,GAASG,OAC3B,gBAAC,IAAD,OAEJ,gBAACU,EAAD,CAAgBC,KAAMd,GAASoB,WAC3B,gBAAC,IAAD,OAEJ,gBAACP,EAAD,CAAgBC,KAAMd,GAASjN,QAC3B,gBAAC,IAAD,Q,sDCxBVsO,GAAS,CAAC,EADG,KAGZ,SAASC,GAAT,GAGU,IAHcC,EAGf,EAHeA,aAAcvR,EAG7B,EAH6BA,MAIlCsQ,EAAwBiB,EAAxBjB,QAASC,EAAegB,EAAfhB,YACT3N,EAA0D0N,EAA1D1N,KAAMgL,EAAoD0C,EAApD1C,gBAAiBE,EAAmCwC,EAAnCxC,gBAAiBC,EAAkBuC,EAAlBvC,eACzCyD,EAAc,SAACC,GAAD,MAAe,CAAClnB,KAAKmnB,MAT1B,IASgC5D,EAAgB2D,MAHnD,EAIkBhB,YAAeF,GAJjC,mBAILjhB,EAJK,KAIIqiB,EAJJ,OAKgBC,mBAASJ,EAAYliB,IALrC,mBAKLuiB,EALK,KAKGC,EALH,KAWZ,OAJAC,qBAAU,WAAOJ,EAAWpnB,KAAKynB,MAAMpE,EAAgBiE,EAAO,GAb/C,SAaoE,CAACA,IACpFE,qBAAU,kBAAM/R,EAAMsQ,EAAQ9hB,QAASc,EAASye,EAAeze,MAAW,CAACA,IAC3EyiB,qBAAU,WAAOD,EAAUN,EAAYliB,MAAY,CAACiiB,IAGhD,uBAAKU,UAAU,UACX,uBAAKA,UAAU,oBACX,gBAAC,IAAD,CAAgBf,QAAS,kBAAMY,EAAUN,EAAY,UAEzD,uBAAKS,UAAU,mBACVrP,EADL,MZ4HL,SAAuBtT,GAC1B,OAAIA,GAAW,IACL,GAAN,OAAUA,EAAQ7E,QAAQ,GAA1B,KAEM,GAAN,QAAW6E,EAAU,KAAK7E,QAAQ,GAAlC,KY/HkBynB,CAAc5iB,GAD5B,KACwCtF,EAAY+jB,EAAeze,IADnE,KAGA,gBAAC,KAAD,CACI6iB,KAAM,EAAGC,KAAM,EAAGf,OAAQA,GAAQgB,UAAWC,GAC7CT,OAAQA,EACRU,SAAU,SAACC,GAAD,OAAyBV,EAAUU,KAE7C,gBAAC,KAAD,MACK,gBAAEC,EAAF,EAAEA,aAAF,OAAoB,qCAAKR,UAAU,eAAkBQ,SAE1D,gBAAC,KAAD,MACK,gBAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,eAAX,OACG,uBAAKV,UAAU,kBACVS,EAAQ5pB,KAAI,SAAC8pB,EAAQnnB,GAAT,OACT,gBAAConB,GAAD,CAAQlW,IAAKiW,EAAOE,GAAIF,OAAQA,EAAQD,eAAgBA,WAKxE,gBAAC,KAAD,CAAQnlB,OAAO,IACV,gBAAEulB,EAAF,EAAEA,OAAQC,EAAV,EAAUA,cAAV,OACG,uBAAKf,UAAU,iBACVc,EAAOjqB,KAAI,WAAuB2C,GAAvB,IAAEqnB,EAAF,EAAEA,GAAIG,EAAN,EAAMA,OAAQC,EAAd,EAAcA,OAAd,OACR,gBAACC,GAAD,CAAOxW,IAAKmW,EAAIG,OAAQA,EAAQC,OAAQA,EAAQF,cAAeA,aAU/F,SAASH,GAAT,GAGiB,IAHAD,EAGD,EAHCA,OAAQD,EAGT,EAHSA,eAIfS,EAAM/B,GAAO,GACb7mB,EAAM6mB,GAAO,GACZyB,EAAsBF,EAAtBE,GAAIrkB,EAAkBmkB,EAAlBnkB,MAAOa,EAAWsjB,EAAXtjB,QAClB,OACI,qCACIxF,KAAK,SACLmoB,UAAU,gBACVoB,MAAO,CAAC5lB,KAAK,GAAD,OAAK6B,EAAL,MACZgkB,gBAAeF,EAAKG,gBAAe/oB,EAAKgpB,gBAAe/kB,GACnDkkB,EAAeG,KAK/B,SAASK,GAAT,GAIiB,IAJDF,EAIA,EAJAA,OAAQC,EAIR,EAJQA,OAAQF,EAIhB,EAJgBA,cAK5B,OACI,qCAAKf,UAAU,eACXoB,MAAO,CAAC5lB,KAAK,GAAD,OAAKwlB,EAAO3jB,QAAZ,KAAwBmkB,MAAM,GAAD,OAAKP,EAAO5jB,QAAU2jB,EAAO3jB,QAA7B,OACrC0jB,MAKhB,IAAMV,GAAmC,CACrCoB,OAAQ,KACRziB,SAAU,WACVwiB,MAAO,OC1FJ,SAASE,GAAT,GAA8E,IAAvD/a,EAAsD,EAAtDA,WAAsD,EACnDgZ,mBAAShZ,EAAWiN,OAAOoH,YADwB,mBACzE3D,EADyE,KAClEsK,EADkE,KAEhF7B,qBAAU,WACN,IAAMrnB,EAAMkO,EAAWiN,OAAOgO,UAAUD,GACxC,OAAO,kBAAMlpB,EAAIopB,iBAClB,CAAClb,IAL4E,MAMxDgZ,oBAAS,GAN+C,mBAMzEmC,EANyE,KAMnEC,EANmE,OAOxCpC,mBAASvB,GAAe3mB,eAAaulB,eAPG,mBAOzEsC,EAPyE,KAO3D0C,EAP2D,KAQhF,OACI,uBAAKhC,UAAU,gBACX,gBAACiC,GAAA,EAAD,CAAgBC,OAAQJ,EAAMK,OAAQ,kBAAMJ,GAASD,KACjD,gBAACM,GAAA,EAAD,eACA,gBAACC,GAAA,EAAD,KACIjE,GACK3nB,OH2ElB,SAAuB4gB,GAC1B,OAAO,SAAA7a,GAAU,IACN6hB,EAAW7hB,EAAX6hB,QACP,GAAIA,EAAQ1N,KAAKhG,WAAW,KACxB,OAAO,EAEX,OAAQ0T,EAAQ7C,cACZ,KAAKJ,GAAamB,SACd,OAAOlF,EAAQC,QAAM2D,MACzB,KAAKG,GAAae,UACd,OAAO9E,GAASC,QAAM2D,MAC1B,QACI,OAAO,IGvFSqH,CAAcjL,IACrBxgB,KAAI,SAAC2F,GAAD,OACD,gBAAC+lB,GAAA,EAAD,CAAc7X,IAAG,gBAAWlO,EAAM6hB,QAAQ9hB,SAAW0iB,QAAS,kBAAM+C,EAAgBxlB,KAC/EA,EAAM6hB,QAAQ1N,WAKnC,gBAAC0O,GAAD,CACIC,aAAcA,EACdvR,MAAO,SAACxR,EAASc,EAASb,GACtBmK,EAAWxC,SAASqe,aAAajmB,EAASc,EAASb,O,mCC5BvE,SAASimB,GAAUja,GACf,OAAOA,EAAEhQ,QAAQ,GAAGkqB,QAAQ,MAAO,KAGvC,SAASC,KACL,OAAO,IAAIC,MAAOC,cACbH,QAAQ,QAAS,IAAIA,QAAQ,SAAU,KAiCzC,SAASI,GAAT,EAA0EC,EAAoBC,EAAoBC,GAAqC,IAA7HtS,EAA4H,EAA5HA,KAAMxM,EAAsH,EAAtHA,SAAUqC,EAA4G,EAA5GA,OAAQD,EAAoG,EAApGA,UACrDpC,EAAShI,mBACT,IAAMrB,EAAeqJ,EAAS/J,UAAUU,aAClCC,EAAUoJ,EAAS/J,UAAUW,QAC7BG,EAAciJ,EAAS/J,UAAUc,YACjCC,EAAkBgJ,EAAS/J,UAAUe,gBAC3C,MAAO,CACHwV,OACAnK,OAAQA,EAAO3P,KAAI,SAAA4O,GACf,IAAMhM,EAASyK,EAAcuB,GACvByd,EX8RX,SAA6BC,EAAc5c,GAC9C,IAAM6c,EAAW7c,EAAU9P,QAAO,SAAAqO,GAAQ,OAAIA,EAASP,MAAM/K,QAAU2pB,EAAK3pB,OAASsL,EAASN,MAAMhL,QAAU2pB,EAAK3pB,SAC7G8D,EAAO8lB,EAASzR,MAAK,SAAA7M,GAAQ,OAAIhN,EAAWgN,EAAS/N,iBAC3D,IAAKuG,EACD,MAAO,GAEX,IAAM+lB,EAAe,SAACve,GAAD,OAAyB,IAAIxO,WAC7CsC,WAAWsL,EAAcwB,EAAWyd,EAAMre,IAAYZ,EAAcif,IAAOtqB,aAC1EyqB,EAAWD,EAAa/lB,GACxBimB,EAAWH,EACZvsB,KAAI,SAAAiO,GAAQ,MAAwB,CACjCA,WACA0e,KAAMH,EAAave,GACnB2e,KAAkB,CACdjqB,MAAO,EACPsL,SAAUA,EAAStL,MACnB3B,KAAMH,EAAiBoN,EAAS/N,cAChC2sB,cAAehe,EAAWyd,EAAMre,GAAUtL,MAC1CmqB,OAAQ,QAGftQ,MAAK,SAAC3a,EAAsBC,GACzB,IAAMirB,EAAUlrB,EAAE8qB,KAAKhQ,IAAI8P,GACrBO,EAAUlrB,EAAE6qB,KAAKhQ,IAAI8P,GAC3B,OAAOM,EAAUC,EAAU,EAAID,EAAUC,GAAW,EAAI,KAkBhE,OAhBAN,EAAStqB,SAAQ,SAACP,EAAGc,GAAJ,OAAcd,EAAE+qB,KAAKjqB,MAAQA,KAM9C+pB,EAAStqB,SAAQ,SAAAkH,GALE,IAACqjB,EAMhBD,EACK9sB,QAAO,SAAAiC,GAAC,OAAIA,EAAE+qB,KAAKjqB,QAAU2G,EAAKsjB,KAAKjqB,SACvC6Z,MARWmQ,EAQKrjB,EAAKqjB,KARQ,SAAC9qB,EAAsBC,GACzD,IAAMirB,EAAUlrB,EAAE8qB,KAAKhQ,IAAIgQ,GACrBK,EAAUlrB,EAAE6qB,KAAKhQ,IAAIgQ,GAC3B,OAAOI,EAAUC,EAAU,EAAID,EAAUC,GAAW,EAAI,KAMnD5qB,SAAQ,SAAA6qB,GACL,IAAMxa,EAAQhR,KAAKyrB,KAAK5jB,EAAKqjB,KAAKhQ,IAAIsQ,EAAMN,OACtCnqB,EAAS,EAAIf,KAAKoR,IAAIJ,EAAQ,GHxUxB,KGyUZnJ,EAAKsjB,KAAKE,OAAOrmB,KAAa,CAAC0mB,UAAWF,EAAML,KAAKjqB,MAAOH,iBAGjEkqB,EAAS1sB,KAAI,qBAAE4sB,QWxUAQ,CAAoBxe,EAAOc,GACzC,MAAqB,CACjB/M,MAAOiM,EAAMjM,MACb0qB,OAAQjB,EACRzZ,EAAG/P,EAAO+P,EAAGlJ,EAAG7G,EAAOwU,EAAGA,EAAGxU,EAAO6G,EACpC6jB,QAAQ,EACRjB,YAGR3c,UAAWA,EAAU1P,KAAI,SAAAiO,GACrB,IAAMsf,EAAStsB,EAAWgN,EAAS/N,cAC7BmtB,EAASE,EAASrB,EAAaC,EAC/B9N,EAAgBtQ,EAAeE,GAC/Buf,EAAavf,EAASP,MAAM/K,MAC5B8qB,EAAaxf,EAASN,MAAMhL,MAClC,GAAI6qB,GAAc7d,EAAOnN,QAAUirB,GAAc9d,EAAOnN,OACpD,MAAM,IAAI9B,MAAJ,0BAA6BG,EAAiBoN,EAAS/N,cAAvD,YAAwEstB,EAAxE,YAAsFC,EAAtF,YAAoG9d,EAAOnN,SAErH,MAAwB,CACpBG,MAAOsL,EAAStL,MAChBgN,OAAQ,CAAC6d,EAAYC,GACrBC,KAAMH,EAAS,OAAS,OACxBjf,OAAQpK,EAAQ+J,EAAStL,OACzB0L,UAAWhK,EAAY4J,EAAStL,OAChC6L,cAAelK,EAAgB2J,EAAStL,OACxC3B,KAAMH,EAAiBoN,EAAS/N,cAChC8P,MAAO/B,EAAS+B,MAAMX,EACtBd,YAAatK,EAAagK,EAAStL,OACnC4qB,SACA/qB,OAAQ6b,EACRgP,cAqCT,SAASM,GAAWC,GACvB,IAAMC,EAAM,IAAIC,KAChBD,EAAIE,KAAK,aAjCb,SAA0BH,GACtB,IAAMI,EAAwB,GAM9B,OALAA,EAAUvnB,KAAK,CAAC,QAAS,IAAK,IAAK,MACnCmnB,EAAOje,OAAOvN,SAAQ,SAAAwM,GAAK,OAAIof,EAAUvnB,KAAK,EACzCmI,EAAMjM,MAAM,GAAGhB,QAAQ,GACxBiqB,GAAUhd,EAAM+D,GAAIiZ,GAAUhd,EAAMnF,GAAImiB,GAAUhd,EAAMwI,QAErD4W,EAAUhuB,KAAI,SAAA6B,GAAC,OAAIA,EAAEsR,KAAK,QAAMA,KAAK,MA0BrB8a,CAAiBL,IACxCC,EAAIE,KAAK,gBAxBb,SAA6BH,GACzB,IAAMM,EAA2B,GASjC,OARAA,EAAaznB,KAAK,CAAC,SAAU,OAAQ,SAAU,YAAa,iBAAkB,OAAQ,WACtFmnB,EAAOle,UAAUtN,SAAQ,SAAA6L,GACrBigB,EAAaznB,KAAK,CAAC,OAAD,OACPwH,EAAS0B,OAAO3P,KAAI,SAAAiR,GAAC,OAAKA,EAAI,GAAGtP,QAAQ,MADlC,OAC4CsM,EAASyf,KACnE9B,GAAU3d,EAASK,QAASsd,GAAU3d,EAASI,WAAYud,GAAU3d,EAASO,eAC9EP,EAASjN,KAAMiN,EAASzL,OAAOb,QAAQ,QAGxCusB,EAAaluB,KAAI,SAAA6B,GAAC,OAAIA,EAAEsR,KAAK,QAAMA,KAAK,MAcrBgb,CAAoBP,IAC9CC,EAAIE,KAAK,gBAZb,SAA8BH,GAC1B,IAAMQ,EAA2B,GAIjC,OAHAA,EAAa3nB,KAAK,CAAC,WAGZ2nB,EAAapuB,KAAI,SAAA6B,GAAC,OAAIA,EAAEsR,KAAK,QAAMA,KAAK,MAOrBkb,IAC1BR,EAAIS,cAAc,CAACZ,KAAM,OAAQa,SAAU,oBAAoBzjB,MAAK,SAAA0jB,GAChEC,UAAiBD,EAAjB,mBAAmC1C,KAAnC,YC3GD,SAAS4C,GAAT,GAA6E,IAAvD5e,EAAsD,EAAtDA,WAAsD,EAClDgZ,mBAAShZ,EAAWiN,OAAOoH,YADuB,mBACxE3D,EADwE,KACjEsK,EADiE,KAE/E7B,qBAAU,WACN,IAAMrnB,EAAMkO,EAAWiN,OAAOgO,UAAUD,GACxC,OAAO,kBAAMlpB,EAAIopB,iBAClB,CAAClb,IAL2E,MAM5D6X,YAAeP,IAA3BS,EANwE,sBAO5DF,YAAejB,IAA3BkB,EAPwE,oBAQzE+G,EAAeC,YAAkB/H,IACjCgI,EAAaD,YAAkB9H,IAT0C,EAU/Ca,YAAeR,IAVgC,mBAUxE2H,EAVwE,KAU9DC,EAV8D,KAY/E,OAAOnH,EACH,gBAACS,GAAA,EAAD,KACI,gBAACH,GAAA,EAAD,CACI3f,MAAM,UACN6f,QAAS,WACL2G,GAAY,GACZF,GAAW,KAGf,gBAAC,IAAD,MAPJ,eAWJ,gBAACxG,GAAA,EAAD,KACKR,IAAaX,GAASjN,OACnB,gCACI,gBAACiO,GAAA,EAAD,CACIE,QAAS,kBAAMuF,GAAW1B,GAAgBnc,EfDvC,KACA,KACC,SeAJ,gBAAC,IAAD,MAAa,gBAAC,IAAD,OAEjB,gBAACoY,GAAA,EAAD,CACIE,QAAS,kBD8E1B,SAAqBwF,GACxB,IAAMC,EAAM,IAAIC,KAChBD,EAAIE,KAAJ,mBAAqBjC,KAArB,SAA0CkD,KAAKC,UAAUrB,OAAQpV,EAAW,IAC5EqV,EAAIS,cAAc,CAACZ,KAAM,OAAQa,SAAU,oBAAoBzjB,MAAK,SAAA0jB,GAChEC,UAAiBD,EAAjB,mBAAmC1C,KAAnC,YClF+BoD,CAAYjD,GAAgBnc,EfLxC,KACA,KACC,SeIJ,gBAAC,IAAD,MAAa,gBAAC,IAAD,QAGpB0Q,EAAQC,QAAM2D,MACf,gCACI,gBAAC8D,GAAA,EAAD,CACIC,SAAU3H,IAAUC,QAAMQ,QAC1BmH,QAAS,kBAAMtY,EAAW1M,OAAO+rB,eACjC,gBAAC,IAAD,QAGR3O,EAAQC,QAAM2D,MACd,gCACI,gBAAC8D,GAAA,EAAD,CAAQC,SAAU3H,IAAUC,QAAM2O,SAC1BhH,QAAS,kBAAMtY,EAAWuf,qBAC9B,gBAAC,IAAD,OAEJ,gBAACnH,GAAA,EAAD,CAAQC,SAAU3H,IAAUC,QAAM2O,SAC1BhH,QAAS,kBAAMtY,EAAW1M,OAAOksB,aAAa,MAClD,gBAAC,IAAD,aAGR9W,EACJ,gBAAC0P,GAAA,EAAD,CACI3f,MAAOumB,EAAW,UAAY,YAC9B1G,QAAS,kBAAM2G,GAAaD,KAE5B,gBAAC,IAAD,OAEJ,gBAAC5G,GAAA,EAAD,CAAQE,QAAS,WAAOuG,GAAa,KAAQ,gBAAC,IAAD,Q,gEC3ElD,SAASY,GAAT,GAAkF,IAAlDthB,EAAiD,EAAjDA,SAC5BP,EAA8BO,EAA9BP,MAAOC,EAAuBM,EAAvBN,MAAOzN,EAAgB+N,EAAhB/N,aACfkO,EAAQK,EAAYR,GAC1B,OACI,gBAACuhB,GAAA,EAAD,CACIrG,UAAU,iBACVoB,MAAO,CAACI,MAAO,QACfxiB,SAAU2F,EAAiBG,IAE3B,uBAAKsc,MAAO,CAACpiB,SAAU,WAAYoJ,IAAK,IAAK5M,KAAM,IAAK4D,MAAO,QAC3D,gBAAC,IAAD,OAEJ,gBAACknB,GAAA,EAAD,CACIrH,QAAS,SAAAsH,GACLA,EAAMC,kBACN1hB,EAASG,WAAQoK,IAErB,6BACA,0BACI,sBAAIoX,QAAS,GAAb,IACMliB,EAAM/K,MADZ,IACmB,gBAAC,IAAD,MADnB,IACoCgL,EAAMhL,MAD1C,MACoD9B,EAAiBX,MAIzE,6BACA,0BACI,sBAAIipB,UAAU,cAAd,cACA,0BAAK/a,EAAMC,UAAU1M,QAAQ,KAEjC,0BACI,sBAAIwnB,UAAU,cAAd,WACA,0BAAK/a,EAAME,OAAO3M,QAAQ,KAE9B,0BACI,sBAAIwnB,UAAU,cAAd,WACA,0BAAK/a,EAAM5L,OAAOb,QAAQ,KAE9B,0BACI,sBAAIwnB,UAAU,cAAd,iBACA,0BAAK/a,EAAMG,YAAY5M,QAAQ,KAEnC,0BACI,sBAAIwnB,UAAU,cAAd,mBACA,0BAAK/a,EAAMI,cAAc7M,QAAQ,QAQ9C,SAASkuB,GAAT,GAEU,IAFkB5hB,EAEnB,EAFmBA,SAAUC,EAE7B,EAF6BA,aAAc4hB,EAE3C,EAF2CA,SAE3C,EACiBhH,mBAASra,EAAYR,IADtC,mBACLG,EADK,KACE2hB,EADF,KAGZ,OADAC,aAAS,kBAAMD,EAAY/hB,EAAiBC,EAAUC,EAAc4hB,OAEhE,gBAACN,GAAA,EAAD,CAAMrG,UAAU,iBACVoB,MAAO,CACH0F,WAAY,QACZC,QAAS,QACTvF,MAAO,MACPwF,UAAW,UAEfhoB,SAAU2F,EAAiBG,IAC7B,uBACIma,QAAS,SAAAsH,GACLA,EAAMC,kBACN1hB,EAASG,WAAQoK,IAGpBpK,EAAME,OAAO3M,QAAQ,KC7EtC,IAeMyuB,GAfmB,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACFjf,UAEsCnR,KAAI,SAAA4M,GAAC,OAAI,IAAIyjB,SAAQC,OAAOvwB,SAAS,GAAD,OAAI6M,EAAEpL,UAAU,IAAM,QAErF+uB,GAAqB,IAAIC,oBAAkB,CACpDC,cAAc,IAGLC,GAAoB,IAAIC,oBAAkB,CACnDpoB,MAAO,IAAI8nB,QAAM,WACjBO,KAAMC,aACNC,aAAa,EACbC,QAAS,IACTC,WAAW,IAGSZ,GAAepwB,KAAI,SAAAuI,GAAK,OAAI,IAAI0oB,sBAAoB,CAAC1oB,aAOtE,SAAS2oB,GAAgBhxB,GAC5B,OAAQA,GACJ,KAAKX,EAAaY,MACd,MAAO,UACX,KAAKZ,EAAaa,MACd,MAAO,UACX,KAAKb,EAAae,MACd,MAAO,UACX,KAAKf,EAAagB,MACd,MAAO,UACX,KAAKhB,EAAaiB,OACd,MAAO,UACX,KAAKjB,EAAakB,OACd,MAAO,UACX,QACI,MAAO,WAQZ,SAAS0wB,GAAajxB,GACzB,IAAMqI,EALH,SAAmBrI,GACtB,OAAO,IAAImwB,QAAMa,GAAgBhxB,IAInBkxB,CAAUlxB,GACxB,OAAO,IAAI+wB,sBAAoB,CAAC1oB,UC7DpC,IAAM8oB,GAAU,IAAIC,oBAAkB,CAClC/oB,MAAO,IAAI8nB,QAAM,WACjBO,KAAMC,aACNC,aAAa,EACbC,QAAS,KAIAQ,GAAiB,CAC1B,IAAI9xB,UAAQ,EAAG,GAFU,IAGzB,IAAIA,WAAQ,MAAwB,GAAG,IACvC,IAAIA,WAAQ,MAAwB,EAAG+xB,IACvC,IAAI/xB,UAAQ,EAAG,EALU,IAMzB,IAAIA,UAAQgyB,MAAuB,EAAGD,IACtC,IAAI/xB,UAAQgyB,MAAuB,GAAG,KAE7BC,GAAqB,IAAIrB,QAAM,OAE/B7wB,GAAK,IAAIC,UAAQ,EAAG,EAAG,GAG7B,SAASkyB,KACZ,IAAMC,EAAWC,mBAAQ,kBAM7B,WACI,IAAMD,EAAW,IAAIE,WAGrB,OAGJ,SAA4BC,EAAqB9iB,GAC7C8iB,EAAStrB,KAAT,MAAAsrB,EAAQ,YAASR,GAAevxB,KAAI,SAAAgyB,GAAQ,OAAI,IAAIvyB,UAAQuyB,EAASrf,EAAGqf,EAASvoB,EAAGuoB,EAAS5a,QAC7F2a,EAAStrB,KAAK,IAAIhH,WAClB,IAAK,IAAIoC,EAAI,EAAGA,EArBD,EAqBUA,IAAK,CAC1B,IAAMC,GAAKD,EAAI,GAtBJ,EAuBLowB,EAAgB,CAClBzyB,IACA,IAAIC,WAAU6C,IAAI9C,IAAI+S,gBAAgBgf,GAAe1vB,GAvB/B,KAuBuDG,aAC7E,IAAIvC,WAAU6C,IAAI9C,IAAI+S,gBAAgBgf,GAAezvB,GAxB/B,KAwBuDE,aAEjFiN,EAAMxI,KAAK,IAAIyrB,QA5BJ,EA4BerwB,EAAGC,EAAGmwB,EAAeP,MAfnDS,CAAmBP,EAASG,SAAUH,EAAS3iB,OAC/C2iB,EAASG,SAAS3vB,SAAQ,SAAA0W,GAAC,OAAIA,EAAElX,IAAI,IAAInC,UAAQ,EAAG,IAAM,OACnDmyB,EAVwBQ,KAAmB,IAClD,OACI,wBAAMtY,KAAK,UAAU8X,SAAUA,EAAUS,SAAUhB,KCyB3D,IACMiB,GAAW,IAAIC,mBAAiB,EAAG,EAAG,EAAG,GAAI,GAAG,GAChDC,GAAgB,IAAInC,QAAM,WAIzB,SAASoC,GAAT,GAKU,IALW3iB,EAKZ,EALYA,WAAY4iB,EAKxB,EALwBA,aAAcC,EAKtC,EALsCA,UAAWC,EAKjD,EALiDA,aAKjD,EAEWjL,YAAeL,IAA/BuL,EAFK,sBAGkBlL,YAAeJ,GAAe3mB,eAAawlB,cAAcqB,aAAhFqL,EAHK,oBAIN5kB,EAAe,kBAAMqZ,GAAe3mB,eAAawlB,cAAcoB,QAAQvC,eAAe6N,IAJhF,EAKkBnL,YAAeJ,GAAe3mB,eAAaulB,cAAcsB,aAAhFsL,EALK,oBAMNC,EAAe,kBAAMzL,GAAe3mB,eAAaulB,cAAcqB,QAAQvC,eAAe8N,IANhF,EAO2BpL,YAAeJ,GAAe3mB,eAAailB,uBAAuB4B,aAAlGwL,EAPK,sBASoBtL,YAAeJ,GAAe3mB,eAAaklB,gBAAgB2B,aAApFyL,EATK,sBAWoBvL,YAAejB,IAXnC,mBAWLkB,EAXK,KAWKuL,EAXL,OAYsBxL,YAAed,IAZrC,mBAYLuM,EAZK,KAYMzE,EAZN,OAakBhH,YAAeb,IAbjC,mBAaLuM,EAbK,KAaIxE,EAbJ,OAcgClH,YAAeX,IAd/C,mBAcLsM,EAdK,KAcWC,EAdX,OAeO5L,YAAeP,IAA3BS,EAfK,sBAgBoBF,YAAeR,IAhBnC,mBAgBL2H,EAhBK,KAgBKC,EAhBL,OAkB+BjG,mBAAS,GAlBxC,mBAkBL0K,EAlBK,KAkBSC,EAlBT,OAmBuB3K,mBAAS,IAAIrpB,UAAQ,EAAG,EAAG,IAnBlD,oBAmBLi0B,GAnBK,MAmBKC,GAnBL,SAoBuB7K,mBAAS,GApBhC,qBAoBLgH,GApBK,MAoBK8D,GApBL,SAqBiB9K,mBAAShZ,EAAWiN,OAAOoH,YArB5C,qBAqBL3D,GArBK,MAqBEsK,GArBF,MA6CZ,SAAS+I,GAAiB5kB,GACtB,IAAM6kB,EAAc7kB,EAAMC,QAAO,SAAC6kB,EAAgC7rB,GAC9D,IAAM5F,EAAM,SAAC0gB,GAAD,OAAkB+Q,EAAI/Q,EAAErgB,OAASqgB,GAC7C,OAAQ9a,EAAK8W,eACT,KAAKzS,EAAcynB,MACf9rB,EAAKkF,MAAMhL,QAAQE,GACnB,MACJ,KAAKiK,EAAc0nB,OACf/rB,EAAKgI,OAAO9N,QAAQE,GACpB,MACJ,KAAKiK,EAAc2nB,KACfhsB,EAAKkF,MAAMhL,QAAQE,GACnB4F,EAAKgI,OAAO9N,QAAQE,GAG5B,OAAOyxB,IACR,IACGI,EAAWllB,EAAMC,QAAO,SAAC6kB,EAA6B7rB,GAExD,OADAA,EAAK6G,KAAK3M,SAAQ,SAAAia,GAAG,OAAI0X,EAAI1X,EAAI1Z,OAAS0Z,KACnC0X,IACR,IACGrkB,EAAYhQ,OAAOC,KAAKm0B,GAAa9zB,KAAI,SAAAH,GAAC,OAAIi0B,EAAYj0B,MAC1D8P,EAASjQ,OAAOC,KAAKw0B,GAAUn0B,KAAI,SAAAH,GAAC,OAAIs0B,EAASt0B,MACvD+yB,EAAa,CAAC3jB,QAAOS,YAAWC,WA7CpCsZ,qBAAU,WACN2K,GAAepT,GAAQC,QAAM2O,SAhBG7H,GAAe3mB,eAAailB,uBAAuB2B,QAAQvC,eAAegO,GAEjF1L,GAAe3mB,eAAaklB,gBAAgB0B,QAAQvC,eAAeiO,MAe7F,CAAC1S,KAEJyI,qBAAU,WACNsK,EAAkB,GAClBE,EAAmB,KACpB,CAAC7L,IAEJqB,qBAAU,WACN,IAAMrnB,EAAMkO,EAAWiN,OAAOgO,UAAUD,IACxC,OAAO,kBAAMlpB,EAAIopB,iBAClB,CAAClb,IAEJmZ,qBAAU,WACN,IAAM1jB,EAAU6uB,GAAO7uB,QAClBA,GAAYuK,GAGjBvK,EAAQ4C,SAASrF,IAAI,EAAG,EAAuC,EAApCgN,EAAWxC,SAAShK,KAAK+pB,YACrD,IA2BH,IAAMgH,GAAY,SAAChhB,GAAD,OAAqBvN,QAAQgE,MAAM,kBAAmBuJ,IAqFxE,SAASihB,GAAcrmB,GACfA,EAASG,MACTH,EAASG,WAAQoK,EAEjBxK,EAAiBC,EAAUC,IAAgB4hB,IAvFnDE,aAAS,WACL,IAAMzqB,EAAU6uB,GAAO7uB,QACvB,GAAKA,GAAYuK,EAAjB,CAGA,GAAIsjB,EAIA,OAHAD,GAAY,GACZT,EAAa7Y,GAAU,GAAIH,GAAakG,OAAQyU,SAChD1F,GAAa,GAGjB,GAAI0E,EAGA,OAFAF,GAAY,QACZtE,GAAW,GAGf,IhB8I2Blf,EgB9IrBrM,EAAOwM,EAAWxC,SAAShK,KAC3B8mB,EACFuI,EAAU1jB,MAAMzM,OAAS,EAAIwM,GAAkB2jB,EAAU1jB,OACrD0jB,EAAUhjB,OAAOnN,OAAS,GhB2IPmN,EgB3I8BgjB,EAAUhjB,QhB6IlET,QAAO,SAACC,EAAOP,GAAR,OAAkBO,EAAM7M,IAAI+K,EAAcuB,MAAS,IAAInP,WAC9D8C,eAAe,EAAIoN,EAAOnN,QgB7If,IAAI/C,UAAQ6D,EAAK8C,aAAc9C,EAAK+C,aAAc/C,EAAKgD,cACnEqtB,IAAe,IAAIl0B,WAAUsC,WAAWqoB,EAAQsJ,IAAUnxB,eArG3C,KAqG0ED,IAAIoxB,KAC7F,IAAMa,EAAMhvB,EAAQ4C,SACpB,GAAIyf,GAAYpH,KAAUC,QAAMC,QAAS,CACrC6T,EAAI9qB,GAvGS,KAuGH2gB,EAAO3gB,EAAI8qB,EAAI9qB,GACzB,IAAM+qB,EAAiBD,EAAI/mB,WAAW4c,GAA0B,IAAhB9mB,EAAK+pB,SAC/CoH,GAAkB,IAAIh1B,WAAUsC,WAAWqoB,EAAQmK,GAAKvyB,YAAYO,eAzG7D,IAyG4EiyB,GACzFD,EAAIjyB,IAAImyB,QAEJF,EAAI9qB,EAAI,IACR8qB,EAAI9qB,GA7GK,IA6GA8qB,EAAI9qB,EAAuB,IAG5C,GAAIoe,IAAaX,GAASjN,OAAQ,CAE9B,GADanK,EAAWzK,UAEpB,OAEJ,GAAIuiB,EACA,OAAQpH,IACJ,KAAKC,QAAMQ,QACc,MAAjBuS,GACA1jB,EAAW0Q,MAAQC,QAAM2D,MACzBqP,EAAmB,IAEnBA,EAAmBD,EAAe,GAEtC,MACJ,KAAK/S,QAAM2D,MACc,KAAjBoP,GACA1jB,EAAW0Q,MAAQC,QAAMiU,WACzB3F,GAAY,GACZ0E,EAAmB,IAEnBA,EAAmBD,EAAe,GAEtC,MACJ,KAAK/S,QAAM2O,SACP,GAAqB,MAAjBoE,EAAsB,CACtB,IAAMmB,EAAYrB,EAAiB,EAC/BqB,IAAc9a,GAAUrX,QACxB+wB,EAAkB,GAClBJ,GAAY,GACZpE,GAAY,GACZ2D,EAAa7Y,GAAU,GAAIH,GAAawH,KAAMmT,MAE9Cd,EAAkBoB,GAClB5F,GAAY,GACZ0E,EAAmB,GACnBf,EAAa7Y,GAAU8a,GAAYjb,GAAakG,OAAQyU,UAG5DZ,EAAmBD,EAAe,GAK9ChT,KAAUC,QAAMiU,aAChB5kB,EAAW0Q,MAAQC,QAAM2O,eAsCrC,IAAMgF,GAASQ,mBACf,OACI,6BACI,gBAACC,GAAA,EAAD,CAAmBC,IAAKV,GAAQW,aAAa,EAAMC,qBAAiBxc,IACpE,gBAACyc,GAAA,EAAD,CAAe7K,OAAQsJ,GAAUwB,WAAYpG,EAAUqG,YAAY,EAAOC,WAAW,EACtEC,eAAe,EAAOC,cAAyB,GAAV7zB,KAAKiR,GAAU6iB,cAAyB,GAAV9zB,KAAKiR,GACxEsiB,qBAAiBxc,IAEhC,6BACKqP,IAAaX,GAASjN,OACnB,6BACKnK,EAAWJ,UACP9P,QAAO,SAAAqO,GAAQ,OAAI4kB,EAAanhB,MAAK,SAAA1Q,GAAI,OAAIA,IAASiN,EAAS/N,mBAC/DF,KAAI,SAAAiO,GAAQ,OACT,gBAACunB,GAAD,CACI3hB,IAAG,WAAM5F,EAAStL,OAClBuL,aAAcA,IACd8kB,aAAcA,IACd7kB,eAAgB2hB,GAChBhgB,WAAYA,EACZ7B,SAAUA,EACVwnB,UAAU,EACVC,cAAe,SAAAhG,GACXA,EAAMC,kBACN2E,GAAcrmB,SAdlC,KAqBA,gCACI,gCACI2jB,SAAU9hB,EAAWxC,SAAS/J,UAAUK,aACxCyuB,SAAU9B,GACVoF,SAAU,SAAAC,GAAI,OAAIA,EAAKhE,SAASiE,4BAI3ChO,IAAaX,GAASoB,eAAY9P,EAC/B,gBAAC2I,GAAD,CACIrR,WAAYA,EACZ0Q,MAAOA,GACPsV,UAAW,SAAA5tB,GAAI,OApEnC,SAAmBA,GACf,OAAQA,EAAK8W,eACT,KAAKzS,EAAc0S,KACf/W,EAAK8W,cAAgBzS,EAAcwpB,KACnClC,GAAiB,GAAD,mBAAKlB,EAAU1jB,OAAf,CAAsB/G,KACtC,MACJ,KAAKqE,EAAcwpB,KACf7tB,EAAK8W,cAAgBzS,EAAcynB,MACnCH,GAAiBlB,EAAU1jB,OAC3B,MACJ,KAAK1C,EAAcynB,MACf9rB,EAAK8W,cAAgBzS,EAAc0nB,OACnCJ,GAAiBlB,EAAU1jB,OAC3B,MACJ,KAAK1C,EAAc0nB,OACf/rB,EAAK8W,cAAgBzS,EAAc2nB,KACnCL,GAAiBlB,EAAU1jB,OAC3B,MACJ,KAAK1C,EAAc2nB,KACfhsB,EAAK8W,cAAgBzS,EAAc0S,KACnC4U,GAAiBlB,EAAU1jB,MAAMrP,QAAO,qBAAE+C,QAAqBuF,EAAKvF,WAgDzCmzB,CAAU5tB,MAGpCyqB,EAAUjjB,UAAU1P,KAAI,SAAAiO,GAAQ,OAC7B,gBAACunB,GAAD,CACI3hB,IAAG,YAAO5F,EAAStL,OACnBuL,aAAcA,IACd8kB,aAAcA,IACd7kB,eAAgB2hB,GAChBhgB,WAAYA,EACZ7B,SAAUA,EACVwnB,UAAU,EACVC,cAAe,SAAAhG,GACXA,EAAMC,kBACN2E,GAAcrmB,SAIzB4Z,IAAaX,GAASjN,OACnBnK,EAAWkmB,mBAAmBh2B,KAAI,SAAAiO,GAAQ,OACtC,gBAACshB,GAAD,CAAuB1b,IAAG,WAAM5F,EAAStL,OAASsL,SAAUA,OAC9D6B,EAAWkmB,mBAAmBh2B,KAAI,SAAAiO,GAAQ,OACxC,gBAAC4hB,GAAD,CAAmBhc,IAAG,YAAO5F,EAAStL,OAASsL,SAAUA,EACtCC,aAAcA,IAAgB4hB,SAAUA,QAElE6C,EAAU1jB,MAAMrP,QAAO,SAAAqX,GAAC,OAAKA,EAAE+H,gBAAkBzS,EAAcwpB,QAAO/1B,KAAI,SAAAkI,GACvE,IAAM0pB,EAAW,IAAIE,WAGrB,OAFAF,EAASG,SAAW7pB,EAAK6G,KAAK/O,IAAIqN,GAClCukB,EAAS3iB,MAAMxI,KAAK,IAAIyrB,QAAM,EAAG,EAAG,IAC7B,wBAAMre,IAAG,YAAO3L,EAAKvF,OAASivB,SAAUA,EAAUS,SAAU3B,QAEtE7I,IAAaX,GAASjN,YAASzB,EAAYma,EAAUhjB,OAAO3P,KAAI,SAAA4O,GAC7D,IAAMiF,EAAG,UAAMjF,EAAMjM,OACrB,OAAO,gBAACszB,GAAD,CAAKpiB,IAAKA,EAAK1L,SAAUkF,EAAcuB,GAAQsnB,KAAMriB,OAEhE,gBAAC8d,GAAD,MACA,gBAACwE,GAAA,EAAD,MACA,gCAAc5tB,MAAOiqB,GAAe4D,UAAW,KAC/C,oCAAkB7tB,MAAO,IAAI8nB,QAAM,WAAY+F,UAAW,MAM1E,SAASH,GAAT,GAGwB,IAHV9tB,EAGS,EAHTA,SAAU+tB,EAGD,EAHCA,KAIb9B,EAAUiC,cAAVjC,OACDU,EAAMF,mBAMZ,OALA5E,aAAS,WACD8E,EAAIvvB,SACJuvB,EAAIvvB,QAAQ+wB,WAAWzkB,KAAKuiB,EAAOkC,eAGpC,gBAACC,GAAA,EAAD,CACHzB,IAAKA,EAAK0B,SAAU,GAAKruB,SAAUA,EAAUsuB,QAAQ,SAASC,QAAQ,SACtE1B,qBAAiBxc,GACnB0d,GAGN,SAASV,GAAT,GAQwB,IARDtnB,EAQA,EARAA,aAAc8kB,EAQd,EARcA,aAAc7kB,EAQ5B,EAR4BA,eAAgB2B,EAQ5C,EAR4CA,WAAY7B,EAQxD,EARwDA,SAAUwnB,EAQlE,EARkEA,SAAUC,EAQ5E,EAR4EA,cASzFrD,EAAWoD,EAAW/E,GAAoBS,GAAaljB,EAAS/N,cAChEuG,EAAOxF,EAAWgN,EAAS/N,cAC3BmO,EAAYyB,EAAWxC,SAAS/J,UAAUc,YAAY4J,EAAStL,QAAU8D,EAAOyH,EAAe,GAC/Fmf,EA3TY,IA2Ta5rB,KAAKk1B,KAAKtoB,IAAconB,EAAW,IAAM,GAClE9I,EAAO7c,EAAWxC,SAASspB,WAAW3oB,EAAStL,OAC/CwU,GAAW,IAAI0f,cAAaC,mBAAmBt3B,EAAImtB,GACnDre,EAASwB,EAAWxC,SAAS/J,UAAUW,QAAQ+J,EAAStL,OACxDo0B,EAAqB,GAAKtwB,EAAO0H,EAAiB,GAClDI,EAAcuB,EAAWxC,SAAS/J,UAAUU,aAAagK,EAAStL,OAASo0B,EAC3Ev0B,EAAoB,IAAX8L,EAAeP,EAAeE,GAAYM,EAAcD,EAASC,GAAe,EAAIykB,GAC7FgE,EAAgB,IAAIv3B,UAAQ4tB,EAAS7qB,EAAS,EAAK,IAAOA,EAAQ6qB,GACxE,OACI,wBACIuE,SAAUU,GACVnqB,SAAU2F,EAAiBG,GAC3BkJ,UAAU,IAAI8f,SAAQC,kBAAkB/f,GACxCnH,MAAOgnB,EACP3E,SAAUA,EACV8E,wBAAwB,EACxBzB,cAAeA,IAK3B,SAASvU,GAAT,GAIiB,IAJDrR,EAIA,EAJAA,WAAY0Q,EAIZ,EAJYA,MAAOsV,EAInB,EAJmBA,UAKxBsB,EAAaf,cAAbe,UACDC,EAAUzC,mBAFJ,EAGsB9L,qBAHtB,mBAGLwO,EAHK,KAGMC,EAHN,KAkCZ,OACI,wBACI1jB,IAAI,QAAQihB,IAAKuC,EAAS3B,cAhCZ,SAAChG,GACnBA,EAAMC,kBACN4H,EAAa7H,IA8B+C8H,YA5B5C,SAAC9H,GACjBA,EAAMC,kBACN,IAAM8H,EAAOJ,EAAQ9xB,QACrB,InB9VD,SAAoBib,GACvB,OAAOA,IAAUC,QAAMC,SAAWF,IAAUC,QAAM2D,MmB6V1CsT,CAAWlX,IAAW8W,GAAcG,EAAxC,CAGA,IAAME,EAAKL,EAAUM,QAAUlI,EAAMkI,QAC/BC,EAAKP,EAAUQ,QAAUpI,EAAMoI,QAErC,KADmBH,EAAKA,EAAKE,EAAKA,EACjB,IAAjB,CAGA,IAOM3vB,EAPgBkvB,EAAUW,iBAAiB,CAACN,IAAO,GAC7Bz3B,KAAI,SAAAib,GAAY,OAAIA,EAAa+c,aAAWh4B,KAAI,SAAAg4B,GACxE,QAAkBxf,IAAdwf,EAGJ,OAAOloB,EAAWb,MAAM+oB,MAET7mB,UAAU8mB,MAC7BV,OAAa/e,GACRtQ,GAGL4tB,EAAU5tB,MAKN0pB,SAAU9hB,EAAWxC,SAAS/J,UAAUO,cAExC,qCAAmBo0B,OAAO,WACPpH,aAAa,EAAMF,KAAMuH,YAAWnH,WAAW,EAAOD,QAAS,GAAKxoB,MAAM,W,IC7Z7F6vB,G,UCXL,SAASC,GAAT,GAAmF,IAA7D3F,EAA4D,EAA5DA,aAA4D,EACnD/K,YAAeV,IADoC,mBAC9ElU,EAD8E,KACnEulB,EADmE,OAEhE3Q,YAAeZ,IAA7BwR,EAF8E,sBAG7DzP,mBAAiB,IAH4C,mBAG9E0P,EAH8E,KAGxEC,EAHwE,OAI3D3P,mBAAS,IAJkD,mBAI9Ehf,EAJ8E,KAIvE4uB,EAJuE,KAK/EC,EAAS,kBAAM3J,KAAKC,UAAUlc,OAAWyF,EAAW,IAuB1D,OARAyQ,qBAAU,WAEFwP,EADA1lB,EACQ4lB,IAEA,MAEb,CAAC5lB,IAGA,uBAAKiX,GAAG,kBAAkBO,MAAO,CAC7BqO,cAAe,SACfzwB,SAAU,WACV0wB,gBAAiB,gBACjBC,OAAQ,SAER,2BACI,sBAAI3P,UAAU,qBAAoB,gBAAC,IAAD,MAAlC,cACA,uBAAKa,GAAG,eAAeO,MAAO,CAACqO,cAAe,SAAUE,OAAQ,cAC5D,gBAACC,GAAA,EAAD,CACIxO,MAAO,CAACyO,aAAc,MAAOF,OAAQ,OAAQG,aAAc,SAC3DvL,KAAK,WAAW1D,GAAG,YACnBrkB,MAAO6yB,EACP/O,SAAU,SAAAyP,GAAW,OAAIT,EAAQS,EAAY9O,OAAOzkB,UAExD,gBAAC0iB,GAAA,EAAD,CAAa8Q,UAAU,EAAMhQ,UAAU,cACjB,IAAjBrf,EAAMtH,YAAegW,EAClB,gBAAC0P,GAAA,EAAD,CAAQiB,UAAU,OAAO5gB,MAAM,UAAU6f,QAAS,WAC9CqQ,EAAQE,KACRD,EAAS,MAET,gBAAC,IAAD,MAAQ,2BAAM5uB,GAGtB,gBAACoe,GAAA,EAAD,CAAQ3f,MAAM,UAAU6f,QAAS,kBA9CrD,WACI,IACI,IAAMgR,EAAepK,KAAKqK,MAAMb,GAC5B1lB,GAAiBsmB,EAAcV,KAC/BA,EAAS,IACTJ,EAAac,GACb1G,EAAa0G,EAAcb,EAAYG,IAE7C,MAAOtlB,GACLslB,EAAStlB,EAAE3I,aAqCwC4uB,KAAvC,oB,SD1CZjB,O,iDAAAA,I,qDAAAA,I,qDAAAA,I,qDAAAA,I,mDAAAA,I,0DAAAA,Q,KASL,IAAMkB,GAAoB55B,OAAOC,KAAKy4B,IACxCx4B,QAAO,SAAAC,GAAC,OAAIC,MAAMC,SAASF,EAAG,QAC9BG,KAAI,SAAAH,GAAC,OAAIu4B,GAAgBv4B,MAEvB,SAAS05B,GAAT,GAIU,IAJYzpB,EAIb,EAJaA,WAAY0pB,EAIzB,EAJyBA,gBAAiBrR,EAI1C,EAJ0CA,SAI1C,EAEiBW,mBAAShZ,EAAW0Q,OAFrC,mBAELA,EAFK,KAEEsK,EAFF,KAQZ,SAAS2O,EAAkBC,GACvB,SAAIvR,GAAY3H,IAAUC,QAAMiU,aAGzBlU,IAAUkZ,EAGrB,OAZAzQ,qBAAU,WACN,IAAMrnB,EAAMkO,EAAWiN,OAAOgO,UAAUD,GACxC,OAAO,kBAAMlpB,EAAIopB,iBAClB,CAAClb,IASI0pB,GACJ,KAAKpB,GAAgBuB,sBACjB,OACI,gBAACzR,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAMQ,SAClCmH,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GAAC,OAAIA,EAAErZ,MAAQC,QAAM2D,WAElD,gBAAC,IAAD,MAAW,gBAAC,IAAD,MAAe,gBAAC0V,GAAD,CAAQtZ,MAAOC,QAAM2D,SAG3D,KAAKgU,GAAgB2B,wBACjB,OACI,gBAAC7R,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAM2D,OAClCgE,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GACzBA,EAAEvsB,SAASjK,MAAM22B,sBAAsBhgB,mBAAiBC,QACxD4f,EAAErZ,MAAQC,QAAMiU,gBAGpB,gBAACoF,GAAD,CAAQtZ,MAAOC,QAAM2D,QAAQ,gBAAC,IAAD,MAAe,gBAAC,IAAD,MAAW,gBAAC0V,GAAD,CAAQtZ,MAAOC,QAAM2O,YAGxF,KAAKgJ,GAAgB6B,wBACjB,OACI,gBAAC/R,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAM2D,OAClCgE,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GACzBA,EAAEvsB,SAASjK,MAAM22B,sBAAsBhgB,mBAAiBkgB,QACxDL,EAAErZ,MAAQC,QAAMiU,gBAGpB,gBAACoF,GAAD,CAAQtZ,MAAOC,QAAM2D,QAAQ,gBAAC,IAAD,MAAe,gBAAC,IAAD,MAAS,gBAAC0V,GAAD,CAAQtZ,MAAOC,QAAM2O,YAGtF,KAAKgJ,GAAgB+B,wBACjB,OACI,gBAACjS,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAM2D,OAClCgE,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GACzBA,EAAEvsB,SAASjK,MAAM22B,sBAAsBhgB,mBAAiBE,QACxD2f,EAAErZ,MAAQC,QAAMiU,gBAGpB,gBAACoF,GAAD,CAAQtZ,MAAOC,QAAM2D,QAAQ,gBAAC,IAAD,MAAe,gBAAC,IAAD,MAAW,gBAAC0V,GAAD,CAAQtZ,MAAOC,QAAM2O,YAGxF,KAAKgJ,GAAgBgC,uBACjB,OACI,gBAAClS,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAM2O,UAClChH,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GAAC,OAAIA,EAAErZ,MAAQC,QAAM2D,WAElD,gBAAC0V,GAAD,CAAQtZ,MAAOC,QAAM2O,WAAW,gBAAC,IAAD,MAAe,gBAAC0K,GAAD,CAAQtZ,MAAOC,QAAM2D,SAGhF,KAAKgU,GAAgBiC,0BACjB,OACI,gBAACnS,GAAA,EAAD,CACIC,SAAUsR,EAAkBhZ,QAAM2O,UAClChH,QAAS,kBAAMtY,EAAW8pB,IAAG,SAAAC,GACzBA,EAAErZ,MAAQC,QAAM2D,MAChByV,EAAES,yBAGN,gBAACR,GAAD,CAAQtZ,MAAOC,QAAM2O,WAAW,gBAAC,IAAD,MAAe,gBAAC0K,GAAD,CAAQtZ,MAAOC,QAAM2D,QAAQ,gBAAC,IAAD,QAMhG,SAAS0V,GAAT,GACI,OADoD,EAAvCtZ,OAET,KAAKC,QAAMC,QACP,OAAO,gBAAC,IAAD,MACX,KAAKD,QAAMQ,QACP,OAAO,gBAAC,IAAD,MACX,KAAKR,QAAM2D,MACP,OAAO,gBAAC,IAAD,MACX,KAAK3D,QAAMiU,WACP,OAAO,gBAAC,IAAD,MACX,KAAKjU,QAAM2O,SACP,OAAO,gBAAC,IAAD,MACX,QACI,MAAM,IAAI1uB,MAAM,WEzHrB,SAAS65B,GAAT,GAGU,IAHQzqB,EAGT,EAHSA,WAAY4iB,EAGrB,EAHqBA,aAGrB,EAEO/K,YAAeP,IAA3BS,EAFK,oBAGN0L,EAAoB3E,YAAkB5H,IAHhC,EAIQW,YAAeV,IAA5BlU,EAJK,sBAKwB4U,YAAeZ,IALvC,mBAKLwR,EALK,KAKOiC,EALP,OAOkC1R,oBAAS,GAP3C,mBAOL2R,EAPK,KAOYC,EAPZ,OAQ8B5R,oBAAS,GARvC,mBAQL6R,EARK,KAQUC,EARV,KAUNC,EAAM,SAACC,GACL/nB,IACAynB,EAAcM,GACdpI,EAAa3f,EAAW+nB,GAAK,SAAAhxB,GAAK,OAAIhE,QAAQgE,MAAMA,QAItDixB,EAAU,SAACD,GAAD,OAAuBvC,IAAeuC,EAAM,UAAY,aAExE,OACI,gCACI,gBAACzS,GAAA,EAAD,KAAciR,GACTt5B,KAAI,SAAAw5B,GAAe,OAChB,gBAACD,GAAD,CACI1lB,IAAG,iBAAY2lB,GACf1pB,WAAYA,EACZ0pB,gBAAiBA,EACjBrR,SAAUN,IAAaX,GAASjN,aAG5C,2BACA,gBAACoO,GAAA,EAAD,CAAac,UAAU,QACnB,gBAACjB,GAAA,EAAD,CAAQE,QAAS,kBAAMyS,EAAInhB,GAAawH,OAAO3Y,MAAOwyB,EAAQrhB,GAAawH,OAA3E,KACA,gBAACgH,GAAA,EAAD,CAAQE,QAAS,kBAAMyS,EAAInhB,GAAayH,QAAQ5Y,MAAOwyB,EAAQrhB,GAAayH,QAA5E,UACA,gBAAC+G,GAAA,EAAD,CAAQE,QAAS,kBAAMyS,EAAInhB,GAAamG,UAAUtX,MAAOwyB,EAAQrhB,GAAamG,UAA9E,KACA,gBAACqI,GAAA,EAAD,CAAQE,QAAS,kBAAMyS,EAAInhB,GAAakG,SAASrX,MAAOwyB,EAAQrhB,GAAakG,SAA7E,WAEJ,2BACA,gBAACyI,GAAA,EAAD,KACI,gBAAC+C,GAAA,EAAD,CACIC,OAAQsP,EACRrP,OAAQ,kBAAMsP,GAAkBD,KAEhC,gBAACpP,GAAA,EAAD,KAAgB,gBAAC,IAAD,OAChB,gBAACC,GAAA,EAAD,KAAe3R,GAAU7Z,KAAI,SAACg7B,EAAkBr4B,GAAnB,OACzB,gBAAC+oB,GAAA,EAAD,CAAc7X,IAAG,cAASlR,GAASylB,QAAS,WACxCmL,EAAkB5wB,GAClB+vB,EAAasI,EAAkBzC,GAAY,kBAAMzyB,QAAQgE,MAAM,mBAE9DkxB,EAAiBlhB,WAI9B,gBAACoO,GAAA,EAAD,CACI3f,MAAOkyB,EAAkB,UAAY,YACrCrS,QAAS,kBAAMsS,GAAoBD,KACnC,gBAAC,IAAD,QAGNA,EAA8B,gBAACpC,GAAD,CAAa3F,aAAcA,SAAvCla,GCtEzB,SAASyiB,GAAT,GAA2E,IAAvDnrB,EAAsD,EAAtDA,WAAsD,EAChDgZ,mBAAShZ,EAAWiN,OAAOoH,YADqB,mBACtE3D,EADsE,KAC/DsK,EAD+D,KAM7E,OAJA7B,qBAAU,WACN,IAAMrnB,EAAMkO,EAAWiN,OAAOgO,UAAUD,GACxC,OAAO,kBAAMlpB,EAAIopB,iBAClB,CAAClb,IAEA,2BACI,4BvB4FL,SAAmB0Q,GACtB,OAAQA,GACJ,KAAKC,QAAMC,QACP,MAAO,UACX,KAAKD,QAAMQ,QACP,MAAO,UACX,KAAKR,QAAM2D,MACP,MAAO,QACX,KAAK3D,QAAMiU,WACP,MAAO,aACX,QACI,MAAO,YuBvGAwG,CAAU1a,IADrB,IACoC,6BAAK1Q,EAAWgK,KAAhB,MCKrC,SAASqhB,GAAT,GAA4G,IAAzFrrB,EAAwF,EAAxFA,WAAY6iB,EAA4E,EAA5EA,UAA4E,EAC3FhL,YAAeP,IAA3BS,EADuG,sBAEnEF,YAAeL,IAFoD,mBAEvGuL,EAFuG,KAEzFuI,EAFyF,OAGrEtS,mBAASvpB,EAAae,OAH+C,mBAGvG+6B,EAHuG,KAG1FC,EAH0F,KAKxGC,EAAkB,SAACzpB,GAAD,OAAiB,WAErC6gB,EAAUjjB,UAAUtN,SAAQ,SAAA6L,GACxB6B,EAAW0rB,oBAAoBvtB,EAAU6D,EAF9B,KAE6C,EAF7C,WAMnB,OAAQ+V,GACJ,KAAKX,GAASG,MACV,OACI,gCACI,gBAACgB,GAAA,EAAD,KACItnB,EACKf,KAAI,SAACE,EAAcyC,GAAf,OACD,gBAACulB,GAAA,EAAD,CAAQrU,IAAG,uBAAkBlR,EAAlB,KACHylB,QAAS,kBAAMkT,EAAkBp7B,IACjCqI,MAAO8yB,IAAgBn7B,EAAe,UAAY,aAErDW,EAAiBX,QAIlC,gBAACu7B,GAAD,CAAoB3rB,WAAYA,EAAY5P,aAAcm7B,KAGtE,KAAKnU,GAASoB,UACV,OACI,gBAACD,GAAA,EAAD,KACI,gBAACH,GAAA,EAAD,CAAQE,QAASmT,GAAgB,IAC7B,gBAAC,IAAD,OAEJ,gBAACrT,GAAA,EAAD,CAAQE,QAASmT,GAAgB,IAC7B,gBAAC,IAAD,QAIhB,KAAKrU,GAASjN,OACV,OACI,gBAACoO,GAAA,EAAD,KACKtnB,EAA0Bf,KAAI,SAAAE,GAAY,OACvC,gBAACgoB,GAAA,EAAD,CAAQrU,IAAG,aAAQ3T,GAAgBkoB,QAAS,WACxC,GAAIyK,EAAatxB,QAAQrB,GAAgB,EACrCk7B,EAAmB,GAAD,mBAAKvI,GAAL,CAAmB3yB,SAClC,CACH,IAAMw7B,EAAY7I,EAAajzB,QAAO,SAAAoB,GAAI,OAAIA,IAASd,KACvDk7B,EAAmBM,EAAUl5B,OAAS,EAAIk5B,EAAY36B,KAGtDwH,MAAOsqB,EAAanhB,MAAK,SAAA1Q,GAAI,OAAIA,IAASd,KAAgB,UAAY,aAEzEW,EAAiBX,GAClB,gBAAC,IAAD,CAAUqqB,MAAO,CAAChiB,MAAO2oB,GAAgBhxB,WAK7D,QACI,OAAO,kCAInB,SAASu7B,GAAT,GAIiB,IAJY3rB,EAIb,EAJaA,WAAY5P,EAIzB,EAJyBA,aAAcioB,EAIvC,EAJuCA,SAcnD,IAAMwT,EAAc,SAAC7pB,EAAa8pB,GAAd,OAAgC,WAHzC9rB,EAAWJ,UAAU9P,QAAO,SAAAqO,GAAQ,OAAIA,EAAS/N,eAAiBA,KAS7DkC,SAAQ,SAAA6L,GAAQ,OAAI6B,EAAW0rB,oBAAoBvtB,EAL/D,WACI,IAAMuB,EAASosB,EAAO,KAAO,KAC7B,OAAO9pB,EAAKtC,EAAU,EAAIA,EAG2CqsB,SAG7E,OACI,uBAAK1S,UAAU,cACX,gBAACd,GAAA,EAAD,CAAac,UAAU,QACnB,gBAACjB,GAAA,EAAD,CAAQC,SAAUA,EAAUC,QAASuT,GAAY,GAAM,IAAQ,gBAAC,IAAD,MAAe,gBAAC,IAAD,OAC9E,gBAACzT,GAAA,EAAD,CAAQC,SAAUA,EAAUC,QAASuT,GAAY,GAAM,IAAO,gBAAC,IAAD,OAC9D,gBAACzT,GAAA,EAAD,CAAQC,SAAUA,EAAUC,QAASuT,GAAY,GAAO,IAAO,gBAAC,IAAD,OAC/D,gBAACzT,GAAA,EAAD,CAAQC,SAAUA,EACVC,QAASuT,GAAY,GAAO,IAAQ,gBAAC,IAAD,MAAgB,gBAAC,IAAD,QAEhE,2BACA,gBAACtT,GAAA,EAAD,KACI,gBAACH,GAAA,EAAD,KAASrnB,EAAiBX,GAA1B,OAA6CgB,EA3B9CjB,EAAkBC,IA2BjB,OCrFT,SAAS47B,GAAT,GAA4F,IAAnEC,EAAkE,EAAlEA,eAEtBC,EAAenK,mBAAQ,kBAAMkK,GAAe,KAAQ,IACpDE,EAAgB1U,GAAevnB,KAAI,gBAAEynB,EAAF,EAAEA,YAAF,OAAmBE,YAAeF,MAHmB,EAI5DE,YAAeV,IAJ6C,mBAIvFlU,EAJuF,KAI5EulB,EAJ4E,OAKrE3Q,YAAeX,IAAjCsM,EALuF,sBAMzE3L,YAAeZ,IAA7BwR,EANuF,sBAO9D5Q,YAAeP,IAP+C,mBAOvFS,EAPuF,KAO7EC,EAP6E,OAQ3EH,YAAejB,IAA3BkB,EARuF,sBAU1DkB,qBAV0D,mBAUvFhZ,EAVuF,KAU3EosB,EAV2E,OAW5DpT,mBAAqBrZ,IAXuC,mBAWvFkjB,EAXuF,KAW5EC,EAX4E,KAYxFyB,EAAY,SAAChhB,GAAD,OAAqBvN,QAAQgE,MAAM,kBAAmBuJ,IAElEqf,EAA6B,SAA7BA,EAA8ByJ,EAAgBC,EAAkBtyB,GAClE,IACI,IAAMyJ,EAAOT,GAAiBqpB,EAAIryB,GAClC,IAAKyJ,EACD,OAAO,EAEXuU,EAAYZ,GAASG,OACrBuL,EAAanjB,IACb,IAAM4sB,EAAaF,EAAGviB,cAAchZ,eAAaqlB,mBAC3CpJ,OAA2BrE,IAAf6jB,EAA2BnX,gCAAsBtkB,eAAaqlB,mBAAqBoW,EACrG/D,EAAa6D,GACbx7B,EAAeX,KAAI,SAAA0F,GAAY,IACpBuf,EAAkBG,GAAe1f,GAAjCuf,eACDze,EAAUy1B,EAAcv2B,GAAS,GACvCs2B,EAAarQ,aAAajmB,EAASc,EAASye,EAAeze,OAE/Dw1B,EAAa34B,MAAM22B,sBAAsBmC,EAAGpiB,kBAC5CmiB,EAAc,IAAItf,GAAW,IAAInd,UAAW2P,KAAoB4sB,EAAcnf,EAAWuf,EAAID,EAAI5oB,IACnG,MAAOH,GAEL,OADAtN,QAAQC,IAAI,kBAAmBqN,GACxBsf,EAAa7Y,GAAUyZ,GAAiB5Z,GAAawH,KAAMmT,GAEtE,OAAO,GAGXpL,qBAAU,WACNvpB,OAAOC,KAAK6mB,cAAc5mB,QAAO,SAAAC,GAAC,MfjEf,wBeiEmBA,KAAmBuC,SAAQ,SAAAvC,GAAC,OAAI2mB,aAAa8V,WAAWz8B,MAE1F6yB,EADA3f,GAGa8G,GAAUyZ,GAFCiF,EAAYlE,KAIzC,IAEH,IAAMkI,EAAeC,cACrB,OACI,2BACI,uBAAKjS,MAAO,CACRpiB,SAAU,WACVxD,KAAM,EACND,MAAO,EACPo0B,OAAQ,SAENhpB,EAOE,uBAAKqZ,UAAU,SACX,gBAAC,IAAD,CACIoB,MAAO,CACHsO,gBAAiB,QACjB4D,YAAa,QACbC,YAAa7U,IAAaX,GAASjN,OAAS,UAAY,QACxD0iB,OAAQ9U,IAAaX,GAASoB,UAAY,UAAY,UACtDsU,YAAa,QAGjB,gBAACL,EAAD,KACI,gBAAC9J,GAAD,CACI3iB,WAAYA,EACZ4iB,aAAcA,EACdC,UAAWA,EACXC,aAAcA,MAIzBhL,OAAWpP,EACR,gCACI,uBAAKwR,GAAG,YACJ,gBAACuQ,GAAD,CAASzqB,WAAYA,EAAY4iB,aAAcA,KAEnD,uBAAK1I,GAAG,aACJ,gBAACmR,GAAD,CAAUrrB,WAAYA,EAAY6iB,UAAWA,KAEjD,uBAAK3I,GAAG,eACJ,gBAACtC,GAAD,OAEJ,uBAAKsC,GAAG,iBACJ,gBAACa,GAAD,CAAc/a,WAAYA,MAItC,uBAAKka,GAAG,cACJ,gBAACiR,GAAD,CAAWnrB,WAAYA,KAE3B,uBAAKka,GAAG,gBACJ,gBAAC0E,GAAD,CAAa5e,WAAYA,MA7CjC,uBAAKqZ,UAAU,SACX,uBAAKoB,MAAO,CAACpiB,SAAU,WAAYoJ,IAAK,MAAO5M,KAAM,QACjD,0BAAI,gBAAC,IAAD,WCtFhC,SAASwB,GAAO02B,GACZ,IAAM7pB,EAAO8pB,SAASC,eAAe,QACrCC,SAAgBH,EAAS7pB,GAGtB,SAAeiqB,GAAtB,uC,8CAAO,WACHj6B,EACAk6B,EACAC,GAHG,eAAAt7B,EAAA,sDAKGk6B,EAAiC,SAACh1B,EAAiB3D,GAAlB,OACnC,IAAIL,EAAeC,EAAK,IAAM+D,EAASo2B,EAAcD,EAAa95B,IAEtE+C,GAAO,gBAAC,IAAD,KAAY,gBAAC21B,GAAD,CAAgBC,eAAgBA,MACnDqB,IATG,4C","file":"static/js/5.d80d4744.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    PushA,\n    PushB,\n    PullA,\n    PullB,\n    PullAA,\n    PullBB,\n    Radial,\n    Connector,\n    Distancer,\n}\n\nexport const INTERVAL_ROLES = Object.keys(IntervalRole)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => IntervalRole[k])\n\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst ROOT6 = 2.44948974278\nconst SHORTENING = 0.5\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return ROOT6\n        case IntervalRole.PushB:\n            return PHI * ROOT3\n        case IntervalRole.PullA:\n            return 1\n        case IntervalRole.PullB:\n            return ROOT3\n        case IntervalRole.PullAA:\n            return roleDefaultLength(IntervalRole.PullA) * SHORTENING\n        case IntervalRole.PullBB:\n            return roleDefaultLength(IntervalRole.PullB) * SHORTENING\n        default:\n            throw new Error(`Length for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const WORLD_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"[A]\"\n        case IntervalRole.PushB:\n            return \"[B]\"\n        case IntervalRole.PullA:\n            return \"(a)\"\n        case IntervalRole.PullB:\n            return \"(b)\"\n        case IntervalRole.PullAA:\n            return \"(aa)\"\n        case IntervalRole.PullBB:\n            return \"(bb)\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PushA:\n            case IntervalRole.PushB:\n            case IntervalRole.PullA:\n            case IntervalRole.PullB:\n            case IntervalRole.PullAA:\n            case IntervalRole.PullBB:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(3)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(3)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"), expo.indexOf(\"e+3\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function percentString(percent: number): string {\n    if (percent <= 100) {\n        return `${percent.toFixed(0)}%`\n    } else {\n        return `${(percent / 100).toFixed(1)}x`\n    }\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World, WorldFeature } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { UP, vectorFromArray } from \"./eig-util\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private valuesToApply: ICurrentValue[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const current = this.valuesToApply.shift()\n        if (current) {\n            this.world.set_float_value(current.feature, current.value)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: WorldFeature, percent: number, value: number): void {\n        this.valuesToApply.push({feature, percent, value})\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n\ninterface ICurrentValue {\n    feature: WorldFeature\n    percent: number\n    value: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, isPushRole, JOINT_RADIUS, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {\n    Left = \"Left\",\n    Right = \"Right\",\n    LeftRight = \"Left-Right\",\n    RightLeft = \"Right-Left\",\n}\n\nexport const SPINS = [Spin.Left, Spin.Right, Spin.LeftRight, Spin.RightLeft]\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n        case Spin.LeftRight:\n            return Spin.RightLeft\n        case Spin.RightLeft:\n            return Spin.LeftRight\n    }\n}\n\nexport function omniOppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.RightLeft\n        case Spin.Right:\n            return Spin.LeftRight\n        default:\n            throw new Error(\"Omni of omni?\")\n    }\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    instance: FabricInstance\n    index: number\n    push?: IInterval\n    pulls?: IInterval[]\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointPulls({pulls}:IJoint): IInterval[] {\n    if (!pulls) {\n        throw new Error(\"no pulls\")\n    }\n    return pulls\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IIntervalStats {\n    stiffness: number\n    strain: number\n    length: number\n    idealLength: number\n    linearDensity: number\n}\n\nfunction indexKey(a: number, b: number): string {\n    return a < b ? `(${a},${b})` : `(${b},${a})`\n}\n\nexport function twoJointKey(alpha: IJoint, omega: IJoint): string {\n    return indexKey(alpha.index, omega.index)\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function pairKey({alpha, omega}: IPair): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n    stats?: IIntervalStats\n}\n\nexport function filterRole(role: IntervalRole): (interval: IInterval) => boolean {\n    return ({intervalRole}) => intervalRole === role\n}\n\nexport function intervalToPair({alpha, omega, scale, intervalRole}: IInterval): IPair {\n    return {alpha, omega, scale, intervalRole}\n}\n\nexport function intervalKey({alpha, omega}: IInterval): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function addIntervalStats(interval: IInterval, pushOverPull: number, pretenstFactor: number): IIntervalStats {\n    const {floatView} = interval.alpha.instance\n    const stiffness = floatView.stiffnesses[interval.index] * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n    const strain = floatView.strains[interval.index]\n    const length = intervalLength(interval)\n    const idealLength = floatView.idealLengths[interval.index] * (isPushRole(interval.intervalRole) ? 1 + pretenstFactor : 1.0)\n    const linearDensity = floatView.linearDensities[interval.index]\n    const stats: IIntervalStats = {stiffness, strain, length, idealLength, linearDensity}\n    interval.stats = stats\n    return stats\n}\n\nexport function expectStats({stats}: IInterval): IIntervalStats {\n    if (!stats) {\n        throw new Error()\n    }\n    return stats\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport function outwardVector(joint: IJoint, interval: IInterval): Vector3 {\n    return new Vector3().subVectors(jointLocation(joint), jointLocation(otherJoint(joint, interval))).normalize()\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport enum FaceSelection {\n    None = \"None\",\n    Face = \"Face\",\n    Pulls = \"Pulls\",\n    Pushes = \"Pushes\",\n    Both = \"Both\",\n}\n\nexport interface IFace {\n    index: number\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    faceSelection: FaceSelection\n    marks: IFaceMark[]\n    joint?: IJoint\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function normalFromFace(face: IFace): Vector3 {\n    const origin = locationFromFace(face)\n    const cross = new Vector3()\n    const norm = new Vector3()\n    const toEnds = face.ends.map(jointLocation).map(location => location.sub(origin))\n    for (let index = 0; index < toEnds.length; index++) {\n        cross.crossVectors(toEnds[index], toEnds[(index + 1) % toEnds.length]).normalize()\n        norm.add(cross)\n    }\n    return norm.normalize()\n}\n\nexport function locationFromJoints(joints: IJoint[]): Vector3 {\n    return joints\n        .reduce((accum, joint) => accum.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / joints.length)\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => isPushRole(interval.intervalRole))\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    return new Matrix4().makeBasis(x, y, z).setPosition(mid).invert()\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * -0.24)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n\nexport interface ISelection {\n    faces: IFace[]\n    intervals: IInterval[]\n    joints: IJoint[]\n}\n\nexport function emptySelection(): ISelection {\n    return {faces: [], intervals: [], joints: []}\n}\n\nexport function preserveJoints(selection: ISelection): ISelection {\n    return {faces: [], intervals: [], joints: selection.joints}\n}\n","import { Vector3 } from \"three\"\n\nimport { avg, IntervalRole, midpoint, normal, sub } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    jointLocation,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class Twist {\n\n    public readonly faces: IFace[] = []\n    public readonly pushes: IInterval[] = []\n    public readonly pulls: IInterval[] = []\n\n    constructor(\n        public readonly tensegrity: Tensegrity,\n        public readonly spin: Spin,\n        public readonly scale: IPercent,\n        baseKnown?: Vector3[],\n    ) {\n        const base = !baseKnown ? createBase(new Vector3(), 3) :\n            baseKnown.length === 3 ? baseKnown : createBase(baseKnown[0], 3)\n        switch (this.spin) {\n            case Spin.Left:\n                this.createSingle(base, true)\n                break\n            case Spin.Right:\n                this.createSingle(base, false)\n                break\n            case Spin.LeftRight:\n                this.createDouble(base, true)\n                break\n            case Spin.RightLeft:\n                this.createDouble(base, false)\n                break\n            default:\n                throw new Error(\"Spin?\")\n        }\n    }\n\n    public face(faceName: FaceName): IFace {\n        switch (this.faces.length) {\n            case 2:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.A:\n                        return this.faces[1]\n                }\n                break\n            case 8:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.B:\n                        return this.faces[2]\n                    case FaceName.C:\n                        return this.faces[1]\n                    case FaceName.D:\n                        return this.faces[3]\n                    case FaceName.b:\n                        return this.faces[4]\n                    case FaceName.c:\n                        return this.faces[5]\n                    case FaceName.d:\n                        return this.faces[6]\n                    case FaceName.A:\n                        return this.faces[7]\n                }\n                break\n        }\n        throw new Error(`Face ${FaceName[faceName]} not found in twist with ${this.faces.length} faces`)\n    }\n\n    private createSingle(base: Vector3[], leftSpin: boolean): void {\n        const pairs = pointPairs(base, this.scale, leftSpin)\n        const ends = pairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const alphaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({alpha}) => alpha)))\n        const omegaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({omega}) => omega)))\n        this.tensegrity.instance.refreshFloatView()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushA, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const makeFace = (joints: IJoint[], midJoint: IJoint) => {\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            this.faces.push(this.tensegrity.createFace(joints, pulls, this.spin, this.scale, midJoint))\n        }\n        makeFace(ends.map(({alpha}) => alpha), alphaJoint)\n        makeFace(ends.map(({omega}) => omega).reverse(), omegaJoint)\n        ends.forEach(({alpha}, index) => {\n            const omega = ends[(ends.length + index + (leftSpin ? -1 : 1)) % ends.length].omega\n            this.pulls.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.PullB, this.scale))\n        })\n    }\n\n    private createDouble(base: Vector3[], leftSpin: boolean): void {\n        const botPairs = pointPairs(base, this.scale, leftSpin)\n        const topPairs = pointPairs(botPairs.map(({omega}) => omega), this.scale, !leftSpin)\n        const bot = botPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const top = topPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const ends = [...bot, ...top]\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushB, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const faceJoints = leftSpin ?\n            [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[1].omega, top[1].alpha], // B\n                [bot[0].alpha, bot[2].omega, top[2].alpha], // C\n                [bot[1].alpha, bot[0].omega, top[0].alpha], // D\n                [top[1].omega, top[0].alpha, bot[1].omega].reverse(), // b\n                [top[2].omega, top[1].alpha, bot[2].omega].reverse(), // c\n                [top[0].omega, top[2].alpha, bot[0].omega].reverse(), // d\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ] : [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[0].omega, top[2].alpha].reverse(), // D\n                [bot[0].alpha, bot[1].omega, top[0].alpha].reverse(), // B\n                [bot[1].alpha, bot[2].omega, top[1].alpha].reverse(), // C\n                [top[1].omega, top[2].alpha, bot[2].omega], // b\n                [top[2].omega, top[0].alpha, bot[0].omega], // c\n                [top[0].omega, top[1].alpha, bot[1].omega], // d\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ]\n        const midJoints = faceJoints.map(joints => this.tensegrity.createJoint(midpoint(joints.map(jointLocation))))\n        this.tensegrity.instance.refreshFloatView()\n        faceJoints.forEach((joints, index) => {\n            const midJoint = midJoints[index]\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            const spin = leftSpin === ([0, 4, 5, 6].some(n => n === index)) ? Spin.Left : Spin.Right\n            this.faces.push(this.tensegrity.createFace(joints, pulls, spin, this.scale, midJoint))\n        })\n    }\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction pointPairs(base: Vector3[], scale: IPercent, leftSpin: boolean): IPointPair[] {\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const midVector = () => new Vector3().copy(mid)\n    const factor = factorFromPercent(scale)\n    const up = normal(base).multiplyScalar(-factor)\n    for (let index = 0; index < base.length; index++) {\n        const fromMid = (offset: number) => sub(base[(index + base.length + offset) % base.length], mid)\n        const between = (idx1: number, idx2: number) => avg(fromMid(idx1), fromMid(idx2))\n        const alpha = midVector().addScaledVector(between(0, 1), factor)\n        const omega = midVector().add(up).addScaledVector(leftSpin ? between(1, 2) : between(-1, 0), factor)\n        points.push({alpha, omega})\n    }\n    return points\n}\n\nfunction createBase(location: Vector3, pushesPerTwist: number): Vector3[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return base\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { PostGrowthOp, Tensegrity } from \"./tensegrity\"\nimport {\n    FACE_NAME_CHARS,\n    FACE_NAMES,\n    FaceName,\n    faceNameFromChar,\n    factorFromPercent,\n    IFaceMark,\n    IPercent,\n    isFaceNameChar,\n    jointLocation,\n    omniOppositeSpin,\n    oppositeSpin,\n    percentFromFactor,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport interface ITenscript {\n    name: string\n    spin: Spin\n    surfaceCharacter: SurfaceCharacter\n    code: string[]\n    marks: Record<number, string>\n    featureValues: Record<WorldFeature, number>\n}\n\nexport enum FaceAction {\n    Subtree,\n    Base,\n    Join,\n    Distance,\n    Anchor,\n    None,\n}\n\nexport interface IMark {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport function compileTenscript(tenscript: ITenscript, error: (message: string) => void): TenscriptNode | undefined {\n    try {\n        const code = tenscript.code.join()\n        const root = codeToNode(code)\n        if (!root) {\n            error(\"Nothing to compile\")\n            return undefined\n        }\n        root.root = true\n        return root\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nexport type RunTenscript = (tenscript: ITenscript, postGrowth: PostGrowthOp, error: (message: string) => void) => boolean\n\nexport interface IBud {\n    tree: TenscriptNode\n    twist: Twist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nexport function createBud(tensegrity: Tensegrity, {spin, marks}: ITenscript, tree: TenscriptNode): IBud {\n    if (!tree) {\n        throw new Error(\"Create bud with no tree\")\n    }\n    const reorient = tree.forward === -1\n    const twist = new Twist(tensegrity, spin, percentOrHundred(), [new Vector3()])\n    return {tree, twist, marks: markStringsToMarks(marks), reorient}\n}\n\nexport function markStringsToMarks(markStrings?: Record<number, string>): Record<number, IMark> {\n    const marks: Record<number, IMark> = {}\n    if (markStrings) {\n        Object.keys(markStrings).forEach(key => {\n            const c: string = markStrings[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = codeToNode(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base\")) {\n                marks[key] = <IMark>{action: FaceAction.Base}\n            } else if (c.startsWith(\"join\")) {\n                marks[key] = <IMark>{action: FaceAction.Join}\n            } else if (c.startsWith(\"distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[1], 10)}\n                marks[key] = <IMark>{action: FaceAction.Distance, scale}\n            } else if (c.startsWith(\"anchor\")) {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: FaceAction.Anchor, point, scale}\n            }\n        })\n    }\n    return marks\n}\n\nfunction codeToNode(codeFragment: string): TenscriptNode | undefined {\n    const initialCode = argument(codeFragment, true)\n    const codeString = initialCode.content\n\n    let forward = -1\n    let scale = percentOrHundred()\n    const subtrees = {} as Record<FaceName, TenscriptNode>\n    const marks = {} as Record<FaceName, IFaceMark[]>\n\n    function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n        const {content, skip} = argument(codeString.substring(index), false)\n        const codeTree = codeToNode(content)\n        return {codeTree, skip}\n    }\n\n    function addMark(faceName: FaceName, markNumber: number): void {\n        const found = marks[faceName]\n        const mark = {_: markNumber}\n        if (found) {\n            found.push(mark)\n        } else {\n            marks[faceName] = [mark]\n        }\n    }\n\n    for (let index = 0; index < codeString.length; index++) {\n        const char = codeString.charAt(index)\n        if (isFaceNameChar(char)) {\n            const direction = subtree(index + 1)\n            const codeTree = direction.codeTree\n            if (!codeTree) {\n                throw new Error(`No subtree: ${codeString.substring(index)}`)\n            }\n            subtrees[faceNameFromChar(char)] = codeTree\n            index += direction.skip\n        } else if (isDigit(char)) {\n            const forwardArg = argument(codeString, false)\n            forward = toNumber(forwardArg.content)\n            index += forwardArg.skip\n        } else {\n            switch (char) {\n                case \"S\":\n                    const scaleArg = argument(codeString.substring(index + 1), true)\n                    scale = {_: toNumber(scaleArg.content)}\n                    index += scaleArg.skip\n                    break\n                case \"M\":\n                    const faceNameChar = codeString.charAt(index + 1)\n                    const markNumber = argument(codeString.substring(index + 2), true)\n                    addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                    index += markNumber.skip + 1\n                    break\n                case \",\":\n                case \" \":\n                case \"\\n\":\n                    break\n                default:\n                    throw new Error(`Unexpected character: ${char}`)\n            }\n        }\n    }\n    return new TenscriptNode(forward, scale, subtrees, marks).nonEmpty\n}\n\nfunction markTwist(twistToMark: Twist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        twistToMark.face(thisFace).marks.push(...marks)\n    })\n}\n\nfunction grow({twist, marks}: IBud,\n              afterTree: TenscriptNode, faceName: FaceName, omni: boolean, scaleChange: IPercent): IBud {\n    const baseFace = twist.face(faceName)\n    const spin = omni ? omniOppositeSpin(baseFace.spin) : oppositeSpin(baseFace.spin)\n    const scale = percentFromFactor(factorFromPercent(baseFace.scale) * factorFromPercent(scaleChange))\n    const newTwist = twist.tensegrity.createTwistOn(baseFace, spin, scale)\n    if (afterTree.forward === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, reorient, twist} = bud\n        if (tree.forward > 0) {\n            const afterTree = tree.decremented\n            const omni = tree.needsOmniTwist && afterTree.forward === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = twist.tensegrity.joints.map(jointLocation)\n                twist.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const afterTree = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const mark = marks[twistMark._]\n                        if (mark && mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: number,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly marks: Record<FaceName, IFaceMark[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === -1 && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): TenscriptNode {\n        if (this.forward > 0) {\n            return new TenscriptNode(this.forward - 1, this.scale, this.subtrees, this.marks)\n        }\n        return this\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IFaceMark [] | undefined {\n        return this.marks[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.marks[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.marks[faceName])\n    }\n\n    public get code(): string {\n        const isForward = this.forward > 0\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && isForward && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (isForward) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.marks)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\n","import { SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { compileTenscript, ITenscript } from \"./tenscript\"\nimport { Spin } from \"./tensegrity-types\"\n\nconst featureValues: Record<WorldFeature, number> = {}\nconst marks: Record<number, string> = {}\n\nconst BOOTSTRAP_TENSCRIPTS: ITenscript[] = [\n    {\n        name: \"Phi\",\n        spin: Spin.LeftRight,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"()\"],\n        featureValues, marks,\n    },\n    {\n        name: \"One\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(1)\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Axoneme\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(30,S95)\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Knee\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(3,b3)\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Jack\",\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        spin: Spin.LeftRight,\n        code: [\"(a2,b2,c2,d2)\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Star\",\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        spin: Spin.LeftRight,\n        code: [\"(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Tripod with Knees\",\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        spin: Spin.RightLeft,\n        code: [\"(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\"],\n        featureValues, marks,\n    },\n    {\n        name: \"Pretenst Lander\",\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        spin: Spin.LeftRight,\n        code: [\"(B(15,S90,MA1),C(15,S90,MA1),D(15,S90,MA1))\"],\n        featureValues,\n        marks: {\n            1: \"distance-60\",\n        },\n    },\n    {\n        name: \"Zigzag\",\n        spin: Spin.LeftRight,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(d(3,MA1),c(7,b(7,d(7,d(7,d(7,d(3,MA1)))))))\"],\n        marks: {\n            1: \"join\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Bulge Ring\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A(15,S90,MA1), a(16,S90,MA1))\"],\n        marks: {\n            1: \"join\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Convergence\",\n        spin: Spin.LeftRight,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a1,b(15,S92,MA1),c(15,S92,MA1),d(15,S92,MA1))\"],\n        marks: {\n            1: \"join\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Halo by Crane\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(5,S92,b(12,S92,MA1),d(11,S92,MA1))\"],\n        marks: {\n            1: \"join\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Thick Tripod\",\n        spin: Spin.LeftRight,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A3,B(8,MA1),C(8,MA1),D(8,MA1))\"],\n        marks: {\n            1: \"distance-35\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Diamond\",\n        spin: Spin.RightLeft,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"   a(5,\",\n            \"      b(5,b(5,b(2,MA3)),c(5,d(2,MA4))),\",\n            \"      c(5,b(5,b(2,MA1)),c(5,d(2,MA5))),\",\n            \"      d(5,b(5,b(2,MA6)),c(5,d(2,MA2)))\",\n            \"   ),\",\n            \"   b(5,b(5,b(2,MA2)),d(5,c(2,MA3))),\",\n            \"   c(5,b(5,b(2,MA5)),d(5,c(2,MA6))),\",\n            \"   d(5,b(5,b(2,MA4)),d(5,c(2,MA1)))\",\n            \")\",\n        ],\n        marks: {\n            1: \"join\",\n            2: \"join\",\n            3: \"join\",\n            4: \"join\",\n            5: \"join\",\n            6: \"join\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Composed Tree\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(6,b(4,MA1),c(4,MA1),d(4,MA1))\"],\n        marks: {\n            1: \"subtree(b5,c5,d5)\",\n        },\n        featureValues,\n    },\n    {\n        name: \"Equus Lunae\",\n        spin: Spin.LeftRight,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"  A(16,S95,Md0),\",\n            \"  b(16,S95,Mc0),\",\n            \"  a(16,S95,Mc0),\",\n            \"  B(16,S95,Md0)\",\n            \")\",\n        ],\n        marks: {\n            0: \"distance-60\",\n        },\n        featureValues,\n    },\n    // \"'Infinity':LR(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2)):*=join\",\n    // \"'Binfinity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2)):*=join\",\n    // \"'Mobiosity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3)):*=join\",\n    // \"'Pretenst Squared':L(a(3,MA1),A(2,MA1)):1=distance-70\",\n]\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(tenscript => {\n    compileTenscript(tenscript, (message: string) => {\n        throw new Error(`Bootstrap compile error in \"${tenscript}\"! ${message}`)\n    })\n    return tenscript\n})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, isPushRole, roleDefaultLength } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { createBud, execute, FaceAction, IBud, IMark, ITenscript, markStringsToMarks, TenscriptNode } from \"./tenscript\"\nimport { bowtiePairs, IPair, snelsonPairs } from \"./tensegrity-logic\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    expectPush,\n    FaceName,\n    FaceSelection,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    intervalKey,\n    intervalToPair,\n    IPercent,\n    IRadialPull,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport enum PostGrowthOp {\n    NoOp,\n    Faces,\n    Snelson,\n    Bowtie,\n}\n\nexport enum PairSelection {\n    Bowtie,\n    Snelson,\n}\n\nexport type Job = (tensegrity: Tensegrity) => void\n\nexport class Tensegrity {\n    public name: string\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n    public faces: IFace[] = []\n\n    private jobs: Job[] = []\n    private buds: IBud[]\n    private marks: Record<number, string> = {}\n\n    constructor(\n        public readonly location: Vector3, // TODO use it\n        public readonly scale: IPercent,\n        public readonly instance: FabricInstance,\n        public readonly countdown: number,\n        public readonly postGrowthOperation: PostGrowthOp,\n        tenscript: ITenscript,\n        tree: TenscriptNode,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.marks = tenscript.marks\n        this.name = tenscript.name\n        this.buds = [createBud(this, tenscript, tree)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public get intervalsWithStats(): IInterval[] {\n        return this.intervals.filter(interval => interval.stats)\n    }\n\n    public createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public removeJoint(joint: IJoint): void {\n        const index = joint.index\n        this.fabric.remove_joint(index)\n        this.joints = this.joints.filter(j => j.index !== index)\n        joint.index = -index // mark it\n        this.joints.forEach(j => j.index = j.index > index ? j.index - 1 : j.index)\n        this.instance.refreshFloatView()\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const alphaJoint = this.createJoint(locationFromFace(alpha))\n        const omegaJoint = this.createJoint(locationFromFace(omega))\n        this.instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.intervalRole) {\n            case IntervalRole.Connector:\n                this.connectors.push(radialPull)\n                break\n            case IntervalRole.Distancer:\n                this.distancers.push(radialPull)\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, patience?: number): IInterval {\n        const push = isPushRole(intervalRole)\n        const targetLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const currentLength = targetLength === 0 ? 0 : jointDistance(alpha, omega)\n        const patienceFactor = patience === undefined ? 1 : patience\n        const countdown = this.countdown * Math.abs(targetLength - currentLength) * patienceFactor\n        const attack = countdown <= 0 ? 0 : 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, push, currentLength, targetLength, attack)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        const index = interval.index\n        this.intervals = this.intervals.filter(existing => existing.index !== index)\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n    }\n\n    public createFace(ends: IJoint[], pulls: IInterval[], spin: Spin, scale: IPercent, joint?: IJoint): IFace {\n        const f0 = ends[0]\n        const f1 = ends[2]\n        const f2 = ends[1]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const faceSelection = FaceSelection.None\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {index, spin, scale, ends, pushes, pulls, faceSelection, marks: [], joint}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public turnFaceToTriangle(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        for (let index = 0; index < face.ends.length; index++) {\n            const endA = face.ends[index]\n            const endB = face.ends[(index + 1) % face.ends.length]\n            face.pulls.push(this.createInterval(endA, endB, IntervalRole.PullB, face.scale))\n        }\n    }\n\n    public triangleFaces(): void {\n        this.faces.forEach(face => this.turnFaceToTriangle(face))\n    }\n\n    public withPulls(work: (pairMap: Record<string, IPair>) => void): void {\n        const addPull = (end: IJoint, pull: IInterval) => {\n            if (end.pulls) {\n                end.pulls.push(pull)\n            } else {\n                end.pulls = [pull]\n            }\n        }\n        this.intervals\n            .filter(({intervalRole}) => !isPushRole(intervalRole))\n            .forEach(pull => {\n                addPull(pull.alpha, pull)\n                addPull(pull.omega, pull)\n            })\n        const pairMap: Record<string, IPair> = {}\n        this.intervals.forEach(interval => pairMap[intervalKey(interval)] = intervalToPair(interval))\n        work(pairMap)\n        this.joints.forEach(joint => joint.pulls = undefined)\n    }\n\n    public createPulls(pairSelection: PairSelection): void {\n        const selectPairs = () => {\n            switch (pairSelection) {\n                case PairSelection.Bowtie:\n                    return bowtiePairs(this)\n                case PairSelection.Snelson:\n                    return snelsonPairs(this)\n                default:\n                    throw new Error()\n            }\n        }\n        // selectPairs().forEach(pair=> console.log(pairKey(pair)))\n        selectPairs().forEach(({alpha, omega, intervalRole, scale}) => {\n            this.createInterval(alpha, omega, intervalRole, scale, 5)\n        })\n    }\n\n    public removeSlackPulls(): void {\n        const slack = this.intervals\n            .filter(({intervalRole}) => intervalRole === IntervalRole.PullAA)\n            .filter(pullC => pullC.alpha.instance.floatView.strains[pullC.index] === 0)\n        slack.forEach(interval => this.removeInterval(interval))\n    }\n\n    public createTwistOn(baseFace: IFace, spin: Spin, scale: IPercent): Twist {\n        const twist = new Twist(this, spin, scale, baseFace.ends.map(jointLocation).reverse())\n        const face = twist.face(FaceName.a)\n        this.connect(baseFace, face)\n        return twist\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public do(job: Job): void {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const job = this.jobs.shift()\n        if (job) {\n            job(this)\n            return true\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this, this.faces, this.marks).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.checkConnectors()\n                return false\n            }\n            this.stage = Stage.Shaping\n            switch (this.postGrowthOperation) {\n                case PostGrowthOp.NoOp:\n                    break\n                case PostGrowthOp.Faces:\n                    this.triangleFaces()\n                    break\n                case PostGrowthOp.Snelson:\n                    this.createPulls(PairSelection.Snelson)\n                    this.triangleFaces()\n                    break\n                case PostGrowthOp.Bowtie:\n                    this.createPulls(PairSelection.Bowtie)\n                    this.triangleFaces()\n                    break\n            }\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const floatView = this.instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return jointLocation(interval.alpha).y >= 0 || jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        this.instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public findInterval(a: IJoint, b: IJoint): IInterval | undefined {\n        return this.intervals.find(intervalJoins(a, b))\n    }\n\n\n    public createRadialPulls(faces: IFace[], action: FaceAction, actionScale?: IPercent): void {\n        const centerBrickFaceIntervals = () => {\n            const omniTwist = new Twist(this, Spin.LeftRight, percentFromFactor(averageScaleFactor(faces)), [locationFromFaces(faces)])\n            this.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.createRadialPull(closestFace, face)\n            })\n        }\n        switch (action) {\n            case FaceAction.Distance:\n                const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        this.createRadialPull(faceA, faceB, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.createRadialPull(faces[0], faces[1])\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n    }\n\n    public checkConnectors(): IRadialPull[] {\n        if (this.connectors.length === 0) {\n            return this.connectors\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega)\n        }\n        return this.connectors.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.Connector) {\n                const distance = jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    this.removeInterval(axis)\n                    alphaRays.forEach(i => this.removeInterval(i))\n                    omegaRays.forEach(i => this.removeInterval(i))\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public faceToOrigin(face: IFace): void {\n        this.instance.apply(faceToOriginMatrix(face))\n        this.instance.refreshFloatView()\n    }\n\n    private connect(faceA: IFace, faceB: IFace): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n\n        function indexJoints(index: number): IIndexedJoints {\n            return {\n                a0: a[index],\n                a1: a[(index + 1) % a.length],\n                b0: b[index],\n                b1: b[(index + 1) % b.length],\n                c0: c[index],\n                c1: c[(index + 1) % c.length],\n                cN1: c[(index + c.length - 1) % c.length],\n                d0: d[index],\n                d1: d[(index + 1) % d.length],\n            }\n        }\n\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            const {b0, b1, c0} = indexJoints(index)\n            pulls.push(this.createInterval(b0, c0, IntervalRole.PullA, scale))\n            pulls.push(this.createInterval(c0, b1, IntervalRole.PullA, scale))\n        }\n        this.removeFace(faceB)\n        this.removeFace(faceA)\n        return pulls\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.Distancer : IntervalRole.Connector\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const scale = percentOrHundred()\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.Radial\n        const scale = percentFromFactor(restLength)\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n}\n\ninterface IIndexedJoints {\n    a0: IJoint,\n    a1: IJoint,\n    b0: IJoint,\n    b1: IJoint,\n    c0: IJoint,\n    c1: IJoint,\n    cN1: IJoint,\n    d0: IJoint,\n    d1: IJoint,\n}\n\nfunction faceStrategies(tensegrity: Tensegrity, faces: IFace[], markStrings?: Record<number, string>): FaceStrategy[] {\n    const marks = markStringsToMarks(markStrings)\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        face.marks.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(tensegrity, collated[key], mark)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private tensegrity: Tensegrity, private faces: IFace[], private mark: IMark) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case FaceAction.Base:\n                this.tensegrity.faceToOrigin(this.faces[0])\n                break\n            case FaceAction.Join:\n                this.tensegrity.createRadialPulls(this.faces, this.mark.action, this.mark.scale)\n                break\n            case FaceAction.Distance:\n                this.tensegrity.createRadialPulls(this.faces, this.mark.action, this.mark.scale)\n                break\n            case FaceAction.Anchor:\n                // this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n","import { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    acrossPush,\n    filterRole,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    IPercent,\n    jointLocation,\n    jointPulls,\n    otherJoint,\n    pairKey,\n} from \"./tensegrity-types\"\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function snelsonPairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const snelsonPair = (alpha: IJoint, pullB: IInterval): IPair | undefined => {\n        const a = acrossPush(alpha)\n        const b = otherJoint(alpha, pullB)\n        if (!a.push || !b.push) {\n            return undefined\n        }\n        const acrossA = jointPulls(a).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(a, pullA))\n        const acrossB = jointPulls(b).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(b, pullA))\n        const omega = acrossA.find(jointA => !!acrossB.find(jointB => jointA.index === jointB.index))\n        if (!omega || !omega.push) {\n            return undefined\n        }\n        const intervalRole = IntervalRole.PullB\n        const scale = pullB.scale\n        return {alpha, omega, intervalRole, scale}\n    }\n    tensegrity.withPulls(pairMap => {\n        const pullBs = tensegrity.intervals.filter(filterRole(IntervalRole.PullB))\n        pullBs.forEach(pullB => {\n            const alpha = snelsonPair(pullB.alpha, pullB)\n            if (alpha) {\n                const existingAlpha = pairMap[pairKey(alpha)]\n                if (!existingAlpha) {\n                    pairs.push(alpha)\n                }\n            }\n            const omega = snelsonPair(pullB.omega, pullB)\n            if (omega) {\n                const existingOmega = pairMap[pairKey(omega)]\n                if (!existingOmega) {\n                    pairs.push(omega)\n                }\n            }\n        })\n    })\n    return pairs\n}\n\nexport function bowtiePairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const onlyA = filterRole(IntervalRole.PullA)\n    const onlyB = filterRole(IntervalRole.PullB)\n    const intersection = (a: IJoint[], b: IJoint[]) => a.find(aj => b.find(bj => aj.index === bj.index))\n    const common = (a: IJoint, b: IJoint) => intersection(\n        jointPulls(a).filter(onlyA).map(pullA => otherJoint(a, pullA)),\n        jointPulls(b).filter(onlyA).map(pullA => otherJoint(b, pullA)),\n    )\n    const nextPair = (near: IJoint): IPair | undefined => {\n        const pullB = jointPulls(near).filter(onlyB)[0]\n        const far = otherJoint(near, pullB)\n        const otherFar = acrossPush(near)\n        const otherB = jointPulls(otherFar).filter(onlyB)[0]\n        const otherNear = otherJoint(otherFar, otherB)\n        const commonNear = common(near, otherNear)\n        const commonFar = common(far, otherFar)\n        if (!commonNear || !commonFar) {\n            return undefined\n        }\n        if (commonNear.push && !commonFar.push) {\n            const acrossFar = acrossPush(far)\n            if (!jointPulls(acrossFar).some(intervalJoins(commonNear, acrossFar))) {\n                return undefined\n            }\n        } else if (commonFar.push && !commonNear.push) {\n            const acrossNear = acrossPush(near)\n            if (!jointPulls(acrossNear).some(intervalJoins(commonFar, acrossNear))) {\n                return undefined\n            }\n        }\n        const alpha = commonNear.push ? commonNear : near\n        const omega = commonFar.push ? commonFar : far\n        const scale = pullB.scale\n        const intervalRole = !commonNear.push || !commonFar.push ? IntervalRole.PullB : IntervalRole.PullBB\n        return {alpha, omega, scale, intervalRole}\n    }\n    tensegrity.withPulls(pairMap => {\n        const addPair = (pair: IPair) => {\n            const key = pairKey(pair)\n            const exists = pairMap[key]\n            if (!exists) {\n                pairs.push(pair)\n                pairMap[key] = pair\n            }\n        }\n        const addPairFor = (joint: IJoint) => {\n            const pair = nextPair(joint)\n            if (pair) {\n                addPair(pair)\n            }\n        }\n        tensegrity.intervals\n            .filter(filterRole(IntervalRole.PullB))\n            .forEach(({alpha, omega}) => {\n                addPairFor(alpha)\n                addPairFor(omega)\n            })\n        tensegrity.joints\n            .filter(joint => joint.push && jointPulls(joint).filter(onlyA).length === 3)\n            .forEach(joint3APush => {\n                const noPushAcross = (interval: IInterval) => !otherJoint(joint3APush, interval).push\n                const found = jointPulls(joint3APush).filter(onlyA).find(noPushAcross)\n                if (!found) {\n                    throw new Error(\"no-push not found\")\n                }\n                const faceJoint = otherJoint(joint3APush, found)\n                const a3A = jointPulls(joint3APush).filter(onlyA).map(pullA => otherJoint(joint3APush, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(jointLocation(end), jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                const fjA = jointPulls(faceJoint).filter(onlyA).map(pullA => otherJoint(faceJoint, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(jointLocation(end), jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                a3A.map(a => {\n                    const b = fjA.sort((f1, f2) =>\n                        a.outwards.dot(f2.outwards) - a.outwards.dot(f1.outwards))[0]\n                    const intervalRole = IntervalRole.PullAA // todo: depends!\n                    const scale = found.scale\n                    const pair: IPair = {alpha: a.end, omega: b.end, scale, intervalRole}\n                    addPair(pair)\n                })\n            })\n    })\n    return pairs\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\n\nexport enum FeatureStage {\n    Preslack,\n    Postslack,\n    All,\n}\n\nexport interface IFeatureMapping {\n    feature: WorldFeature\n    name: string\n    featureStage: FeatureStage\n    nuanceToPercent: (nuance: number) => number\n    percentToNuance: (percent: number) => number\n    percentToValue: (percent: number) => number\n    valueToPercent: (value: number) => number\n}\n\nfunction linearMapping(feature: WorldFeature, name: string, featureStage: FeatureStage, low: number, high: number): IFeatureMapping {\n    const nuanceToPercent = (nuance: number) => (low * (1 - nuance) + high * nuance)\n    const percentToNuance = (percent: number) => (percent - low) / (high - low)\n    const percentToValue = (percent: number) => default_world_feature(feature) * percent / 100\n    const valueToPercent = (value: number) => value / default_world_feature(feature) * 100\n    return {feature, name, featureStage, nuanceToPercent, percentToNuance, percentToValue, valueToPercent}\n}\n\nexport function featureMapping(feature: WorldFeature): IFeatureMapping {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            // percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Gravity\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.Antigravity:\n            // percents: [5, 25, 50, 100, 150, 200, 500],\n            return linearMapping(feature, \"-Antigravity\", FeatureStage.All, 5, 500)\n        case WorldFeature.ShapingDrag:\n            // percents: [0, 10, 50, 100, 200, 500],\n            return linearMapping(feature, \"Shaping Drag\", FeatureStage.Preslack, 0, 500)\n        case WorldFeature.ShapingStiffnessFactor:\n            // percents: [10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Shaping Stiffness\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.Drag:\n            // percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            return linearMapping(feature, \"Drag\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.ShapingPretenstFactor:\n            // percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Shaping Pretenst\", FeatureStage.Preslack, 0, 1000)\n        case WorldFeature.PretenstFactor:\n            // percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            return linearMapping(feature, \"Pretenst Factor\", FeatureStage.Postslack, 0, 500)\n        case WorldFeature.StiffnessFactor:\n            // percents: [1, 10, 50, 100, 150, 200, 300],\n            return linearMapping(feature, \"Stiffness\", FeatureStage.Postslack, 1, 300)\n        case WorldFeature.IterationsPerFrame:\n            // percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            return linearMapping(feature, \"Iterations/frame\", FeatureStage.All, 2, 500)\n        case WorldFeature.IntervalCountdown:\n            // percents: [10, 20, 30, 100, 150, 400, 1000],\n            return linearMapping(feature, \"-Interval Countdown\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.PretensingCountdown:\n            // percents: [50, 75, 90, 100, 125, 150, 200],\n            return linearMapping(feature, \"-Pretenst countdown\", FeatureStage.All, 50, 200)\n        case WorldFeature.VisualStrain:\n            // percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Visual strain\", FeatureStage.All, 0, 300)\n        case WorldFeature.PushOverPull:\n            // percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            return linearMapping(feature, \"Push/Pull\", FeatureStage.All, 10, 700)\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport { atom, RecoilState } from \"recoil\"\nimport { recoilPersist } from \"recoil-persist\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, IntervalRole, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { featureMapping, FeatureStage, IFeatureMapping } from \"../view/feature-mapping\"\n\nexport const STORAGE_KEY = \"pretenst-2021-02-27\"\nconst DEFAULT_BOOTSTRAP = 0\n\nconst {persistAtom} = recoilPersist({\n    key: STORAGE_KEY,\n    storage: localStorage,\n})\n\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst effects_UNSTABLE = [persistAtom]\n\nexport const demoModeAtom = atom({\n    key: \"demoMode\",\n    default: true,\n    effects_UNSTABLE,\n})\n\nexport const startDemoAtom = atom({\n    key: \"startDemo\",\n    default: false,\n})\n\nexport const endDemoAtom = atom({\n    key: \"endDemo\",\n    default: false,\n})\n\nexport const postGrowthAtom = atom({\n    key: \"postGrowth\",\n    default: PostGrowthOp.NoOp,\n    effects_UNSTABLE,\n})\n\nexport const bootstrapIndexAtom = atom({\n    key: \"bootstrapIndex\",\n    default: DEFAULT_BOOTSTRAP,\n    effects_UNSTABLE,\n})\n\nexport const tenscriptAtom = atom<ITenscript | undefined>({\n    key: \"tenscript\",\n    default: undefined,\n    effects_UNSTABLE,\n})\n\nfunction createWorldFeatureValues(): IWorldFeatureValue[] {\n    return WORLD_FEATURES.map(feature => {\n        const mapping = featureMapping(feature)\n        const percentAtom = atom({\n            key: mapping.name,\n            default: 100,\n            effects_UNSTABLE,\n        })\n        return <IWorldFeatureValue>{mapping, percentAtom}\n    })\n}\n\nexport const rotatingAtom = atom({\n    key: \"rotating\",\n    default: false,\n})\n\nexport enum ViewMode {\n    Lines = \"Lines\",\n    Selecting = \"Selecting\",\n    Frozen = \"Frozen\",\n}\n\nexport const viewModeAtom = atom<ViewMode>({\n    key: \"viewMode\",\n    default: ViewMode.Lines,\n})\n\nexport const surfaceCharacterAtom = atom({\n    key: \"surfaceCharacter\",\n    default: SurfaceCharacter.Frozen,\n})\n\nexport const visibleRolesAtom = atom<IntervalRole[]>({\n    key: \"visibleRoles\",\n    default: ADJUSTABLE_INTERVAL_ROLES,\n})\n\nexport interface IWorldFeatureValue {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n}\n\nexport const FEATURE_VALUES = createWorldFeatureValues()\n\nexport function featureFilter(stage: Stage): (value: IWorldFeatureValue) => boolean {\n    return value => {\n        const {mapping} = value\n        if (mapping.name.startsWith(\"-\")) {\n            return false\n        }\n        switch (mapping.featureStage) {\n            case FeatureStage.Preslack:\n                return stage < Stage.Slack\n            case FeatureStage.Postslack:\n                return stage >= Stage.Slack\n            default:\n                return true\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaHandPointUp, FaPlay, FaSnowflake } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { demoModeAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomLeft(): JSX.Element {\n    const [demoMode] = useRecoilState(demoModeAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    function ViewModeButton({item, children}: {\n        item: ViewMode,\n        children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    }): JSX.Element {\n        return demoMode ? <div/> : (\n            <Button\n                disabled={item === viewMode}\n                color={item === viewMode ? \"success\" : \"secondary\"}\n                onClick={() => setViewMode(item)}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <ButtonGroup>\n            <ViewModeButton item={ViewMode.Lines}>\n                <FaPlay/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Selecting}>\n                <FaHandPointUp/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Frozen}>\n                <FaSnowflake/>\n            </ViewModeButton>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaBalanceScale } from \"react-icons/all\"\nimport { useRecoilState } from \"recoil\"\n\nimport { floatString, percentString } from \"../fabric/eig-util\"\nimport { IWorldFeatureValue } from \"../storage/recoil\"\n\nconst MAX_SLIDER = 100000\nconst domain = [0, MAX_SLIDER]\n\nexport function FeatureSlider({featureValue, apply}: {\n    featureValue: IWorldFeatureValue,\n    apply: (wf: WorldFeature, percent: number, value: number) => void,\n}): JSX.Element {\n    const {mapping, percentAtom} = featureValue\n    const {name, nuanceToPercent, percentToNuance, percentToValue} = mapping\n    const sliderValue = (p: number) => [Math.floor(percentToNuance(p) * MAX_SLIDER)]\n    const [percent, setPercent] = useRecoilState(percentAtom)\n    const [values, setValues] = useState(sliderValue(percent))\n\n    useEffect(() => {setPercent(Math.round(nuanceToPercent(values[0] / MAX_SLIDER)))}, [values])\n    useEffect(() => apply(mapping.feature, percent, percentToValue(percent)), [percent])\n    useEffect(() => {setValues(sliderValue(percent))}, [featureValue])\n\n    return (\n        <div className=\"slider\">\n            <div className=\"float-right mr-4\">\n                <FaBalanceScale onClick={() => setValues(sliderValue(100))}/>\n            </div>\n            <div className=\"ml-2 small my-1\">\n                {name} = {percentString(percent)} ({floatString(percentToValue(percent))})\n            </div>\n            <Slider\n                mode={1} step={1} domain={domain} rootStyle={sliderStyle}\n                values={values}\n                onChange={(newValues: number[]) => setValues(newValues)}\n            >\n                <Rail>\n                    {({getRailProps}) => <div className=\"slider-rail\" {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle key={handle.id} handle={handle} getHandleProps={getHandleProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track key={id} source={source} target={target} getTrackProps={getTrackProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({handle, getHandleProps}: {\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            className=\"slider-handle\"\n            style={{left: `${percent}%`}}\n            aria-valuemin={min} aria-valuemax={max} aria-valuenow={value}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n}): JSX.Element {\n    return (\n        <div className=\"slider-track\"\n            style={{left: `${source.percent}%`, width: `${target.percent - source.percent}%`}}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"1%\",\n    position: \"relative\",\n    width: \"98%\",\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { useEffect, useState } from \"react\"\nimport * as React from \"react\"\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FEATURE_VALUES, featureFilter } from \"../storage/recoil\"\n\nimport { FeatureSlider } from \"./feature-slider\"\n\nexport function BottomMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [open, setOpen] = useState(false)\n    const [featureValue, setFeatureValue] = useState(FEATURE_VALUES[WorldFeature.VisualStrain])\n    return (\n        <div className=\"w-100 d-flex\">\n            <ButtonDropdown isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle>Choose</DropdownToggle>\n                <DropdownMenu>{\n                    FEATURE_VALUES\n                        .filter(featureFilter(stage))\n                        .map((value) => (\n                            <DropdownItem key={`fitem-${value.mapping.feature}`} onClick={() => setFeatureValue(value)}>\n                                {value.mapping.name}\n                            </DropdownItem>\n                        ))\n                }</DropdownMenu>\n            </ButtonDropdown>\n            <FeatureSlider\n                featureValue={featureValue}\n                apply={(feature, percent, value) => {\n                    tensegrity.instance.applyFeature(feature, percent, value)\n                }}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { intervalRoleName, isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IJointHole, intervalLength, jointHolesFromJoint, jointLocation } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nexport function getFabricOutput({name, instance, joints, intervals}: Tensegrity, pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n    instance.refreshFloatView()\n    const idealLengths = instance.floatView.idealLengths\n    const strains = instance.floatView.strains\n    const stiffnesses = instance.floatView.stiffnesses\n    const linearDensities = instance.floatView.linearDensities\n    return {\n        name,\n        joints: joints.map(joint => {\n            const vector = jointLocation(joint)\n            const holes = jointHolesFromJoint(joint, intervals)\n            return <IOutputJoint>{\n                index: joint.index,\n                radius: jointRadius,\n                x: vector.x, y: vector.z, z: vector.y,\n                anchor: false, // TODO: can this be determined?\n                holes,\n            }\n        }),\n        intervals: intervals.map(interval => {\n            const isPush = isPushRole(interval.intervalRole)\n            const radius = isPush ? pushRadius : pullRadius\n            const currentLength = intervalLength(interval)\n            const alphaIndex = interval.alpha.index\n            const omegaIndex = interval.omega.index\n            if (alphaIndex >= joints.length || omegaIndex >= joints.length) {\n                throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${joints.length}`)\n            }\n            return <IOutputInterval>{\n                index: interval.index,\n                joints: [alphaIndex, omegaIndex],\n                type: isPush ? \"Push\" : \"Pull\",\n                strain: strains[interval.index],\n                stiffness: stiffnesses[interval.index],\n                linearDensity: linearDensities[interval.index],\n                role: intervalRoleName(interval.intervalRole),\n                scale: interval.scale._,\n                idealLength: idealLengths[interval.index],\n                isPush,\n                length: currentLength,\n                radius,\n            }\n        }),\n    }\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCompressArrowsAlt,\n    FaDownload,\n    FaFile,\n    FaFileCsv,\n    FaParachuteBox,\n    FaPlay,\n    FaSignOutAlt,\n    FaSyncAlt,\n    FaXbox,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { getFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { demoModeAtom, endDemoAtom, rotatingAtom, startDemoAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomRight({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [demoMode] = useRecoilState(demoModeAtom)\n    const setStartDemo = useSetRecoilState(startDemoAtom)\n    const setEndDemo = useSetRecoilState(endDemoAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    return demoMode ? (\n        <ButtonGroup>\n            <Button\n                color=\"success\"\n                onClick={() => {\n                    setRotating(false)\n                    setEndDemo(true)\n                }}\n            >\n                <FaSignOutAlt/> Exit demo\n            </Button>\n        </ButtonGroup>\n    ) : (\n        <ButtonGroup>\n            {viewMode === ViewMode.Frozen ? (\n                <>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                        <FaDownload/><FaFileCsv/>\n                    </Button>\n                    <Button\n                        onClick={() => saveJSONZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                        <FaDownload/><FaFile/>\n                    </Button>\n                </>\n            ) : (stage < Stage.Slack ? (\n                <>\n                    <Button\n                        disabled={stage !== Stage.Shaping}\n                        onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/>\n                    </Button>\n                </>\n            ) : stage > Stage.Slack ? (\n                <>\n                    <Button disabled={stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.removeSlackPulls()}>\n                        <FaXbox/>\n                    </Button>\n                    <Button disabled={stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/>\n                    </Button>\n                </>\n            ) : undefined)}\n            <Button\n                color={rotating ? \"warning\" : \"secondary\"}\n                onClick={() => setRotating(!rotating)}\n            >\n                <FaSyncAlt/>\n            </Button>\n            <Button onClick={() => {setStartDemo(true)}}><FaPlay/></Button>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaArrowsAltH, FaMousePointer } from \"react-icons/all\"\nimport { useFrame } from \"react-three-fiber\"\nimport { Table } from \"reactstrap\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { addIntervalStats, expectStats, IInterval, intervalLocation } from \"../fabric/tensegrity-types\"\n\nexport function IntervalStatsSnapshot({interval}: { interval: IInterval }): JSX.Element {\n    const {alpha, omega, intervalRole} = interval\n    const stats = expectStats(interval)\n    return (\n        <Html\n            className=\"interval-stats\"\n            style={{width: \"10em\"}}\n            position={intervalLocation(interval)}\n        >\n            <div style={{position: \"absolute\", top: \"0\", left: \"0\", color: \"red\"}}>\n                <FaMousePointer/>\n            </div>\n            <Table\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}>\n                <thead>\n                <tr>\n                    <th colSpan={2}>\n                        ({alpha.index} <FaArrowsAltH/> {omega.index}): {intervalRoleName(intervalRole)}\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td className=\"text-right\">Stiffness:</td>\n                    <td>{stats.stiffness.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Strain:</td>\n                    <td>{stats.strain.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Length:</td>\n                    <td>{stats.length.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Ideal Length:</td>\n                    <td>{stats.idealLength.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Linear Density:</td>\n                    <td>{stats.linearDensity.toFixed(8)}</td>\n                </tr>\n                </tbody>\n            </Table>\n        </Html>\n    )\n}\n\nexport function IntervalStatsLive({interval, pushOverPull, pretenst}: {\n    interval: IInterval, pushOverPull: number, pretenst: number,\n}): JSX.Element {\n    const [stats, updateStats] = useState(expectStats(interval))\n    useFrame(() => updateStats(addIntervalStats(interval, pushOverPull, pretenst)))\n    return (\n        <Html className=\"interval-stats\"\n              style={{\n                  fontFamily: \"fixed\",\n                  padding: \"0.1em\",\n                  width: \"7em\",\n                  textAlign: \"center\",\n              }}\n              position={intervalLocation(interval)}>\n            <div\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}\n            >\n                {stats.strain.toFixed(8)}\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, DoubleSide, LineBasicMaterial, Material, MeshBasicMaterial, MeshLambertMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"#0d1147\"\n        case IntervalRole.PushB:\n            return \"#281a4c\"\n        case IntervalRole.PullA:\n            return \"#a71313\"\n        case IntervalRole.PullB:\n            return \"#6d6c6c\"\n        case IntervalRole.PullAA:\n            return \"#13f3f3\"\n        case IntervalRole.PullBB:\n            return \"#59ee37\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, DoubleSide, Face3, Geometry, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#101010\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.5,\n})\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.01\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Text } from \"@react-three/drei/Text\"\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport {\n    Color,\n    CylinderGeometry,\n    Euler,\n    Face3,\n    FrontSide,\n    Geometry,\n    Mesh,\n    Object3D,\n    PerspectiveCamera as Cam,\n    Quaternion,\n    Vector3,\n} from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { doNotClick, isPushRole, UP } from \"../fabric/eig-util\"\nimport { RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    addIntervalStats,\n    FaceSelection,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLength,\n    intervalLocation,\n    ISelection,\n    jointLocation,\n    locationFromFaces,\n    locationFromJoints,\n} from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    demoModeAtom,\n    endDemoAtom,\n    FEATURE_VALUES,\n    rotatingAtom, startDemoAtom,\n    ViewMode,\n    viewModeAtom,\n    visibleRolesAtom,\n} from \"../storage/recoil\"\n\nimport { IntervalStatsLive, IntervalStatsSnapshot } from \"./interval-stats\"\nimport { LINE_VERTEX_COLORS, roleMaterial, SELECTED_MATERIAL } from \"./materials\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst RADIUS_FACTOR = 0.01\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({tensegrity, runTenscript, selection, setSelection}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n    selection: ISelection,\n    setSelection: (selection: ISelection) => void,\n}): JSX.Element {\n\n    const [visibleRoles] = useRecoilState(visibleRolesAtom)\n    const [pushOverPullPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.PushOverPull].percentAtom)\n    const pushOverPull = () => FEATURE_VALUES[WorldFeature.PushOverPull].mapping.percentToValue(pushOverPullPercent)\n    const [visualStrainPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.VisualStrain].percentAtom)\n    const visualStrain = () => FEATURE_VALUES[WorldFeature.VisualStrain].mapping.percentToValue(visualStrainPercent)\n    const [shapingPretenstFactorPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.ShapingPretenstFactor].percentAtom)\n    const shapingPretenstFactor = () => FEATURE_VALUES[WorldFeature.ShapingPretenstFactor].mapping.percentToValue(shapingPretenstFactorPercent)\n    const [pretenstFactorPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.PretenstFactor].percentAtom)\n    const pretenstFactor = () => FEATURE_VALUES[WorldFeature.PretenstFactor].mapping.percentToValue(pretenstFactorPercent)\n    const [demoMode, setDemoMode] = useRecoilState(demoModeAtom)\n    const [startDemo, setStartDemo] = useRecoilState(startDemoAtom)\n    const [endDemo, setEndDemo] = useRecoilState(endDemoAtom)\n    const [bootstrapIndex, setBootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    const [nonBusyCount, updateNonBusyCount] = useState(0)\n    const [bullseye, updateBullseye] = useState(new Vector3(0, 1, 0))\n    const [pretenst, updatePretenst] = useState(0)\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n\n    useEffect(() => {\n        updatePretenst(stage < Stage.Pretenst ? shapingPretenstFactor() : pretenstFactor())\n    }, [stage])\n\n    useEffect(() => {\n        setBootstrapIndex(0)\n        updateNonBusyCount(0)\n    }, [demoMode])\n\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        current.position.set(0, 1, tensegrity.instance.view.radius() * 2)\n    }, [])\n\n    function setSelectedFaces(faces: IFace[]): void {\n        const intervalRec = faces.reduce((rec: Record<number, IInterval>, face) => {\n            const add = (i: IInterval) => rec[i.index] = i\n            switch (face.faceSelection) {\n                case FaceSelection.Pulls:\n                    face.pulls.forEach(add)\n                    break\n                case FaceSelection.Pushes:\n                    face.pushes.forEach(add)\n                    break\n                case FaceSelection.Both:\n                    face.pulls.forEach(add)\n                    face.pushes.forEach(add)\n                    break\n            }\n            return rec\n        }, {})\n        const jointRec = faces.reduce((rec: Record<number, IJoint>, face) => {\n            face.ends.forEach(end => rec[end.index] = end)\n            return rec\n        }, {})\n        const intervals = Object.keys(intervalRec).map(k => intervalRec[k])\n        const joints = Object.keys(jointRec).map(k => jointRec[k])\n        setSelection({faces, intervals, joints})\n    }\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    useFrame(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        if (startDemo) {\n            setDemoMode(true)\n            runTenscript(BOOTSTRAP[0], PostGrowthOp.Bowtie, emergency)\n            setStartDemo(false)\n            return\n        }\n        if (endDemo) {\n            setDemoMode(false)\n            setEndDemo(false)\n            return\n        }\n        const view = tensegrity.instance.view\n        const target =\n            selection.faces.length > 0 ? locationFromFaces(selection.faces) :\n                selection.joints.length > 0 ? locationFromJoints(selection.joints) :\n                    new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        updateBullseye(new Vector3().subVectors(target, bullseye).multiplyScalar(TOWARDS_TARGET).add(bullseye))\n        const eye = current.position\n        if (demoMode || stage === Stage.Growing) {\n            eye.y += (target.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(target) - view.radius() * 2.5\n            const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        } else {\n            if (eye.y < 0) {\n                eye.y -= eye.y * TOWARDS_POSITION * 20\n            }\n        }\n        if (viewMode !== ViewMode.Frozen) {\n            const busy = tensegrity.iterate()\n            if (busy) {\n                return\n            }\n            if (demoMode) {\n                switch (stage) {\n                    case Stage.Shaping:\n                        if (nonBusyCount === 200) {\n                            tensegrity.stage = Stage.Slack\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Slack:\n                        if (nonBusyCount === 30) {\n                            tensegrity.stage = Stage.Pretensing\n                            setRotating(false)\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Pretenst:\n                        if (nonBusyCount === 200) {\n                            const nextIndex = bootstrapIndex + 1\n                            if (nextIndex === BOOTSTRAP.length) {\n                                setBootstrapIndex(0)\n                                setDemoMode(false)\n                                setRotating(false)\n                                runTenscript(BOOTSTRAP[0], PostGrowthOp.NoOp, emergency)\n                            } else {\n                                setBootstrapIndex(nextIndex)\n                                setRotating(true)\n                                updateNonBusyCount(0)\n                                runTenscript(BOOTSTRAP[nextIndex], PostGrowthOp.Bowtie, emergency)\n                            }\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                }\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    function clickInterval(interval: IInterval): void {\n        if (interval.stats) {\n            interval.stats = undefined\n        } else {\n            addIntervalStats(interval, pushOverPull(), pretenst)\n        }\n    }\n\n    function clickFace(face: IFace): void {\n        switch (face.faceSelection) {\n            case FaceSelection.None:\n                face.faceSelection = FaceSelection.Face\n                setSelectedFaces([...selection.faces, face])\n                break\n            case FaceSelection.Face:\n                face.faceSelection = FaceSelection.Pulls\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pulls:\n                face.faceSelection = FaceSelection.Pushes\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pushes:\n                face.faceSelection = FaceSelection.Both\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Both:\n                face.faceSelection = FaceSelection.None\n                setSelectedFaces(selection.faces.filter(({index}) => index !== face.index))\n                break\n        }\n    }\n\n    const camera = useRef<Cam>()\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true} onPointerMissed={undefined}/>\n            <OrbitControls target={bullseye} autoRotate={rotating} enableKeys={false} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined}\n            />\n            <scene>\n                {viewMode === ViewMode.Frozen ? (\n                    <group>\n                        {tensegrity.intervals\n                            .filter(interval => visibleRoles.some(role => role === interval.intervalRole))\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull()}\n                                    visualStrain={visualStrain()}\n                                    pretenstFactor={pretenst}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    onPointerDown={event => {\n                                        event.stopPropagation()\n                                        clickInterval(interval)\n                                    }}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <>\n                        <lineSegments\n                            geometry={tensegrity.instance.floatView.lineGeometry}\n                            material={LINE_VERTEX_COLORS}\n                            onUpdate={self => self.geometry.computeBoundingSphere()}\n                        />\n                    </>\n                )}\n                {viewMode !== ViewMode.Selecting ? undefined : (\n                    <Faces\n                        tensegrity={tensegrity}\n                        stage={stage}\n                        clickFace={face => clickFace(face)}\n                    />\n                )}\n                {selection.intervals.map(interval => (\n                    <IntervalMesh\n                        key={`SI${interval.index}`}\n                        pushOverPull={pushOverPull()}\n                        visualStrain={visualStrain()}\n                        pretenstFactor={pretenst}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            clickInterval(interval)\n                        }}\n                    />\n                ))}\n                {viewMode === ViewMode.Frozen ?\n                    tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsSnapshot key={`S${interval.index}`} interval={interval}/>)\n                    : tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsLive key={`SL${interval.index}`} interval={interval}\n                                           pushOverPull={pushOverPull()} pretenst={pretenst}/>)\n                }\n                {selection.faces.filter(f => (f.faceSelection === FaceSelection.Face)).map(face => {\n                    const geometry = new Geometry()\n                    geometry.vertices = face.ends.map(jointLocation)\n                    geometry.faces.push(new Face3(0, 1, 2))\n                    return <mesh key={`SJ${face.index}`} geometry={geometry} material={SELECTED_MATERIAL}/>\n                })}\n                {viewMode === ViewMode.Frozen ? undefined : selection.joints.map(joint => {\n                    const key = `${joint.index}`\n                    return <Tag key={key} position={jointLocation(joint)} text={key}/>\n                })}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction Tag({position, text}: {\n    position: Vector3,\n    text: string,\n}): JSX.Element | null {\n    const {camera} = useThree()\n    const ref = useRef<Mesh>()\n    useFrame(() => {\n        if (ref.current) {\n            ref.current.quaternion.copy(camera.quaternion)\n        }\n    })\n    return <Text\n        ref={ref} fontSize={0.1} position={position} anchorY=\"middle\" anchorX=\"center\"\n        onPointerMissed={undefined}\n    >{text}</Text>\n}\n\nfunction IntervalMesh({pushOverPull, visualStrain, pretenstFactor, tensegrity, interval, selected, onPointerDown}: {\n    pushOverPull: number,\n    visualStrain: number,\n    pretenstFactor: number\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    onPointerDown?: (e: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const material = selected ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)\n    const push = isPushRole(interval.intervalRole)\n    const stiffness = tensegrity.instance.floatView.stiffnesses[interval.index] * (push ? pushOverPull : 1.0)\n    const radius = RADIUS_FACTOR * Math.sqrt(stiffness) * (selected ? 1.5 : 1)\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n    const strain = tensegrity.instance.floatView.strains[interval.index]\n    const pretenstAdjustment = 1 + (push ? pretenstFactor : 0)\n    const idealLength = tensegrity.instance.floatView.idealLengths[interval.index] * pretenstAdjustment\n    const length = strain === 0 ? intervalLength(interval) : idealLength + strain * idealLength * (1 - visualStrain)\n    const intervalScale = new Vector3(radius, (length < 0) ? 0.01 : length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={onPointerDown}\n        />\n    )\n}\n\nfunction Faces({tensegrity, stage, clickFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    clickFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<React.MouseEvent<Element, MouseEvent> | undefined>()\n    const onPointerDown = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        setDownEvent(event)\n    }\n    const onPointerUp = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 36) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        clickFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\" ref={meshRef} onPointerDown={onPointerDown} onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial attach=\"material\"\n                               transparent={true} side={FrontSide} depthTest={false} opacity={0.2} color=\"white\"/>\n        </mesh>\n    )\n}\n\n// todo: export function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n//     if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n//         return false\n//     }\n//     const strainNuance = intervalStrainNuance(interval)\n//     if (isPushRole(interval.intervalRole)) {\n//         return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n//     } else {\n//         return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n//     }\n// }\n//\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaAnchor,\n    FaArrowRight,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaFutbol,\n    FaHandSpock,\n    FaSeedling,\n    FaSlidersH,\n    FaTape,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensingFrozen,\n    SlackToPretensingSticky,\n    SlackToPretensingBouncy,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport const STAGE_TRANSITIONS = Object.keys(StageTransition)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => StageTransition[k])\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    <FaCamera/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingFrozen:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Frozen)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaAnchor/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingSticky:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Sticky)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaTape/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensingBouncy:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => {\n                        t.instance.world.set_surface_character(SurfaceCharacter.Bouncy)\n                        t.stage = Stage.Pretensing\n                    })}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><FaFutbol/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/><FaChartBar/>\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonGroup, Input } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { compileTenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { postGrowthAtom, tenscriptAtom } from \"../storage/recoil\"\n\nexport function ScriptPanel({runTenscript}: { runTenscript: RunTenscript }): JSX.Element {\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [json, setJson] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const toJson = () => JSON.stringify(tenscript, undefined, 2)\n\n    function parse(): void {\n        try {\n            const newTenscript = JSON.parse(json)\n            if (compileTenscript(newTenscript, setError)) {\n                setError(\"\")\n                setTenscript(newTenscript)\n                runTenscript(newTenscript, postGrowth, setError)\n            }\n        } catch (e) {\n            setError(e.toString())\n        }\n    }\n\n    useEffect(() => {\n        if (tenscript) {\n            setJson(toJson())\n        } else {\n            setJson(\"\")\n        }\n    }, [tenscript])\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <div>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{flexDirection: \"column\", height: \"available\"}}>\n                    <Input\n                        style={{borderRadius: \"1em\", height: \"22em\", marginBottom: \"0.5em\"}}\n                        type=\"textarea\" id=\"tenscript\"\n                        value={json}\n                        onChange={changeEvent => setJson(changeEvent.target.value)}\n                    />\n                    <ButtonGroup vertical={true} className=\"w-100 my-2\">\n                        {error.length === 0 ? undefined : (\n                            <Button className=\"my-2\" color=\"warning\" onClick={() => {\n                                setJson(toJson())\n                                setError(\"\")\n                            }}>\n                                <FaBug/><hr/>{error}\n                            </Button>\n                        )}\n                        <Button color=\"success\" onClick={() => parse()}>\n                            Try it out!\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaEye, FaHiking } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { bootstrapIndexAtom, postGrowthAtom, tenscriptAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { ScriptPanel } from \"./script-panel\"\nimport { STAGE_TRANSITIONS, StageButton } from \"./stage-button\"\n\nexport function TopLeft({tensegrity, runTenscript}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const setBootstrapIndex = useSetRecoilState(bootstrapIndexAtom)\n    const [tenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth, setPostGrowth] = useRecoilState(postGrowthAtom)\n\n    const [showScriptPanel, setShowScriptPanel] = useState(false)\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    const run = (pgo: PostGrowthOp) => {\n        if (tenscript) {\n            setPostGrowth(pgo)\n            runTenscript(tenscript, pgo, error => console.error(error))\n        }\n    }\n\n    const opColor = (pgo: PostGrowthOp) => postGrowth === pgo ? \"success\" : \"secondary\"\n\n    return (\n        <>\n            <ButtonGroup>{STAGE_TRANSITIONS\n                .map(stageTransition => (\n                    <StageButton\n                        key={`strans-${stageTransition}`}\n                        tensegrity={tensegrity}\n                        stageTransition={stageTransition}\n                        disabled={viewMode === ViewMode.Frozen}/>\n                ))\n            }</ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => run(PostGrowthOp.NoOp)} color={opColor(PostGrowthOp.NoOp)}>0</Button>\n                <Button onClick={() => run(PostGrowthOp.Faces)} color={opColor(PostGrowthOp.Faces)}>&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Snelson)} color={opColor(PostGrowthOp.Snelson)}>S</Button>\n                <Button onClick={() => run(PostGrowthOp.Bowtie)} color={opColor(PostGrowthOp.Bowtie)}>&#8904;</Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <ButtonDropdown\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle><FaHiking/></DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => {\n                            setBootstrapIndex(index)\n                            runTenscript(bootstrapProgram, postGrowth, () => console.error(\"impossible\"))\n                        }}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n                <Button\n                    color={showScriptPanel ? \"warning\" : \"secondary\"}\n                    onClick={() => setShowScriptPanel(!showScriptPanel)}>\n                    <FaEye/>\n                </Button>\n            </ButtonGroup>\n            {!showScriptPanel ? undefined : <ScriptPanel runTenscript={runTenscript}/>}\n        </>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport { stageName } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport function TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaCircle, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, ISelection } from \"../fabric/tensegrity-types\"\nimport { ViewMode, viewModeAtom, visibleRolesAtom } from \"../storage/recoil\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function TopRight({tensegrity, selection}: { tensegrity: Tensegrity, selection: ISelection }): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [visibleRoles, updateVisibleRoles] = useRecoilState(visibleRolesAtom)\n    const [currentRole, updateCurrentRole] = useState(IntervalRole.PullA)\n\n    const adjustSelection = (up: boolean) => () => {\n        const factor = 1.03\n        selection.intervals.forEach(interval => {\n            tensegrity.changeIntervalScale(interval, up ? factor : (1 / factor))\n        })\n    }\n\n    switch (viewMode) {\n        case ViewMode.Lines:\n            return (\n                <>\n                    <ButtonGroup>{\n                        ADJUSTABLE_INTERVAL_ROLES\n                            .map((intervalRole, index) => (\n                                <Button key={`IntervalRole[${index}]`}\n                                        onClick={() => updateCurrentRole(intervalRole)}\n                                        color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                                >\n                                    {intervalRoleName(intervalRole)}\n                                </Button>\n                            ))\n                    }</ButtonGroup>\n                    <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n                </>\n            )\n        case ViewMode.Selecting:\n            return (\n                <ButtonGroup>\n                    <Button onClick={adjustSelection(true)}>\n                        <FaPlusSquare/>\n                    </Button>\n                    <Button onClick={adjustSelection(false)}>\n                        <FaMinusSquare/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case ViewMode.Frozen:\n            return (\n                <ButtonGroup>\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button key={`viz${intervalRole}`} onClick={() => {\n                            if (visibleRoles.indexOf(intervalRole) < 0) {\n                                updateVisibleRoles([...visibleRoles, intervalRole])\n                            } else {\n                                const nextRoles = visibleRoles.filter(role => role !== intervalRole)\n                                updateVisibleRoles(nextRoles.length > 0 ? nextRoles : ADJUSTABLE_INTERVAL_ROLES)\n                            }\n                        }}\n                                color={visibleRoles.some(role => role === intervalRole) ? \"success\" : \"secondary\"}\n                        >\n                            {intervalRoleName(intervalRole)}\n                            <FaCircle style={{color: roleColorString(intervalRole)}}/>\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            )\n        default:\n            return <span>?</span>\n    }\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup className=\"my-1\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <Button>{intervalRoleName(intervalRole)} = [{floatString(defaultLength())}]</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { emptySelection, ISelection, percentOrHundred } from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    demoModeAtom,\n    FEATURE_VALUES,\n    postGrowthAtom,\n    STORAGE_KEY,\n    tenscriptAtom,\n    ViewMode,\n    viewModeAtom,\n} from \"../storage/recoil\"\n\nimport { BottomLeft } from \"./bottom-left\"\nimport { BottomMiddle } from \"./bottom-middle\"\nimport { BottomRight } from \"./bottom-right\"\nimport { FabricView } from \"./fabric-view\"\nimport { featureMapping } from \"./feature-mapping\"\nimport { TopLeft } from \"./top-left\"\nimport { TopMiddle } from \"./top-middle\"\nimport { TopRight } from \"./top-right\"\n\nexport function TensegrityView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n    const worldFeatures = FEATURE_VALUES.map(({percentAtom}) => useRecoilState(percentAtom))\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [bootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [demoMode] = useRecoilState(demoModeAtom)\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selection, setSelection] = useState<ISelection>(emptySelection)\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    const runTenscript: RunTenscript = (ts: ITenscript, pg: PostGrowthOp, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Lines)\n            setSelection(emptySelection)\n            const localValue = ts.featureValues[WorldFeature.IntervalCountdown]\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTenscript(ts)\n            WORLD_FEATURES.map(feature => {\n                const {percentToValue} = featureMapping(feature)\n                const percent = worldFeatures[feature][0]\n                mainInstance.applyFeature(feature, percent, percentToValue(percent))\n            })\n            mainInstance.world.set_surface_character(ts.surfaceCharacter)\n            setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), mainInstance, countdown, pg, ts, tree))\n        } catch (e) {\n            console.log(\"Problem running\", e)\n            return runTenscript(BOOTSTRAP[bootstrapIndex], PostGrowthOp.NoOp, emergency)\n        }\n        return true\n    }\n\n    useEffect(() => {\n        Object.keys(localStorage).filter(k => k !== STORAGE_KEY).forEach(k => localStorage.removeItem(k))\n        if (tenscript) {\n            runTenscript(tenscript, postGrowth, emergency)\n        } else {\n            runTenscript(BOOTSTRAP[bootstrapIndex], postGrowth, emergency)\n        }\n    }, [])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div>\n            <div style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <h1><FaPlay/></h1>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <Canvas\n                            style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: viewMode === ViewMode.Frozen ? \"#f0ad4e\" : \"black\",\n                                cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                                borderWidth: \"2px\",\n                            }}\n                        >\n                            <RecoilBridge>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    runTenscript={runTenscript}\n                                    selection={selection}\n                                    setSelection={setSelection}\n                                />\n                            </RecoilBridge>\n                        </Canvas>\n                        {demoMode ? undefined : (\n                            <>\n                                <div id=\"top-left\">\n                                    <TopLeft tensegrity={tensegrity} runTenscript={runTenscript}/>\n                                </div>\n                                <div id=\"top-right\">\n                                    <TopRight tensegrity={tensegrity} selection={selection}/>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <BottomLeft/>\n                                </div>\n                                <div id=\"bottom-middle\">\n                                    <BottomMiddle tensegrity={tensegrity}/>\n                                </div>\n                            </>\n                        )}\n                        <div id=\"top-middle\">\n                            <TopMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"bottom-right\">\n                            <BottomRight tensegrity={tensegrity}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { RecoilRoot } from \"recoil\"\n\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport registerServiceWorker from \"./service-worker\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 2000, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    render(<RecoilRoot><TensegrityView createInstance={createInstance}/></RecoilRoot>)\n    registerServiceWorker()\n}\n"],"sourceRoot":""}