{"version":3,"sources":["constants.ts","island/island-logic.ts","fabric/fabric-engine.ts","fabric/fabric-instance.ts","fabric/fabric-kernel.ts","app-event.ts","docs/toolbar-state-docs.tsx","state/app-state.ts","genetics/dice.ts","genetics/gene-reader.ts","genetics/genome.ts","island/constants.ts","gotchi/jockey.ts","fabric/gotchi-body.ts","island/journey.ts","island/hexalot.ts","island/spot.ts","island/island.ts","gotchi-view/flight.ts","gotchi-view/flight-state.ts","gotchi/evolution.ts","state/transition.ts","state/command-handler.ts","docs/command-docs.tsx","gotchi-view/selector.ts","gotchi-view/help-panel.tsx","gotchi-view/control-panel.tsx","state/click-handler.ts","gotchi-view/gotchi-materials.ts","gotchi-view/evolution-component.tsx","fabric/tensegrity-types.ts","gotchi-view/island-component.tsx","gotchi-view/journey-component.tsx","gotchi-view/world-view.tsx","app.tsx","fabric/tenscript.ts","storage/stored-state.ts","fabric/fabric-features.ts","service-worker.ts","docs/doc-parts.tsx","storage/remote-storage.ts","docs/docs.tsx","fabric/life.ts","fabric/tensegrity-builder.ts","fabric/tensegrity-fabric.ts","view/life-stage-button.tsx","view/shape-tab.tsx","view/materials.ts","view/feature-panel.tsx","view/realize-tab.tsx","view/strain-tab.tsx","view/tenscript-tab.tsx","view/view-tab.tsx","storage/download.ts","view/control-tabs.tsx","view/orbit.ts","view/surface-component.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","index.tsx"],"names":["API_URI","DOCS_ON_GITHUB","Surface","ZERO","x","y","equals","a","b","plus","isSpotLegal","spot","landCount","waterCount","adjacentSpots","forEach","adjacent","surface","Land","Water","connected","length","isIslandLegal","island","spots","every","calculateHexalotId","hexalot","id","map","l","index","array","slice","join","undefined","filter","chunk","s","parseInt","padRightTo4","toString","findSpot","coords","find","p","recalculateIsland","ADJACENT","adjacentSpot","push","getAdjacentSpots","flowChanged","adj","STOP_STEP","BRANCH_STEP","greatestNonce","parent","candiate","nonce","sortSpotsOnCoord","coordSort","Stage","FabricFeature","HEXALOT_SHAPE","IntervalRole","FEATURE_FLOATS","FABRIC_FEATURES","Object","keys","k","isNaN","intervalRoleName","intervalRole","NexusPush","ColumnPush","Triangle","Ring","NexusCross","ColumnCross","BowMid","BowEnd","FacePull","FabricDirection","Laterality","SurfaceCharacter","INTERVAL_ROLES","role","isPush","fabricFeatureIntervalRole","fabricFeature","firstLengthFeature","NexusPushLength","BowEndLength","intervalRoleFabricFeature","FabricInstance","buffer","releaseInstance","fabricEngine","_fabricFeatures","_midpoint","_lineColors","_lineLocations","_faceMidpoints","_faceNormals","_faceLocations","_jointLocations","_jointVelocities","_unitVectors","_strains","_strainNuances","_stiffnesses","_linearDensities","e","this","engine","offset","_fabricOffset","LazyFloatArray","getIntervalCount","getFaceCount","getJointCount","_intervalUnits","_intervalStrains","_intervalStrainNuances","feature","floats","numeric","value","clear","jointIndex","vectorFromArray","matrix","jointCount","jointLocation","vectorToArray","applyMatrix4","intervalIndex","faceIndex","faceVector","intervalLocation","Vector3","add","multiplyScalar","midpoint","setInstance","Float32Array","HEXALOT_BITS","SPOT_CENTERS_FLOATS","SPOT_CENTERS_SIZE","BYTES_PER_ELEMENT","vector","set","z","c","AppEvent","FabricKernel","instanceArray","instanceUsed","arrayBuffer","spotCenters","hexalotBits","fabricBytes","init","memory","Int8Array","byteLength","Error","getInstanceCount","toFree","center","land","freeIndex","indexOf","ToolbarState","APP_EVENT","BehaviorSubject","event","FlyingIn","AppMode","Command","TOOLBAR_STATE_DOCS","title","AvailableSpot","body","CardText","Planning","Evolving","Terraforming","Friend","FreeSpot","Home","Pioneering","Riding","Unknown","updateDimensions","width","window","innerWidth","height","innerHeight","left","screenLeft","top","screenTop","DICE","numeral","symbol","DICE_MAP","die","diceToNuance","dice","max","Math","pow","reduce","sum","GeneReader","gene","roll","cursor","maxChoice","choice","floor","next","rollTheDice","random","freshGenome","Genome","fromGenomeData","genomeData","genes","g","state","mutationCount","geneString","split","fromOptionalGenomeData","existingGene","freshGene","direction","mutations","genesCopy","geneToMutate","hit","geneNumber","SCALE_X","SURFACE_SCALE","SCALE_Y","HEXAGON_POINTS","KINDA","SURFACE_UNKNOWN_COLOR","Color","SURFACE_LAND_COLOR","SURFACE_WATER_COLOR","SIX","UP","LAND_NORMAL_SPREAD","Jockey","gotchi","leg","mutatingGenome","votes","currentLeg","touchedDestination","nextLeg","nextState","Rest","fabric","voteState","console","log","withMutatedBehavior","ticks","iterate","genome","copyWithGenome","recycle","latestVote","directionToTarget","shift","voteCounts","vote","Forward","Reverse","isResting","pointerGeometryFor","currentState","facesGeometry","age","jockey","distanceFromTarget","getDistanceFrom","target","HEXAPOD_PROJECTION","toTarget","degreeForward","dot","forward","degreeRight","right","TurnRight","TurnLeft","subVectors","seed","normalize","goTo","SPOT_TO_HANGER","Leg","journey","visited","nextVisit","visits","fromOptionalJourneyData","journeyData","hexalots","hexalotId","foundHexalot","findHexalot","Journey","existingIndex","withEndpoint","endIndex","newEndpoint","centerSpot","adjacentHexalots","ah","concat","fetchGenome","storage","fetchJourney","createRandomJourney","Hexalot","parentHexalot","gotchiFactory","childHexalots","centerOfHexalot","neighbor","memberOfHexalot","getGenomeData","getJourneyData","truncated","withTruncatedVisit","extended","withVisit","journeyOfLength","createGotchiSeed","rotation","visitCount","journeyVisits","landNeighbors","adjacentHexalot","visit","randomNeighbor","first","findIndex","journeyFirst","firstLeg","randomFirst","Spot","faceNames","free","meshKey","vertices","faces","sizeFactor","hexPoint","normalSpread","vertexNormals","addScaledVector","Face3","color","nextHexPoint","addVectors","toTransform","hanger","walk","angle","PI","location","sin","cos","negative","positive","rotationMatrix","Matrix4","makeRotationY","tranformer","makeTranslation","multiply","point","current","vertex","outerIndex","side","corner","vacantHexalot","some","Island","islandData","name","data","getOrCreateHexalot","stepStack","reverse","stepChar","Number","hexalotStack","step","pop","hexalotAroundSpot","booleanArrays","hexChar","nyb","landStack","apply","sort","singleHexalot","fillIsland","findParentHexalot","existing","existingHexalot","getOrCreateSpot","INITIAL_DISTANCE","MINIMUM_DISTANCE","MIN_POLAR_ANGLE","MAX_POLAR_ANGLE","polarAngle","aboveness","JockeyTarget","tooFar","tooClose","towardsDistance","tooVertical","tooHorizontal","towardsPolarAngle","appMode","EvolutionTarget","evolution","HEXALOT_DISTANCE","HexalotTarget","WithHexalot","flightState","IslandTarget","WithSpot","MIN_LIFELENGTH","Evolution","home","prototypeJockey","currentJockeys","midpointVector","rebooting","maxAge","rotateToLeg","createPopulation","startAge","jockeys","getValue","reorient","moving","adjustAgeLimit","nextGenerationFromSurvival","behind","Cycle","mutateGenome","lifelength","ranked","rankedJockeys","dead","splice","ceil","setTimeout","nextGeneration","luckyParent","offspring","createOffspring","reborn","createJockey","evolvingJockey","offspringGenome","prototype","createGotchi","copy","strongest","exceptIndex","frozenHero","evaluated","Transition","prev","withSelectedSpot","withJourney","withoutEvolution","selectedHexalot","selectedSpot","withSelectedHexalot","homeHexalot","withoutJockey","Flying","appState","nextFree","anyFree","illegal","flightTarget","Exploring","Stopped","vacant","h","islandIsLegal","CommandHandler","trans","command","DiscardGenes","Ride","Evolve","Start","Stop","MakeLand","MakeWater","Terraform","Cancel","ClaimHexalot","Plan","atJockeyHome","exploring","withHomeSelected","withUnselected","fittest","extractFittest","fittestData","setGenomeData","then","withJockey","newbornGotchi","createNativeGotchi","newJockey","withEvolution","startMoving","withJockeyRiding","stopMoving","withJockeyStopped","withSurface","withRestructure","unknownSpot","illegalSpot","originalIsland","withIsland","claimHexalot","newState","planning","existingIsland","warn","mode","appStateClone","withHomeHexalot","getCommandDoc","found","COMMAND_DOCS","cd","MeshKey","HelpPanel","props","toolbarStateDoc","d","toolbarState","commandDocs","toolbarCommands","Card","CardBody","CardTitle","commandDoc","key","Button","className","CardFooter","footer","ButtonToolbar","href","onClick","cancelHelp","React","style","maxWidth","display","textAlign","background","padding","margin","borderColor","borderWidth","borderStyle","borderRadius","ControlPanel","helpVisible","commandButtons","setState","buttonToolbar","isCandidateHexalot","children","homeHexalotSelected","user","commandButton","execute","afterCommand","updateState","ClickHandler","createHexalot","terraforming","adjustedJourney","setJourneyData","GOTCHI","MeshPhongMaterial","lights","ISLAND","vertexColors","FaceColors","HANGER_OCCUPIED","LineBasicMaterial","HANGER_FREE","HOME_HEXALOT","AVAILABLE_HEXALOT","JOURNEY","GOTCHI_ARROW","SELECTED_POINTER","GOTCHI_GHOST","transparent","opacity","EvolutionComponent","subscription","evolvers","subscribe","unsubscribe","evolver","geometry","material","Ray","PushEnd","Selector","camera","meshes","Map","rayCaster","Raycaster","mouse","Vector2","size","setSize","mesh","finder","clientX","clientY","setFromCamera","intersectObjects","i","SUN_POSITION","POINTER_TOP","HEMISPHERE_COLOR","IslandComponent","appStateNonce","seeds","occupiedHangers","vacantHangers","availableSpots","vacantHexalots","spotsGeometry","seedsGeometry","occupiedHangersGeometry","vacantHangersGeometry","selectedSpotGeometry","homeHexalotGeometry","availableSpotsGeometry","vacantHexalotsGeometry","disposeGeometry","ref","setMesh","SPOTS_KEY","distance","decay","position","dispose","Geometry","addSurfaceGeometry","computeBoundingSphere","addHangerGeometry","activeHexalotId","addSeed","SEEDS_KEY","computeFaceNormals","addRaisedHexagonParts","addRaisedHexagon","JourneyComponent","createGeometry","nextProps","BufferGeometry","arrowCount","positions","up","from","to","crossVectors","addAttribute","Float32BufferAttribute","WorldView","selector","iterating","perspectiveCamera","prevProps","prevState","snapshot","aspect","updateProjectionMatrix","onMouseDownCapture","select","intersections","intersection","faceName","click","node","pointerGeometry","clickHandler","stateAfterClick","afterClick","App","fabricKernel","PerspectiveCamera","self","ownedLots","transitionState","transition","setHexalot","addEventListener","lot","fetchIsland","removeEventListener","marginTop","float","fontSize","Badge","profile","username","src","alt","Alert","islandName","homeHexalotId","getIslandData","copyLiveGotchi","withFlightState","PHI","DEFAULT_PUSH_LENGTH","sqrt","rayVector","ray","v","XP","setX","XN","YP","setY","YN","ZP","setZ","ZN","brickPoint","primaryRay","secondaryRay","PUSH_ARRAY","alpha","omega","TRIANGLE_DEFINITIONS","NNN","opposite","PPP","ring","NN","pushEnds","YNA","XNA","ZNA","ringMember","NP","PN","PP","PNN","NPP","YPA","ZNO","NPN","PNP","XNO","ZPA","NNP","PPN","XPA","YNO","XPO","YPO","ZPO","oppositeTriangle","triangle","percentOrHundred","percent","_","percentToFactor","factorToPercent","factor","DIRECTIONS","isDirection","char","DIGITS","isDigit","assignSubtree","tree","directionChar","child","A","B","C","D","assignMark","faceMark","MA","MB","MC","MD","Ma","Mb","Mc","Md","codeToTenscript","error","fromUrl","code","toNumber","digits","match","_fragmentToTree","codeFragment","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","substring","skip","finalBracket","depth","matchBracket","codeString","subtree","codeTree","scaleArg","S","markNumber","replace","purify","JSON","stringify","treeToTenscript","colonSplit","getNameFromCode","message","noParseErrors","addNameToCode","trim","ControlTab","BOOTSTRAP","script","before","markFace","active","brick","grow","previous","newTree","treeScale","connectTriangle","base","newBrick","builder","createConnectedBrick","brickToMark","treeWithMarks","maybeMark","mark","brickFace","removed","markBrick","maybeGrow","growBrick","subtreeScale","decremented","VERSION","getRecentTenscript","recentCode","tenscript","partial","STORED_STATE_KEY","loadState","toConfig","item","localStorage","getItem","storedState","parse","version","DEFAULT_FEATURE_VALUES","record","config","defaultValue","surfaceCharacter","Frozen","featureValues","controlTab","Grow","fullScreen","ellipsoids","rotating","showPushes","showPulls","initialStoredState","FEATURE_PERCENTS","RT2","RT3","RING","T2","T3","CROSS","T1","featureConfig","Gravity","percents","Drag","PretenstFactor","IterationsPerFrame","IntervalCountdown","PretenstCountdown","FacePullEndZone","FacePullOrientationForce","SlackThreshold","ShapingPretenstFactor","ShapingStiffnessFactor","ShapingDrag","MaxStrain","VisualStrain","PushOverPull","ColumnPushLength","TriangleLength","RingLength","NexusCrossLength","ColumnCrossLength","BowMidLength","PushRadiusFactor","PullRadiusFactor","MaxStiffness","FloatFeature","storedState$","value$","fromConfig","initialValue","expo","toExponential","zero","toFixed","createFloatFeatures","features","isLocalhost","Boolean","hostname","register","navigator","URL","process","origin","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","Page","RemoteStorage","baseURL","client","Axios","create","withCredentials","fetchResource","post","resourcePath","PAGES","Frame","Loop","caption","borderTopLeftRadius","borderTopRightRadius","controls","loop","autoPlay","type","PageLink","page","Picture","ImagePointer","useState","pointTo","setPointTo","useEffect","rect","document","getElementById","getBoundingClientRect","Definition","term","Docs","cancel","Main","setPage","backgroundColor","PageContent","ButtonGroup","Tensegrity","Life","numericFeature","stage","_stage","prefs","Growing","Shaping","save","Slack","adoptLengths","instance","Realizing","Realized","strainToStiffness","pushOverPull","strains","existingStiffnesses","stiffnesses","getAverageStrain","toAverage","interval","intervals","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffness","linearDensities","stiffnessToLinearDensity","newStiffnesses","newLinearDensities","adjustedStiffness","restore","cloneInstance","slackInstance","setFeatureValue","scaleToFacePullLength","scaleFactor","TensegrityBuilder","faceMarks","scale","points","createBrickPointsAt","createBrick","brickA","faceA","scaleA","scaleB","brickB","createBrickOnFace","faceB","countdown","connectFaces","markedFace","faceMarkLists","list","uprightAtOrigin","facePulls","removeFacePull","facePull","faceMidpoint","distanceTo","connectFacePull","pairs","findPush","joint","crossPulls","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","intervalB","indexB","bAlpha","bOmega","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","forgetDimensions","face","faceToOrigin","centerBrickFacePulls","locations","createBrickAt","averageScaleFactor","renderNumbers","createFacePull","faceLocation","closestTo","negativeFace","trianglePoints","joints","mid","midSide","u","proj","sub","xform","makeBasis","setPosition","movedToFace","baseTriangle","crosses","rings","negativeAdjacent","postiveeAdjacent","initialBrick","bricks","jointIndexes","idx","createJointIndex","alphaIndex","omegaIndex","oppositeIndex","arr","tJoints","end","createFace","vectors","newBase","basis","fromBasis","getInverse","ninePairs","jointA","jointB","locationA","locationB","sixPairs","nineJointPairsByProximity","closest","extractPair","predicate","closestA","pair","closestB","a0","b0","b1","a1","b2","a2","b3","ringMatchesA","j","jointsA","jointsB","connectorScale","facesToRing","brickIsNexus","ringInterval","crossInterval","toFace","handleFace","faceToRemove","t","canGrow","removeFace","triangleRing","pushRole","faceList","createFacePulls","SPHERE","SphereGeometry","COUNTDOWN_MAX","scaleToStiffness","StageTransition","ShapeSelection","TensegrityFabric","roleDefaultLength","life$","activeTenscript","facesToConnect","maxJointSpeed","faceCount","faceLocations","faceNormals","_facesGeometry","intervalCount","lineLocations","lineColors","_linesGeometry","refreshLineGeometry","refreshFaceGeometry","life","withStage","accumulator","jointTag","createJoint","RightSide","linearDensity","restLength","facePullCountdown","coundown","multiplyRestLength","setIntervalRole","changeRestLength","foundPush","endJoint","removeIntervals","release","needsUpdate","lifePhase","Busy","activeCode","centralize","afterGrowing","finishGrowing","initialFacePulls","checkFacePulls","joint1","joint2","radiusFactor","visualStrain","Y_AXIS","unit","unitVector","Quaternion","setFromUnitVectors","alphaLocation","omegaLocation","intervalLength","strain","half","numberToString","n","strainString","stiffnessString","linearDensityString","RAINBOW_COLORS","colorString","SURFACE","DoubleSide","LINE_VERTEX_COLORS","VertexColors","SCALE_LINE","FACE","SELECT_MATERIAL","RAINBOW_LAMBERT","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","FeaturePanel","disabled","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LifeStageButton","stageTransition","updateLife","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","toStage","Symbol","CurrentLengthsToSlack","SlackToRealizing","SlackToShaping","vertical","CaptureRealizedToSlack","CaptureStrainForStiffness","ShapeTab","floatFeatures","selectedIntervals","setFabric","shapeSelection","setShapeSelection","selectedFaces","clearSelectedFaces","pushAndPull","setPushAndPull","updateEllipsoids","subscriptions","lengthFeature","setLengthFeature","adjustValue","changeIntervalScale","disableUnlessFaceCount","disabledLifeStage","None","Grouping","Intervals","selection","Faces","optimize","RealizeTab","updateFabricState","changed","SCALE_WIDTH","NEEDLE_WIDTH","SCALE_MAX","FEATURES","scaleGeometry","middleTick","needleGeometry","values","midValue","maxValue","unboundedHeight","StrainTab","useRef","updateAge","maxStrain","updateMaxStrain","maxStiffness","updateMaxStiffness","timer","setInterval","fabricAge","getAge","clearTimeout","Scale","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","spaceAfterComma","Input","onChange","changeEvent","ViewTab","visibleRoles","setVisibleRoles","updateShowPushes","updateShowPulls","ViewButton","setAltitude","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","submergedJoints","extractSubmergedFile","generateAsync","mimeType","blob","dateString","Date","toISOString","FileSaver","saveCSVZip","SPLIT_LEFT","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","TabPane","tabId","Shape","Realize","View","Strain","Nav","tabs","TabContent","flex","flexFlow","activeTab","zIndex","STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","object","enabled","enableZoom","zoomSpeed","minDistance","maxDistance","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","RIGHT","BOTTOM","ORBIT","ZOOM","MIDDLE","clone","zoom","inverse","preventDefault","button","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","update","dollyIn","getZoomScale","dollyOut","pan","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","radius","setFromSpherical","lookAt","distanceToSquared","quaternion","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","fov","panLeft","panUp","dollyScale","SurfaceComponent","useMemo","extend","AMBIENT_COLOR","SPACE_RADIUS","SPACE_SCALE","SPACE_GEOMETRY","TOWARDS_TARGET","ALTITUDE","FabricView","fabricError","setSelectedFaces","viewContainer","setAge","perspective","useThree","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateStoredState","orbit","useUpdate","orb","far","near","useRender","getMidpoint","towardsTarget","nextStage","args","EllipsoidView","LineView","selectFace","faceToToggle","selected","SelectedFace","intensity","IntervalMesh","nuance","rainbowMaterial","strainNuances","orientInterval","getIntervalMidpoint","Euler","setFromQuaternion","matrixWorldNeedsUpdate","linesGeometry","raycaster","meshRef","downEvent","setDownEvent","onPointerDown","onPointerUp","doNotClick","SPLIT_RIGHT","getCodeToRun","urlCode","hash","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","allocateInstance","docs","setDocs","setSelectedIntervals","accum","unknown","updateRotating","updateFullScreen","newTenscript","initInstance","applyFeature","roleDefaultFromFeatures","setColoring","setSurfaceCharacter","featureSubscriptions","scaledLength","visibility","TopMiddle","TENSEGRITY","getFabricEngine","root","setItem","ReactDOM","getUser","registerServiceWorker","start"],"mappings":"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CD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GAEV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GAEV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GAEV,CAACD,EAAG,GAAIC,EAAG,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,GAAIC,EAAG,GACZ,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,GAAI,EAAGC,EAAG,GACX,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GAEV,CAACD,EAAG,GAAIC,EAAG,GACX,CAACD,EAAG,GAAIC,GAAI,GACZ,CAACD,EAAG,GAAIC,GAAI,GACZ,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,EAAG,EAAGC,GAAI,GACX,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,CAACD,GAAI,EAAGC,GAAI,GACZ,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","file":"static/js/main.8e76995b.chunk.js","sourcesContent":["export const API_URI = process.env.NODE_ENV === \"production\" ?\n    \"https://galapagotchi.run/api\" :\n    \"http://127.0.0.1:8000/api\"\n\nexport const SINGLE_ISLAND = \"rotterdam\"\nexport const DOCS_ON_GITHUB = \"https://github.com/elastic-interval/galapagotchi/blob/master/client/public/about/index.md\"\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Hexalot } from \"./hexalot\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\nexport function coordsToString(coords: ICoords): string {\n    return `(${coords.x},${coords.y})`\n}\n\nexport const ZERO: ICoords = {x: 0, y: 0}\n\nexport enum Surface {\n    Unknown = \"unknown\",\n    Land = \"land\",\n    Water = \"water\",\n}\n\nexport interface ISpot {\n    readonly coords: ICoords\n    adjacentHexalots: IHexalot[]\n    adjacentSpots: ISpot[]\n    connected: boolean\n    surface: Surface\n\n    isMemberOfOneHexalot(id: string): boolean\n}\n\nexport interface IHexalot {\n    readonly coords: ICoords\n    readonly spots: ISpot[]\n    readonly childHexalots: IHexalot[]\n    readonly nonce: number\n    id: string\n    visited: boolean\n}\n\nexport interface IIsland {\n    readonly name: string\n    readonly hexalots: IHexalot[]\n    readonly spots: ISpot[]\n    readonly vacantHexalot?: Hexalot\n\n    getOrCreateHexalot(parent: IHexalot | undefined, coords: ICoords): IHexalot\n\n    hexalotAroundSpot(spot: ISpot): IHexalot\n}\n\nexport interface IIslandData {\n    name: string\n    hexalots: string\n    spots: string\n}\n\nexport function equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nexport function plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport function findParentHexalot(spot: ISpot): IHexalot | undefined {\n    return spot.adjacentHexalots.reduce(greatestNonce, undefined)\n}\n\nexport function isSpotLegal(spot: ISpot): boolean {\n    let landCount = 0\n    let waterCount = 0\n    spot.adjacentSpots.forEach(adjacent => {\n        switch (adjacent.surface) {\n            case Surface.Land:\n                landCount++\n                break\n            case Surface.Water:\n                waterCount++\n                break\n        }\n    })\n    switch (spot.surface) {\n        case Surface.Land:\n            // land must be connected and either on the edge or have adjacent at least 2 land and 1 water\n            return spot.connected && spot.adjacentSpots.length < 6 || (landCount >= 2 && waterCount >= 1)\n        case Surface.Water:\n            // water must have some land around\n            return landCount > 0\n        default:\n            return false\n    }\n}\n\nexport function isIslandLegal(island: IIsland): boolean {\n    return island.spots.every(isSpotLegal)\n}\n\nexport function fillIsland(data: IIslandData, island: IIsland): void {\n    let hexalot: IHexalot | undefined = island.getOrCreateHexalot(undefined, ZERO)\n    const stepStack = data.hexalots.split(\"\").reverse().map(stepChar => Number(stepChar))\n    const hexalotStack: IHexalot[] = []\n    while (stepStack.length > 0) {\n        const step = stepStack.pop()\n        switch (step) {\n            case STOP_STEP:\n                hexalot = hexalotStack.pop()\n                break\n            case BRANCH_STEP:\n                if (hexalot) {\n                    hexalotStack.push(hexalot)\n                }\n                break\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                if (hexalot) {\n                    hexalot = island.hexalotAroundSpot(hexalot.spots[step])\n                }\n                break\n        }\n    }\n    const hexChars = data.spots ? data.spots.split(\"\") : []\n    const numbers = hexChars.map(hexChar => parseInt(hexChar, 16))\n    const booleanArrays = numbers.map(nyb => {\n        const b0 = (nyb & 8) !== 0\n        const b1 = (nyb & 4) !== 0\n        const b2 = (nyb & 2) !== 0\n        const b3 = (nyb & 1) !== 0\n        return [b0, b1, b2, b3]\n    })\n    const landStack = [].concat.apply([], booleanArrays).reverse()\n    island.spots.sort(sortSpotsOnCoord)\n    if (landStack.length) {\n        island.spots.forEach(spot => {\n            const land = landStack.pop()\n            spot.surface = land ? Surface.Land : Surface.Water\n        })\n    } else if (island.hexalots.length === 1) {\n        const singleHexalot = island.hexalots[0]\n        singleHexalot.spots.map(spot => spot.surface = Math.random() > 0.5 ? Surface.Land : Surface.Water)\n        singleHexalot.spots[0].surface = Surface.Land\n    }\n    island.hexalots.forEach(calculateHexalotId)\n}\n\nexport function calculateHexalotId(hexalot: IHexalot): void {\n    hexalot.id = spotsToHexalotId(hexalot.spots)\n}\n\nexport function findSpot(island: IIsland, coords: ICoords): ISpot | undefined {\n    return island.spots.find(p => equals(p.coords, coords))\n}\n\nexport function recalculateIsland(island: IIsland): void {\n    const spots = island.spots\n    spots.forEach(spot => {\n        spot.adjacentSpots = getAdjacentSpots(island, spot)\n        spot.connected = spot.adjacentSpots.length < 6\n    })\n    let flowChanged = true\n    while (flowChanged) {\n        flowChanged = false\n        spots.forEach(spot => {\n            if (spot.connected) {\n                return\n            }\n            const byAdjacent = spot.adjacentSpots.find(adj => (adj.surface === spot.surface) && adj.connected)\n            if (byAdjacent) {\n                spot.connected = true\n                flowChanged = true\n            }\n        })\n    }\n}\n\n// =====================================================================================================================\n\nconst STOP_STEP = 0\nconst BRANCH_STEP = 7\n\nfunction spotsToHexalotId(spots: ISpot[]): string {\n    const lit = spots.map(spot => spot.surface === Surface.Land ? \"1\" : \"0\")\n    const nybbleStrings = lit\n        .map((l, index, array) => (index % 4 === 0) ? array.slice(index, index + 4).join(\"\") : undefined)\n        .filter(chunk => chunk)\n    const nybbleChars = nybbleStrings.map((s: string) => parseInt(padRightTo4(s), 2).toString(16))\n    return nybbleChars.join(\"\")\n}\n\nfunction greatestNonce(parent: IHexalot | undefined, candiate: IHexalot): IHexalot | undefined {\n    if (parent && parent.nonce >= candiate.nonce) {\n        return parent\n    }\n    return candiate\n}\n\nfunction coordSort(a: ICoords, b: ICoords): number {\n    return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0\n}\n\nfunction sortSpotsOnCoord(a: ISpot, b: ISpot): number {\n    return coordSort(a.coords, b.coords)\n}\n\nfunction getAdjacentSpots(island: IIsland, spot: ISpot): ISpot[] {\n    const adjacentSpots: ISpot[] = []\n    const coords = spot.coords\n    ADJACENT.forEach(a => {\n        const adjacentSpot = findSpot(island, plus(a, coords))\n        if (adjacentSpot) {\n            adjacentSpots.push(adjacentSpot)\n        }\n    })\n    return adjacentSpots\n}\n\nfunction padRightTo4(s: string): string {\n    return s.length < 4 ? padRightTo4(s + \"0\") : s\n}\n\nexport const HEXALOT_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n    // layer 4\n    {x: 8, y: 0}, // 37\n    {x: 7, y: -1},\n    {x: 6, y: -2},\n    {x: 5, y: -3},\n    {x: 4, y: -4},\n    {x: 2, y: -4},\n    {x: 0, y: -4},\n    {x: -2, y: -4},\n    {x: -4, y: -4},\n    {x: -5, y: -3},\n    {x: -6, y: -2},\n    {x: -7, y: -1},\n    {x: -8, y: 0},\n    {x: -7, y: 1},\n    {x: -6, y: 2},\n    {x: -5, y: 3},\n    {x: -4, y: 4},\n    {x: -2, y: 4},\n    {x: -0, y: 4},\n    {x: 2, y: 4},\n    {x: 4, y: 4},\n    {x: 5, y: 3},\n    {x: 6, y: 2},\n    {x: 7, y: 1}, // 60\n    // layer 5\n    {x: 10, y: 0}, // 61\n    {x: 9, y: -1},\n    {x: 8, y: -2},\n    {x: 7, y: -3},\n    {x: 6, y: -4},\n    {x: 5, y: -5},\n    {x: 3, y: -5},\n    {x: 1, y: -5},\n    {x: -1, y: -5},\n    {x: -3, y: -5},\n    {x: -5, y: -5},\n    {x: -6, y: -4},\n    {x: -7, y: -3},\n    {x: -8, y: -2},\n    {x: -9, y: -1},\n    {x: -10, y: 0},\n    {x: -9, y: 1},\n    {x: -8, y: 2},\n    {x: -7, y: 3},\n    {x: -6, y: 4},\n    {x: -5, y: 5},\n    {x: -3, y: 5},\n    {x: -1, y: 5},\n    {x: 1, y: 5},\n    {x: 3, y: 5},\n    {x: 5, y: 5},\n    {x: 6, y: 4},\n    {x: 7, y: 3},\n    {x: 8, y: 2},\n    {x: 9, y: 1}, // 90\n    // layer 6\n    {x: 12, y: 0}, // 91\n    {x: 11, y: -1},\n    {x: 10, y: -2},\n    {x: 9, y: -3},\n    {x: 8, y: -4},\n    {x: 7, y: -5},\n    {x: 6, y: -6},\n    {x: 4, y: -6},\n    {x: 2, y: -6},\n    {x: 0, y: -6},\n    {x: -2, y: -6},\n    {x: -4, y: -6},\n    {x: -6, y: -6},\n    {x: -7, y: -5},\n    {x: -8, y: -4},\n    {x: -9, y: -3},\n    {x: -10, y: -2},\n    {x: -11, y: -1},\n    {x: -12, y: 0},\n    {x: -11, y: 1},\n    {x: -10, y: 2},\n    {x: -9, y: 3},\n    {x: -8, y: 4},\n    {x: -7, y: 5},\n    {x: -6, y: 6},\n    {x: -4, y: 6},\n    {x: -2, y: 6},\n    {x: 0, y: 6},\n    {x: 2, y: 6},\n    {x: 4, y: 6},\n    {x: 6, y: 6},\n    {x: 7, y: 5},\n    {x: 8, y: 4},\n    {x: 9, y: 3},\n    {x: 10, y: 2},\n    {x: 11, y: 1}, // 126\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nexport interface IMemory {\n    buffer: ArrayBuffer\n}\n\nexport enum Stage {\n    Busy = 0,\n    Growing = 1,\n    Shaping = 2,\n    Slack = 3,\n    Realizing = 4,\n    Realized = 6,\n}\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport enum FabricFeature {\n\n    Gravity = 0,\n    Drag = 1,\n    PretenstFactor = 2,\n    IterationsPerFrame = 3,\n    IntervalCountdown = 4,\n    PretenstCountdown = 5,\n    FacePullEndZone = 6,\n    FacePullOrientationForce = 7,\n    SlackThreshold = 8,\n    ShapingPretenstFactor = 9,\n    ShapingStiffnessFactor = 10,\n    ShapingDrag = 11,\n    MaxStrain = 12,\n    VisualStrain = 13,\n\n    NexusPushLength = 20,\n    ColumnPushLength = 21,\n    TriangleLength = 22,\n    RingLength = 23,\n    NexusCrossLength = 24,\n    ColumnCrossLength = 25,\n    BowMidLength = 26,\n    BowEndLength = 27,\n\n    PushOverPull = 30,\n    PushRadiusFactor = 31,\n    PullRadiusFactor = 32,\n    MaxStiffness = 33,\n}\n\nexport const FEATURE_FLOATS = 60\n\nexport const FABRIC_FEATURES: FabricFeature[] = Object.keys(FabricFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => FabricFeature[k])\n\nexport enum IntervalRole {\n    NexusPush = 0,\n    ColumnPush = 1,\n    Triangle = 2,\n    Ring = 3,\n    NexusCross = 4,\n    ColumnCross = 5,\n    BowMid = 6,\n    BowEnd = 7,\n    FacePull = 8,\n}\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"Nex Push\"\n        case IntervalRole.ColumnPush:\n            return \"Col Push\"\n        case IntervalRole.Triangle:\n            return \"Tri\"\n        case IntervalRole.Ring:\n            return \"Ring\"\n        case IntervalRole.NexusCross:\n            return \"Nex Cross\"\n        case IntervalRole.ColumnCross:\n            return \"Col Cross\"\n        case IntervalRole.BowMid:\n            return \"Bow Mid\"\n        case IntervalRole.BowEnd:\n            return \"Bow End\"\n        case IntervalRole.FacePull:\n            return \"Face Pull\"\n    }\n}\n\nexport const INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => role.length > 1 && IntervalRole[role] !== IntervalRole.FacePull)\n    .map(role => IntervalRole[role])\n\nexport function isPush(intervalRole: IntervalRole): boolean {\n    return intervalRole === IntervalRole.ColumnPush || intervalRole === IntervalRole.NexusPush\n}\n\nexport function fabricFeatureIntervalRole(fabricFeature: FabricFeature): IntervalRole | undefined {\n    const firstLengthFeature = FabricFeature.NexusPushLength\n    if (fabricFeature < firstLengthFeature || fabricFeature > FabricFeature.BowEndLength) {\n        return undefined\n    }\n    return IntervalRole[IntervalRole[fabricFeature - firstLengthFeature]]\n}\n\nexport function intervalRoleFabricFeature(intervalRole: IntervalRole): FabricFeature {\n    return FabricFeature[FabricFeature[intervalRole + FabricFeature.NexusPushLength]]\n}\n\nexport enum FabricDirection {\n    Rest,\n    Forward,\n    TurnLeft,\n    TurnRight,\n    Reverse,\n}\n\nexport enum Laterality {\n    Middle = 0,\n    RightSide = 1,\n    LeftSide = 2,\n}\n\nexport enum SurfaceCharacter {\n    Frozen = 0,\n    Sticky = 1,\n    Slippery = 2,\n    Bouncy = 3,\n}\n\nexport interface IFabricEngine {\n\n    memory: IMemory\n\n    init(): number\n\n    setSurfaceCharacter(character: SurfaceCharacter): void\n\n    setPushAndPull(value: boolean): void\n\n    setColoring(pushes: boolean, pulls: boolean): void\n\n    setInstance(index: number): void\n\n    cloneInstance(fromIndex: number, index: number): void\n\n    getInstanceCount(): number\n\n    // below methods use instance index\n\n    initInstance(): Stage\n\n    finishGrowing(): Stage\n\n    getAge(): number\n\n    getCurrentState(): FabricDirection\n\n    getNextState(): FabricDirection\n\n    setNextState(state: FabricDirection): void\n\n    iterate(nextStage: Stage): Stage\n\n    adoptLengths(): Stage\n\n    renderNumbers(): number\n\n    centralize(): void\n\n    setAltitude(altitude: number): number\n\n    nextJointTag(): number\n\n    getJointCount(): number\n\n    createJoint(jointTag: number, laterality: Laterality, x: number, y: number, z: number): number\n\n    getJointTag(jointIndex: number): number\n\n    getJointLaterality(jointIndex: number): number\n\n    getIntervalCount(): number\n\n    createInterval(alphaIndex: number, omegaIndex: number, intervalRole: IntervalRole,\n                   restLength: number, stiffness: number, linearDensity: number, countdown: number): number\n\n    setIntervalRole(intervalIndex: number, intervalRole: IntervalRole): void\n\n    changeRestLength(intervalIndex: number, length: number, countdown: number): void\n\n    multiplyRestLength(intervalIndex: number, length: number, countdown: number): void\n\n    removeInterval(intervalIndex: number): void\n\n    findOppositeIntervalIndex(intervalIndex: number): number\n\n    getIntervalStateLength(intervalIndex: number, state: FabricDirection): number\n\n    setIntervalStateLength(intervalIndex: number, state: FabricDirection, length: number): void\n\n    getFaceCount(): number\n\n    createFace(joint0Index: number, joint1Index: number, joint2Index: number): number\n\n    removeFace(faceIndex: number): void\n\n    findOppositeFaceIndex(faceIndex: number): number\n\n    getFaceJointIndex(faceIndex: number, jointNumber: number): number\n\n    // these methods give addresses for buffer access\n\n    _fabricOffset(): number\n\n    _midpoint(): number\n\n    _lineLocations(): number\n\n    _lineColors(): number\n\n    _faceMidpoints(): number\n\n    _faceNormals(): number\n\n    _faceLocations(): number\n\n    _jointLocations(): number\n\n    _jointVelocities(): number\n\n    _intervalUnits(): number\n\n    _intervalStrains(): number\n\n    _intervalStrainNuances(): number\n\n    _stiffnesses(): number\n\n    _linearDensities(): number\n\n    _fabricFeatures(): number\n\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { FabricFeature, FEATURE_FLOATS, IFabricEngine } from \"./fabric-engine\"\nimport { FloatFeature } from \"./fabric-features\"\nimport { faceVector, vectorFromArray, vectorToArray } from \"./fabric-kernel\"\n\nexport class FabricInstance {\n    private _fabricFeatures: LazyFloatArray\n    private _midpoint: LazyFloatArray\n    private _lineColors: LazyFloatArray\n    private _lineLocations: LazyFloatArray\n    private _faceMidpoints: LazyFloatArray\n    private _faceNormals: LazyFloatArray\n    private _faceLocations: LazyFloatArray\n    private _jointLocations: LazyFloatArray\n    private _jointVelocities: LazyFloatArray\n    private _unitVectors: LazyFloatArray\n    private _strains: LazyFloatArray\n    private _strainNuances: LazyFloatArray\n    private _stiffnesses: LazyFloatArray\n    private _linearDensities: LazyFloatArray\n\n    constructor(\n        public readonly index: number,\n        private buffer: ArrayBuffer,\n        private releaseInstance: (index: number) => void,\n        private fabricEngine: IFabricEngine,\n    ) {\n        const e = this.engine\n        const offset = e._fabricOffset()\n        const b = this.buffer\n        this._fabricFeatures = new LazyFloatArray(b, offset + e._fabricFeatures(), () => FEATURE_FLOATS)\n        this._midpoint = new LazyFloatArray(b, offset + e._midpoint(), () => 3)\n        this._lineColors = new LazyFloatArray(b, offset + e._lineColors(), () => e.getIntervalCount() * 3 * 2)\n        this._lineLocations = new LazyFloatArray(b, offset + e._lineLocations(), () => e.getIntervalCount() * 3 * 2)\n        this._faceMidpoints = new LazyFloatArray(b, offset + e._faceMidpoints(), () => e.getFaceCount() * 3)\n        this._faceNormals = new LazyFloatArray(b, offset + e._faceNormals(), () => e.getFaceCount() * 3 * 3)\n        this._faceLocations = new LazyFloatArray(b, offset + e._faceLocations(), () => e.getFaceCount() * 3 * 3)\n        this._jointLocations = new LazyFloatArray(b, offset + e._jointLocations(), () => e.getJointCount() * 3)\n        this._jointVelocities = new LazyFloatArray(b, offset + e._jointVelocities(), () => e.getJointCount() * 3)\n        this._unitVectors = new LazyFloatArray(b, offset + e._intervalUnits(), () => e.getIntervalCount() * 3)\n        this._strains = new LazyFloatArray(b, offset + e._intervalStrains(), () => e.getIntervalCount())\n        this._strainNuances = new LazyFloatArray(b, offset + e._intervalStrainNuances(), () => e.getIntervalCount())\n        this._stiffnesses = new LazyFloatArray(b, offset + e._stiffnesses(), () => e.getIntervalCount())\n        this._linearDensities = new LazyFloatArray(b, offset + e._linearDensities(), () => e.getIntervalCount())\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this._fabricFeatures.floats[feature.fabricFeature] = feature.numeric\n    }\n\n    public setFeatureValue(fabricFeature: FabricFeature, value: number): void {\n        this._fabricFeatures.floats[fabricFeature] = value\n    }\n\n    public release(): void {\n        this.releaseInstance(this.index)\n    }\n\n    public forgetDimensions(): void {\n        this._faceMidpoints.clear()\n        this._faceLocations.clear()\n        this._faceNormals.clear()\n        this._jointLocations.clear()\n        this._lineLocations.clear()\n        this._lineColors.clear()\n        this._unitVectors.clear()\n        this._strains.clear()\n        this._strainNuances.clear()\n        this._stiffnesses.clear()\n        this._linearDensities.clear()\n    }\n\n    public location(jointIndex: number): Vector3 {\n        return vectorFromArray(this._jointLocations.floats, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        const jointCount = this.engine.getJointCount()\n        for (let jointIndex = 0; jointIndex < jointCount; jointIndex++) {\n            const jointLocation = vectorFromArray(this._jointLocations.floats, jointIndex)\n            vectorToArray(jointLocation.applyMatrix4(matrix), this._jointLocations.floats, jointIndex)\n        }\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this._unitVectors.floats, intervalIndex)\n    }\n\n    public velocities(): Float32Array {\n        return this._jointVelocities.floats\n    }\n\n    public get strains(): Float32Array {\n        return this._strains.floats\n    }\n\n    public get strainNuances(): Float32Array {\n        return this._strainNuances.floats\n    }\n\n    public get stiffnesses(): Float32Array {\n        return this._stiffnesses.floats\n    }\n\n    public get linearDensities(): Float32Array {\n        return this._linearDensities.floats\n    }\n\n    public get faceLocations(): Float32Array {\n        return this._faceLocations.floats\n    }\n\n    public faceMidpoint(faceIndex: number): Vector3 {\n        return faceVector(faceIndex, this._faceLocations.floats)\n    }\n\n    public faceNormal(faceIndex: number): Vector3 {\n        return faceVector(faceIndex, this._faceNormals.floats)\n    }\n\n    public intervalLocation(intervalIndex: number): Vector3 {\n        return vectorFromArray(this._lineLocations.floats, intervalIndex)\n    }\n\n    public get faceNormals(): Float32Array {\n        return this._faceNormals.floats\n    }\n\n    public get lineLocations(): Float32Array {\n        return this._lineLocations.floats\n    }\n\n    public get lineColors(): Float32Array {\n        return this._lineColors.floats\n    }\n\n    public getIntervalMidpoint(intervalIndex: number): Vector3 {\n        const a = this.intervalLocation(intervalIndex * 2)\n        const b = this.intervalLocation(intervalIndex * 2 + 1)\n        return new Vector3().add(a).add(b).multiplyScalar(0.5)\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        return vectorFromArray(this._midpoint.floats, 0, midpoint)\n    }\n\n    public get engine(): IFabricEngine {\n        this.fabricEngine.setInstance(this.index)\n        return this.fabricEngine\n    }\n}\n\nclass LazyFloatArray {\n    private array: Float32Array | undefined\n\n    constructor(private buffer: ArrayBuffer, private offset: number, private length: () => number) {\n    }\n\n    public get floats(): Float32Array {\n        if (this.array) {\n            return this.array\n        }\n        return this.array = new Float32Array(this.buffer, this.offset, this.length())\n    }\n\n    public clear(): void {\n        this.array = undefined\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { HEXALOT_SHAPE } from \"../island/island-logic\"\n\nimport { IFabricEngine } from \"./fabric-engine\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nconst FLOATS_IN_VECTOR = 3\nconst HEXALOT_BITS = 128\nconst SPOT_CENTERS_FLOATS = HEXALOT_BITS * FLOATS_IN_VECTOR\nconst SPOT_CENTERS_SIZE = SPOT_CENTERS_FLOATS * Float32Array.BYTES_PER_ELEMENT\n\nexport const vectorFromArray = (array: Float32Array, index: number, vector?: Vector3): Vector3 => {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport const vectorToArray = (vector: Vector3, array: Float32Array, index: number): void => {\n    const offset = index * 3\n    array[offset] = vector.x\n    array[offset + 1] = vector.y\n    array[offset + 2] = vector.z\n}\n\nexport function faceVector(faceIndex: number, array: Float32Array): Vector3 {\n    const index = faceIndex * 3\n    const a = vectorFromArray(array, index)\n    const b = vectorFromArray(array, index + 1)\n    const c = vectorFromArray(array, index + 2)\n    return new Vector3().add(a).add(b).add(c).multiplyScalar(1.0 / 3.0)\n}\n\nexport class FabricKernel {\n    private instanceArray: FabricInstance[] = []\n    private instanceUsed: boolean[] = []\n    private arrayBuffer: ArrayBuffer\n    private spotCenters: Float32Array\n    private hexalotBits: Int8Array\n\n    constructor(engine: IFabricEngine) {\n        const fabricBytes = engine.init()\n        this.arrayBuffer = engine.memory.buffer\n        this.spotCenters = new Float32Array(this.arrayBuffer, 0, SPOT_CENTERS_FLOATS)\n        this.hexalotBits = new Int8Array(this.arrayBuffer, SPOT_CENTERS_SIZE, HEXALOT_BITS)\n        const byteLength = this.arrayBuffer.byteLength\n        if (byteLength === 0) {\n            throw new Error(`Zero byte length! ${fabricBytes}`)\n        }\n        for (let index = 0; index < engine.getInstanceCount(); index++) {\n            this.instanceArray.push(new FabricInstance(\n                index,\n                this.arrayBuffer,\n                toFree => this.instanceUsed[toFree] = false,\n                engine,\n            ))\n            this.instanceUsed.push(false)\n        }\n    }\n\n    public setHexalot(spotCenters: Vector3[], surface: boolean[]): void {\n        if (spotCenters.length !== HEXALOT_SHAPE.length || surface.length !== HEXALOT_SHAPE.length) {\n            throw new Error(\"Size problem\")\n        }\n        spotCenters.forEach((center, index) => {\n            this.spotCenters[index * FLOATS_IN_VECTOR] = center.x\n            this.spotCenters[index * FLOATS_IN_VECTOR + 1] = center.y\n            this.spotCenters[index * FLOATS_IN_VECTOR + 2] = center.z\n        })\n        surface.forEach((land, index) => {\n            this.hexalotBits[index] = land ? 1 : 0\n        })\n    }\n\n    public allocateInstance(): FabricInstance | undefined {\n        const freeIndex = this.instanceUsed.indexOf(false)\n        if (freeIndex < 0) {\n            return undefined\n        }\n        this.instanceUsed[freeIndex] = true\n        return this.instanceArray[freeIndex]\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { AppMode, Command } from \"./state/app-state\"\n\nexport enum AppEvent {\n    FlyingIn = \"Flying in\",\n    StartGrowth = \"Start growth\",\n    GrowthStep = \"Growth step\",\n    GrowthComplete = \"Growth complete\",\n    Cycle = \"Cycle\",\n    Command = \"Command\",\n    AppMode = \"App mode\",\n}\n\nexport interface IAppEvent {\n    event: AppEvent,\n    command?: Command\n    appMode?: AppMode\n}\n\nexport const APP_EVENT = new BehaviorSubject<IAppEvent>({event: AppEvent.FlyingIn})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { CardText } from \"reactstrap\"\n\nexport enum ToolbarState {\n    AvailableSpot = \"Available spot\",\n    Evolving = \"Evolving\",\n    Friend = \"Friend\",\n    FreeSpot = \"Free spot\",\n    Home = \"Home\",\n    Pioneering = \"Pioneering\",\n    Planning = \"Planning\",\n    Riding = \"Riding\",\n    Terraforming = \"Terraforming\",\n    Unknown = \"Unknown\",\n}\n\nexport interface IToolbarStateDoc {\n    title: ToolbarState\n    body: JSX.Element\n}\n\nexport const TOOLBAR_STATE_DOCS: IToolbarStateDoc[] = [\n    {\n        title: ToolbarState.AvailableSpot,\n        body:\n            <CardText>\n                This spot is unoccupied and can be claimed.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Planning,\n        body:\n            <CardText>\n                You are planning your journey.  This journey is where you galapagotchi rides when you launch it,\n                and it is the path that the evolution will follow.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Evolving,\n        body:\n            <CardText>\n                Your gotchi is experiencing a kind of multiverse evolution.\n                It has been placed in competition with a number of mutations of itself, and they are\n                now locked in a fight for survival.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Terraforming,\n        body:\n            <CardText>\n                You have reserved a new hexalot, but this has created virgin territory at the edge\n                of the island which you still have to terraform.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Friend,\n        body:\n            <CardText>\n                You have selected somebody else's galapagotchi.  You can take it for a ride to see how well\n                it can run.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.FreeSpot,\n        body:\n            <CardText>\n                A free spot is a hexagonal spot which can be terraformed, which means that you can turn it\n                into land or water.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Home,\n        body:\n            <CardText>\n                You have selected your home hexalot, and from here you can plan the gotchi's journey.\n                If you already have a journey planned you can try and ride it, or you can start the evolution\n                process so that your gotchi acquires motor skills by survival of the fittest.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Pioneering,\n        body:\n            <CardText>\n                You are a pioneer, so we can assume that you need no instructions.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Riding,\n        body:\n            <CardText>\n                You are riding on a gotchi, which means that you tag along close behind as the gotchi\n                runs each leg of its journey.\n            </CardText>,\n    },\n    {\n        title: ToolbarState.Unknown,\n        body:\n            <CardText>\n                Unknown state?\n            </CardText>,\n    },\n]\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IFabricEngine } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { IFlightState } from \"../gotchi-view/flight-state\"\nimport { Evolution } from \"../gotchi/evolution\"\nimport { Jockey } from \"../gotchi/jockey\"\nimport { Hexalot } from \"../island/hexalot\"\nimport { Island } from \"../island/island\"\nimport { coordsToString, IIslandData } from \"../island/island-logic\"\nimport { Journey } from \"../island/journey\"\nimport { Spot } from \"../island/spot\"\nimport { IUser, RemoteStorage } from \"../storage/remote-storage\"\n\nexport interface IAppProps {\n    engine: IFabricEngine\n    floatFeatures: FloatFeature[]\n    storage: RemoteStorage\n    user?: IUser\n}\n\nexport type AppTransition = () => (Pick<IAppState, keyof IAppState>)\n\nexport interface IAppState {\n\n    readonly nonce: number\n    readonly appMode: AppMode\n    readonly storage: RemoteStorage\n    readonly islandIsLegal: boolean\n\n    readonly width: number\n    readonly height: number\n    readonly left: number\n    readonly top: number\n\n    readonly flightState: IFlightState\n\n    readonly island?: Island\n    readonly islandData?: IIslandData\n    readonly homeHexalot?: Hexalot\n    readonly ownedLots?: string[]\n    readonly journey?: Journey\n    readonly selectedSpot?: Spot\n    readonly selectedHexalot?: Hexalot\n    readonly jockey?: Jockey\n    readonly evolution?: Evolution\n\n    updateState(appState: IAppState): void\n\n    transitionState(transition: AppTransition): void\n}\n\nexport enum AppMode {\n    Evolving = \"Evolving\",\n    Exploring = \"Exploring\",\n    Flying = \"Flying\",\n    Planning = \"Planning\",\n    Riding = \"Riding\",\n    Stopped = \"Stopped\",\n    Terraforming = \"Terraforming\",\n}\n\nexport enum Command {\n    Cancel = \"Cancel\",\n    ClaimHexalot = \"Claim hexalot\",\n    DiscardGenes = \"Discard genes\",\n    Evolve = \"Evolve\",\n    Home = \"Home\",\n    MakeLand = \"Make into land\",\n    MakeWater = \"Make into water\",\n    Plan = \"Plan\",\n    Ride = \"Ride\",\n    Start = \"Start\",\n    Stop = \"Stop\",\n    Terraform = \"Terraform\",\n}\n\nexport function homeHexalotSelected(appState: IAppState): boolean {\n    return !!appState.homeHexalot && !!appState.selectedHexalot\n        && appState.homeHexalot.id === appState.selectedHexalot.id\n}\n\nexport function logString(appState: IAppState): string {\n    const legal = appState.islandIsLegal\n    const home = !!appState.homeHexalot\n    const who = appState.jockey ? \"jockey\" : appState.evolution ? \"evolution\" : \"-\"\n    const spot = appState.selectedSpot ? coordsToString(appState.selectedSpot.coords) : \"-\"\n    const lot = appState.selectedHexalot ? coordsToString(appState.selectedHexalot.coords) : \"-\"\n    return `${appState.nonce}:${appState.appMode}: who=${who} legal=${legal} home=${home} spot=${spot} lot=${lot}`\n}\n\nexport function updateDimensions(): object {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        left: window.screenLeft,\n        top: window.screenTop,\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nexport interface IDie {\n    index: number,\n    numeral: string,\n    symbol: string\n}\n\nexport const DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\"},\n    {index: 1, numeral: \"2\", symbol: \"⚁\"},\n    {index: 2, numeral: \"3\", symbol: \"⚂\"},\n    {index: 3, numeral: \"4\", symbol: \"⚃\"},\n    {index: 4, numeral: \"5\", symbol: \"⚄\"},\n    {index: 5, numeral: \"6\", symbol: \"⚅\"},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nexport function diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const max = Math.pow(6, dice.length)\n    const lessThanMax = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return (lessThanMax + 0.5) / max\n}\n\nexport function serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nexport function deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { diceToNuance, IDie } from \"./dice\"\nimport { IGene } from \"./genome\"\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public chooseFrom(maxChoice: number): number {\n        const choice = (...dice: IDie[]) => Math.floor(diceToNuance(dice) * maxChoice)\n        if (maxChoice <= 6) {\n            return choice(this.next())\n        } else if (maxChoice <= 6 * 6) {\n            return choice(this.next(), this.next())\n        } else if (maxChoice <= 6 * 6 * 6) {\n            return choice(this.next(), this.next(), this.next())\n        } else if (maxChoice <= 6 * 6 * 6 * 6) {\n            return choice(this.next(), this.next(), this.next(), this.next())\n        } else {\n            return choice(this.next(), this.next(), this.next(), this.next(), this.next())\n        }\n    }\n\n    public get size(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FabricDirection } from \"../fabric/fabric-engine\"\n\nimport { deserializeGene, DICE, IDie, serializeGene } from \"./dice\"\nimport { GeneReader } from \"./gene-reader\"\nimport { IGeneData } from \"./genome\"\n\nexport interface IGeneData {\n    state: FabricDirection\n    mutationCount: number\n    geneString: string,\n}\n\nexport interface IGenomeData {\n    genes: IGeneData[]\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nexport function freshGenome(): Genome {\n    return new Genome([], rollTheDice)\n}\n\nexport function fromGenomeData(genomeData: IGenomeData): Genome {\n    if (!genomeData.genes) {\n        return freshGenome()\n    }\n    const genes = genomeData.genes.map(g => ({\n        state: g.state,\n        mutationCount: g.mutationCount,\n        dice: deserializeGene(g.geneString),\n    }))\n    return new Genome(genes, rollTheDice)\n}\n\nexport function fromOptionalGenomeData(genomeData?: IGenomeData): Genome | undefined {\n    if (!genomeData) {\n        return undefined\n    }\n    return fromGenomeData(genomeData)\n}\n\nexport interface IGene {\n    state: FabricDirection\n    mutationCount: number\n    dice: IDie[]\n}\n\nexport class Genome {\n\n    constructor(private genes: IGene[], private roll: () => IDie) {\n    }\n\n    public createReader(state: FabricDirection): GeneReader {\n        const existingGene = this.genes.find(g => state === g.state)\n        if (existingGene) {\n            return new GeneReader(existingGene, this.roll)\n        } else {\n            const freshGene: IGene = {state, mutationCount: 0, dice: []}\n            this.genes.push(freshGene)\n            return new GeneReader(freshGene, this.roll)\n        }\n    }\n\n    public withMutatedBehavior(direction: FabricDirection, mutations: number): Genome {\n        const genesCopy: IGene[] = this.genes.map(g => ({\n            state: g.state,\n            mutationCount: g.mutationCount,\n            dice: g.dice.slice(),\n        }))\n        const geneToMutate = genesCopy.find(g => direction === g.state)\n        if (geneToMutate) {\n            for (let hit = 0; hit < mutations; hit++) {\n                const geneNumber = Math.floor(Math.random() * geneToMutate.dice.length)\n                geneToMutate.dice[geneNumber] = this.roll()\n                geneToMutate.mutationCount++\n            }\n        }\n        return new Genome(genesCopy, this.roll)\n    }\n\n    public get genomeData(): IGenomeData {\n        return {\n            genes: this.genes.map(g => ({\n                state: g.state,\n                mutationCount: g.mutationCount,\n                geneString: serializeGene(g.dice),\n            })),\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Vector3 } from \"three\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXALOT_OUTLINE_HEIGHT = 0.3\nexport const HEXAPOD_PROJECTION = 0.2\nexport const HEXAPOD_RADIUS = HEXAPOD_PROJECTION * SURFACE_SCALE\nexport const SCALE_X = SURFACE_SCALE * KINDA\nexport const SCALE_Y = SURFACE_SCALE * 1.5\nexport const INNER_HEXALOT_SPOTS = 91\nexport const OUTER_HEXALOT_SIDE = 6\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE/2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE/2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE/2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE/2),\n]\nexport const SURFACE_UNKNOWN_COLOR = new Color(\"silver\")\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SURFACE_WATER_COLOR = new Color(\"darkturquoise\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\nexport const WATER_NORMAL_SPREAD = -0.02\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BufferGeometry, Geometry, Vector3 } from \"three\"\n\nimport { AppEvent } from \"../app-event\"\nimport { FabricDirection } from \"../fabric/fabric-engine\"\nimport { GotchiBody } from \"../fabric/gotchi-body\"\nimport { Genome, IGenomeData } from \"../genetics/genome\"\nimport { HEXAPOD_RADIUS } from \"../island/constants\"\nimport { Leg } from \"../island/journey\"\n\nimport { Gotchi } from \"./gotchi\"\n\nconst MAX_VOTES = 30\n\nexport interface IEvaluatedJockey {\n    jockey: Jockey\n    distanceFromTarget: number\n}\n\nexport class Jockey {\n    private votes: FabricDirection[] = []\n    private currentLeg: Leg\n\n    constructor(public readonly gotchi: Gotchi, leg: Leg, private mutatingGenome?: Genome) {\n        this.leg = leg\n    }\n\n    public get height(): number {\n        return this.gotchi.body.midpoint.y\n    }\n\n    public get isResting(): boolean {\n        return this.gotchi.isResting\n    }\n\n    public get leg(): Leg {\n        return this.currentLeg\n    }\n\n    public set leg(leg: Leg) {\n        this.currentLeg = leg\n        this.votes = []\n        this.gotchi.nextState = this.voteState()\n    }\n\n    public reorient(): void {\n        if (this.touchedDestination) {\n            const nextLeg = this.leg.nextLeg\n            if (nextLeg) {\n                this.leg = nextLeg\n            } else {\n                this.gotchi.nextState = FabricDirection.Rest\n            }\n        }\n        if (this.fabric.nextState !== FabricDirection.Rest) {\n            const state = this.voteState()\n            // todo: fix all this\n            if (this.nextState !== state) {\n                console.log(`${this.index} turned ${FabricDirection[this.nextState]} to ${FabricDirection[state]}`)\n                this.gotchi.nextState = state\n            }\n        }\n    }\n\n    public get pointerGeometry(): Geometry {\n        return this.gotchi.body.pointerGeometryFor(this.gotchi.body.currentState)\n    }\n\n    public get facesGeometry(): BufferGeometry {\n        return this.gotchi.body.facesGeometry\n    }\n\n    public startMoving(): void {\n        this.leg = this.currentLeg\n    }\n\n    public stopMoving(): void {\n        this.gotchi.nextState = FabricDirection.Rest\n    }\n\n    public get index(): number {\n        return this.gotchi.index\n    }\n\n    public get age(): number {\n        return this.gotchi.age\n    }\n\n    public get fabric(): GotchiBody {\n        return this.gotchi.body\n    }\n\n    public get offspringGenome(): IGenomeData {\n        if (!this.mutatingGenome) {\n            throw new Error(\"Not evolving\")\n        }\n        return this.mutatingGenome.genomeData\n    }\n\n    public mutateGenome(mutationCount: number): void {\n        if (!this.mutatingGenome) {\n            throw new Error(\"Not evolving\")\n        }\n        // console.log(`mutating ${this.index} ${Direction[this.nextDirection]} ${mutationCount} dice`)\n        this.mutatingGenome = this.mutatingGenome.withMutatedBehavior(this.nextState, mutationCount)\n    }\n\n    public get nextState(): FabricDirection {\n        return this.fabric.nextState\n    }\n\n    public get evaluated(): IEvaluatedJockey {\n        const distanceFromTarget = this.gotchi.getDistanceFrom(this.target)\n        return {jockey: this, distanceFromTarget}\n    }\n\n    public iterate(ticks: number): AppEvent | undefined {\n        return this.gotchi.iterate(ticks)\n    }\n\n    public get genomeData(): IGenomeData {\n        return this.gotchi.genomeData\n    }\n\n    public createGotchi(genome: Genome): Gotchi | undefined {\n        return this.gotchi.copyWithGenome(genome)\n    }\n\n    public recycle(): void {\n        this.gotchi.recycle()\n    }\n\n    // ============================\n\n    private get touchedDestination(): boolean {\n        return this.gotchi.getDistanceFrom(this.target) < HEXAPOD_RADIUS\n    }\n\n    private voteState(): FabricDirection {\n        const votes = this.votes\n        const latestVote = this.directionToTarget\n        votes.push(latestVote)\n        if (votes.length > MAX_VOTES) {\n            votes.shift()\n        }\n        const voteCounts = votes.reduce((c: number[], vote) => {\n            c[vote]++\n            return c\n        }, [0, 0, 0, 0, 0])\n        for (let state = FabricDirection.Forward; state <= FabricDirection.Reverse; state++) {\n            if (voteCounts[state] === MAX_VOTES && this.nextState !== state) {\n                return state\n            }\n        }\n        return latestVote\n    }\n\n    private get directionToTarget(): FabricDirection {\n        const toTarget = this.toTarget\n        const degreeForward = toTarget.dot(this.gotchi.body.forward)\n        const degreeRight = toTarget.dot(this.gotchi.body.right)\n        if (degreeForward > 0) {\n            if (degreeRight > 0) {\n                return degreeForward > degreeRight ? FabricDirection.Forward : FabricDirection.TurnRight\n            } else {\n                return degreeForward > -degreeRight ? FabricDirection.Forward : FabricDirection.TurnLeft\n            }\n        } else {\n            if (degreeRight > 0) {\n                return -degreeForward > degreeRight ? FabricDirection.Reverse : FabricDirection.TurnRight\n            } else {\n                return -degreeForward > -degreeRight ? FabricDirection.Reverse : FabricDirection.TurnLeft\n            }\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        toTarget.subVectors(this.target, this.gotchi.body.seed)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n\n    private get target(): Vector3 {\n        return this.currentLeg.goTo.center\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BufferGeometry, Float32BufferAttribute, Geometry, Matrix4, Vector3 } from \"three\"\n\nimport { FabricDirection, IFabricEngine, IntervalRole, Laterality, Stage } from \"./fabric-engine\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { FaceSnapshot, IJointSnapshot } from \"./face-snapshot\"\n\nconst ARROW_LENGTH = 9\nconst ARROW_WIDTH = 0.6\nconst ARROW_TIP_LENGTH_FACTOR = 1.3\nconst ARROW_TIP_WIDTH_FACTOR = 1.5\n\nexport const HUNG_ALTITUDE = 10\nexport const ITERATIONS_PER_TICK = 60\n\nexport const INTERVALS_RESERVED = 1\nexport const SPOT_TO_HANGER = new Vector3(0, HUNG_ALTITUDE, 0)\n\nexport class GotchiBody {\n    private pointerGeometryStored: Geometry | undefined\n    private facesGeometryStored: BufferGeometry | undefined\n\n    constructor(private instance: FabricInstance) {\n    }\n\n    public get isResting(): boolean {\n        return this.currentState === FabricDirection.Rest && this.nextState === FabricDirection.Rest\n    }\n\n    public recycle(): void {\n        this.disposeOfGeometry()\n        this.instance.release()\n    }\n\n    public get index(): number {\n        return this.instance.index\n    }\n\n    public disposeOfGeometry(): void {\n        if (this.facesGeometryStored) {\n            this.facesGeometryStored.dispose()\n            this.facesGeometryStored = undefined\n        }\n        if (this.pointerGeometryStored) {\n            this.pointerGeometryStored.dispose()\n            this.pointerGeometryStored = undefined\n        }\n    }\n\n    public get midpoint(): Vector3 {\n        return this.instance.getMidpoint()\n    }\n\n    public get seed(): Vector3 {\n        return new Vector3() // TODO\n    }\n\n    public get forward(): Vector3 {\n        return new Vector3() // TODO\n    }\n\n    public get right(): Vector3 {\n        return new Vector3() // TODO\n    }\n\n    public get jointCount(): number {\n        return this.engine.getJointCount()\n    }\n\n    public get intervalCount(): number {\n        return this.engine.getIntervalCount()\n    }\n\n    public get facesGeometry(): BufferGeometry {\n        const geometry = new BufferGeometry()\n        geometry.addAttribute(\"position\", new Float32BufferAttribute(this.instance.faceLocations, 3))\n        geometry.addAttribute(\"normal\", new Float32BufferAttribute(this.instance.faceNormals, 3))\n        if (this.facesGeometryStored) {\n            this.facesGeometryStored.dispose()\n        }\n        this.facesGeometryStored = geometry\n        return geometry\n    }\n\n    public pointerGeometryFor(state: FabricDirection): Geometry {\n        const geometry = new Geometry()\n        const v = () => new Vector3().add(this.seed)\n        const arrowFromL = v()\n        const arrowFromR = v()\n        const arrowToL = v()\n        const arrowToR = v()\n        const arrowToLx = v()\n        const arrowToRx = v()\n        const arrowTip = v()\n        switch (state) {\n            case FabricDirection.Forward:\n                arrowToL.addScaledVector(this.right, -ARROW_WIDTH).addScaledVector(this.forward, ARROW_LENGTH)\n                arrowToLx.addScaledVector(this.right, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.forward, ARROW_LENGTH)\n                arrowFromL.addScaledVector(this.right, -ARROW_WIDTH)\n                arrowToR.addScaledVector(this.right, ARROW_WIDTH).addScaledVector(this.forward, ARROW_LENGTH)\n                arrowToRx.addScaledVector(this.right, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.forward, ARROW_LENGTH)\n                arrowFromR.addScaledVector(this.right, ARROW_WIDTH)\n                arrowTip.addScaledVector(this.forward, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n                break\n            case FabricDirection.TurnLeft:\n                arrowToL.addScaledVector(this.forward, -ARROW_WIDTH).addScaledVector(this.right, -ARROW_LENGTH)\n                arrowToLx.addScaledVector(this.forward, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.right, -ARROW_LENGTH)\n                arrowFromL.addScaledVector(this.forward, -ARROW_WIDTH)\n                arrowToR.addScaledVector(this.forward, ARROW_WIDTH).addScaledVector(this.right, -ARROW_LENGTH)\n                arrowToRx.addScaledVector(this.forward, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.right, -ARROW_LENGTH)\n                arrowFromR.addScaledVector(this.forward, ARROW_WIDTH)\n                arrowTip.addScaledVector(this.right, -ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n                break\n            case FabricDirection.TurnRight:\n                arrowToL.addScaledVector(this.forward, ARROW_WIDTH).addScaledVector(this.right, ARROW_LENGTH)\n                arrowToLx.addScaledVector(this.forward, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.right, ARROW_LENGTH)\n                arrowFromL.addScaledVector(this.forward, ARROW_WIDTH)\n                arrowToR.addScaledVector(this.forward, -ARROW_WIDTH).addScaledVector(this.right, ARROW_LENGTH)\n                arrowToRx.addScaledVector(this.forward, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.right, ARROW_LENGTH)\n                arrowFromR.addScaledVector(this.forward, -ARROW_WIDTH)\n                arrowTip.addScaledVector(this.right, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n                break\n            case FabricDirection.Reverse:\n                arrowToL.addScaledVector(this.right, -ARROW_WIDTH).addScaledVector(this.forward, -ARROW_LENGTH)\n                arrowToLx.addScaledVector(this.right, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.forward, -ARROW_LENGTH)\n                arrowFromL.addScaledVector(this.right, -ARROW_WIDTH)\n                arrowToR.addScaledVector(this.right, ARROW_WIDTH).addScaledVector(this.forward, -ARROW_LENGTH)\n                arrowToRx.addScaledVector(this.right, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(this.forward, -ARROW_LENGTH)\n                arrowFromR.addScaledVector(this.right, ARROW_WIDTH)\n                arrowTip.addScaledVector(this.forward, -ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n                break\n        }\n        geometry.vertices = [\n            arrowFromL, arrowToL, arrowFromR, arrowToR,\n            arrowToRx, arrowTip, arrowToLx, arrowTip,\n            arrowToRx, arrowToR, arrowToLx, arrowToL,\n        ]\n        if (this.pointerGeometryStored) {\n            this.pointerGeometryStored.dispose()\n        }\n        this.pointerGeometryStored = geometry\n        return geometry\n    }\n\n    public createSeed(x: number, z: number, rotation: number): GotchiBody {\n        const SEED_CORNERS = 5 // TODO: get rid of the seed\n        const SEED_RADIUS = 2 // TODO: get rid of it\n        const engine = this.engine\n        // prepare\n        const locations: Vector3[] = []\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            const angle = walk * Math.PI * 2 / SEED_CORNERS\n            locations.push(new Vector3(SEED_RADIUS * Math.sin(angle), SEED_RADIUS * Math.cos(angle), 0))\n        }\n        const leftLoc = new Vector3(0, 0, -SEED_RADIUS)\n        const rightLoc = new Vector3(0, 0, SEED_RADIUS)\n        locations.push(leftLoc, rightLoc)\n        const rotationMatrix = new Matrix4().makeRotationY(Math.PI / 3 * rotation)\n        const translationMatrix = new Matrix4().makeTranslation(x, 0, z)\n        const transformer = translationMatrix.multiply(rotationMatrix)\n        locations.forEach(location => location.applyMatrix4(transformer))\n        // build\n        const hangerJoint = engine.createJoint(engine.nextJointTag(), Laterality.Middle, x, 0, z)\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            const where = locations[walk]\n            engine.createJoint(engine.nextJointTag(), Laterality.Middle, where.x, where.y, where.z)\n        }\n        const jointPairName = engine.nextJointTag()\n        const left = engine.createJoint(jointPairName, Laterality.LeftSide, leftLoc.x, leftLoc.y, leftLoc.z)\n        const right = engine.createJoint(jointPairName, Laterality.RightSide, rightLoc.x, rightLoc.y, rightLoc.z)\n        this.muscle(hangerJoint, left)\n        this.muscle(hangerJoint, right)\n        this.muscle(left, right)\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            this.muscle(walk + 1, (walk + 1) % SEED_CORNERS + 1)\n            this.muscle(walk + 1, left)\n            this.muscle(walk + 1, right)\n        }\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            this.face(left, walk + 1, (walk + 1) % SEED_CORNERS + 1)\n            this.face(right, (walk + 1) % SEED_CORNERS + 1, walk + 1)\n        }\n        this.setAltitude(HUNG_ALTITUDE - SEED_RADIUS)\n        this.iterate(0) // output the face geometry, set direction vector, but don't experience time\n        return this\n    }\n\n    public get currentState(): FabricDirection {\n        return this.engine.getCurrentState()\n    }\n\n    public get nextState(): FabricDirection {\n        return this.engine.getNextState()\n    }\n\n    public set nextState(state: FabricDirection) {\n        this.engine.setNextState(state)\n    }\n\n    public iterate(ticks: number): boolean {\n        return !this.engine.iterate(Stage.Busy) // todo\n    }\n\n    public get age(): number {\n        return this.engine.getAge()\n    }\n\n    public setAltitude(altitude: number): number {\n        return this.engine.setAltitude(altitude)\n    }\n\n    public unfold(faceIndex: number, jointNumber: number): FaceSnapshot [] {\n        const apexTag = this.engine.nextJointTag()\n        let oppositeFaceIndex = this.engine.findOppositeFaceIndex(faceIndex)\n        const freshFaces = this.unfoldFace(this.getFaceSnapshot(faceIndex), jointNumber, apexTag)\n        if (oppositeFaceIndex < 1000) { // TODO\n            if (oppositeFaceIndex > faceIndex) {\n                oppositeFaceIndex-- // since faceIndex was deleted\n            }\n            const oppositeFace = this.getFaceSnapshot(oppositeFaceIndex)\n            return this.unfoldFace(oppositeFace, jointNumber, apexTag)\n        } else {\n            return freshFaces\n        }\n    }\n\n    public getFaceSnapshot(faceIndex: number): FaceSnapshot {\n        return new FaceSnapshot(this, this.instance, faceIndex)\n    }\n\n    // ==========================================================\n\n    private face(joint0Index: number, joint1Index: number, joint2Index: number): number {\n        return this.engine.createFace(joint0Index, joint1Index, joint2Index)\n    }\n\n    private muscle(alphaIndex: number, omegaIndex: number): number { // TODO: no more muscles\n        return this.engine.createInterval(alphaIndex, omegaIndex, IntervalRole.ColumnPush, 1, 1, 1, 1)\n    }\n\n    private unfoldFace(faceToReplace: FaceSnapshot, faceJointIndex: number, apexTag: number): FaceSnapshot [] {\n        const jointIndex = faceToReplace.joints.map(faceJoint => faceJoint.jointIndex)\n        const sortedJoints = faceToReplace.joints.sort((a: IJointSnapshot, b: IJointSnapshot) => b.tag - a.tag)\n        const chosenJoint = sortedJoints[faceJointIndex]\n        const faceToReplaceAverageLength = 1 // TODO\n        const apexLocation = new Vector3().add(chosenJoint.location).addScaledVector(faceToReplace.normal, faceToReplaceAverageLength * 0.1)\n        const apexIndex = this.engine.createJoint(apexTag, faceToReplace.laterality, apexLocation.x, apexLocation.y, apexLocation.z)\n        sortedJoints.forEach(faceJoint => {\n            if (faceJoint.jointNumber !== chosenJoint.jointNumber) {\n                this.muscle(faceJoint.jointIndex, apexIndex)\n            }\n        })\n        this.muscle(chosenJoint.jointIndex, apexIndex)\n        const createdFaceIndexes: number[] = []\n        sortedJoints.map(joint => joint.jointNumber).forEach((jointNumber: number, index: number) => { // youngest first\n            switch (jointNumber) {\n                case 0:\n                    createdFaceIndexes[index] = this.face(jointIndex[1], jointIndex[2], apexIndex)\n                    break\n                case 1:\n                    createdFaceIndexes[index] = this.face(jointIndex[2], jointIndex[0], apexIndex)\n                    break\n                case 2:\n                    createdFaceIndexes[index] = this.face(jointIndex[0], jointIndex[1], apexIndex)\n                    break\n            }\n        })\n        faceToReplace.remove()\n        this.instance.forgetDimensions()\n        return createdFaceIndexes\n            .map(index => index - 1) // after removal, since we're above\n            .map(index => new FaceSnapshot(this, this.instance, index))\n    }\n\n    private get engine(): IFabricEngine {\n        return this.instance.engine\n    }\n\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Hexalot } from \"./hexalot\"\nimport { Island } from \"./island\"\n\nexport interface IJourneyData {\n    hexalots: string[]\n}\n\nexport class Leg {\n    constructor(public readonly journey: Journey, public visited: number, public goTo: Hexalot) {\n    }\n\n    public get nextLeg(): Leg | undefined {\n        const nextVisit = this.visited + 1\n        if (nextVisit === this.journey.visits.length) {\n            return undefined\n        }\n        const goTo = this.journey.visits[nextVisit]\n        return new Leg(this.journey, nextVisit, goTo)\n    }\n}\n\nexport function fromOptionalJourneyData(island: Island, hexalot: Hexalot, journeyData?: IJourneyData): Journey | undefined {\n    if (!journeyData) {\n        return undefined\n    }\n    const hexalots: Hexalot[] = []\n    journeyData.hexalots.forEach(hexalotId => {\n        const foundHexalot = island.findHexalot(hexalotId)\n        if (foundHexalot) {\n            hexalots.push(foundHexalot)\n        }\n    })\n    if (hexalots.length < 2 || hexalots[0].id !== hexalot.id) {\n        return undefined\n    }\n    return new Journey(hexalots)\n}\n\nfunction withEndpoint(visits: Hexalot[], hexalot: Hexalot): Journey | undefined {\n    const endIndex = visits.length - 1\n    if (endIndex < 0) {\n        return undefined\n    }\n    const endpoint = visits[endIndex]\n    const newEndpoint = endpoint.centerSpot.adjacentHexalots.find(ah => ah.id === hexalot.id)\n    if (!newEndpoint) {\n        return withEndpoint(visits.slice(0, endIndex), hexalot)\n    }\n    return new Journey(visits.concat(newEndpoint))\n}\n\nexport class Journey {\n\n    constructor(private hexalots: Hexalot[]) {\n        if (hexalots.length === 0) {\n            throw new Error(\"Empty journey\")\n        }\n    }\n\n    public get visits(): Hexalot[] {\n        return this.hexalots\n    }\n\n    public withTruncatedVisit(hexalot: Hexalot): Journey | undefined {\n        const existingIndex = this.hexalots.indexOf(hexalot)\n        if (existingIndex < 0) {\n            return undefined\n        }\n        return new Journey(this.hexalots.slice(0, existingIndex + 1))\n    }\n\n    public withVisit(hexalot: Hexalot): Journey | undefined {\n        return withEndpoint(this.hexalots, hexalot)\n    }\n\n    public get firstLeg(): Leg | undefined {\n        if (this.hexalots.length < 2) {\n            return undefined\n        }\n        return new Leg(this, 0, this.hexalots[1])\n    }\n\n    public get data(): IJourneyData {\n        return {\n            hexalots: this.hexalots.map(hexalot => hexalot.id),\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { HUNG_ALTITUDE } from \"../fabric/gotchi-body\"\nimport { fromOptionalGenomeData, Genome } from \"../genetics/genome\"\nimport { Gotchi, IGotchiFactory } from \"../gotchi/gotchi\"\nimport { RemoteStorage } from \"../storage/remote-storage\"\n\nimport { Island } from \"./island\"\nimport { ICoords, IHexalot } from \"./island-logic\"\nimport { fromOptionalJourneyData, Journey, Leg } from \"./journey\"\nimport { Spot } from \"./spot\"\n\nexport async function fetchGenome(hexalot: Hexalot, storage: RemoteStorage): Promise<void> {\n    if (hexalot.genome) {\n        return\n    }\n    hexalot.genome = await hexalot.fetchGenome(storage)\n    // console.log(`Genome for ${hexalot.id}`, hexalot.genome)\n}\n\nexport async function fetchJourney(hexalot: Hexalot, storage: RemoteStorage, island: Island): Promise<Journey> {\n    const journey = await hexalot.fetchJourney(storage, island)\n    // console.log(`Journey for ${hexalot.id}`, journey)\n    if (!journey) {\n        return hexalot.createRandomJourney()\n    }\n    return journey\n}\n\nexport class Hexalot implements IHexalot {\n    public id: string\n    public genome?: Genome\n    public journey?: Journey\n    public childHexalots: Hexalot[] = []\n    public nonce = 0\n    public visited = false\n\n    constructor(public parentHexalot: Hexalot | undefined,\n        public coords: ICoords,\n        public spots: Spot[],\n        private gotchiFactory: IGotchiFactory) {\n        this.spots[0].centerOfHexalot = this\n        for (let neighbor = 1; neighbor <= 6; neighbor++) {\n            this.spots[neighbor].adjacentHexalots.push(this)\n        }\n        this.spots.forEach(p => p.memberOfHexalot.push(this))\n        if (parentHexalot) {\n            parentHexalot.childHexalots.push(this)\n            this.nonce = parentHexalot.nonce + 1\n        }\n    }\n\n    public get rotation(): number {\n        if (!this.journey || this.journey.visits.length < 2) {\n            return Math.floor(Math.random() * 6)\n        }\n        const first = this.journey.visits[1]\n        return this.centerSpot.adjacentSpots.findIndex(spot => {\n            const adjacent = spot.centerOfHexalot\n            if (!adjacent) {\n                return false\n            }\n            return adjacent.id === first.id\n        })\n    }\n\n    public async fetchGenome(storage: RemoteStorage): Promise<Genome | undefined> {\n        const genomeData = await storage.getGenomeData(this)\n        this.genome = fromOptionalGenomeData(genomeData)\n        return this.genome\n    }\n\n    public async fetchJourney(storage: RemoteStorage, island: Island): Promise<Journey | undefined> {\n        const journeyData = await storage.getJourneyData(this)\n        this.journey = fromOptionalJourneyData(island, this, journeyData)\n        return this.journey\n    }\n\n    public adjustedJourney(hexalot: Hexalot): Journey {\n        if (!this.journey) {\n            return new Journey([this, hexalot])\n        }\n        const truncated = this.journey.withTruncatedVisit(hexalot)\n        if (truncated) {\n            return truncated\n        }\n        const extended = this.journey.withVisit(hexalot)\n        if (extended) {\n            return extended\n        }\n        return this.journey\n    }\n\n    public get firstLeg(): Leg {\n        if (this.journey) {\n            const journeyFirst = this.journey.firstLeg\n            if (journeyFirst) {\n                return journeyFirst\n            }\n        }\n        const random = this.createRandomJourney()\n        const randomFirst = random.firstLeg\n        if (!randomFirst) {\n            throw new Error(\"Unable to create first leg\")\n        }\n        return randomFirst\n    }\n\n    public createRandomJourney(): Journey {\n        return this.journeyOfLength(2)\n    }\n\n    public createNativeGotchi(): Gotchi | undefined {\n        if (!this.genome) {\n            return undefined\n        }\n        return this.gotchiFactory.createGotchiSeed(this, this.rotation, this.genome)\n    }\n\n    public createGotchi(genome: Genome, rotation: number): Gotchi | undefined {\n        return this.gotchiFactory.createGotchiSeed(this, rotation, genome)\n    }\n\n    public get centerSpot(): Spot {\n        return this.spots[0]\n    }\n\n    public get center(): Vector3 {\n        return this.centerSpot.center\n    }\n\n    public get seed(): Vector3 {\n        return new Vector3(0, HUNG_ALTITUDE, 0).add(this.center)\n    }\n\n    private journeyOfLength(visitCount: number): Journey {\n        const journeyVisits: Hexalot[] = [this]\n        while (journeyVisits.length < visitCount + 1) {\n            const endPoint = journeyVisits[journeyVisits.length - 1]\n            const landNeighbors = endPoint.centerSpot.adjacentHexalots.filter(adjacentHexalot => journeyVisits.every(visit => visit.id !== adjacentHexalot.id))\n            if (landNeighbors.length === 0) {\n                // todo: find one anyway if there are to few!\n                break\n            }\n            const randomNeighbor = landNeighbors[Math.floor(Math.random() * landNeighbors.length)]\n            journeyVisits.push(randomNeighbor)\n        }\n        return new Journey(journeyVisits)\n    }\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Face3, Matrix4, Vector3 } from \"three\"\n\nimport { HUNG_ALTITUDE, SPOT_TO_HANGER } from \"../fabric/gotchi-body\"\nimport { MeshKey } from \"../gotchi-view/selector\"\n\nimport {\n    HEXAGON_POINTS,\n    HEXAPOD_PROJECTION,\n    LAND_NORMAL_SPREAD,\n    SCALE_X,\n    SCALE_Y,\n    SIX,\n    SURFACE_LAND_COLOR,\n    SURFACE_UNKNOWN_COLOR,\n    SURFACE_WATER_COLOR,\n    UP,\n    WATER_NORMAL_SPREAD,\n} from \"./constants\"\nimport { Hexalot } from \"./hexalot\"\nimport { ICoords, ISpot, isSpotLegal, Surface } from \"./island-logic\"\n\nexport class Spot implements ISpot {\n    public center: Vector3\n    public adjacentSpots: Spot[] = []\n    public memberOfHexalot: Hexalot[] = []\n    public adjacentHexalots: Hexalot[] = []\n    public centerOfHexalot?: Hexalot\n    public connected = false\n    public faceNames: string[] = []\n    public surface = Surface.Unknown\n    public free = false\n\n    constructor(public coords: ICoords) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n    }\n\n    public isMemberOfOneHexalot(id: string): boolean {\n        return this.memberOfHexalot.length === 1 && this.memberOfHexalot[0].id === id\n    }\n\n    public addSurfaceGeometry(meshKey: MeshKey, index: number, vertices: Vector3[], faces: Face3[]): void {\n        const sizeFactor = isSpotLegal(this) ? 1 : 0.9\n        vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(\n            hexPoint.x * sizeFactor + this.center.x,\n            hexPoint.y * sizeFactor + this.center.y,\n            hexPoint.z * sizeFactor + this.center.z,\n        )))\n        vertices.push(this.center)\n        const normalSpread = this.normalSpread\n        for (let a = 0; a < SIX; a++) {\n            const offset = index * (HEXAGON_POINTS.length + 1)\n            const b = (a + 1) % SIX\n            const vertexNormals = [\n                UP,\n                new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], normalSpread).normalize(),\n                new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], normalSpread).normalize(),\n            ]\n            this.faceNames.push(`${meshKey}:${faces.length}`)\n            faces.push(new Face3(offset + SIX, offset + a, offset + b, vertexNormals, this.color))\n        }\n    }\n\n    public addHangerGeometry(vertices: Vector3[]): void {\n        for (let a = 0; a < SIX; a++) {\n            const hexPoint = HEXAGON_POINTS[a]\n            const nextHexPoint = HEXAGON_POINTS[(a + 1) % SIX]\n            vertices.push(new Vector3().addVectors(this.center, SPOT_TO_HANGER))\n            vertices.push(new Vector3().add(this.center).addScaledVector(hexPoint, HEXAPOD_PROJECTION))\n            vertices.push(new Vector3().add(this.center).addScaledVector(hexPoint, HEXAPOD_PROJECTION))\n            vertices.push(new Vector3().add(this.center).addScaledVector(nextHexPoint, HEXAPOD_PROJECTION))\n        }\n    }\n\n    public addSeed(rotation: number, meshKey: MeshKey, vertices: Vector3[], faces: Face3[]): void {\n        const SEED_CORNERS = 5 // TODO: get rid of the seed\n        const toTransform: Vector3[] = []\n        const hanger = new Vector3(0, HUNG_ALTITUDE, 0)\n        const offset = vertices.length\n        const R = 1\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            const angle = walk * Math.PI * 2 / SEED_CORNERS\n            const location = new Vector3(R * Math.sin(angle) + hanger.x, R * Math.cos(angle) + hanger.y, hanger.z)\n            toTransform.push(location)\n            vertices.push(location)\n        }\n        const left = vertices.length\n        const negative = new Vector3(hanger.x, hanger.y, hanger.z - R)\n        vertices.push(negative)\n        toTransform.push(negative)\n        const right = vertices.length\n        const positive = new Vector3(hanger.x, hanger.y, hanger.z + R)\n        vertices.push(positive)\n        toTransform.push(positive)\n        const rotationMatrix = new Matrix4().makeRotationY(Math.PI / 3 * rotation)\n        const translationMatrix = new Matrix4().makeTranslation(this.center.x, this.center.y, this.center.z)\n        const tranformer = translationMatrix.multiply(rotationMatrix)\n        toTransform.forEach(point => point.applyMatrix4(tranformer))\n        for (let walk = 0; walk < SEED_CORNERS; walk++) {\n            const next = offset + (walk + 1) % SEED_CORNERS\n            const current = offset + walk\n            this.faceNames.push(`${meshKey}:${faces.length}`)\n            faces.push(new Face3(left, current, next))\n            this.faceNames.push(`${meshKey}:${faces.length}`)\n            faces.push(new Face3(right, next, current))\n        }\n    }\n\n    public addRaisedHexagon(vertices: Vector3[], height: number): void {\n        const vertex = (hexPoint: Vector3) => vertices.push(new Vector3(0, height, 0).add(this.center).add(hexPoint))\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            vertex(HEXAGON_POINTS[a])\n            vertex(HEXAGON_POINTS[b])\n        }\n    }\n\n    public addRaisedHexagonParts(vertices: Vector3[], height: number, outerIndex: number, side: number): void {\n        const direction = (Math.floor(outerIndex / side) + 5) % 6\n        const corner = outerIndex % side === 0\n        const vertex = (hexPoint: Vector3) => vertices.push(new Vector3(0, height, 0).add(this.center).add(hexPoint))\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            if (direction === a || direction === b || (corner && direction === (b + 1) % SIX)) {\n                vertex(HEXAGON_POINTS[a])\n                vertex(HEXAGON_POINTS[b])\n            }\n        }\n    }\n\n    public isCandidateHexalot(vacantHexalot?: Hexalot): boolean {\n        if (this.surface !== Surface.Land) {\n            return false\n        }\n        const centerOfHexalot = this.centerOfHexalot\n        if (centerOfHexalot) {\n            if (!vacantHexalot) {\n                return false\n            }\n            return centerOfHexalot.id === vacantHexalot.id\n        }\n        if (vacantHexalot) {\n            return this.adjacentHexalots.some(hexalot => hexalot.id !== vacantHexalot.id)\n        }\n        return this.adjacentHexalots.length > 0\n    }\n\n    private get color(): Color {\n        switch (this.surface) {\n            case Surface.Land:\n                return SURFACE_LAND_COLOR\n            case Surface.Water:\n                return SURFACE_WATER_COLOR\n            default:\n                return SURFACE_UNKNOWN_COLOR\n        }\n    }\n\n    private get normalSpread(): number {\n        switch (this.surface) {\n            case Surface.Land:\n                return LAND_NORMAL_SPREAD\n            case Surface.Water:\n                return WATER_NORMAL_SPREAD\n            default:\n                return 0\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IGotchiFactory } from \"../gotchi/gotchi\"\nimport { RemoteStorage } from \"../storage/remote-storage\"\n\nimport { Hexalot } from \"./hexalot\"\nimport {\n    calculateHexalotId,\n    equals,\n    fillIsland,\n    findParentHexalot,\n    findSpot,\n    HEXALOT_SHAPE,\n    ICoords,\n    IIsland,\n    IIslandData,\n    plus,\n} from \"./island-logic\"\nimport { Spot } from \"./spot\"\n\nexport class Island implements IIsland {\n    public readonly name: string\n    public spots: Spot[] = []\n    public hexalots: Hexalot[] = []\n    public vacantHexalot?: Hexalot\n\n    constructor(islandData: IIslandData, public readonly gotchiFactory: IGotchiFactory, storage: RemoteStorage, nonce: number) {\n        fillIsland(islandData, this)\n        this.name = islandData.name\n    }\n\n    public get singleHexalot(): Hexalot | undefined {\n        return this.hexalots.length !== 1 ? undefined : this.hexalots[0]\n    }\n\n    public findHexalot(id: string): Hexalot | undefined {\n        return this.hexalots.find(hexalot => hexalot.id === id)\n    }\n\n    public createHexalot(spot: Spot): Hexalot {\n        return this.hexalotAroundSpot(spot)\n    }\n\n    public get midpoint(): Vector3 {\n        return this.spots\n            .reduce((sum: Vector3, spot: Spot) => sum.add(spot.center), new Vector3())\n            .multiplyScalar(1 / this.spots.length)\n    }\n\n    public hexalotAroundSpot(spot: Spot): Hexalot {\n        return this.getOrCreateHexalot(findParentHexalot(spot) as Hexalot, spot.coords)\n    }\n\n    public getOrCreateHexalot(parent: Hexalot | undefined, coords: ICoords): Hexalot {\n        const existing = this.hexalots.find(existingHexalot => equals(existingHexalot.coords, coords))\n        if (existing) {\n            return existing\n        }\n        const spots = HEXALOT_SHAPE.map(c => this.getOrCreateSpot(plus(c, coords)))\n        const hexalot = new Hexalot(parent, coords, spots, this.gotchiFactory)\n        calculateHexalotId(hexalot)\n        this.hexalots.push(hexalot)\n        return hexalot\n    }\n\n    // ================================================================================================\n\n    private getOrCreateSpot(coords: ICoords): Spot {\n        const existing = findSpot(this, coords)\n        if (existing) {\n            return existing as Spot\n        }\n        const spot = new Spot(coords)\n        this.spots.push(spot)\n        return spot\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { PerspectiveCamera, Vector3 } from \"three\"\n\nimport { Orbit } from \"../view/orbit\"\n\nimport { IFlightState } from \"./flight-state\"\n\nexport const INITIAL_DISTANCE = 15000\nexport const MINIMUM_DISTANCE = 3\n\nconst MIN_POLAR_ANGLE = Math.PI * 0.001\nconst MAX_POLAR_ANGLE = 0.999 * Math.PI / 2\n\nexport function polarAngle(aboveness: number): number { // aboveness [0,1]\n    return (1 - aboveness) * MAX_POLAR_ANGLE + aboveness * MIN_POLAR_ANGLE\n}\n\nconst TOWARDS_UPWARDS = 0.3\nconst TOWARDS_TARGET = 0.02\n\nexport class Flight {\n    private target = new Vector3()\n    private targetToCamera = new Vector3()\n    private targetToMovingTarget = new Vector3()\n\n    constructor(flightState: IFlightState, public readonly orbitGiven?: Orbit) {\n        const orbit = this.orbit\n        orbit.enabled = true\n        orbit.minPolarAngle = MIN_POLAR_ANGLE\n        orbit.maxPolarAngle = MAX_POLAR_ANGLE\n        orbit.maxDistance = INITIAL_DISTANCE\n        orbit.minDistance = MINIMUM_DISTANCE\n        orbit.zoomSpeed = 0.5\n        orbit.autoRotateSpeed = 0.5\n        orbit.target = this.target\n        orbit.enablePan = false\n        const angleAboveHorizon = (flightState.tooHorizontal + flightState.tooVertical) / 2\n        const distance = (flightState.tooFar + flightState.tooClose) / 2\n        const y = distance * Math.sin(angleAboveHorizon)\n        const z = distance * Math.cos(angleAboveHorizon)\n        this.camera.position.set(0, y, z)\n        const target = flightState.target\n        console.log(\"target\", target)\n        this.target.set(target.x, target.y, target.z)\n    }\n\n    public set autoRotate(rotate: boolean) {\n        this.orbit.autoRotate = rotate\n    }\n\n    public stayUpright(): void {\n        const up = this.camera.up\n        up.y += TOWARDS_UPWARDS\n        up.normalize()\n    }\n\n    public moveTowardsTarget(movingTarget: Vector3): void {\n        this.target.add(this.targetToMovingTarget.subVectors(movingTarget, this.target).multiplyScalar(TOWARDS_TARGET))\n    }\n\n    public cameraFollowDistance(flightState: IFlightState): boolean {\n        const currentDistance = this.calculateTargetToCamera().length()\n        if (currentDistance > flightState.tooClose && currentDistance < flightState.tooFar) {\n            return false\n        }\n        const distance = (flightState.tooFar + flightState.tooClose) / 2\n        const nextDistance = currentDistance * (1 - flightState.towardsDistance) + distance * flightState.towardsDistance\n        this.targetToCamera.normalize().multiplyScalar(nextDistance)\n        this.camera.position.addVectors(this.target, this.targetToCamera)\n        return true\n    }\n\n    public cameraFollowPolarAngle(flightState: IFlightState): boolean {\n        const currentPolarAngle = this.orbit.getPolarAngle()\n        if (currentPolarAngle < flightState.tooVertical) {\n            this.orbit.rotateUp(-flightState.towardsPolarAngle)\n            return true\n        }\n        if (currentPolarAngle > flightState.tooHorizontal) {\n            this.orbit.rotateUp(flightState.towardsPolarAngle)\n            return true\n        }\n        return false\n    }\n\n    public update(): void {\n        this.orbit.update()\n    }\n\n    public rotateLeft(): void {\n        // this.orbit.rotateLeft(0.01)\n    }\n\n    public set enabled(enable: boolean) {\n        this.orbit.enabled = enable\n    }\n\n    public get cameraPosition(): Vector3 {\n        return this.camera.position\n    }\n\n    private calculateTargetToCamera(): Vector3 {\n        return this.targetToCamera.subVectors(this.camera.position, this.target)\n    }\n\n    private get camera(): PerspectiveCamera {\n        return this.orbit.object\n    }\n\n    private get orbit(): Orbit {\n        if (!this.orbitGiven) {\n            throw new Error()\n        }\n        return this.orbitGiven\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Evolution } from \"../gotchi/evolution\"\nimport { Jockey } from \"../gotchi/jockey\"\nimport { Hexalot } from \"../island/hexalot\"\nimport { Island } from \"../island/island\"\nimport { Spot } from \"../island/spot\"\nimport { AppMode } from \"../state/app-state\"\n\nimport { INITIAL_DISTANCE, MINIMUM_DISTANCE, polarAngle } from \"./flight\"\n\nexport interface IFlightState {\n    readonly target: Vector3\n    readonly tooFar: number\n    readonly tooClose: number\n    readonly towardsDistance: number\n    readonly tooVertical: number\n    readonly tooHorizontal: number\n    readonly towardsPolarAngle: number\n    readonly appMode: AppMode\n}\n\nexport function JockeyTarget(jockey: Jockey): IFlightState {\n    return <IFlightState>{\n        get target(): Vector3 {\n            return jockey.fabric.midpoint\n        },\n        tooFar: MINIMUM_DISTANCE * 1.4,\n        tooClose: MINIMUM_DISTANCE * 1.2,\n        towardsDistance: 0.04,\n        tooVertical: polarAngle(0.1),\n        tooHorizontal: polarAngle(0),\n        towardsPolarAngle: 0.005,\n        appMode: AppMode.Riding,\n    }\n}\n\nexport function EvolutionTarget(evolution: Evolution): IFlightState {\n    return <IFlightState>{\n        get target(): Vector3 {\n            return evolution.midpoint\n        },\n        tooFar: 35,\n        tooClose: 25,\n        towardsDistance: 0.1,\n        tooVertical: polarAngle(0.1),\n        tooHorizontal: polarAngle(0),\n        towardsPolarAngle: 0.005,\n        appMode: AppMode.Evolving,\n    }\n}\n\nconst HEXALOT_DISTANCE = 450\n\nexport function HexalotTarget(hexalot: Hexalot, appMode: AppMode): IFlightState {\n    return <IFlightState>{\n        get target(): Vector3 {\n            return hexalot.genome ? hexalot.seed : hexalot.center\n        },\n        tooFar: HEXALOT_DISTANCE * 1.05,\n        tooClose: HEXALOT_DISTANCE * 0.95,\n        towardsDistance: 0.08,\n        tooVertical: polarAngle(1),\n        tooHorizontal: polarAngle(0.9),\n        towardsPolarAngle: 0.008,\n        appMode,\n    }\n}\n\nexport function WithHexalot(flightState: IFlightState, hexalot: Hexalot): IFlightState {\n    return <IFlightState>{\n        ...flightState,\n        get target(): Vector3 {\n            return hexalot.genome ? hexalot.seed : hexalot.center\n        },\n    }\n}\n\nexport function IslandTarget(island: Island, appMode: AppMode): IFlightState {\n    return <IFlightState>{\n        get target(): Vector3 {\n            return island.midpoint\n        },\n        tooFar: 105,\n        tooClose: 95,\n        towardsDistance: 0.1,\n        tooVertical: polarAngle(1),\n        tooHorizontal: polarAngle(0.9),\n        towardsPolarAngle: 0.01,\n        appMode,\n    }\n}\n\nexport function WithSpot(flightState: IFlightState, spot: Spot): IFlightState {\n    return <IFlightState>{...flightState, target: spot.center}\n}\n\nexport function InitialFlightState(): IFlightState {\n    return <IFlightState>{\n        target: new Vector3(),\n        tooFar: INITIAL_DISTANCE + 1,\n        tooClose: INITIAL_DISTANCE - 1,\n        towardsDistance: 0.5,\n        tooVertical: polarAngle(0),\n        tooHorizontal: polarAngle(0.1),\n        towardsPolarAngle: 0.01,\n        appMode: AppMode.Flying,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\"\nimport { Vector3 } from \"three\"\n\nimport { AppEvent } from \"../app-event\"\nimport { FabricDirection } from \"../fabric/fabric-engine\"\nimport { ITERATIONS_PER_TICK } from \"../fabric/gotchi-body\"\nimport { fromGenomeData, Genome } from \"../genetics/genome\"\nimport { Hexalot } from \"../island/hexalot\"\nimport { Leg } from \"../island/journey\"\n\nimport { IEvaluatedJockey, Jockey } from \"./jockey\"\n\nconst MUTATION_COUNT = 5\nconst SURVIVAL_RATE = 0.66\nconst MIN_LIFELENGTH = 15000\nconst MAX_LIFELENGTH = 25000\nconst INCREMENT_LIFELENGTH = 1000\n\nexport class Evolution {\n    public currentJockeys: BehaviorSubject<Jockey[]> = new BehaviorSubject<Jockey[]>([])\n    private midpointVector = new Vector3()\n    private rebooting = false\n    private rotation: number\n    private maxAge: number\n\n    constructor(\n        public readonly home: Hexalot,\n        private readonly prototypeJockey?: Jockey,\n    ) {\n        const rotateToLeg = this.leg\n        if (prototypeJockey && prototypeJockey.nextState !== FabricDirection.Rest) {\n            throw new Error(\"Cannot create evolution from jockey which is not resting\")\n        }\n        home.centerSpot.adjacentSpots.forEach((spot, index) => {\n            const hexalot = spot.centerOfHexalot\n            if (hexalot && rotateToLeg.goTo.id === hexalot.id) {\n                this.rotation = index\n            }\n        })\n        this.currentJockeys.next(this.createPopulation())\n        this.maxAge = this.startAge + MIN_LIFELENGTH\n    }\n\n    public get leg(): Leg {\n        return this.prototypeJockey ? this.prototypeJockey.leg : this.home.firstLeg\n    }\n\n    public get startAge(): number {\n        return this.prototypeJockey ? this.prototypeJockey.age : 0\n    }\n\n    public get midpoint(): Vector3 {\n        const jockeys = this.currentJockeys.getValue()\n        if (jockeys.length === 0) {\n            return this.midpointVector\n        }\n        const sum = new Vector3()\n        jockeys.map(jockey => jockey.fabric.midpoint).forEach(midpoint => sum.add(midpoint))\n        this.midpointVector.copy(sum.multiplyScalar(1 / jockeys.length))\n        return this.midpointVector\n    }\n\n    public iterate(): void {\n        const jockeys = this.currentJockeys.getValue()\n        if (jockeys.length === 0 || this.rebooting) {\n            return\n        }\n        jockeys.forEach(jockey => jockey.reorient())\n        const moving = jockeys.filter(jockey => jockey.age < this.maxAge)\n        if (moving.length === 0) {\n            this.adjustAgeLimit()\n            this.nextGenerationFromSurvival()\n            return\n        }\n        moving.forEach(jockey => {\n            const behind = this.maxAge - jockey.age\n            const appEvent = jockey.iterate(behind > ITERATIONS_PER_TICK ? ITERATIONS_PER_TICK : behind)\n            if (appEvent === AppEvent.Cycle) {\n                console.log(\"mutate\")\n                jockey.mutateGenome(1)\n            }\n        })\n    }\n\n    public recycle(): void {\n        this.currentJockeys.getValue().forEach(jockey => jockey.recycle())\n        if (this.prototypeJockey) {\n            this.prototypeJockey.recycle()\n        }\n    }\n\n    public get extractFittest(): Jockey | undefined {\n        const strongest = this.strongest\n        if (!strongest) {\n            return undefined\n        }\n        const exceptIndex = strongest.jockey.gotchi.index\n        this.currentJockeys.next(this.currentJockeys.getValue().filter(jockey => jockey.gotchi.index !== exceptIndex))\n        return strongest.jockey\n    }\n\n    // Privates =============================================================\n\n    private adjustAgeLimit(): void {\n        this.maxAge += INCREMENT_LIFELENGTH\n        const lifelength = this.maxAge - this.startAge\n        if (lifelength > MAX_LIFELENGTH) {\n            this.maxAge = this.startAge + MIN_LIFELENGTH // start again\n        }\n        console.log(`Age: [${this.startAge} to ${this.maxAge}] ${lifelength}`)\n    }\n\n    private get rankedJockeys(): IEvaluatedJockey[] {\n        let jockeys = this.currentJockeys.getValue()\n        const frozenHero = this.prototypeJockey\n        if (frozenHero) {\n            jockeys = jockeys.filter(e => e.index !== frozenHero.index)\n        }\n        const evaluated = jockeys.map(jockey => jockey.evaluated)\n        return evaluated.sort((a: IEvaluatedJockey, b: IEvaluatedJockey) => a.distanceFromTarget - b.distanceFromTarget)\n    }\n\n    private get strongest(): IEvaluatedJockey | undefined {\n        return this.rankedJockeys[0]\n    }\n\n    private nextGenerationFromSurvival(): void {\n        this.rebooting = true\n        const ranked: IEvaluatedJockey[] = this.rankedJockeys\n        const dead = ranked.splice(Math.ceil(ranked.length * SURVIVAL_RATE))\n        // dead.forEach(e => console.log(`Dead ${e.jockey.index}:  ${e.distanceFromTarget}`))\n        // ranked.forEach(e => console.log(`Ranked ${e.jockey.index}:  ${e.distanceFromTarget}`))\n        this.currentJockeys.next(ranked.map(e => e.jockey))\n        dead.forEach(e => e.jockey.recycle())\n        setTimeout(() => {\n            const nextGeneration: Jockey[] = []\n            dead.map(e => e.jockey).forEach(() => {\n                const luckyParent = ranked[Math.floor(ranked.length * Math.random())].jockey\n                const offspring = this.createOffspring(luckyParent)\n                if (offspring) {\n                    nextGeneration.push(offspring)\n                }\n            })\n            this.currentJockeys.next([])\n            setTimeout(() => {\n                ranked.forEach(e => e.jockey.recycle())\n                ranked.map(e => e.jockey).forEach(jockey => {\n                    const reborn = this.createJockey(jockey.leg, fromGenomeData(jockey.genomeData))\n                    if (reborn) {\n                        nextGeneration.push(reborn)\n                    }\n                })\n                this.currentJockeys.next(nextGeneration)\n                this.rebooting = false\n            }, 500)\n        }, 500)\n    }\n\n    private createPopulation(): Jockey[] {\n        const genome = this.home.genome\n        if (!genome) {\n            throw new Error(\"No genome!\")\n        }\n        let mutatingGenome: Genome | undefined = fromGenomeData(genome.genomeData)\n        const jockeys: Jockey[] = []\n        while (true) {\n            const evolvingJockey = this.createJockey(this.leg, mutatingGenome)\n            if (!evolvingJockey) {\n                break\n            }\n            jockeys.push(evolvingJockey)\n            mutatingGenome = mutatingGenome.withMutatedBehavior(evolvingJockey.nextState, MUTATION_COUNT)\n        }\n        return jockeys\n    }\n\n    private createOffspring(parent: Jockey): Jockey | undefined {\n        const offspringGenome = fromGenomeData(parent.offspringGenome)\n        return this.createJockey(parent.leg, offspringGenome)\n    }\n\n    private createJockey(leg: Leg, genome: Genome): Jockey | undefined {\n        const prototype = this.prototypeJockey\n        const gotchi = prototype ? prototype.createGotchi(genome) : this.home.createGotchi(genome, this.rotation)\n        if (!gotchi) {\n            return undefined\n        }\n        return new Jockey(gotchi, leg, fromGenomeData(gotchi.genomeData))\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport {\n    EvolutionTarget,\n    HexalotTarget,\n    IFlightState,\n    JockeyTarget,\n    WithHexalot,\n    WithSpot,\n} from \"../gotchi-view/flight-state\"\nimport { Evolution } from \"../gotchi/evolution\"\nimport { Jockey } from \"../gotchi/jockey\"\nimport { fetchGenome, fetchJourney, Hexalot } from \"../island/hexalot\"\nimport { Island } from \"../island/island\"\nimport {\n    calculateHexalotId,\n    IIslandData,\n    isIslandLegal,\n    isSpotLegal,\n    recalculateIsland,\n    Surface,\n} from \"../island/island-logic\"\nimport { Journey } from \"../island/journey\"\nimport { Spot } from \"../island/spot\"\n\nimport { AppMode, IAppState } from \"./app-state\"\n\nexport class Transition {\n    private nextState: IAppState\n\n    constructor(prev: IAppState) {\n        this.nextState = {...prev, nonce: prev.nonce + 1}\n    }\n\n    public get appState(): IAppState {\n        return this.nextState\n    }\n\n    public async withIsland(island: Island, islandData: IIslandData): Promise<Transition> {\n        const withNoneSelected = await this.withSelectedSpot()\n        withNoneSelected.withJourney().withoutEvolution.nextState = {...this.nextState, island, islandData}\n        return this\n    }\n\n    public withFlightState(flightState: IFlightState): Transition {\n        this.nextState = {...this.nextState, flightState}\n        return this\n    }\n\n    public get terraforming(): Transition {\n        this.nextState = {...this.nextState, appMode: AppMode.Terraforming}\n        return this\n    }\n\n    public get planning(): Transition {\n        const homeHexalot = this.nextState.homeHexalot\n        if (homeHexalot) {\n            const flightTarget = HexalotTarget(homeHexalot, AppMode.Planning)\n            this.nextState = {...this.nextState, appMode: AppMode.Flying, flightState: flightTarget}\n        }\n        return this\n    }\n\n    public get exploring(): Transition {\n        this.nextState = {...this.nextState, appMode: AppMode.Exploring}\n        return this\n    }\n\n    public reachedFlightStateTarget(flightState: IFlightState): Transition {\n        this.nextState = {...this.nextState, appMode: flightState.appMode}\n        return this\n    }\n\n    public withJourney(journey?: Journey): Transition {\n        this.nextState = {...this.nextState, journey}\n        return this\n    }\n\n    public async withSelectedHexalot(selectedHexalot?: Hexalot): Promise<Transition> {\n        this.nextState = {...this.nextState, selectedHexalot}\n        const island = this.nextState.island\n        if (selectedHexalot) {\n            const flightState = WithHexalot(this.nextState.flightState, selectedHexalot)\n            this.nextState = {...this.nextState, flightState}\n            await fetchGenome(selectedHexalot, this.nextState.storage)\n            if (selectedHexalot.journey) {\n                return this.withJourney(selectedHexalot.journey)\n            } else if (island) {\n                const journey = await fetchJourney(selectedHexalot, this.nextState.storage, island)\n                selectedHexalot.journey = journey\n                return this.withJourney(journey)\n            }\n        }\n        return this\n    }\n\n    public async withSelectedSpot(selectedSpot?: Spot): Promise<Transition> {\n        this.nextState = {...this.nextState, selectedSpot}\n        if (selectedSpot) {\n            const flightState = WithSpot(this.nextState.flightState, selectedSpot)\n            this.nextState = {...this.nextState, flightState}\n            return this.withSelectedHexalot(selectedSpot.centerOfHexalot)\n        }\n        return this.withSelectedHexalot()\n    }\n\n    public async withHomeHexalot(homeHexalot?: Hexalot): Promise<Transition> {\n        const island = this.nextState.island\n        if (this.nextState.homeHexalot || !island) {\n            throw new Error(\"Not allowed\")\n        }\n        this.nextState = {...this.nextState, homeHexalot}\n        if (!homeHexalot) {\n            return this.withJourney().withSelectedSpot()\n        }\n        return this.withSelectedSpot(homeHexalot.centerSpot)\n    }\n\n    public withJockey(jockey: Jockey): Transition {\n        this.withoutJockey.nextState = {\n            ...this.nextState,\n            jockey,\n            journey: jockey.leg.journey,\n            flightState: JockeyTarget(jockey),\n            appMode: AppMode.Flying,\n        }\n        return this\n    }\n\n    public get withJockeyStopped(): Transition {\n        const appMode = AppMode.Stopped\n        this.nextState = {...this.nextState, appMode}\n        return this\n    }\n\n    public get withJockeyRiding(): Transition {\n        const appMode = AppMode.Riding\n        this.nextState = {...this.nextState, appMode}\n        return this\n    }\n\n    public withEvolution(homeHexalot: Hexalot): Transition {\n        const evolution = new Evolution(homeHexalot, this.appState.jockey)\n        this.withoutEvolution.nextState = {\n            ...this.nextState,\n            evolution,\n            jockey: undefined,\n            flightState: EvolutionTarget(evolution),\n            appMode: AppMode.Flying,\n        }\n        return this\n    }\n\n    public get withoutJockey(): Transition {\n        const jockey = this.nextState.jockey\n        if (jockey) {\n            jockey.gotchi.recycle()\n            this.nextState = {...this.nextState, jockey: undefined, appMode: AppMode.Flying}\n        }\n        return this\n    }\n\n    public get withoutEvolution(): Transition {\n        const evolution = this.nextState.evolution\n        if (evolution) {\n            evolution.recycle()\n            this.nextState = {...this.nextState, evolution: undefined, appMode: AppMode.Flying}\n        }\n        return this\n    }\n\n    public get withRestructure(): Transition {\n        const island = this.nextState.island\n        if (!island) {\n            return this\n        }\n        recalculateIsland(island)\n        const hexalots = island.hexalots\n        const spots = island.spots\n        const vacant = island.vacantHexalot\n        if (hexalots.length === 1) {\n            spots.forEach(spot => spot.free = true)\n        } else if (vacant) {\n            spots.forEach(spot => spot.free = spot.memberOfHexalot.every(h => h.id === vacant.id))\n        } else {\n            spots.forEach(spot => spot.free = false)\n        }\n        hexalots.forEach(calculateHexalotId)\n        const islandIsLegal = isIslandLegal(island)\n        this.nextState = {...this.nextState, islandIsLegal}\n        const singleHexalot = island.singleHexalot\n        if (!islandIsLegal && singleHexalot) {\n            const flightState = HexalotTarget(singleHexalot, AppMode.Terraforming)\n            this.nextState = {...this.nextState, flightState}\n        }\n        return this\n    }\n\n    public async withSurface(surface: Surface): Promise<Transition> {\n        const nextState = this.nextState\n        const selectedSpot = nextState.selectedSpot\n        const island = nextState.island\n        if (!island || !selectedSpot) {\n            return this\n        }\n        selectedSpot.surface = surface\n        selectedSpot.memberOfHexalot.forEach(calculateHexalotId)\n        const nextFree = selectedSpot.adjacentSpots.find(s => s.free && s.surface === Surface.Unknown)\n        if (nextFree) {\n            return this.withSelectedSpot(nextFree)\n        }\n        const anyFree = island.spots.find(s => s.free && s.surface === Surface.Unknown)\n        if (anyFree) {\n            return this.withSelectedSpot(anyFree)\n        }\n        const illegal = island.spots.find(s => !isSpotLegal(s))\n        if (illegal) {\n            return this.withSelectedSpot(illegal)\n        }\n        const vacantHexalot = island.vacantHexalot\n        if (vacantHexalot) {\n            return this.withSelectedSpot(vacantHexalot.centerSpot)\n        }\n        return this\n    }\n\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { freshGenome, fromGenomeData } from \"../genetics/genome\"\nimport { Jockey } from \"../gotchi/jockey\"\nimport { Hexalot } from \"../island/hexalot\"\nimport { Island } from \"../island/island\"\nimport { isIslandLegal, isSpotLegal, Surface } from \"../island/island-logic\"\n\nimport { AppMode, Command, IAppState } from \"./app-state\"\nimport { Transition } from \"./transition\"\n\nexport class CommandHandler {\n\n    private trans: Transition\n\n    constructor(appState: IAppState) {\n        this.trans = new Transition(appState)\n    }\n\n    private static async claimHexalot(appState: IAppState, hexalot: Hexalot): Promise<IAppState | undefined> {\n        const existingIsland = appState.island\n        if (!existingIsland) {\n            console.warn(\"No existing island\")\n            return undefined\n        }\n        const islandData = await appState.storage.claimHexalot(existingIsland, hexalot, freshGenome().genomeData)\n        if (!islandData) {\n            console.warn(\"No island data arrived\")\n            return undefined\n        }\n        const mode = AppMode.Exploring\n        const islandIsLegal = false\n        const island = new Island(islandData, existingIsland.gotchiFactory, appState.storage, appState.nonce)\n        const appStateClone: IAppState = {...appState, nonce: appState.nonce + 1, island, appMode: mode, islandIsLegal}\n        return (await new Transition(appStateClone).withHomeHexalot(hexalot)).withRestructure.appState\n    }\n\n    public async afterCommand(command: Command, location: Vector3): Promise<IAppState> {\n\n        const trans = this.trans\n        const appState = trans.appState\n        const island = appState.island\n        const islandData = appState.islandData\n\n        if (!island) {\n            return this.trans.appState\n        }\n\n        const homeHexalot = appState.homeHexalot\n        const hexalot = appState.selectedHexalot\n        const jockey = appState.jockey\n        const spot = appState.selectedSpot\n        const vacant = island.vacantHexalot\n        const singleHexalot = island.hexalots.length === 1 ? island.hexalots[0] : undefined\n\n        switch (command) {\n\n\n            case Command.DiscardGenes:\n                if (homeHexalot) {\n                    homeHexalot.genome = freshGenome()\n                }\n                return appState\n\n\n            case Command.Home:\n                if (appState.jockey) {\n                    const atJockeyHome = await trans.withSelectedSpot(appState.jockey.gotchi.home.centerSpot)\n                    return atJockeyHome.withoutJockey.exploring.appState\n                }\n                if (homeHexalot) {\n                    const withHomeSelected = await trans.withSelectedSpot(homeHexalot.centerSpot)\n                    return withHomeSelected.withoutEvolution.exploring.appState\n                }\n                if (hexalot) {\n                    const withUnselected = await trans.withSelectedSpot()\n                    return withUnselected.withJourney().exploring.appState\n                }\n                return appState\n\n\n            case Command.Ride:\n                if (hexalot) {\n                    const evolution = appState.evolution\n                    if (evolution && homeHexalot) {\n                        const fittest = evolution.extractFittest\n                        if (fittest) {\n                            const fittestData = fittest.genomeData\n                            homeHexalot.genome = fromGenomeData(fittestData)\n                            appState.storage.setGenomeData(homeHexalot, fittestData).then(() => {\n                                console.log(\"genome saved\")\n                            })\n                            return trans.withoutEvolution.withJockey(fittest).appState\n                        }\n                    }\n                    const newbornGotchi = hexalot.createNativeGotchi()\n                    if (newbornGotchi) {\n                        const newJockey = new Jockey(newbornGotchi, hexalot.firstLeg)\n                        return trans.withJockey(newJockey).appState\n                    }\n                }\n                return appState\n\n\n            case Command.Evolve:\n                if (homeHexalot) {\n                    if (jockey && !jockey.isResting) {\n                        throw new Error(\"Cannot evolve\")\n                    }\n                    return trans.withEvolution(homeHexalot).appState\n                }\n                return appState\n\n\n            case Command.Start:\n                if (jockey) {\n                    jockey.startMoving()\n                    return trans.withJockeyRiding.appState\n                }\n                return appState\n\n\n            case Command.Stop:\n                if (jockey) {\n                    jockey.stopMoving()\n                    return trans.withJockeyStopped.appState\n                }\n                return appState\n\n\n            case Command.MakeLand:\n                if (spot && spot.free) {\n                    return (await trans.withSurface(Surface.Land)).withRestructure.appState\n                }\n                return appState\n\n\n            case Command.MakeWater:\n                if (spot && spot.free) {\n                    return (await trans.withSurface(Surface.Water)).withRestructure.appState\n                }\n                return appState\n\n\n            case Command.Terraform:\n                const unknownSpot = island.spots.find(s => s.surface === Surface.Unknown)\n                if (unknownSpot) {\n                    return (await trans.withSelectedSpot(unknownSpot)).appState\n                }\n                const illegalSpot = island.spots.find(s => !isSpotLegal(s))\n                if (illegalSpot) {\n                    return (await trans.withSelectedSpot(illegalSpot)).appState\n                }\n                return appState\n\n\n            case Command.Cancel:\n                const nonce = appState.nonce + 1\n                if (!islandData) {\n                    return appState\n                }\n                const originalIsland = new Island(islandData, island.gotchiFactory, appState.storage, nonce)\n                const withIsland = await trans.withIsland(originalIsland, islandData)\n                return withIsland.exploring.withRestructure.appState\n\n\n            case Command.ClaimHexalot:\n                if (!homeHexalot && hexalot && isIslandLegal(island) && (singleHexalot || vacant && vacant.id === hexalot.id)) {\n                    const newState = await CommandHandler.claimHexalot(appState, hexalot)\n                    if (newState) {\n                        return newState\n                    }\n                }\n                return appState\n\n\n            case Command.Plan:\n                return trans.planning.appState\n\n\n            default:\n                throw new Error(\"Unknown command!\")\n\n\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { CardText } from \"reactstrap\"\n\nimport { Command } from \"../state/app-state\"\n\nexport interface ICommandDoc {\n    title: Command,\n    body: JSX.Element\n}\n\nexport function getCommandDoc(command: Command): ICommandDoc {\n    const found = COMMAND_DOCS.find(cd => cd.title === command)\n    if (!found) {\n        throw new Error(`Command not documented: ${command}`)\n    }\n    return found\n}\n\nexport const COMMAND_DOCS: ICommandDoc[] = [\n    {\n        title: Command.Cancel,\n        body:\n            <CardText>\n                While you are terraforming the island by terraforming (creating land or water),\n                you can decide to abandon the choice you made and start again.\n            </CardText>,\n    },\n    {\n        title: Command.ClaimHexalot,\n        body:\n            <CardText>\n                When you have reserved a hexalot, and terraformed the island to make sure it follows\n                the rules, you can claim the hexalot you reserved.\n                It then belongs to you, since it is completely unique and nobody else can claim the same one.\n            </CardText>,\n    },\n    {\n        title: Command.DiscardGenes,\n        body:\n            <CardText>\n                If you don't like what you're seeing during the evolution and you've given up hope for\n                this particular gotchi, you can discard the current set of genes and start from scratch.\n            </CardText>,\n    },\n    {\n        title: Command.Evolve,\n        body:\n            <CardText>\n                Evolving creates a group of competing galapagotchis which exist in the same space\n                at the same time, but have slightly mutated genes.\n                They go through cycles, like generations.\n                Every time the slowest are forgotten and the new generation is made by mutating the genes\n                of the current survivors.\n            </CardText>,\n    },\n    {\n        title: Command.Home,\n        body:\n            <CardText>\n                Wherever you are, you can go back to your home position up in the tower.\n            </CardText>,\n    },\n    {\n        title: Command.MakeLand,\n        body:\n            <CardText>\n                While terraforming, you can choose to make the current hexagonal spot into land.\n            </CardText>,\n    },\n    {\n        title: Command.MakeWater,\n        body:\n            <CardText>\n                While terraforming, you can choose to make the current hexagonal spot into water.\n            </CardText>,\n    },\n    {\n        title: Command.Plan,\n        body:\n            <CardText>\n                When you plan your journey, you zoom out and see the world from above.\n                Clicking on a new neighbor hexalot adds a leg to your journey,\n                and clicking on one that is already in the journey makes it end there.\n            </CardText>,\n    },\n    {\n        title: Command.Ride,\n        body:\n            <CardText>\n                You can ride a gotchi, which means that it will be born from the center tower of its\n                home hexalot and try to follow the arrows of its journey, visiting hexalots along the way.\n            </CardText>,\n    },\n    {\n        title: Command.Start,\n        body:\n            <CardText>\n                If you have stopped a gotchi during a ride, you can tell it to start up again.\n            </CardText>,\n    },\n    {\n        title: Command.Stop,\n        body:\n            <CardText>\n                If you are tagging along behind a running gotchi, you can tell it to stop.\n            </CardText>,\n    },\n    {\n        title: Command.Terraform,\n        body:\n            <CardText>\n                After choosing an unoccupied hexalot, new spots appear at the edge of the island.\n                you can terraform these spots to choose whether they'll be land or water. The terraform button takes you to\n                any problems that still remain on the island.\n            </CardText>,\n    },\n]\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Camera } from \"react-three-fiber\"\nimport { Intersection, Mesh, Raycaster, Vector2 } from \"three\"\n\nexport enum MeshKey {\n    SPOTS_KEY = \"Spots\",\n    SEEDS_KEY = \"Seeds\",\n    TRIANGLES_KEY = \"Triangles\",\n}\n\nexport class Selector {\n    private meshes = new Map<MeshKey, Mesh>()\n    private rayCaster = new Raycaster()\n    private mouse = new Vector2()\n    private size = new Vector2()\n\n    constructor(private camera: Camera, width: number, height: number) {\n        this.setSize(width, height)\n    }\n\n    public setMesh(key: MeshKey, mesh: Mesh): void {\n        if (mesh) {\n            this.meshes[key] = mesh\n        } else {\n            delete this.meshes[key]\n        }\n    }\n\n    public setSize(width: number, height: number): void {\n        this.size.x = width\n        this.size.y = height\n    }\n\n    public select<T>(event: React.MouseEvent<HTMLDivElement>, meshKey: MeshKey, finder: (intersections: Intersection[]) => T | undefined): T | undefined {\n        this.mouse.x = (event.clientX / this.size.x) * 2 - 1\n        this.mouse.y = -(event.clientY / this.size.y) * 2 + 1\n        this.rayCaster.setFromCamera(this.mouse, this.camera)\n        const mesh = this.meshes[meshKey]\n        const intersections = this.rayCaster.intersectObjects([mesh], true).filter(i => i.faceIndex !== undefined)\n        return finder(intersections)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Button, ButtonToolbar, Card, CardBody, CardFooter, CardTitle } from \"reactstrap\"\n\nimport { DOCS_ON_GITHUB } from \"../constants\"\nimport { getCommandDoc } from \"../docs/command-docs\"\nimport { TOOLBAR_STATE_DOCS, ToolbarState } from \"../docs/toolbar-state-docs\"\nimport { Command, IAppState } from \"../state/app-state\"\n\nexport interface IHelpProps {\n    appState: IAppState\n    toolbarState: ToolbarState\n    toolbarCommands: Command[]\n    cancelHelp: () => void\n}\n\nexport interface IHelpState {\n    placeholder?: boolean\n}\n\nexport class HelpPanel extends React.Component<IHelpProps, IHelpState> {\n\n    constructor(props: IHelpProps) {\n        super(props)\n        this.state = {}\n    }\n\n    public render(): JSX.Element | boolean {\n        const toolbarStateDoc = TOOLBAR_STATE_DOCS.find(d => d.title === this.props.toolbarState)\n        const commandDocs = this.props.toolbarCommands.map(getCommandDoc)\n        return (\n            <Card>\n                <CardBody>\n                    {toolbarStateDoc ? (\n                        <div>\n                            <CardTitle>{toolbarStateDoc.title}</CardTitle>\n                            {toolbarStateDoc.body}\n                        </div>\n                    ) : false}\n                    <br/>\n                    {commandDocs.map(commandDoc => (\n                        <div key={commandDoc.title}>\n                            <Button color=\"success\" className=\"command-button\">{commandDoc.title}</Button>\n                            {commandDoc.body}\n                        </div>\n                    ))}\n                </CardBody>\n                <CardFooter>{this.footer()}</CardFooter>\n            </Card>\n        )\n    }\n\n    private footer(): JSX.Element {\n        return (\n            <ButtonToolbar>\n                <a className=\"btn btn-info command-button\" href={DOCS_ON_GITHUB} target=\"_blank\">Background information</a>\n                <Button\n                    className=\"float-right\"\n                    color=\"info\"\n                    onClick={() => this.props.cancelHelp()}\n                >Ok, got it</Button>\n            </ButtonToolbar>\n        )\n    }\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { CSSProperties } from \"react\"\nimport { Button } from \"reactstrap\"\nimport { Vector3 } from \"three\"\n\nimport { APP_EVENT, AppEvent } from \"../app-event\"\nimport { ToolbarState } from \"../docs/toolbar-state-docs\"\nimport { Island } from \"../island/island\"\nimport { AppMode, Command, homeHexalotSelected, IAppState } from \"../state/app-state\"\nimport { CommandHandler } from \"../state/command-handler\"\nimport { IUser } from \"../storage/remote-storage\"\n\nimport { HelpPanel } from \"./help-panel\"\n\nexport interface IControlProps {\n    appState: IAppState\n    location: Vector3\n    user?: IUser\n}\n\nexport interface IControlState {\n    helpVisible: boolean\n    toolbarState: ToolbarState\n    toolbarCommands: Command[]\n}\n\ninterface IContainerProps {\n    children: (JSX.Element | null)[] | JSX.Element | string\n}\n\nconst style: CSSProperties = {\n    height: \"auto\",\n    width: \"auto\",\n    maxWidth: \"70%\",\n    display: \"inline-flex\",\n    textAlign: \"left\",\n    background: \"black\",\n    padding: \"4px\",\n    margin: \"5px\",\n    borderColor: \"inherit\",\n    borderWidth: \"2px\",\n    borderStyle: \"solid\",\n    borderRadius: \"10px\",\n}\n\nexport class ControlPanel extends React.Component<IControlProps, IControlState> {\n\n    constructor(props: IControlProps) {\n        super(props)\n        const toolbarState = ToolbarState.Unknown\n        this.state = {toolbarState, toolbarCommands: [], helpVisible: false}\n    }\n\n    public render(): JSX.Element | boolean {\n        const island = this.props.appState.island\n        return (\n            <div style={style}>\n                {this.props.appState.appMode === AppMode.Flying || !island ?\n                    (\n                        <Button\n                            color=\"info\"\n                            className=\"command-button\"\n                        >Hold on!</Button>\n                    ) :\n                    (\n                        <div>\n                            {this.commandButtons(island)}\n                            {!this.state.helpVisible ? false : (\n                                <HelpPanel\n                                    appState={this.props.appState}\n                                    toolbarState={this.state.toolbarState}\n                                    toolbarCommands={this.state.toolbarCommands}\n                                    cancelHelp={() => this.setState({helpVisible: false})}\n                                />\n                            )}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n\n    // =================================================================================================================\n\n    private commandButtons(island: Island): JSX.Element {\n        const appState = this.props.appState\n        const vacant = island.vacantHexalot\n        const spot = appState.selectedSpot\n        const hexalot = appState.selectedHexalot\n        const homeHexalot = appState.homeHexalot\n        const singleHexalot = island.singleHexalot\n        const Message = (props: IContainerProps) => <p>{props.children}</p>\n\n        switch (appState.appMode) {\n\n\n            case AppMode.Terraforming:\n                if (spot) {\n                    if (singleHexalot && spot.coords === singleHexalot.centerSpot.coords) {\n                        return this.buttonToolbar(ToolbarState.Pioneering,\n                            Command.ClaimHexalot,\n                        )\n                    }\n                    if (spot.isCandidateHexalot(vacant) && !singleHexalot) {\n                        if (appState.islandIsLegal) {\n                            return this.buttonToolbar(ToolbarState.AvailableSpot,\n                                Command.ClaimHexalot,\n                            )\n                        } else {\n                            return this.buttonToolbar(ToolbarState.Terraforming,\n                                Command.Terraform,\n                                Command.Cancel,\n                            )\n                        }\n                    }\n                    if (spot.free) {\n                        return this.buttonToolbar(ToolbarState.FreeSpot,\n                            Command.MakeLand,\n                            Command.MakeWater,\n                        )\n                    }\n                }\n                return (\n                    <Message>\n                        The island is not yet correct according to the rules.\n                        Land must be either at the edge or have two land neighbors.\n                        Water must have at least one land neighbor.\n                        Click on the marked spots and you can choose to switch them to fix the island.\n                    </Message>\n                )\n\n\n            case AppMode.Exploring:\n                if (homeHexalotSelected(appState)) {\n                    return this.buttonToolbar(ToolbarState.Home,\n                        Command.Plan,\n                        Command.Ride,\n                        Command.Evolve,\n                        Command.DiscardGenes,\n                    )\n                } else if (hexalot) {\n                    if (!homeHexalot && hexalot.centerSpot.isCandidateHexalot(vacant)) {\n                        return this.buttonToolbar(ToolbarState.AvailableSpot,\n                            Command.ClaimHexalot,\n                        )\n                    }\n                    return this.buttonToolbar(ToolbarState.Friend,\n                        Command.Ride,\n                        Command.Home,\n                    )\n                } else if (this.props.user) {\n                    return (\n                        <p>\n                            You are logged in but you have not yet claimed a hexalot.\n                            The spots highlighted in green are places that you can claim.\n                            You can also click on one of the existing hexalots and go for a ride on the galapagotchi\n                            there.\n                        </p>\n                    )\n                } else {\n                    return (\n                        <p>\n                            You can click on one of the hexalots and go for a ride on the galapagotchi who lives there.\n                        </p>\n                    )\n                }\n\n\n            case AppMode.Planning:\n                return this.buttonToolbar(ToolbarState.Planning,\n                    Command.Home,\n                )\n\n\n            case AppMode.Evolving:\n                return this.buttonToolbar(ToolbarState.Evolving,\n                    Command.Ride,\n                    Command.Home,\n                )\n\n\n            case AppMode.Riding:\n                return this.buttonToolbar(ToolbarState.Riding,\n                    Command.Home,\n                    Command.Stop,\n                )\n\n\n            case AppMode.Stopped:\n                return this.buttonToolbar(ToolbarState.Riding,\n                    Command.Home,\n                    Command.Start,\n                    Command.Evolve,\n                )\n\n\n            default:\n                return (\n                    <p>Strange state {appState.appMode}</p>\n                )\n\n\n        }\n    }\n\n    private buttonToolbar(toolbarState: ToolbarState, ...toolbarCommands: Command[]): JSX.Element {\n        setTimeout(() => {\n            this.setState({toolbarState, toolbarCommands})\n        })\n        return (\n            <div>\n                <Button\n                    color=\"info\"\n                    className=\"command-button\"\n                    onClick={() => this.setState({helpVisible: !this.state.helpVisible})}\n                >{toolbarState}: </Button>\n                {this.state.helpVisible ? false : (\n                    toolbarCommands.map(command => this.commandButton(command))\n                )}\n            </div>\n        )\n    }\n\n    private commandButton(command: Command): JSX.Element {\n        return (\n            <Button\n                key={command}\n                color=\"success\"\n                className=\"command-button\"\n                onClick={async () => this.execute(command)}\n            >{command}</Button>\n        )\n    }\n\n    private async execute(command: Command): Promise<void> {\n        const props = this.props\n        const nextState = await new CommandHandler(props.appState).afterCommand(command, props.location)\n        APP_EVENT.next({event: AppEvent.Command, command})\n        props.appState.updateState(nextState)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Spot } from \"../island/spot\"\nimport { IUser } from \"../storage/remote-storage\"\n\nimport { AppMode, IAppState } from \"./app-state\"\nimport { Transition } from \"./transition\"\n\nexport class ClickHandler {\n\n    private trans: Transition\n\n    constructor(appState: IAppState, private user?: IUser) {\n        this.trans = new Transition(appState)\n    }\n\n    public async stateAfterClick(spot: Spot): Promise<IAppState> {\n\n        const trans = this.trans\n        const hexalot = spot.centerOfHexalot\n        const appState = trans.appState\n        const homeHexalot = appState.homeHexalot\n        const island = appState.island\n        if (!island) {\n            return appState\n        }\n\n        const vacant = island.vacantHexalot\n\n        switch (appState.appMode) {\n\n\n            case AppMode.Terraforming: // ===========================================================================\n                return (await trans.withSelectedSpot(spot)).appState\n\n\n            case AppMode.Exploring: // ===============================================================================\n                if (this.user && !homeHexalot && appState.islandIsLegal && spot.isCandidateHexalot(vacant)) {\n                    island.vacantHexalot = island.createHexalot(spot)\n                    return (await trans.withSelectedSpot(spot)).terraforming.withRestructure.appState\n                }\n                if (hexalot) {\n                    return (await trans.withSelectedSpot(hexalot.centerSpot)).appState\n                }\n                return appState\n\n\n            case AppMode.Planning: // ========================================================================\n                if (!homeHexalot) {\n                    throw new Error(\"No home hexalot\")\n                }\n                if (hexalot) {\n                    const journey = homeHexalot.adjustedJourney(hexalot)\n                    homeHexalot.journey = journey\n                    appState.storage.setJourneyData(homeHexalot, journey.data).then(() => {\n                        console.log(\"saved journey\")\n                    })\n                    return trans.withJourney(journey).appState\n                }\n                return appState\n\n\n            // =========================================================================================================\n            case AppMode.Flying:\n            case AppMode.Evolving:\n            case AppMode.Riding:\n                return appState\n\n\n            default: // ================================================================================================\n                return appState\n\n\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, FaceColors, LineBasicMaterial, MeshPhongMaterial } from \"three\"\n\nexport const GOTCHI = new MeshPhongMaterial({lights: true, color: new Color(\"silver\")})\n\nexport const ISLAND = new MeshPhongMaterial({vertexColors: FaceColors, lights: true})\n\nexport const HANGER_OCCUPIED = new LineBasicMaterial({color: new Color(\"black\")})\n\nexport const HANGER_FREE = new LineBasicMaterial({color: new Color(\"green\")})\n\nexport const HOME_HEXALOT = new LineBasicMaterial({color: new Color(\"white\")})\n\nexport const AVAILABLE_HEXALOT = new LineBasicMaterial({color: new Color(\"green\")})\n\nexport const JOURNEY = new LineBasicMaterial({color: new Color(\"crimson\")})\n\nexport const GOTCHI_ARROW = new LineBasicMaterial({color: new Color(\"magenta\")})\n\nexport const SELECTED_POINTER = new LineBasicMaterial({color: new Color(\"yellow\")})\n\nexport const GOTCHI_GHOST = new MeshPhongMaterial({\n    lights: true,\n    color: new Color(\"silver\"),\n    transparent: true,\n    opacity: 0.6,\n})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Subscription } from \"rxjs/Subscription\"\n\nimport { Evolution } from \"../gotchi/evolution\"\nimport { Jockey } from \"../gotchi/jockey\"\n\nimport { GOTCHI_ARROW, GOTCHI_GHOST } from \"./gotchi-materials\"\n\nexport interface IEvolutionProps {\n    evolution: Evolution\n}\n\nexport interface IEvolutionState {\n    evolvers: Jockey[]\n}\n\nexport class EvolutionComponent extends React.Component<IEvolutionProps, IEvolutionState> {\n\n    private subscription: Subscription\n\n    constructor(props: IEvolutionProps) {\n        super(props)\n        this.state = {\n            evolvers: props.evolution.currentJockeys.getValue(),\n        }\n    }\n\n    public componentDidMount(): void {\n        this.subscription = this.props.evolution.currentJockeys.subscribe(evolvers => {\n            this.setState({evolvers})\n        })\n    }\n\n    public componentWillUnmount(): void {\n        this.subscription.unsubscribe()\n    }\n\n    public render(): JSX.Element {\n        return (\n            <Canvas key=\"EvolutionMesh\">\n                {\n                    this.state.evolvers.map((evolver, index) => {\n                        const fabric = evolver.fabric\n                        return (\n                            <group key={`Evolver${index}`}>\n                                <lineSegments key=\"Vectors\"\n                                    geometry={fabric.pointerGeometryFor(evolver.nextState)}\n                                    material={GOTCHI_ARROW}\n                                />\n                                <mesh\n                                    geometry={fabric.facesGeometry}\n                                    material={GOTCHI_GHOST}\n                                />\n                            </group>\n                        )\n                    })\n                }\n            </Canvas>\n        )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"./fabric-engine\"\n\nexport const PHI = 1.61803398875\nexport const DEFAULT_PUSH_LENGTH = Math.sqrt(2)\n\nexport enum Ray {\n    XP = 0, XN, YP, YN, ZP, ZN,\n}\n\nexport enum PushEnd {\n    XPA = 0, XPO, XNA, XNO, YPA, YPO,\n    YNA, YNO, ZPA, ZPO, ZNA, ZNO,\n}\n\nexport enum Triangle {\n    NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP,\n}\n\nexport enum Ring {\n    NN = 0, // [PushEnd.ZNO, PushEnd.XPA, PushEnd.YNO, PushEnd.ZPA, PushEnd.XNO, PushEnd.YPA],\n    PN = 1, // [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNO, PushEnd.YPO, PushEnd.XPO, PushEnd.ZPA],\n    NP = 2, // [PushEnd.XNA, PushEnd.YPA, PushEnd.ZPO, PushEnd.XPO, PushEnd.YNO, PushEnd.ZNA],\n    PP = 3, // [PushEnd.YNA, PushEnd.ZNA, PushEnd.XPA, PushEnd.YPO, PushEnd.ZPO, PushEnd.XNO],\n}\n\nexport interface IJoint {\n    index: number\n    oppositeIndex: number\n}\n\nexport interface IRing {\n    faceA: IFace\n    faceB: IFace\n    jointsA: IJoint[]\n    jointsB: IJoint[]\n}\n\nexport type JointTag = number\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport interface IFacePull {\n    index: number\n    alpha: IFace\n    omega: IFace\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFace {\n    index: number\n    negative: boolean\n    canGrow: boolean\n    brick: IBrick\n    triangle: Triangle\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    removed: boolean\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + percentToFactor(face.brick.scale), 0) / faces.length\n}\n\nexport function averageLocation(locations: Vector3[]): Vector3 {\n    return locations\n        .reduce((sum, location) => sum.add(location), new Vector3())\n        .multiplyScalar(1 / locations.length)\n}\n\nexport function getOrderedJoints(face: IFace): IJoint[] {\n    const clone = [...face.joints]\n    return [...TRIANGLE_DEFINITIONS[face.triangle].negative ? clone.reverse() : clone]\n}\n\nexport interface IPushDefinition {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction rayVector(ray: Ray): Vector3 {\n    const v = new Vector3()\n    switch (ray) {\n        case Ray.XP:\n            return v.setX(1)\n        case Ray.XN:\n            return v.setX(-1)\n        case Ray.YP:\n            return v.setY(1)\n        case Ray.YN:\n            return v.setY(-1)\n        case Ray.ZP:\n            return v.setZ(1)\n        case Ray.ZN:\n            return v.setZ(-1)\n        default:\n            return v\n    }\n}\n\nfunction brickPoint(primaryRay: Ray, secondaryRay: Ray): Vector3 {\n    return rayVector(primaryRay)\n        .multiplyScalar(DEFAULT_PUSH_LENGTH / 2)\n        .addScaledVector(rayVector(secondaryRay), DEFAULT_PUSH_LENGTH / 2 / PHI)\n}\n\nexport const PUSH_ARRAY: IPushDefinition[] = [\n    {alpha: brickPoint(Ray.ZN, Ray.XP), omega: brickPoint(Ray.ZP, Ray.XP)},\n    {alpha: brickPoint(Ray.ZN, Ray.XN), omega: brickPoint(Ray.ZP, Ray.XN)},\n    {alpha: brickPoint(Ray.XN, Ray.YP), omega: brickPoint(Ray.XP, Ray.YP)},\n    {alpha: brickPoint(Ray.XN, Ray.YN), omega: brickPoint(Ray.XP, Ray.YN)},\n    {alpha: brickPoint(Ray.YN, Ray.ZP), omega: brickPoint(Ray.YP, Ray.ZP)},\n    {alpha: brickPoint(Ray.YN, Ray.ZN), omega: brickPoint(Ray.YP, Ray.ZN)},\n]\n\nexport interface ITriangleDefinition {\n    name: Triangle\n    opposite: Triangle\n    negative: boolean\n    pushEnds: PushEnd[]\n    ringMember: Ring[]\n    ring: Ring\n}\n\nexport const TRIANGLE_DEFINITIONS: ITriangleDefinition[] = [\n    {\n        name: Triangle.NNN, opposite: Triangle.PPP, negative: true, ring: Ring.NN,\n        pushEnds: [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNA], ringMember: [Ring.NP, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.PNN, opposite: Triangle.NPP, negative: false, ring: Ring.PP,\n        pushEnds: [PushEnd.XNA, PushEnd.YPA, PushEnd.ZNO], ringMember: [Ring.PN, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.NPN, opposite: Triangle.PNP, negative: false, ring: Ring.PN,\n        pushEnds: [PushEnd.XNO, PushEnd.YNA, PushEnd.ZPA], ringMember: [Ring.PP, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.NNP, opposite: Triangle.PPN, negative: false, ring: Ring.NP,\n        pushEnds: [PushEnd.XPA, PushEnd.YNO, PushEnd.ZNA], ringMember: [Ring.NN, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.NPP, opposite: Triangle.PNN, negative: true, ring: Ring.PP,\n        pushEnds: [PushEnd.YNO, PushEnd.XPO, PushEnd.ZPA], ringMember: [Ring.PN, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.PNP, opposite: Triangle.NPN, negative: true, ring: Ring.PN,\n        pushEnds: [PushEnd.YPO, PushEnd.XPA, PushEnd.ZNO], ringMember: [Ring.PP, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.PPN, opposite: Triangle.NNP, negative: true, ring: Ring.NP,\n        pushEnds: [PushEnd.YPA, PushEnd.XNO, PushEnd.ZPO], ringMember: [Ring.NN, Ring.PP, Ring.PN],\n    },\n    {\n        name: Triangle.PPP, opposite: Triangle.NNN, negative: false, ring: Ring.NN,\n        pushEnds: [PushEnd.XPO, PushEnd.YPO, PushEnd.ZPO], ringMember: [Ring.NP, Ring.PP, Ring.PN],\n    },\n]\n\nexport function oppositeTriangle(triangle: Triangle): Triangle {\n    return TRIANGLE_DEFINITIONS[triangle].opposite\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function percentToFactor({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function factorToPercent(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IBrick {\n    index: number,\n    base: Triangle\n    scale: IPercent\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    crosses: IInterval[]\n    rings: IInterval[][]\n    faces: IFace[]\n    negativeAdjacent: number\n    postiveeAdjacent: number\n}\n\nexport function initialBrick(index: number, base: Triangle, scale: IPercent): IBrick {\n    return {\n        index, base, scale, joints: [],\n        pushes: [], pulls: [], crosses: [],\n        rings: [[], [], [], []], faces: [],\n        negativeAdjacent: 0, postiveeAdjacent: 0,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Color, Geometry, Mesh, Vector3 } from \"three\"\n\nimport { HUNG_ALTITUDE } from \"../fabric/gotchi-body\"\nimport { HEXALOT_OUTLINE_HEIGHT, INNER_HEXALOT_SPOTS, OUTER_HEXALOT_SIDE } from \"../island/constants\"\nimport { IAppState } from \"../state/app-state\"\nimport { IUser } from \"../storage/remote-storage\"\n\nimport {\n    AVAILABLE_HEXALOT,\n    GOTCHI,\n    HANGER_FREE,\n    HANGER_OCCUPIED,\n    HOME_HEXALOT,\n    ISLAND,\n    SELECTED_POINTER,\n} from \"./gotchi-materials\"\nimport { MeshKey } from \"./selector\"\n\nconst SUN_POSITION = new Vector3(0, 600, 0)\nconst POINTER_TOP = new Vector3(0, 120, 0)\nconst HEMISPHERE_COLOR = new Color(\"white\")\n\nexport interface IIslandComponentProps {\n    appState: IAppState\n    setMesh: (key: string, ref: Mesh) => void\n    user?: IUser\n}\n\nexport class IslandComponent extends React.Component<IIslandComponentProps, object> {\n    private appStateNonce = -1\n    private spots: Geometry\n    private seeds: Geometry\n    private occupiedHangers: Geometry\n    private vacantHangers: Geometry\n    private homeHexalot?: Geometry\n    private selectedSpot?: Geometry\n    private availableSpots?: Geometry\n    private vacantHexalots?: Geometry\n\n    constructor(props: IIslandComponentProps) {\n        super(props)\n        this.spots = this.spotsGeometry\n        this.seeds = this.seedsGeometry\n        this.occupiedHangers = this.occupiedHangersGeometry\n        this.vacantHangers = this.vacantHangersGeometry\n        this.selectedSpot = this.selectedSpotGeometry\n        this.homeHexalot = this.homeHexalotGeometry\n        this.availableSpots = this.availableSpotsGeometry\n        this.vacantHexalots = this.vacantHexalotsGeometry\n    }\n\n    public componentWillUnmount(): void {\n        this.disposeGeometry()\n    }\n\n    public render(): JSX.Element | boolean {\n        const appState = this.props.appState\n        const island = appState.island\n        if (!island) {\n            return false\n        }\n        if (appState.nonce > this.appStateNonce) {\n            this.disposeGeometry()\n            island.spots.forEach(spot => spot.faceNames = [])\n            this.spots = this.spotsGeometry\n            this.seeds = this.seedsGeometry\n            this.occupiedHangers = this.occupiedHangersGeometry\n            this.vacantHangers = this.vacantHangersGeometry\n            this.selectedSpot = this.selectedSpotGeometry\n            this.homeHexalot = this.homeHexalotGeometry\n            this.availableSpots = this.availableSpotsGeometry\n            this.vacantHexalots = this.vacantHexalotsGeometry\n            this.appStateNonce = appState.nonce\n        }\n        return (\n            <Canvas key={island.name}>\n                <mesh name=\"Spots\" geometry={this.spots} material={ISLAND}\n                    ref={(mesh: Mesh) => this.props.setMesh(MeshKey.SPOTS_KEY, mesh)}\n                />\n                <mesh name=\"Seeds\" geometry={this.seeds} material={GOTCHI}/>\n                <lineSegments key=\"HangersOccupied\" geometry={this.occupiedHangers} material={HANGER_OCCUPIED}/>\n                <lineSegments key=\"HangersFree\" geometry={this.vacantHangers} material={HANGER_FREE}/>\n                {!this.homeHexalot ? undefined : (\n                    <lineSegments key=\"HomeHexalot\" geometry={this.homeHexalot} material={HOME_HEXALOT}/>\n                )}\n                {!this.selectedSpot ? undefined : (\n                    <lineSegments key=\"Pointer\" geometry={this.selectedSpot} material={SELECTED_POINTER}/>\n                )}\n                {!this.availableSpots ? undefined : (\n                    <lineSegments key=\"Available\" geometry={this.availableSpots} material={AVAILABLE_HEXALOT}/>\n                )}\n                {!this.vacantHexalots ? undefined : (\n                    <lineSegments key=\"Free\" geometry={this.vacantHexalots} material={AVAILABLE_HEXALOT}/>\n                )}\n                <pointLight distance={1000} decay={0.01} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </Canvas>\n        )\n    }\n\n    // =================================================================================================================\n\n    private get spotsGeometry(): Geometry {\n        const geometry = new Geometry()\n        const island = this.props.appState.island\n        if (island) {\n            island.spots.forEach((spot, index) => {\n                spot.addSurfaceGeometry(MeshKey.SPOTS_KEY, index, geometry.vertices, geometry.faces)\n            })\n        }\n        geometry.computeBoundingSphere()\n        return geometry\n    }\n\n    private get occupiedHangersGeometry(): Geometry {\n        const geometry = new Geometry()\n        const island = this.props.appState.island\n        if (island) {\n            const vacantHexalot = island.vacantHexalot\n            island.hexalots.forEach(hexalot => {\n                if (vacantHexalot && vacantHexalot.id === hexalot.id) {\n                    return\n                }\n                hexalot.centerSpot.addHangerGeometry(geometry.vertices)\n            })\n        }\n        return geometry\n    }\n\n    private get vacantHangersGeometry(): Geometry {\n        const geometry = new Geometry()\n        const island = this.props.appState.island\n        const vacantHexalot = island ? island.vacantHexalot : undefined\n        if (vacantHexalot) {\n            vacantHexalot.centerSpot.addHangerGeometry(geometry.vertices)\n        }\n        return geometry\n    }\n\n    private get seedsGeometry(): Geometry {\n        const geometry = new Geometry()\n        const island = this.props.appState.island\n        if (island) {\n            const hexalots = island.hexalots\n            const activeHexalotId = this.activeHexalotId\n            hexalots.forEach(hexalot => {\n                if (!activeHexalotId || hexalot.id !== activeHexalotId) {\n                    hexalot.centerSpot.addSeed(hexalot.rotation, MeshKey.SEEDS_KEY, geometry.vertices, geometry.faces)\n                }\n            })\n        }\n        geometry.computeFaceNormals()\n        geometry.computeBoundingSphere()\n        return geometry\n    }\n\n    private get selectedSpotGeometry(): Geometry | undefined {\n        const selectedSpot = this.props.appState.selectedSpot\n        if (!selectedSpot) {\n            return undefined\n        }\n        const center = selectedSpot.center\n        const target = selectedSpot.centerOfHexalot ? new Vector3(0, HUNG_ALTITUDE, 0).add(center) : center\n        const geometry = new Geometry()\n        geometry.vertices = [target, new Vector3().addVectors(target, POINTER_TOP)]\n        return geometry\n    }\n\n    private get homeHexalotGeometry(): Geometry | undefined {\n        const homeHexalot = this.props.appState.homeHexalot\n        if (!homeHexalot) {\n            return undefined\n        }\n        const geometry = new Geometry()\n        homeHexalot.spots.forEach((spot, index) => {\n            const outerIndex = index - INNER_HEXALOT_SPOTS\n            if (outerIndex < 0) {\n                return\n            }\n            spot.addRaisedHexagonParts(geometry.vertices, HEXALOT_OUTLINE_HEIGHT, outerIndex, OUTER_HEXALOT_SIDE)\n        })\n        homeHexalot.centerSpot.addRaisedHexagon(geometry.vertices, HEXALOT_OUTLINE_HEIGHT)\n        homeHexalot.centerSpot.addHangerGeometry(geometry.vertices)\n        geometry.computeBoundingSphere()\n        return geometry\n    }\n\n    private get availableSpotsGeometry(): Geometry | undefined {\n        const appState = this.props.appState\n        if (!this.props.user || appState.homeHexalot || !appState.islandIsLegal) {\n            return undefined\n        }\n        const geometry = new Geometry()\n        const island = appState.island\n        if (island) {\n            const vacantHexalot = island.vacantHexalot\n            island.spots.filter(spot => spot.isCandidateHexalot(vacantHexalot)).forEach(spot => {\n                spot.addRaisedHexagon(geometry.vertices, HEXALOT_OUTLINE_HEIGHT)\n            })\n        }\n        return geometry\n    }\n\n    private get vacantHexalotsGeometry(): Geometry | undefined {\n        const appState = this.props.appState\n        const island = appState.island\n        if (!island) {\n            return undefined\n        }\n        const vacantHexalot = island.vacantHexalot\n        if (!vacantHexalot) {\n            return undefined\n        }\n        const geometry = new Geometry()\n        vacantHexalot.centerSpot.addRaisedHexagon(geometry.vertices, HEXALOT_OUTLINE_HEIGHT)\n        vacantHexalot.spots.forEach((spot, index) => {\n            const outerIndex = index - INNER_HEXALOT_SPOTS\n            if (outerIndex < 0) {\n                return\n            }\n            spot.addRaisedHexagonParts(geometry.vertices, HEXALOT_OUTLINE_HEIGHT, outerIndex, OUTER_HEXALOT_SIDE)\n        })\n        return geometry\n    }\n\n    public get activeHexalotId(): string | undefined {\n        const appState = this.props.appState\n        if (appState.jockey) {\n            return appState.jockey.gotchi.home.id\n        }\n        if (appState.evolution) {\n            return appState.evolution.home.id\n        }\n        return undefined\n    }\n\n    private disposeGeometry(): void {\n        this.spots.dispose()\n        this.seeds.dispose()\n        this.occupiedHangers.dispose()\n        this.vacantHangers.dispose()\n        if (this.homeHexalot) {\n            this.homeHexalot.dispose()\n        }\n        if (this.selectedSpot) {\n            this.selectedSpot.dispose()\n        }\n        if (this.availableSpots) {\n            this.availableSpots.dispose()\n        }\n        if (this.vacantHexalots) {\n            this.vacantHexalots.dispose()\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Canvas } from \"react-three-fiber\"\nimport { BufferGeometry, Float32BufferAttribute, Vector3 } from \"three\"\n\nimport { HUNG_ALTITUDE } from \"../fabric/gotchi-body\"\nimport { Journey } from \"../island/journey\"\n\nimport { JOURNEY } from \"./gotchi-materials\"\n\nexport interface IJourneyProps {\n    journey: Journey\n}\n\nexport class JourneyComponent extends React.Component<IJourneyProps, object> {\n    private geometry: BufferGeometry\n\n    constructor(props: IJourneyProps) {\n        super(props)\n        this.state = {}\n        this.geometry = JourneyComponent.createGeometry(props)\n    }\n\n    private static createGeometry(props: IJourneyProps): BufferGeometry {\n        const geometry = new BufferGeometry()\n        const journey = props.journey\n        const arrowCount = journey.visits.length - 1\n        if (arrowCount < 1) {\n            return geometry\n        }\n        const pointsPerArrow = 24\n        const positions = new Float32Array(arrowCount * pointsPerArrow)\n        const forward = new Vector3()\n        const up = new Vector3(0, 1, 0)\n        const right = new Vector3()\n        for (let walk = 0; walk < arrowCount; walk++) {\n            const from = new Vector3().add(journey.visits[walk].center)\n            const to = new Vector3().add(journey.visits[walk + 1].center)\n            forward.subVectors(to, from)\n            right.crossVectors(up, forward)\n            to.addScaledVector(forward, -0.1)\n            right.normalize()\n            forward.normalize().multiplyScalar(4)\n            let offset = walk * pointsPerArrow\n            // main shaft\n            positions[offset++] = from.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = from.z\n            positions[offset++] = to.x - forward.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z - forward.z\n            // arrow right side\n            positions[offset++] = to.x - right.x - forward.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z - right.z - forward.z\n            positions[offset++] = to.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z\n            // arrow left side\n            positions[offset++] = to.x + right.x - forward.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z + right.z - forward.z\n            positions[offset++] = to.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z\n            // arrow perpendicular\n            positions[offset++] = to.x + right.x - forward.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z + right.z - forward.z\n            positions[offset++] = to.x - right.x - forward.x\n            positions[offset++] = HUNG_ALTITUDE\n            positions[offset++] = to.z - right.z - forward.z\n        }\n        geometry.addAttribute(\"position\", new Float32BufferAttribute(positions, 3))\n        return geometry\n    }\n\n    public componentWillReceiveProps(nextProps: IJourneyProps): void {\n        const changed = nextProps.journey !== this.props.journey\n        if (!changed) {\n            return\n        }\n        this.geometry.dispose()\n        this.geometry = JourneyComponent.createGeometry(nextProps)\n    }\n\n    public componentWillUnmount(): void {\n        this.geometry.dispose()\n    }\n\n    public render(): JSX.Element {\n        return (\n            <Canvas>\n                <lineSegments key=\"Journey\" geometry={this.geometry} material={JOURNEY}/>\n            </Canvas>\n        )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Mesh, PerspectiveCamera } from \"three\"\n\nimport { Spot } from \"../island/spot\"\nimport { IAppState } from \"../state/app-state\"\nimport { ClickHandler } from \"../state/click-handler\"\nimport { IUser } from \"../storage/remote-storage\"\n\nimport { EvolutionComponent } from \"./evolution-component\"\nimport { GOTCHI, GOTCHI_ARROW } from \"./gotchi-materials\"\nimport { IslandComponent } from \"./island-component\"\nimport { JourneyComponent } from \"./journey-component\"\nimport { MeshKey, Selector } from \"./selector\"\n\ninterface IWorldProps {\n    perspectiveCamera: PerspectiveCamera\n    user?: IUser\n    appState: IAppState\n}\n\ninterface IWorldState {\n    iterating: boolean\n}\n\nexport class WorldView extends React.Component<IWorldProps, IWorldState> {\n    private appStateNonce = -1\n    // private flight: Flight\n    private selector: Selector\n\n    constructor(props: IWorldProps) {\n        super(props)\n        this.state = {iterating: false}\n        this.selector = new Selector(\n            this.props.perspectiveCamera,\n            this.props.appState.width,\n            this.props.appState.height,\n        )\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IWorldProps>, prevState: Readonly<object>, snapshot: object): void {\n        if (prevProps.appState.width !== this.props.appState.width || prevProps.appState.height !== this.props.appState.height) {\n            this.props.perspectiveCamera.aspect = this.props.appState.width / this.props.appState.height\n            this.props.perspectiveCamera.updateProjectionMatrix()\n            this.selector.setSize(this.props.appState.width, this.props.appState.height)\n        }\n    }\n\n    public componentDidMount(): void {\n        // const props = this.props\n        // const element: HTMLElement | undefined = document.getElementById(\"gotchi-view\") || undefined\n        // if (element) {\n        //     const orbitControls = new OrbitControls(props.perspectiveCamera, element)\n        //     this.flight = new Flight(orbitControls)\n        //     this.flight.setupCamera(InitialFlightState())\n        //     this.beginAnimating()\n        // }\n    }\n\n    public render(): JSX.Element | undefined {\n        const appState = this.props.appState\n        const island = appState.island\n        if (!island) {\n            return undefined\n        }\n        const evolution = appState.evolution\n        const jockey = appState.jockey\n        const journey = appState.journey\n        if (appState.nonce > this.appStateNonce) {\n            this.appStateNonce = appState.nonce\n            const iterating = !!jockey || !!evolution\n            if (this.state.iterating !== iterating) {\n                setTimeout(() => { // todo: this must be a cheat\n                    this.setState({iterating})\n                })\n            }\n        }\n        return (\n            <div id=\"gotchi-view\" onMouseDownCapture={(event: React.MouseEvent<HTMLDivElement>) => {\n                const spot = this.selector.select<Spot>(event, MeshKey.SPOTS_KEY, intersections => {\n                    const spots = intersections.map(intersection => {\n                        const faceName = `${MeshKey.SPOTS_KEY}:${intersection.faceIndex}`\n                        return island.spots.find(s => s.faceNames.indexOf(faceName) >= 0)\n                    })\n                    return spots.pop()\n                })\n                if (spot) {\n                    this.click(spot)\n                }\n            }}>\n                <Canvas>\n                    <group>\n                        <IslandComponent\n                            user={this.props.user}\n                            appState={appState}\n                            setMesh={(key: MeshKey, node: Mesh) => this.selector.setMesh(key, node)}\n                        />\n                        {!evolution ? undefined : (\n                            <EvolutionComponent evolution={evolution}/>)\n                        }\n                        {!jockey ? undefined : (\n                            <group key=\"Gotchi\">\n                                <lineSegments\n                                    key=\"Vectors\"\n                                    geometry={jockey.pointerGeometry}\n                                    material={GOTCHI_ARROW}\n                                />\n                                <mesh\n                                    geometry={jockey.facesGeometry}\n                                    material={GOTCHI}\n                                />\n                            </group>\n                        )}\n                        {!journey ? undefined : (\n                            <JourneyComponent journey={journey}/>\n                        )}\n                    </group>\n                </Canvas>\n            </div>\n        )\n    }\n\n    // =================================================================================================================\n\n    private async click(spot: Spot): Promise<void> {\n        const props = this.props\n        const appState = props.appState\n        const clickHandler = new ClickHandler(appState, props.user)\n        const afterClick = await clickHandler.stateAfterClick(spot)\n        props.appState.updateState(afterClick)\n    }\n\n    // private update(appState: IAppState): void {\n    //     const flightState = appState.flightState\n    //     const flight = this.flight\n    //     flight.moveTowardsTarget(flightState.target)\n    //     switch (appState.appMode) {\n    //         case AppMode.Flying:\n    //             const distanceChanged = flight.cameraFollowDistance(flightState)\n    //             const angleChanged = flight.cameraFollowPolarAngle(flightState)\n    //             if (!(distanceChanged || angleChanged)) {\n    //                 flight.enabled = true\n    //                 appState.updateState(new Transition(appState).reachedFlightStateTarget(flightState).appState)\n    //             }\n    //             break\n    //         case AppMode.Riding:\n    //             flight.cameraFollowDistance(flightState)\n    //             flight.cameraFollowPolarAngle(flightState)\n    //             break\n    //         default:\n    //             break\n    //     }\n    //     flight.stayUpright()\n    //     flight.update()\n    // }\n\n    // private beginAnimating(): void {\n    //     const step = () => {\n    //         setTimeout(\n    //             () => {\n    //                 const appState = this.props.appState\n    //                 if (appState.appMode !== this.appMode) {\n    //                     this.appMode = appState.appMode\n    //                     APP_EVENT.next({event: AppEvent.AppMode, appMode: this.appMode})\n    //                 }\n    //                 const jockey = appState.jockey\n    //                 if (jockey) {\n    //                     jockey.reorient()\n    //                 }\n    //                 const iterating = this.state.iterating\n    //                 if (jockey) {\n    //                     const appEvent = jockey.gotchi.iterate(ITERATIONS_PER_TICK)\n    //                     if (appEvent) {\n    //                         APP_EVENT.next({event: appEvent})\n    //                     }\n    //                     if (!iterating) {\n    //                         this.setState({iterating: true})\n    //                     }\n    //                 }\n    //                 const evolution = appState.evolution\n    //                 if (evolution) {\n    //                     evolution.iterate()\n    //                     if (!iterating) {\n    //                         this.setState({iterating: true})\n    //                     }\n    //                 }\n    //                 this.update(appState)\n    //                 if (iterating) {\n    //                     this.forceUpdate()\n    //                 }\n    //                 requestAnimationFrame(step)\n    //             },\n    //             10,\n    //         )\n    //     }\n    //     requestAnimationFrame(step)\n    // }\n}\n\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Alert, Badge } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { API_URI, DOCS_ON_GITHUB, SINGLE_ISLAND } from \"./constants\"\nimport { FabricKernel } from \"./fabric/fabric-kernel\"\nimport { Genome } from \"./genetics/genome\"\nimport { ControlPanel } from \"./gotchi-view/control-panel\"\nimport { INITIAL_DISTANCE } from \"./gotchi-view/flight\"\nimport { HexalotTarget, InitialFlightState, IslandTarget } from \"./gotchi-view/flight-state\"\nimport { WorldView } from \"./gotchi-view/world-view\"\nimport { Gotchi, IGotchiFactory } from \"./gotchi/gotchi\"\nimport { Hexalot } from \"./island/hexalot\"\nimport { Island } from \"./island/island\"\nimport { Surface } from \"./island/island-logic\"\nimport { AppMode, AppTransition, IAppProps, IAppState, updateDimensions } from \"./state/app-state\"\nimport { Transition } from \"./state/transition\"\n\nexport class App extends React.Component<IAppProps, IAppState> {\n    private perspectiveCamera: PerspectiveCamera\n    private fabricKernel: FabricKernel\n    private appStateNonce = -1\n\n    constructor(props: IAppProps) {\n        super(props)\n        this.fabricKernel = new FabricKernel(props.engine)\n        const width = window.innerWidth\n        const height = window.innerHeight\n        this.perspectiveCamera = new PerspectiveCamera(50, width / height, 1, INITIAL_DISTANCE * 1.05)\n        const left = window.screenLeft\n        const top = window.screenTop\n        const ownedLots: string[] = []\n        const self = this\n        this.state = {\n            width,\n            height,\n            left,\n            top,\n            ownedLots,\n            flightState: InitialFlightState(),\n            nonce: 0,\n            appMode: AppMode.Flying,\n            islandIsLegal: false,\n            storage: props.storage,\n            transitionState(transition: AppTransition): void {\n                self.setState(transition)\n            },\n            updateState(appState: IAppState): void {\n                if (self.appStateNonce === appState.nonce) {\n                    throw new Error(`Same nonce! ${appState.nonce}`)\n                }\n                self.appStateNonce = appState.nonce\n                // console.log(logString(appState))\n                const hexalot = appState.selectedHexalot\n                if (hexalot) {\n                    const spotCenters = hexalot.spots.map(spot => spot.center)\n                    const surface = hexalot.spots.map(spot => spot.surface === Surface.Land)\n                    self.fabricKernel.setHexalot(spotCenters, surface)\n                }\n                self.setState(appState)\n            },\n        }\n    }\n\n    public componentDidMount(): void {\n        window.addEventListener(\"resize\", () => this.setState(updateDimensions))\n        if (this.props.user) {\n            const ownedLots = this.props.user!.ownedLots.map(lot => lot.id)\n            if (ownedLots && ownedLots.length > 0) {\n                this.setState({ownedLots})\n                this.fetchIsland(SINGLE_ISLAND, ownedLots[0])\n            } else {\n                this.setState({ownedLots: []})\n                this.fetchIsland(SINGLE_ISLAND)\n            }\n        } else {\n            this.fetchIsland(SINGLE_ISLAND)\n        }\n    }\n\n    public componentWillUnmount(): void {\n        window.removeEventListener(\"resize\", () => this.setState(updateDimensions))\n    }\n\n    public render(): JSX.Element {\n        if (!this.state.island) {\n            return (\n                <div className=\"welcome\">\n                    <Alert color=\"secondary\">Visiting Galapagotchi island \"{SINGLE_ISLAND}\"...</Alert>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <div>\n                    <div style={{\n                        textAlign: \"center\",\n                        width: \"100%\",\n                        top: 0,\n                        height: \"auto\",\n                        position: \"absolute\",\n                        color: \"#00d1d1\",\n                        marginTop: 0,\n                    }}>\n                        <div style={{\n                            float: \"left\",\n                            height: \"100%\",\n                            width: \"auto\",\n                            display: \"inline-flex\",\n                            background: \"black\",\n                            margin: \"5px\",\n                            padding: \"4px\",\n                            borderColor: \"inherit\",\n                            borderWidth: \"2px\",\n                            borderStyle: \"solid\",\n                            borderRadius: \"10px\",\n                        }}>\n                            {this.props.user ?\n                                (\n                                    <div style={{\n                                        fontSize: \"larger\",\n                                        padding: \"0 6px 6px 6px\",\n                                    }}>\n                                        <a href={`${API_URI}/auth/logout`}>\n                                            <Badge color=\"info\">@{this.props.user!.profile.username}</Badge>\n                                        </a>\n                                    </div>\n                                )\n                                :\n                                (\n                                    <div style={{padding: \"6px\"}}>\n                                        <a href={`${API_URI}/auth/twitter`}>\n                                            <img src=\"sign-in-with-twitter-gray.png\"\n                                                 alt=\"Sign in with Twitter\"/>\n                                        </a>\n                                    </div>\n                                )\n                            }\n                        </div>\n                        <ControlPanel\n                            appState={this.state}\n                            location={this.perspectiveCamera.position}\n                            user={this.props.user}\n                        />\n                        <div style={{\n                            float: \"right\",\n                            height: \"100%\",\n                            width: \"auto\",\n                            display: \"inline-flex\",\n                            background: \"black\",\n                            margin: \"5px\",\n                            padding: \"4px\",\n                            borderColor: \"inherit\",\n                            borderWidth: \"2px\",\n                            borderStyle: \"solid\",\n                            borderRadius: \"10px\",\n                        }}>\n                            <a className=\"command-button btn btn-info\" href={DOCS_ON_GITHUB} target=\"_blank\">About</a>\n                        </div>\n                    </div>\n                </div>\n                <WorldView\n                    perspectiveCamera={this.perspectiveCamera}\n                    user={this.props.user}\n                    appState={this.state}\n                />\n            </div>\n        )\n    }\n\n    // Ok go ===========================================================================================================\n\n    private async fetchIsland(islandName: string, homeHexalotId?: string): Promise<void> {\n        const islandData = await this.props.storage.getIslandData(islandName)\n        if (!islandData) {\n            return\n        }\n        const gotchiFactory: IGotchiFactory = { // TODO\n            createGotchiSeed: (home: Hexalot, rotation: number, genome: Genome): Gotchi | undefined => undefined,\n            copyLiveGotchi: (gotchi: Gotchi, genome: Genome): Gotchi | undefined => undefined,\n        }\n        const island = new Island(islandData, gotchiFactory, this.props.storage, 0)\n        const homeHexalot = homeHexalotId ? island.findHexalot(homeHexalotId) : undefined\n        const flightState = homeHexalot ? HexalotTarget(homeHexalot, AppMode.Exploring) : IslandTarget(island, AppMode.Exploring)\n        const appState = (await new Transition(this.state).withIsland(island, islandData)).withFlightState(flightState).withRestructure.appState\n        if (!homeHexalotId) {\n            this.state.updateState(appState)\n        } else {\n            const transition = await new Transition(appState).withHomeHexalot(homeHexalot)\n            this.state.updateState(transition.withRestructure.appState)\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport { IBrick, IFace, IFaceMark, IPercent, oppositeTriangle, percentOrHundred, Triangle } from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"(0):Zen\",\n    \"(1):One\",\n    \"(6):Six\",\n    \"(16,S90):Axoneme\",\n    \"(b1,a1):Knee\",\n    \"(b3,a3):Leg\",\n    \"(a1,b1,c1,d1):Nexus\",\n    \"(A2,B(3,b(2,S90),S80),C(3,c(2,S90),S80),D(3,d(2,S90),S80)):Tripod with Knees\",\n    \"(A(8, S85, MA1), a(8, S85, MA1)):Bulge Ring\",\n    \"(a1,b(3,S85,MA1),c(3,S85,MA1),d(3,S85,MA1)):Convergence Three\",\n    \"(a1,b(12,S85,MA1),c(12,S85,MA1),d(12,S85,MA1)):Convergence Twelve\",\n    \"(B(7,S80,MA1),C(2,S120,MA0),D(7,S80,MA1)):Halo by Crane\",\n    \"(B(5,S75),C(5,S75),D(5,S75)):Pretenst Lander\",\n    \"(a(1,MA0),c(3,b(3,d(3,c(3,b(3,d(1,MA0))))))):Zig Zag Loop\",\n    \"(B2, C2, D2, A(2, b2, c2, d2)):Crystal Interstitial\",\n    \"(a(2,b(2,c(2,d(1,MA11)),d(2,c(1,MA10))),c(2,d(2,b(1,MA13)),b(2,d(1,MA12))),d(2,b(2,c(1,MA15)),c(2,b(1,MA14)))),b(2,d(2,Mc13),c(2,Md14)),c(2,b(2,Md15),d(2,Mb10)),d(2,c(2,Mb11),b(2,Mc12))): Diamond\",\n    \"(a(3,b(3,c(3,d(2,MA11)),d(3,c(2,MA10))),c(3,d(3,b(2,MA13)),b(3,d(2,MA12))),d(3,b(3,c(2,MA15)),c(3,b(2,MA14)))),b(3,d(3,Mc13),c(3,Md14)),c(3,b(3,Md15),d(3,Mb10)),d(3,c(3,Mb11),b(3,Mc12))):Diamond2\",\n]\n\n/*\n(\n    a(2,\n        b(2, c(2, d(1, MA11)), d(2, c(1, MA10))),\n        c(2, d(2, b(1, MA13)), b(2, d(1, MA12))),\n        d(2, b(2, c(1, MA15)), c(2, b(1, MA14)))\n    ),\n    b(2, d(2, Mc13), c(2, Md14)),\n    c(2, b(2, Md15), d(2, Mb10)),\n    d(2, c(2, Mb11), b(2, Mc12))\n)\n*/\n\nfunction purify(code: string): string {\n    return code.replace(/[\\n\\r\\t ]/g, \"\")\n}\n\nexport interface ITenscript {\n    name: string,\n    code: string\n    tree: ITenscriptTree\n    fromUrl: boolean\n}\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeToTenscript(name: string, tree: ITenscriptTree, fromUrl: boolean): ITenscript {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    const code = JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n    return {name, tree, code, fromUrl}\n}\n\nconst DIRECTIONS = \"ABCDabcd\"\n\nfunction isDirection(char: string): boolean {\n    return DIRECTIONS.indexOf(char) >= 0\n}\n\nconst DIGITS = \"0123456789\"\n\nfunction isDigit(char: string): boolean {\n    return DIGITS.indexOf(char) >= 0\n}\n\nexport function spaceAfterComma(tenscript: string): string {\n    return tenscript.replace(/[,]/g, \", \")\n}\n\nfunction assignSubtree(tree: ITenscriptTree, directionChar: string, child: ITenscriptTree): void {\n    switch (directionChar) {\n        case \"A\":\n            tree.A = child\n            break\n        case \"B\":\n            tree.B = child\n            break\n        case \"C\":\n            tree.C = child\n            break\n        case \"D\":\n            tree.D = child\n            break\n        case \"b\":\n            tree.b = child\n            break\n        case \"c\":\n            tree.c = child\n            break\n        case \"d\":\n            tree.d = child\n            break\n        case \"a\":\n            tree.a = child\n            break\n        default:\n            throw new Error(\"Unexpected direction directionChar: \" + directionChar)\n    }\n}\n\nfunction assignMark(tree: ITenscriptTree, directionChar: string, faceMark: IFaceMark): void {\n    switch (directionChar) {\n        case \"A\":\n            tree.MA = faceMark\n            break\n        case \"B\":\n            tree.MB = faceMark\n            break\n        case \"C\":\n            tree.MC = faceMark\n            break\n        case \"D\":\n            tree.MD = faceMark\n            break\n        case \"a\":\n            tree.Ma = faceMark\n            break\n        case \"b\":\n            tree.Mb = faceMark\n            break\n        case \"c\":\n            tree.Mc = faceMark\n            break\n        case \"d\":\n            tree.Md = faceMark\n            break\n        default:\n            throw new Error(\"Unexpected direction directionChar: \" + directionChar)\n    }\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nexport function codeToTenscript(error: (message: string) => void, fromUrl: boolean, code?: string): ITenscript | undefined {\n\n    function toNumber(digits: string): number {\n        if (!digits.match(/^\\d+$/)) {\n            throw new Error(`Not a number: ${digits}`)\n        }\n        return parseInt(digits, 10)\n    }\n\n    function _fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n\n        function argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n            const commaPos = maybeBracketed.indexOf(\",\")\n            const commaPresent = commaPos >= 0\n            if (maybeBracketed.charAt(0) !== \"(\") {\n                if (commaPresent) {\n                    return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n                }\n                return {content: maybeBracketed, skip: maybeBracketed.length}\n            }\n            const finalBracket = matchBracket(maybeBracketed)\n            const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n            return {content, skip: finalBracket + 1}\n        }\n\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = _fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                assignSubtree(tree, char, direction.codeTree)\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        assignMark(tree, directionChar, {_: toNumber(markNumber.content)})\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const tree = _fragmentToTree(purify(code))\n        if (!tree) {\n            return undefined\n        }\n        return treeToTenscript(getNameFromCode(code), tree, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport function addNameToCode(code: string, name: string): string {\n    const colonSplit = code.split(\":\")\n    if (colonSplit.length === 2) {\n        return `${colonSplit[0]}:${name.trim()}`\n    } else {\n        return `${code}:${name}`\n    }\n}\n\nexport function getNameFromCode(code: string): string {\n    const colonSplit = code.split(\":\")\n    if (colonSplit.length === 2) {\n        return colonSplit[1]\n    }\n    return code.split(\"\").filter(char => isDirection(char) || isDigit(char)).join(\"\")\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IActiveTenscript {\n    tree: ITenscriptTree\n    brick: IBrick\n    fabric: TensegrityFabric\n}\n\nexport function execute(before: IActiveTenscript[], markFace: (mark: number, face: IFace) => void): IActiveTenscript[] {\n    const active: IActiveTenscript[] = []\n\n    before.forEach(({brick, tree, fabric}) => {\n\n        function markBrick(brickToMark: IBrick, treeWithMarks: ITenscriptTree): void {\n            function maybeMark(triangle: Triangle, mark?: IFaceMark): void {\n                if (!mark) {\n                    return\n                }\n                const brickFace = brickToMark.base === Triangle.NNN ? brickToMark.faces[triangle] : brickToMark.faces[oppositeTriangle(triangle)]\n                if (brickFace.removed) {\n                    throw new Error(\"!! trying to use a face that was removed\")\n                }\n                markFace(mark._, brickFace)\n            }\n\n            maybeMark(Triangle.PPP, treeWithMarks.MA)\n            maybeMark(Triangle.NPP, treeWithMarks.Mb)\n            maybeMark(Triangle.PNP, treeWithMarks.Mc)\n            maybeMark(Triangle.PPN, treeWithMarks.Md)\n            maybeMark(Triangle.PNN, treeWithMarks.MB)\n            maybeMark(Triangle.NPN, treeWithMarks.MC)\n            maybeMark(Triangle.NNP, treeWithMarks.MD)\n            maybeMark(Triangle.NNN, treeWithMarks.Ma)\n        }\n\n        function grow(previous: IBrick, newTree: ITenscriptTree, triangle: Triangle, treeScale: IPercent): IActiveTenscript {\n            const connectTriangle = previous.base === Triangle.PPP ? oppositeTriangle(triangle) : triangle\n            const newBrick = fabric.builder.createConnectedBrick(previous, connectTriangle, treeScale)\n            if (newTree._ === 0) {\n                markBrick(newBrick, newTree)\n            }\n            return {tree: newTree, brick: newBrick, fabric}\n        }\n\n        const forward = tree._\n        if (forward) {\n            const _ = forward - 1\n            active.push(grow(brick, {...tree, _}, Triangle.PPP, percentOrHundred(tree.S)))\n            return\n        }\n\n        function maybeGrow(growBrick: IBrick, triangle: Triangle, subtree?: ITenscriptTree): void {\n            if (!subtree) {\n                return\n            }\n            const subtreeScale = percentOrHundred(subtree.S)\n            const _ = subtree._ ? subtree._ - 1 : undefined\n            const decremented = {...subtree, _}\n            active.push(grow(growBrick, decremented, triangle, subtreeScale))\n        }\n\n        maybeGrow(brick, Triangle.PPP, tree.A)\n        maybeGrow(brick, Triangle.NPP, tree.b)\n        maybeGrow(brick, Triangle.PNP, tree.c)\n        maybeGrow(brick, Triangle.PPN, tree.d)\n        maybeGrow(brick, Triangle.PNN, tree.B)\n        maybeGrow(brick, Triangle.NPN, tree.C)\n        maybeGrow(brick, Triangle.NNP, tree.D)\n        maybeGrow(brick, Triangle.NNN, tree.a)\n    })\n    return active\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FABRIC_FEATURES, FabricFeature, IntervalRole, SurfaceCharacter } from \"../fabric/fabric-engine\"\nimport { IFeatureConfig } from \"../fabric/fabric-features\"\nimport { addNameToCode, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    Realize = \"Realize\",\n    View = \"View\",\n    Strain = \"Strain\",\n}\n\nexport function enumValues(e: object): number[] {\n    return Object.keys(e).filter(k => k.length > 1).map(k => e[k])\n}\n\nconst VERSION = \"2019-12-14\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number,\n}\n\nexport interface IStoredState {\n    version: string,\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<FabricFeature, IFeatureValue>\n    recentCode: Record<string, string>,\n    controlTab: ControlTab\n    fullScreen: boolean\n    ellipsoids: boolean\n    rotating: boolean\n    showPushes: boolean\n    showPulls: boolean\n}\n\nexport function addRecentCode(state: IStoredState, {code, name}: ITenscript): IStoredState {\n    const recentCode = {...state.recentCode}\n    recentCode[name] = addNameToCode(code, name)\n    return transition(state, {recentCode})\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return Object.keys(state.recentCode).map(key => {\n        const code = state.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function roleDefaultFromFeatures(featureValues: Record<FabricFeature, IFeatureValue>, intervalRole: IntervalRole): number {\n    if (intervalRole === IntervalRole.FacePull) {\n        throw new Error()\n    }\n    return featureValues[FabricFeature[FabricFeature[intervalRole + FabricFeature.NexusPushLength]]].numeric\n}\n\nexport function transition(state: IStoredState, partial: Partial<IStoredState>): IStoredState {\n    return {...state, nonce: state.nonce + 1, ...partial}\n}\n\nfunction initialStoredState(toConfig: (feature: FabricFeature) => IFeatureConfig): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: config.defaultValue})\n            return record\n        }, {} as Record<FabricFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        fullScreen: true,\n        ellipsoids: false,\n        rotating: false,\n        showPushes: true,\n        showPulls: true,\n    })\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: FabricFeature) => IFeatureConfig): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, FabricFeature } from \"./fabric-engine\"\n\nexport interface IFeatureConfig {\n    feature: FabricFeature\n    name: string\n    defaultValue: number\n    percents: number[]\n}\n\nconst FEATURE_PERCENTS = [50, 75, 90, 100, 125, 150, 200]\nconst PHI = (1 + Math.sqrt(5)) / 2\nconst RT2 = Math.sqrt(2)\nconst RT3 = Math.sqrt(3)\nconst RING = Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\nconst T1 = 1 / 2\nconst T2 = (PHI / 3 - 1 / 6) * RT3\nconst T3 = PHI / 3 * RT3 - 1 + RT2 / RT3\nconst CROSS = Math.sqrt(T1 * T1 + T2 * T2 + T3 * T3)\n\nexport function featureConfig(feature: FabricFeature): IFeatureConfig {\n    switch (feature) {\n        case FabricFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                defaultValue: 0.0000001,\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case FabricFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                defaultValue: 0.0001,\n                percents: [0, 10, 50, 100, 150, 200],\n            }\n        case FabricFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                defaultValue: 0.03,\n                percents: [0, 50, 90, 100, 125, 150, 200],\n            }\n        case FabricFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                defaultValue: 100,\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case FabricFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                defaultValue: 1000,\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case FabricFeature.PretenstCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                defaultValue: 30000,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.FacePullEndZone:\n            return {\n                feature,\n                name: \"Face Pull End Zone\",\n                defaultValue: 4,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.FacePullOrientationForce:\n            return {\n                feature,\n                name: \"Face Pull Orientation Force\",\n                defaultValue: 0.0001,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.SlackThreshold:\n            return {\n                feature,\n                name: \"Slack threshold\",\n                defaultValue: 0.0001,\n                percents: [0.01, 0.1, 1, 10, 100, 1000],\n            }\n        case FabricFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                defaultValue: 0.1,\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case FabricFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness factor\",\n                defaultValue: 10,\n                percents: [100, 150, 200, 250, 300, 400, 500],\n            }\n        case FabricFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Drag\",\n                defaultValue: 0.1,\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case FabricFeature.MaxStrain:\n            return {\n                feature,\n                name: \"Maximum Strain\",\n                defaultValue: 0.1,\n                percents: [1, 2, 3, 5, 8, 13, 21, 34, 55, 100],\n            }\n        case FabricFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                defaultValue: 1,\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 10000, 100000],\n            }\n        case FabricFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                defaultValue: 1,\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        case FabricFeature.NexusPushLength:\n            return {\n                feature,\n                name: \"Nexus Push\",\n                defaultValue: PHI,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.ColumnPushLength:\n            return {\n                feature,\n                name: \"Column Push\",\n                defaultValue: RT2,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.TriangleLength:\n            return {\n                feature,\n                name: \"Triangle\",\n                defaultValue: 1,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.RingLength:\n            return {\n                feature,\n                name: \"Ring\",\n                defaultValue: RING,\n                percents: [10, 80, 90, 100, 110, 120, 130],\n            }\n        case FabricFeature.NexusCrossLength:\n            return {\n                feature,\n                name: \"Nexus Cross\",\n                defaultValue: CROSS,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.ColumnCrossLength:\n            return {\n                feature,\n                name: \"Column Cross\",\n                defaultValue: 1,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.BowMidLength:\n            return {\n                feature,\n                name: \"Bow Mid\",\n                defaultValue: 0.4,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.BowEndLength:\n            return {\n                feature,\n                name: \"Bow End\",\n                defaultValue: 0.6,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.PushRadiusFactor:\n            return {\n                feature,\n                name: \"Push Radius\",\n                defaultValue: 4,\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case FabricFeature.PullRadiusFactor:\n            return {\n                feature,\n                name: \"Pull Radius\",\n                defaultValue: 2,\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case FabricFeature.MaxStiffness:\n            return {\n                feature,\n                name: \"Maximum Stiffness\",\n                defaultValue: 0.0005,\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const fromConfig = features[config.feature]\n        const initialValue: IFeatureValue = fromConfig !== undefined ? fromConfig : {\n            numeric: config.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<FabricFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            storedState$.next(transition(storedState, {featureValues}))\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        const numeric = this.numeric\n        const expo = numeric.toExponential(5)\n        const zero = expo.indexOf(\"e+0\")\n        if (zero > 0) {\n            return expo.substring(0, zero)\n        }\n        const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n        if (minus > 0) {\n            return numeric.toFixed(5)\n        }\n        const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n        if (plus > 0) {\n            return numeric.toFixed(1)\n        }\n        return expo\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.config.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get fabricFeature(): FabricFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>): Record<FabricFeature, FloatFeature> {\n    const features = {} as Record<FabricFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => features[config.feature] = new FloatFeature(config, storedState$))\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default as React, useEffect, useState } from \"react\"\n\nexport enum Page {\n    Main,\n    Tensegrity,\n}\n\nexport const PAGES: Page[] = Object.keys(Page).filter(key => key.length > 2).map(key => Page[key])\n\nexport function Frame({children}: {\n    children: JSX.Element | JSX.Element[] | string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n\nexport function Loop({name, caption}: { name: string, caption: string }): JSX.Element {\n    return (\n        <div style={{\n            borderRadius: \"1em\",\n            borderColor: \"#acacac\",\n            borderWidth: 3,\n            borderStyle: \"solid\",\n        }}>\n            <video\n                style={{borderTopLeftRadius: \"1em\", borderTopRightRadius: \"1em\"}}\n                height=\"300\"\n                controls={false} loop={true} autoPlay={true}>\n                <source src={`/pretenst/movies/${name}.mp4`} type=\"video/mp4\"/>\n                Your browser does not support the video tag.\n            </video>\n            <h5 className=\"w-100 text-center\">{caption}</h5>\n        </div>\n    )\n}\n\nexport function PageLink({page}: { page: Page }): JSX.Element {\n    return (\n        <a href={`#${Page[page]}`}>{Page[page]}</a>\n    )\n}\n\nexport function Picture({name, caption}: { name: string, caption: string }): JSX.Element {\n    return (\n        <div style={{\n            borderRadius: \"1em\",\n            borderColor: \"#acacac\",\n            borderWidth: 3,\n            borderStyle: \"solid\",\n        }}>\n            <img\n                style={{borderTopLeftRadius: \"1em\", borderTopRightRadius: \"1em\"}}\n                id={name}\n                src={`/pretenst/images/${name}.png`}\n                alt={name}\n            />\n            <h5 className=\"w-100 text-center\">{caption}</h5>\n        </div>\n    )\n}\n\nexport function ImagePointer(\n    {name, x, y, children}:\n        { name: string, x: number, y: number, children: (JSX.Element | null)[] | JSX.Element | string },\n): JSX.Element {\n    const [pointTo, setPointTo] = useState<{ x: number, y: number }>({x: 0, y: 0})\n    useEffect(() => {\n        const imageElement = document.getElementById(name) as HTMLElement\n        const rect = imageElement.getBoundingClientRect()\n        setPointTo({x: rect.left + x, y: rect.top + y})\n    }, [])\n    return (\n        <div>\n            <strong>line to image called \"{name}\" at ({pointTo.x}, {pointTo.y})</strong>\n            <div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport function Definition(\n    {term, children}:\n        { term: string, children: (JSX.Element | null)[] | JSX.Element | string },\n): JSX.Element {\n    return (\n        <div>\n            <strong>{term}:</strong>\n            <div>{children}</div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport Axios, { AxiosInstance } from \"axios\"\n\nimport { fromOptionalGenomeData, IGenomeData } from \"../genetics/genome\"\nimport { Hexalot } from \"../island/hexalot\"\nimport { Island } from \"../island/island\"\nimport { IIslandData } from \"../island/island-logic\"\nimport { IJourneyData } from \"../island/journey\"\n\ninterface IUserProfile {\n    username: string\n    displayName: string\n    photos?: {value: string}[]\n}\n\nexport interface IUser {\n    ownedLots: {id: string}[]\n    profile: IUserProfile\n}\n\nexport class RemoteStorage {\n    private readonly client: AxiosInstance\n\n    constructor(baseURL: string) {\n        this.client = Axios.create({\n            baseURL,\n            withCredentials: true,\n        })\n        this.client.get(\"/\")\n            .catch((e) => {\n                console.log(`ERROR: Cannot reach remote storage at ${baseURL}. Are you running the server? \\n${e}`)\n            })\n    }\n\n    public async getIslandData(islandName: string): Promise<IIslandData | undefined> {\n        return this.fetchResource<IIslandData>(`/island/${islandName}`)\n    }\n\n    public async claimHexalot(island: Island, hexalot: Hexalot, genomeData: IGenomeData): Promise<IIslandData> {\n        hexalot.genome = fromOptionalGenomeData(genomeData)\n        const response = await this.client.post(\n            `/island/${island.name}/claim-lot`,\n            {\n                id: hexalot.id,\n                x: hexalot.coords.x,\n                y: hexalot.coords.y,\n                genomeData: JSON.stringify(genomeData),\n            },\n        )\n        return response.data as IIslandData\n    }\n\n    public async getUser(): Promise<IUser | undefined> {\n        try {\n            return (await this.fetchResource<IUser>(\"/me\"))\n        } catch (e) {\n            console.log(`Could not get user:`, e)\n            return undefined\n        }\n    }\n\n    public async getGenomeData(hexalot: Hexalot): Promise<IGenomeData | undefined> {\n        return this.fetchResource<IGenomeData>(`/hexalot/${hexalot.id}/genome-data`)\n    }\n\n    public async setGenomeData(hexalot: Hexalot, genomeData: IGenomeData): Promise<void> {\n        await this.client.post(`/hexalot/${hexalot.id}/genome-data`, {\n            genomeData,\n        })\n    }\n\n    public async getJourneyData(hexalot: Hexalot): Promise<IJourneyData | undefined> {\n        return this.fetchResource<IJourneyData>(`/hexalot/${hexalot.id}/journey`)\n    }\n\n    public async setJourneyData(hexalot: Hexalot, journeyData: IJourneyData): Promise<void> {\n        await this.client.post(`/hexalot/${hexalot.id}/journey`, {journeyData})\n    }\n\n    public async getLotOwner(hexalot: Hexalot): Promise<string | undefined> {\n        return this.fetchResource<string>(`/hexalot/${hexalot.id}/owner`)\n    }\n\n    private async fetchResource<T>(resourcePath: string): Promise<T | undefined> {\n        try {\n            const response = await this.client.get(resourcePath)\n            return response.data\n        } catch (e) {\n            console.error(\"network problem\", e)\n            return undefined\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaGrinStars } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Definition, Frame, ImagePointer, Loop, Page, PageLink, PAGES, Picture } from \"./doc-parts\"\n\n\nexport function Docs({cancel}: { cancel: () => void }): JSX.Element {\n    const [page, setPage] = useState(Page.Main)\n    return (\n        <div className=\"w-100 h-100 p-3\" style={{\n            backgroundColor: \"#494949\",\n            color: \"#d4d4d4\",\n        }}>\n            <div className=\"text-center my-3\">\n                <h2>About Pretenst</h2>\n            </div>\n            <div style={{\n                borderColor: \"#c8c8c8\",\n                borderWidth: \"3px\",\n                height: \"calc(100% - 8em)\",\n                borderStyle: \"solid\",\n                borderRadius: \"2em\",\n            }} className=\"mx-4 p-4\">\n                <PageContent page={page}/>\n            </div>\n            <div className=\"w-100 fixed-bottom my-3 text-center\">\n                <ButtonGroup>\n                    {PAGES.map(p => (\n                        <Button\n                            key={Page[p]}\n                            color={p === page ? \"success\" : \"secondary\"}\n                            onClick={() => setPage(p)}\n                        >\n                            {Page[p]}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                <ButtonGroup className=\"mx-2\">\n                    <Button color=\"warning\" onClick={cancel}><FaGrinStars/> Ok go!</Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction PageContent({page}: { page: Page }): JSX.Element {\n    switch (page) {\n        case Page.Main:\n            return (\n                <div style={{\n                    display: \"flex\",\n                }}>\n                    <Loop name=\"zero-pretenst\" caption=\"The Zero Shape\"/>\n                    <Frame>\n                        Documentation coming soon....\n                    </Frame>\n                </div>\n            )\n        case Page.Tensegrity:\n            return (\n                <div>\n                    <h3>Tensegrity Page</h3>\n                    <Frame>\n                        <Definition term=\"Pretenst\">\n                            A misspelling of the word \"pretensed\".\n                        </Definition>\n                    </Frame>\n                    <Picture name=\"optimize\" caption=\"Something to optimize\"/>\n                    <Frame>\n                        <ImagePointer name=\"optimize\" x={10} y={10}>Picture pointer</ImagePointer>\n                    </Frame>\n                    <Frame>\n                        <PageLink page={Page.Main}/>\n                    </Frame>\n                </div>\n            )\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FABRIC_FEATURES, FabricFeature, Stage } from \"./fabric-engine\"\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport { IInterval } from \"./tensegrity-types\"\n\nexport interface ITransitionPrefs {\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (fabricFeature: FabricFeature) => number, private fabric: TensegrityFabric, stage: Stage) {\n        this._stage = stage\n    }\n\n    public withStage(stage: Stage, prefs?: ITransitionPrefs): Life {\n        this.transition(stage, prefs)\n        this._stage = stage\n        return new Life(this.numericFeature, this.fabric, stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition(stage: Stage, prefs?: ITransitionPrefs): void {\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        this.save()\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (prefs && prefs.adoptLengths) {\n                            this.fabric.instance.engine.adoptLengths()\n                            this.save()\n                        }\n                        return\n                    case Stage.Realizing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Realizing:\n                        return\n                }\n                break\n            case Stage.Realizing:\n                switch (stage) {\n                    case Stage.Realized:\n                        return\n                }\n                break\n            case Stage.Realized:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (prefs && prefs.strainToStiffness) {\n                            const pushOverPull = this.numericFeature(FabricFeature.PushOverPull)\n                            const {newStiffnesses, newLinearDensities} = adjustedStiffness(this.fabric, pushOverPull)\n                            this.restore()\n                            const instance = this.fabric.instance\n                            newStiffnesses.forEach((value, index) => instance.stiffnesses[index] = value)\n                            newLinearDensities.forEach((value, index) => instance.linearDensities[index] = value)\n                            return\n                        }\n                        if (prefs && prefs.adoptLengths) {\n                            this.fabric.instance.engine.adoptLengths()\n                            this.save()\n                            return\n                        } else {\n                            this.restore()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n\n    private save(): void {\n        this.fabric.instance.engine.cloneInstance(this.fabric.instance.index, this.fabric.slackInstance.index)\n    }\n\n    private restore(): void {\n        this.fabric.instance.engine.cloneInstance(this.fabric.slackInstance.index, this.fabric.instance.index)\n        FABRIC_FEATURES.forEach(fabricFeature => {\n            this.fabric.instance.setFeatureValue(fabricFeature, this.numericFeature(fabricFeature))\n        })\n    }\n}\n\nexport function stiffnessToLinearDensity(stiffness: number): number {\n    return Math.sqrt(stiffness)\n}\n\nfunction adjustedStiffness(fabric: TensegrityFabric, pushOverPull: number): {\n    newStiffnesses: Float32Array,\n    newLinearDensities: Float32Array,\n} {\n    const strains: Float32Array = fabric.instance.strains\n    const existingStiffnesses = fabric.instance.stiffnesses\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const totalStrain = toAverage.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / toAverage.length\n    }\n    const intervals = fabric.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffness = existingStiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = stiffness.map(stiffnessToLinearDensity)\n    return {newStiffnesses: stiffness, newLinearDensities: linearDensities}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { FabricFeature, IntervalRole } from \"./fabric-engine\"\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport {\n    averageLocation,\n    averageScaleFactor,\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFacePull,\n    IInterval,\n    IJoint,\n    initialBrick,\n    IPercent,\n    IPushDefinition,\n    IRing,\n    oppositeTriangle,\n    percentToFactor,\n    PUSH_ARRAY,\n    PushEnd,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport function scaleToFacePullLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport class TensegrityBuilder {\n\n    private faceMarks: Record<number, IFace[]> = {}\n\n    constructor(public readonly fabric: TensegrityFabric, private numericFeature: (fabricFeature: FabricFeature) => number) {\n    }\n\n    public get markFace(): (mark: number, face: IFace) => void {\n        return (mark: number, face: IFace) => {\n            const found = this.faceMarks[mark]\n            if (found) {\n                found.push(face)\n            } else {\n                this.faceMarks[mark] = [face]\n            }\n        }\n    }\n\n    public createBrickAt(midpoint: Vector3, scale: IPercent): IBrick {\n        const points = this.createBrickPointsAt(Triangle.PPP, scale, midpoint)\n        return this.createBrick(points, Triangle.NNN, scale)\n    }\n\n    public createConnectedBrick(brickA: IBrick, triangle: Triangle, scale: IPercent): IBrick {\n        const faceA = brickA.faces[triangle]\n        const scaleA = percentToFactor(brickA.scale)\n        const scaleB = scaleA * percentToFactor(scale)\n        const brickB = this.createBrickOnFace(faceA, factorToPercent(scaleB))\n        const faceB = brickB.faces[brickB.base]\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        const connector = this.connectFaces(faceA, faceB, factorToPercent((scaleA + scaleB) / 2), countdown)\n        if (!connector) {\n            console.error(\"Cannot connect!\")\n        }\n        return brickB\n    }\n\n    public turnUpright(): void {\n        const markedFace = this.faceMarkLists.find(list => list.length === 1)\n        if (!markedFace) {\n            return\n        }\n        this.uprightAtOrigin(markedFace[0])\n    }\n\n    public checkFacePulls(facePulls: IFacePull[], removeFacePull: (facePull: IFacePull) => void): IFacePull[] {\n        if (facePulls.length === 0) {\n            return facePulls\n        }\n        const instance = this.fabric.instance\n        const connectFacePull = ({alpha, omega, scaleFactor} : IFacePull) => {\n            const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n            if (!this.connectFaces(alpha, omega, factorToPercent(scaleFactor), countdown)) {\n                console.error(\"Unable to connect\")\n            }\n        }\n        return facePulls.filter(facePull => {\n            const {alpha, omega, scaleFactor} = facePull\n            const distance = instance.faceMidpoint(alpha.index).distanceTo(instance.faceMidpoint(omega.index))\n            const closeEnough = distance <= scaleToFacePullLength(scaleFactor) * 10\n            if (closeEnough) {\n                connectFacePull(facePull)\n                removeFacePull(facePull)\n                return false\n            }\n            return true\n        })\n    }\n\n    public optimize(): void {\n        const fabric = this.fabric\n        const instance = fabric.instance\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = fabric.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crossPulls = fabric.intervals.filter(interval => (\n            interval.intervalRole === IntervalRole.ColumnCross ||\n            interval.intervalRole === IntervalRole.NexusCross),\n        )\n        crossPulls.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = instance.location(aAlpha)\n            const aOmegaLoc = instance.location(aOmega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crossPulls.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = instance.location(bAlpha)\n                const bOmegaLoc = instance.location(bOmega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            fabric.createInterval(x, y, IntervalRole.BowMid, scale, countdown)\n            const ax = fabric.findInterval(a, x)\n            const ay = fabric.findInterval(a, y)\n            const bx = fabric.findInterval(b, x)\n            const by = fabric.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                throw new Error(\"Cannot find intervals during optimize\")\n            }\n            fabric.removeInterval(ax)\n            fabric.removeInterval(by)\n            this.fabric.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.fabric.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n        instance.forgetDimensions()\n    }\n\n    public uprightAtOrigin(face: IFace): void {\n        const matrix = this.faceToOrigin(face)\n        this.fabric.instance.apply(matrix)\n    }\n\n    public get initialFacePulls(): IFacePull[] {\n        return this.faceMarkLists\n            .filter(list => list.length === 2 || list.length === 3)\n            .reduce((list: IFacePull[], faceList: IFace[]) => [...list, ...this.createFacePulls(faceList)], [])\n    }\n\n    public createFacePulls(faces: IFace[]): IFacePull[] {\n        const instance = this.fabric.instance\n        const centerBrickFacePulls = () => {\n            const brick = this.createBrickAt(\n                averageLocation(faces.map(face => instance.faceMidpoint(face.index))),\n                factorToPercent(averageScaleFactor(faces)),\n            )\n            instance.engine.renderNumbers()\n            const closestTo = (face: IFace) => {\n                const faceLocation = instance.faceMidpoint(face.index)\n                const opposingFaces = brick.faces.filter(({negative}) => negative !== face.negative)\n                return opposingFaces.reduce((a, b) => {\n                    const aa = instance.faceMidpoint(a.index).distanceTo(faceLocation)\n                    const bb = instance.faceMidpoint(b.index).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n            }\n            return faces.map(face => this.fabric.createFacePull(closestTo(face), face))\n        }\n        switch (faces.length) {\n            case 2:\n                if (faces[0].negative === faces[1].negative) {\n                    return centerBrickFacePulls()\n                }\n                return [this.fabric.createFacePull(faces[0], faces[1])]\n            case 3:\n                return centerBrickFacePulls()\n            default:\n                return []\n        }\n    }\n\n    private get faceMarkLists(): IFace[][] {\n        return Object.keys(this.faceMarks).map(key => this.faceMarks[key])\n    }\n\n    private createBrickOnFace(face: IFace, scale: IPercent): IBrick {\n        const negativeFace = TRIANGLE_DEFINITIONS[face.triangle].negative\n        const brick = face.brick\n        const triangle = face.triangle\n        const trianglePoints = brick.faces[triangle].joints.map(joint => this.fabric.instance.location(joint.index))\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const midSide = new Vector3().addVectors(trianglePoints[0], trianglePoints[1]).multiplyScalar(0.5)\n        const x = new Vector3().subVectors(midSide, midpoint).normalize()\n        const u = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const proj = new Vector3().add(x).multiplyScalar(x.dot(u))\n        const z = u.sub(proj).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        const xform = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        const base = negativeFace ? Triangle.NNN : Triangle.PPP\n        const points = this.createBrickPointsAt(base, scale, new Vector3(0, 0, 0)) // todo: maybe raise it\n        const movedToFace = points.map(p => p.applyMatrix4(xform))\n        const baseTriangle = negativeFace ? Triangle.PPP : Triangle.NNN\n        return this.createBrick(movedToFace, baseTriangle, scale)\n    }\n\n    private createBrick(points: Vector3[], base: Triangle, scale: IPercent): IBrick {\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        const brick = initialBrick(this.fabric.bricks.length, base, scale)\n        this.fabric.bricks.push(brick)\n        const jointIndexes = points.map((p, idx) => this.fabric.createJointIndex(idx, p))\n        PUSH_ARRAY.forEach(({}: IPushDefinition, idx: number) => {\n            const alphaIndex = jointIndexes[idx * 2]\n            const omegaIndex = jointIndexes[idx * 2 + 1]\n            const alpha: IJoint = {index: alphaIndex, oppositeIndex: omegaIndex}\n            const omega: IJoint = {index: omegaIndex, oppositeIndex: alphaIndex}\n            brick.pushes.push(this.fabric.createInterval(alpha, omega, IntervalRole.NexusPush, scale, countdown))\n        })\n        brick.pushes.forEach(push => brick.joints.push(push.alpha, push.omega))\n        const joints = brick.pushes.reduce((arr: IJoint[], push) => {\n            arr.push(push.alpha, push.omega)\n            return arr\n        }, [])\n        this.fabric.joints.push(...joints)\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const tJoints = triangle.pushEnds.map(end => joints[end])\n            for (let walk = 0; walk < 3; walk++) {\n                const alpha = tJoints[walk]\n                const omega = tJoints[(walk + 1) % 3]\n                const interval = this.fabric.createInterval(alpha, omega, IntervalRole.Triangle, scale, countdown)\n                brick.pulls.push(interval)\n                brick.rings[triangle.ringMember[walk]].push(interval)\n            }\n        })\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const face = this.fabric.createFace(brick, triangle.name)\n            brick.faces.push(face)\n        })\n        this.fabric.instance.forgetDimensions()\n        return brick\n    }\n\n    private createBrickPointsAt(base: Triangle, scale: IPercent, position: Vector3): Vector3 [] {\n        const pushesToPoints = (vectors: Vector3[], push: IPushDefinition): Vector3[] => {\n            vectors.push(new Vector3().add(push.alpha))\n            vectors.push(new Vector3().add(push.omega))\n            return vectors\n        }\n        const points = PUSH_ARRAY.reduce(pushesToPoints, [])\n        const newBase = oppositeTriangle(base)\n        const trianglePoints = TRIANGLE_DEFINITIONS[newBase].pushEnds.map((end: PushEnd) => points[end]).reverse()\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const x = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n        const y = new Vector3().sub(midpoint).normalize()\n        const z = new Vector3().crossVectors(y, x).normalize()\n        const basis = new Matrix4().makeBasis(x, y, z)\n        const scaleFactor = percentToFactor(scale)\n        const fromBasis = new Matrix4()\n            .getInverse(basis)\n            .setPosition(position)\n            .scale(new Vector3(scaleFactor, scaleFactor, scaleFactor))\n        return points.map(p => p.applyMatrix4(fromBasis))\n    }\n\n    private faceToOrigin(face: IFace): Matrix4 {\n        this.fabric.instance.engine.renderNumbers() // todo: necessary?\n        const trianglePoints = face.joints.map(joint => this.fabric.instance.location(joint.index))\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const x = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const z = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        z.crossVectors(x, y).normalize()\n        const basis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        return new Matrix4().getInverse(basis)\n    }\n\n    private nineJointPairsByProximity(faceA: IFace, faceB: IFace): IJointPair[] {\n        const ninePairs: IJointPair[] = []\n        const instance = this.fabric.instance\n        faceA.joints.forEach(jointA => {\n            faceB.joints.forEach(jointB => {\n                const locationA = instance.location(jointA.index)\n                const locationB = instance.location(jointB.index)\n                const distance = locationA.distanceTo(locationB)\n                ninePairs.push({jointA, jointB, distance})\n            })\n        })\n        return ninePairs.sort((a, b) => a.distance - b.distance)\n    }\n\n    private facesToRing(faceA: IFace, faceB: IFace): IRing | undefined {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Polarity not opposite\")\n        }\n        const ninePairs = this.nineJointPairsByProximity(faceA, faceB)\n        const sixPairs = ninePairs.slice(0, 6)\n        const closest = sixPairs.shift()\n        if (!closest) {\n            throw new Error(\"No closest found\")\n        }\n        const extractPair = (predicate: (jointPair: IJointPair) => boolean) => {\n            const index = sixPairs.findIndex(predicate)\n            return index >= 0 ? sixPairs.splice(index, 1)[0] : undefined\n        }\n        const closestA = (jointB: IJoint) => {\n            const pair = extractPair(p => p.jointB.index === jointB.index)\n            return pair ? pair.jointA : undefined\n        }\n        const closestB = (jointA: IJoint) => {\n            const pair = extractPair(p => p.jointA.index === jointA.index)\n            return pair ? pair.jointB : undefined\n        }\n        const a0 = closest.jointA\n        const b0 = closest.jointB\n        const b1 = closestB(a0)\n        if (!b1) {\n            return undefined\n        }\n        const a1 = closestA(b1)\n        if (!a1) {\n            return undefined\n        }\n        const b2 = closestB(a1)\n        if (!b2) {\n            return undefined\n        }\n        const a2 = closestA(b2)\n        if (!a2) {\n            return undefined\n        }\n        const b3 = closestB(a2)\n        if (!b3 || b3.index !== b0.index) {\n            console.error(\"Cannot complete ring!\")\n            return undefined\n        }\n        const pos0 = faceA.joints.findIndex(j => j.index === a0.index)\n        const pos1 = faceA.joints.findIndex(j => j.index === a1.index)\n        const ringMatchesA = (pos0 + 1) % 3 === pos1\n        const jointsA = ringMatchesA !== faceA.negative ? [a0, a2, a1] : [a0, a1, a2]\n        const jointsB = ringMatchesA !== faceA.negative ? [b1, b0, b2] : [b0, b1, b2]\n        return {faceA, faceB, jointsA, jointsB}\n    }\n\n    private connectFaces(faceA: IFace, faceB: IFace, connectorScale: IPercent, countdown: number): boolean {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Same polarity!\")\n        }\n        const ring = this.facesToRing(faceA, faceB)\n        if (!ring) {\n            return false\n        }\n        const brickIsNexus = (brick: IBrick) => brick.negativeAdjacent > 1 || brick.postiveeAdjacent > 1\n        const createInterval = (from: IJoint, to: IJoint, role: IntervalRole) => this.fabric.createInterval(from, to, role, connectorScale, countdown)\n        const ringInterval = (from: IJoint, to: IJoint) => createInterval(from, to, IntervalRole.Ring)\n        const crossInterval = (from: IJoint, opposite: IJoint, toFace: IFace) => {\n            const to = this.fabric.joints[opposite.oppositeIndex]\n            const role = brickIsNexus(toFace.brick) ? IntervalRole.NexusCross : IntervalRole.ColumnCross\n            return createInterval(from, to, role)\n        }\n        for (let corner = 0; corner < 3; corner++) {\n            const a0 = ring.jointsA[corner]\n            const b0 = ring.jointsB[corner]\n            const b1 = ring.jointsB[(corner + 1) % 3]\n            ringInterval(a0, b0)\n            ringInterval(a0, b1)\n            crossInterval(a0, b1, faceB)\n            crossInterval(b0, a0, faceA)\n        }\n        const handleFace = (faceToRemove: IFace): void => {\n            const scale = faceToRemove.brick.scale\n            const triangle = faceToRemove.triangle\n            const brick = faceToRemove.brick\n            if (faceToRemove.negative) {\n                brick.negativeAdjacent++\n            } else {\n                brick.postiveeAdjacent++\n            }\n            TRIANGLE_DEFINITIONS\n                .filter(t => t.opposite !== triangle && t.negative !== TRIANGLE_DEFINITIONS[triangle].negative)\n                .forEach(t => brick.faces[t.name].canGrow = false)\n            this.fabric.removeFace(faceToRemove, true)\n            const triangleRing = TRIANGLE_DEFINITIONS[triangle].ring\n            if (brickIsNexus(brick)) {\n                brick.pulls\n                    .filter(interval => !interval.removed)\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.Triangle, scale, countdown))\n                brick.crosses\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.NexusCross, scale, countdown))\n\n            } else {\n                brick.rings[triangleRing]\n                    .filter(interval => !interval.removed)\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.Ring, scale, countdown))\n            }\n            const pushRole = brickIsNexus(brick) ? IntervalRole.NexusPush : IntervalRole.ColumnPush\n            brick.pushes\n                .filter(interval => !interval.removed)\n                .forEach(interval => this.fabric.changeIntervalRole(interval, pushRole, scale, countdown))\n        }\n        handleFace(faceA)\n        handleFace(faceB)\n        this.fabric.instance.forgetDimensions()\n        return true\n    }\n}\n\ninterface IJointPair {\n    jointA: IJoint\n    jointB: IJoint\n    distance: number\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { BufferGeometry, Float32BufferAttribute, Quaternion, SphereGeometry, Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval } from \"../storage/download\"\n\nimport { FabricFeature, IFabricEngine, IntervalRole, isPush, Laterality, Stage } from \"./fabric-engine\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ITransitionPrefs, Life, stiffnessToLinearDensity } from \"./life\"\nimport { execute, IActiveTenscript, ITenscript } from \"./tenscript\"\nimport { scaleToFacePullLength, TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFacePull,\n    IInterval,\n    IJoint,\n    IPercent,\n    JointTag,\n    percentOrHundred,\n    percentToFactor,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport const SPHERE = new SphereGeometry(1, 32, 8)\n\nconst COUNTDOWN_MAX = 65535\n\nfunction facePullCountdown(distance: number): number {\n    const countdown = distance * 4000\n    return countdown > COUNTDOWN_MAX ? COUNTDOWN_MAX : countdown\n}\n\nfunction scaleToStiffness(scale: IPercent): number {\n    return percentToFactor(scale) / 10000\n}\n\nexport class TensegrityFabric {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public facePulls: IFacePull[] = []\n    public faces: IFace[] = []\n    public bricks: IBrick[] = []\n    public activeTenscript?: IActiveTenscript[]\n    public facesToConnect: IFace[] | undefined\n    public maxJointSpeed = 0\n    public readonly builder: TensegrityBuilder\n\n    private faceCount: number\n    private faceLocations: Float32BufferAttribute\n    private faceNormals: Float32BufferAttribute\n    private _facesGeometry = new BufferGeometry()\n\n    private intervalCount: number\n    private lineLocations: Float32BufferAttribute\n    private lineColors: Float32BufferAttribute\n    private _linesGeometry = new BufferGeometry()\n\n    constructor(\n        public readonly roleDefaultLength: (intervalRole: IntervalRole) => number,\n        public readonly numericFeature: (fabricFeature: FabricFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly slackInstance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        this.builder = new TensegrityBuilder(this, numericFeature)\n        this.refreshLineGeometry()\n        this.refreshFaceGeometry()\n        const brick = this.builder.createBrickAt(new Vector3(), percentOrHundred())\n        this.bricks = [brick]\n        this.activeTenscript = [{tree: this.tenscript.tree, brick, fabric: this}]\n    }\n\n    public get life(): Life {\n        return this.life$.getValue()\n    }\n\n    public toStage(stage: Stage, prefs?: ITransitionPrefs): void {\n        if (stage === this.life.stage) {\n            return\n        }\n        this.life$.next(this.life.withStage(stage, prefs))\n    }\n\n    public connectFaces(faces: IFace[]): void {\n        this.facesToConnect = faces\n    }\n\n    public brickMidpoint({joints}: IBrick, midpoint?: Vector3): Vector3 {\n        const accumulator = midpoint ? midpoint : new Vector3()\n        return joints\n            .reduce((sum, joint) => sum.add(this.instance.location(joint.index)), accumulator)\n            .multiplyScalar(1.0 / joints.length)\n    }\n\n    public createJointIndex(jointTag: JointTag, location: Vector3): number {\n        return this.engine.createJoint(jointTag, Laterality.RightSide, location.x, location.y, location.z)\n    }\n\n    public createFacePull(alpha: IFace, omega: IFace): IFacePull {\n        const instance = this.instance\n        const distance = instance.faceMidpoint(alpha.index).distanceTo(instance.faceMidpoint(omega.index))\n        const stiffness = scaleToStiffness(percentOrHundred())\n        const linearDensity = stiffnessToLinearDensity(stiffness)\n        const scaleFactor = (percentToFactor(alpha.brick.scale) + percentToFactor(omega.brick.scale)) / 2\n        const restLength = scaleToFacePullLength(scaleFactor)\n        const index = this.engine.createInterval(\n            alpha.index, omega.index, IntervalRole.FacePull,\n            restLength, stiffness, linearDensity, facePullCountdown(distance),\n        )\n        const facePull = {index, alpha, omega, distance, scaleFactor, removed: false}\n        this.facePulls.push(facePull)\n        this.instance.forgetDimensions()\n        return facePull\n    }\n\n    public removeFacePull(facePull: IFacePull): void {\n        this.facePulls = this.facePulls.filter(existing => existing.index !== facePull.index)\n        this.engine.removeInterval(facePull.index)\n        this.facePulls.forEach(existing => {\n            if (existing.index > facePull.index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > facePull.index) {\n                existing.index--\n            }\n        })\n        facePull.removed = true\n        this.instance.forgetDimensions()\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, coundown: number): IInterval {\n        const scaleFactor = percentToFactor(scale)\n        const defaultLength = this.roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const stiffness = scaleToStiffness(scale)\n        const linearDensity = stiffnessToLinearDensity(stiffness)\n        const index = this.engine.createInterval(alpha.index, omega.index, intervalRole, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPush(intervalRole),\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = factorToPercent(percentToFactor(interval.scale) * factor)\n        this.instance.engine.multiplyRestLength(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        const engine = this.instance.engine\n        engine.setIntervalRole(interval.index, intervalRole)\n        engine.changeRestLength(interval.index, percentToFactor(scaleFactor) * this.roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.engine.removeInterval(interval.index)\n        this.intervals.forEach(existing => {\n            if (existing.index > interval.index) {\n                existing.index--\n            }\n        })\n        this.facePulls.forEach(existing => {\n            if (existing.index > interval.index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n        this.instance.forgetDimensions()\n    }\n\n    public createFace(brick: IBrick, triangle: Triangle): IFace {\n        const {negative, pushEnds} = TRIANGLE_DEFINITIONS[triangle]\n        const joints = pushEnds.map(end => brick.joints[end])\n        const pushes = pushEnds.map(end => {\n            const foundPush = brick.pushes.find(push => {\n                const endJoint = brick.joints[end]\n                return endJoint.index === push.alpha.index || endJoint.index === push.omega.index\n            })\n            if (foundPush === undefined) {\n                throw new Error()\n            }\n            return foundPush\n        })\n        const pulls = [0, 1, 2].map(offset => brick.pulls[triangle * 3 + offset])\n        const face: IFace = {\n            index: this.engine.createFace(joints[0].index, joints[1].index, joints[2].index),\n            canGrow: true, negative, removed: false,\n            brick, triangle, joints, pushes, pulls,\n        }\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace, removeIntervals: boolean): void {\n        this.engine.removeFace(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        face.removed = true\n        if (removeIntervals) {\n            face.pulls.forEach(interval => this.removeInterval(interval))\n        }\n    }\n\n    public release(): void {\n        this.instance.release()\n    }\n\n    public needsUpdate(): void {\n        const instance = this.instance\n        this.faceLocations.array = instance.faceLocations\n        this.faceLocations.needsUpdate = true\n        this.faceNormals.array = instance.faceNormals\n        this.faceNormals.needsUpdate = true\n        this.lineLocations.array = instance.lineLocations\n        this.lineLocations.needsUpdate = true\n        this.lineColors.array = instance.lineColors\n        this.lineColors.needsUpdate = true\n        this._linesGeometry.computeBoundingSphere()\n        this._facesGeometry.computeBoundingSphere()\n    }\n\n    public get submergedJoints(): IJoint[] {\n        return this.joints.filter(joint => this.instance.location(joint.index).y < 0)\n    }\n\n    public get facesGeometry(): BufferGeometry {\n        if (this.faceCount !== this.instance.engine.getFaceCount()) {\n            this.refreshFaceGeometry()\n        }\n        return this._facesGeometry\n    }\n\n    public get linesGeometry(): BufferGeometry {\n        if (this.intervalCount !== this.instance.engine.getIntervalCount()) {\n            this.refreshLineGeometry()\n        }\n        return this._linesGeometry\n    }\n\n    public startTightening(facePulls: IFacePull[]): void {\n        this.facePulls = facePulls\n    }\n\n    public iterate(): Stage {\n        const engine = this.engine\n        const lifePhase = engine.iterate(this.life$.getValue().stage)\n        this.maxJointSpeed = Math.sqrt(engine.renderNumbers())\n        if (lifePhase === Stage.Busy) {\n            return lifePhase\n        }\n        const activeCode = this.activeTenscript\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.activeTenscript = execute(activeCode, this.builder.markFace)\n                engine.centralize()\n            }\n            if (activeCode.length === 0) {\n                this.activeTenscript = undefined\n                if (lifePhase === Stage.Growing) {\n                    const afterGrowing = engine.finishGrowing()\n                    this.facePulls = this.builder.initialFacePulls\n                    return afterGrowing\n                }\n            }\n        } else {\n            const faces = this.facesToConnect\n            if (faces) {\n                this.facesToConnect = undefined\n                this.builder.createFacePulls(faces)\n            }\n            this.facePulls = this.builder.checkFacePulls(this.facePulls, facePull => this.removeFacePull(facePull))\n        }\n        return lifePhase\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public orientInterval(interval: IInterval, radiusFactor: number, visualStrain: number): { scale: Vector3, rotation: Quaternion } {\n        const Y_AXIS = new Vector3(0, 1, 0)\n        const unit = this.instance.unitVector(interval.index)\n        const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n        const alphaLocation = this.instance.location(interval.alpha.index)\n        const omegaLocation = this.instance.location(interval.omega.index)\n        const intervalLength = alphaLocation.distanceTo(omegaLocation)\n        const strain = this.instance.strains[interval.index]\n        const half = intervalLength / 2\n        const scale = new Vector3(radiusFactor, half + half * (-strain) * visualStrain, radiusFactor)\n        return {scale, rotation}\n    }\n\n    // public orientVectorPair(a: Vector3, b: Vector3, radiusFactor: number): { scale: Vector3, rotation: Quaternion } {\n    //     const Y_AXIS = new Vector3(0, 1, 0)\n    //     const unit = new Vector3().subVectors(b, a).normalize()\n    //     const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n    //     const distance = a.distanceTo(b)\n    //     const scale = new Vector3(radiusFactor, distance, radiusFactor)\n    //     return {scale, rotation}\n    // }\n\n    public get output(): IFabricOutput {\n        const numberToString = (n: number) => n.toFixed(5).replace(/[.]/, \",\")\n        const strains = this.instance.strains\n        const stiffnesses = this.instance.stiffnesses\n        const linearDensities = this.instance.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = this.instance.location(joint.index)\n                return {\n                    index: (joint.index + 1).toString(),\n                    x: numberToString(vector.x),\n                    y: numberToString(vector.z),\n                    z: numberToString(vector.y),\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const alpha = this.instance.location(interval.alpha.index)\n                const omega = this.instance.location(interval.omega.index)\n                const length = alpha.distanceTo(omega)\n                const joints = `${interval.alpha.index + 1},${interval.omega.index + 1}`\n                const strainString = numberToString(strains[interval.index])\n                const type = interval.isPush ? \"Push\" : \"Pull\"\n                const stiffness = stiffnesses[interval.index]\n                const stiffnessString = numberToString(stiffness)\n                const linearDensity = linearDensities[interval.index]\n                const linearDensityString = numberToString(linearDensity)\n                const role = IntervalRole[interval.intervalRole]\n                return <IOutputInterval>{\n                    joints,\n                    type,\n                    strainString,\n                    stiffness,\n                    stiffnessString,\n                    linearDensity,\n                    linearDensityString,\n                    isPush: isPush(interval.intervalRole),\n                    role,\n                    length,\n                }\n            }).sort((a, b) => {\n                if (a.isPush && !b.isPush) {\n                    return -1\n                }\n                if (!a.isPush && b.isPush) {\n                    return 1\n                }\n                return a.stiffness - b.stiffness\n            }),\n        }\n    }\n\n    private refreshLineGeometry(): void {\n        this.engine.renderNumbers()\n        this.intervalCount = this.instance.engine.getIntervalCount()\n        this.lineLocations = new Float32BufferAttribute(this.instance.lineLocations, 3)\n        this.lineColors = new Float32BufferAttribute(this.instance.lineColors, 3)\n        this._linesGeometry.addAttribute(\"position\", this.lineLocations)\n        this._linesGeometry.addAttribute(\"color\", this.lineColors)\n        this._linesGeometry.computeBoundingSphere()\n    }\n\n    private refreshFaceGeometry(): void {\n        this.engine.renderNumbers()\n        this.faceCount = this.instance.engine.getFaceCount()\n        this.faceLocations = new Float32BufferAttribute(this.instance.faceLocations, 3)\n        this.faceNormals = new Float32BufferAttribute(this.instance.faceNormals, 3)\n        this._facesGeometry.addAttribute(\"position\", this.faceLocations)\n        this._facesGeometry.addAttribute(\"normal\", this.faceNormals)\n        this._facesGeometry.computeBoundingSphere()\n    }\n\n    private get engine(): IFabricEngine {\n        return this.instance.engine\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaTools,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Stage } from \"../fabric/fabric-engine\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    CurrentLengthsToSlack,\n    SlackToRealizing,\n    SlackToShaping,\n    CaptureRealizedToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({fabric, stageTransition, disabled}: {\n    fabric: TensegrityFabric,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Busy || life.stage === Stage.Realizing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => fabric.toStage(Stage.Slack, {adoptLengths: true})}\n                >\n                    Capture Lengths <FaCamera/> (\n                    <Symbol stage={Stage.Shaping}/> ) <FaArrowRight/> ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.CurrentLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => fabric.toStage(Stage.Slack)}\n                >\n                    Current Lengths <Symbol stage={Stage.Shaping}/> <FaArrowRight/>\n                    <Symbol stage={Stage.Slack}/> Slack\n                </Button>\n            )\n        case StageTransition.SlackToRealizing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => fabric.toStage(Stage.Realizing)}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Realized}/> Realized\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => fabric.toStage(Stage.Shaping)}\n                    >\n                        Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Shaping}/> Shaping\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CaptureRealizedToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Realized)}\n                    onClick={() => fabric.toStage(Stage.Slack, {adoptLengths: true})}\n                >\n                    Capture realized <FaCamera/> ( <Symbol stage={Stage.Realized}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Realized)}\n                    onClick={() => fabric.toStage(Stage.Slack, {strainToStiffness: true})}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Realized}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Busy:\n            return <FaClock/>\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaTools/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Realizing:\n            return <FaClock/>\n        case Stage.Realized:\n            return <FaHandSpock/>\n    }\n}\n\n// function stageName(stage: Stage): string {\n//     switch (stage) {\n//         case Stage.Busy:\n//             return \"Busy\"\n//         case Stage.Growing:\n//             return \"Growing\"\n//         case Stage.Shaping:\n//             return \"Shaping\"\n//         case Stage.Slack:\n//             return \"Slack\"\n//         case Stage.Realizing:\n//             return \"Realizing\"\n//         case Stage.Realized:\n//             return \"Realized\"\n//     }\n// }\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaCompass,\n    FaDragon,\n    FaHandPointUp,\n    FaLink,\n    FaList,\n    FaMagic,\n    FaTimesCircle,\n    FaTools,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    FabricFeature,\n    INTERVAL_ROLES,\n    IntervalRole,\n    intervalRoleFabricFeature,\n    intervalRoleName,\n    Stage,\n} from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\n\nexport enum ShapeSelection {\n    None,\n    Faces,\n    Intervals,\n}\n\nexport function ShapeTab(\n    {\n        floatFeatures, fabric, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedFaces, clearSelectedFaces, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        fabric: TensegrityFabric,\n        setFabric: (fabric: TensegrityFabric) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedFaces: IFace[],\n        clearSelectedFaces: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        fabric.instance.engine.setPushAndPull(pushAndPull)\n    }, [pushAndPull])\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updateEllipsoids(newState.ellipsoids)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    const [lengthFeature, setLengthFeature] = useState(floatFeatures[FabricFeature.NexusPushLength])\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            fabric.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function connect(): void {\n        fabric.connectFaces(selectedFaces)\n        clearSelectedFaces()\n        setShapeSelection(ShapeSelection.None)\n        setFabric(fabric)\n    }\n\n    function disabled(): boolean {\n        return ellipsoids || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedFaces.length < faceCount || ellipsoids\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CurrentLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={ellipsoids && shapeSelection === ShapeSelection.None || selectedFaces.length === 0}\n                        onClick={() => {\n                            const selection = shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals\n                            setShapeSelection(selection)\n                        }}\n                    >\n                        <span><FaArrowDown/> Adjust <FaArrowUp/></span>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedFaces.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelectedFaces()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(1, ShapeSelection.Faces)}\n                        onClick={() => {\n                            fabric.builder.uprightAtOrigin(selectedFaces[0])\n                            clearSelectedFaces()\n                        }}>\n                        <FaCompass/><span> Upright</span>\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(2, ShapeSelection.Faces)}\n                        onClick={connect}>\n                        <FaLink/><span> Connect</span>\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => fabric.builder.optimize()}>\n                        <FaMagic/><span> Bows</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Default Lengths</h6>\n                <FeaturePanel key={lengthFeature.title} feature={lengthFeature} disabled={disabled()}/>\n                <ButtonGroup className=\"my-2\">{\n                    INTERVAL_ROLES\n                        .map(intervalRole => ({\n                            intervalRole,\n                            feature: floatFeatures[intervalRoleFabricFeature(intervalRole)],\n                        }))\n                        .map(({intervalRole, feature}) => (\n                            <Button size=\"sm\" key={IntervalRole[intervalRole]}\n                                    onClick={() => setLengthFeature(feature)}\n                                    color={lengthFeature.fabricFeature === feature.fabricFeature ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport {\n    Color,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    VertexColors,\n} from \"three\"\n\nimport { IntervalRole } from \"../fabric/fabric-engine\"\n\nexport const SELECTION_COLOR = \"#91934f\"\nexport const SCALE_LINE_COLOR = \"#cace02\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fc4d4d\",\n    \"#fb712a\",\n    \"#ed9400\",\n    \"#d4b500\",\n    \"#afd200\",\n    \"#80da52\",\n    \"#4edd83\",\n    \"#00ddad\",\n    \"#00c4d7\",\n    \"#00a5ff\",\n    \"#007bff\",\n    \"#2329f7\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(colorString => new Color(colorString))\n\n// console.log(\"RAINBOW\\n\",`const RAINBOW: f32[] = [\\n${RAINBOW_COLORS.map(color => (\n//     `${(color.r).toFixed(4)}, ${(color.g).toFixed(4)}, ${(color.b).toFixed(4)}`\n// )).join(\",\\n\")}\\n]`)\n\nconst lights = true\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#1c1608\"),\n    side: DoubleSide,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: VertexColors,\n})\n\nexport const SCALE_LINE = new LineBasicMaterial({\n    color: new Color(SCALE_LINE_COLOR),\n})\n\nexport const FACE = new MeshPhongMaterial({\n    lights,\n    color: new Color(\"white\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.2,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n    lights: true,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color, lights}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"#6541b4\"\n        case IntervalRole.ColumnPush:\n            return \"#2f3aca\"\n        case IntervalRole.Triangle:\n            return \"#f9c9bf\"\n        case IntervalRole.Ring:\n            return \"#cc3200\"\n        case IntervalRole.NexusCross:\n            return \"#59ebcb\"\n        case IntervalRole.ColumnCross:\n            return \"#73c84a\"\n        case IntervalRole.BowMid:\n            return \"#f101e9\"\n        case IntervalRole.BowEnd:\n            return \"#cb01c3\"\n        case IntervalRole.FacePull:\n            return \"#bf0105\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color, lights})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { fabricFeatureIntervalRole } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const roleColor = roleColorString(fabricFeatureIntervalRole(feature.fabricFeature))\n    const color = roleColor ? roleColor : \"#919191\"\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{\n                color: disabled ? \"gray\" : \"white\",\n            }}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : color\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, Stage, SurfaceCharacter } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { enumValues, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({floatFeatures, fabric, shapeSelection, storedState$}: {\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    fabric: TensegrityFabric,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updateEllipsoids(storedState.ellipsoids)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function disabled(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function changeState(changed: Partial<IStoredState>): void {\n        storedState$.next(transition(storedState$.getValue(), changed))\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.SlackToRealizing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureRealizedToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <FeaturePanel feature={floatFeatures[FabricFeature.PretenstFactor]} disabled={disabled()}/>\n                <div className=\"float-right\" style={{\n                    color: disabled() ? \"gray\" : \"white\",\n                }}>\n                    {SurfaceCharacter[storedState.surfaceCharacter]}\n                </div>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {enumValues(SurfaceCharacter).map(value => (\n                        <Button\n                            key={SurfaceCharacter[value]}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === value}\n                            onClick={() => changeState({surfaceCharacter: value})}\n                        >{SurfaceCharacter[value]}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={floatFeatures[FabricFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={floatFeatures[FabricFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaSlidersH } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { BufferGeometry, Float32BufferAttribute, Geometry, Vector3 } from \"three\"\n\nimport { FabricFeature } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LINE_VERTEX_COLORS, SCALE_LINE } from \"./materials\"\n\nconst SCALE_WIDTH = 0.7\nconst NEEDLE_WIDTH = 1.4\nconst SCALE_MAX = 3.5\n\nconst FEATURES = [\n    FabricFeature.MaxStrain,\n    FabricFeature.MaxStiffness,\n    FabricFeature.VisualStrain,\n    FabricFeature.SlackThreshold,\n]\n\nfunction scaleGeometry(middleTick: boolean): Geometry {\n    const geometry = new Geometry()\n    const v = (x: number, y: number) => new Vector3(x, y, 0)\n    geometry.vertices = [\n        v(0, -SCALE_MAX), v(0, SCALE_MAX),\n        v(-SCALE_WIDTH, SCALE_MAX), v(SCALE_WIDTH, SCALE_MAX),\n        v(-SCALE_WIDTH, -SCALE_MAX), v(SCALE_WIDTH, -SCALE_MAX),\n    ]\n    if (middleTick) {\n        geometry.vertices.push(v(-SCALE_WIDTH, 0), v(SCALE_WIDTH, 0))\n    }\n    return geometry\n}\n\nfunction needleGeometry(\n    intervals: IInterval[], lineColors: Float32Array,\n    values: Float32Array, midValue: number, maxValue: number,\n): BufferGeometry {\n    const position = new Float32Array(values.length * 2 * 3)\n    let offset = 0\n    intervals.forEach(interval => {\n        const value = values[interval.index]\n        const unboundedHeight = (value - midValue) / (maxValue - midValue)\n        const height = unboundedHeight < -1 ? -1 : unboundedHeight > 1 ? 1 : unboundedHeight\n        position[offset++] = -SCALE_WIDTH * NEEDLE_WIDTH\n        position[offset++] = height * SCALE_MAX\n        position[offset++] = 0\n        position[offset++] = SCALE_WIDTH * NEEDLE_WIDTH\n        position[offset++] = height * SCALE_MAX\n        position[offset++] = 0\n    })\n    const geometry = new BufferGeometry()\n    geometry.addAttribute(\"position\", new Float32BufferAttribute(position, 3))\n    geometry.addAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n    return geometry\n}\n\nexport function StrainTab({floatFeatures, fabric, storedState$}: {\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    fabric: TensegrityFabric,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const camera = useRef()\n\n    function ScaleView(): JSX.Element {\n        const [age, updateAge] = useState(0)\n        const [maxStrain, updateMaxStrain] = useState(storedState$.getValue().featureValues[FabricFeature.MaxStrain].numeric)\n        const [maxStiffness, updateMaxStiffness] = useState(storedState$.getValue().featureValues[FabricFeature.MaxStiffness].numeric)\n\n        useEffect(() => {\n            const sub = storedState$.subscribe(storedState => {\n                updateMaxStrain(storedState.featureValues[FabricFeature.MaxStrain].numeric)\n                updateMaxStiffness(storedState.featureValues[FabricFeature.MaxStiffness].numeric)\n            })\n            return () => sub.unsubscribe()\n        }, [fabric])\n\n        useEffect(() => {\n            const timer = setInterval(() => {\n                const fabricAge = fabric.instance.engine.getAge()\n                if (age < fabricAge) {\n                    updateAge(fabricAge) // to trigger repaint. better way?\n                }\n            }, 1000)\n            return () => clearTimeout(timer)\n        }, [])\n\n        const instance = fabric.instance\n\n        function Scale({position, intervals, floats, mid, max, middleTick}: {\n            position: number,\n            intervals: IInterval[],\n            floats: Float32Array,\n            mid: number,\n            max: number,\n            middleTick: boolean,\n        }): JSX.Element {\n            return (\n                <group position={new Vector3(position, -0.15, 0)}>\n                    <lineSegments\n                        geometry={needleGeometry(intervals, instance.lineColors, floats, mid, max)}\n                        material={LINE_VERTEX_COLORS}/>\n                    <lineSegments geometry={scaleGeometry(middleTick)} material={SCALE_LINE}/>\n                </group>\n            )\n        }\n\n        return (\n            <Canvas>\n                <orthographicCamera position={new Vector3(0, 0, -1)} ref={camera}/>\n                <scene>\n                    <Scale\n                        position={-1.5}\n                        intervals={fabric.intervals}\n                        floats={instance.strains}\n                        mid={0}\n                        max={maxStrain}\n                        middleTick={true}\n                    />\n                    <Scale\n                        position={1.5}\n                        intervals={fabric.intervals}\n                        floats={instance.stiffnesses}\n                        mid={0}\n                        max={maxStiffness}\n                        middleTick={false}\n                    />\n                </scene>\n            </Canvas>\n        )\n    }\n\n    return <>\n        <Grouping height=\"50%\">\n            <div style={{\n                position: \"absolute\",\n                left: \"6em\",\n            }}>\n                Strain\n            </div>\n            <div style={{\n                position: \"absolute\",\n                right: \"5em\",\n            }}>\n                Stiffness\n            </div>\n            <ScaleView/>\n        </Grouping>\n        <Grouping>\n            <h6 className=\"w-100 text-center\"><FaSlidersH/> Adjustments</h6>\n            {FEATURES.map(feature => (\n                <FeaturePanel\n                    key={FabricFeature[feature]}\n                    feature={floatFeatures[feature]}\n                    disabled={false}\n                />))}\n        </Grouping>\n    </>\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBox, FaBug, FaHeart, FaHiking, FaPlay, FaRegFolder, FaRegFolderOpen, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { BOOTSTRAP, codeToTenscript, ITenscript, spaceAfterComma } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { addRecentCode, getRecentTenscript, IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, fabric, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    fabric?: TensegrityFabric,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(fabric && !fabric.tenscript.fromUrl ? fabric.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        const state = addRecentCode(storedState$.getValue(), newCode)\n        setRecentPrograms(getRecentTenscript(state))\n        storedState$.next(state)\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBox/> Storage</h6>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(spaceAfterComma(tenscript.code)), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"20em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCamera,\n    FaCircle,\n    FaClock,\n    FaCompressArrowsAlt,\n    FaDownload,\n    FaExpandArrowsAlt, FaEye,\n    FaFileCsv,\n    FaFistRaised,\n    FaFutbol,\n    FaHandRock,\n    FaParachuteBox, FaRunning,\n    FaVolleyballBall,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, INTERVAL_ROLES, IntervalRole, intervalRoleName, Stage } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { saveCSVZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function ViewTab(\n    {\n        floatFeatures, fabric,\n        visibleRoles, setVisibleRoles, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        fabric: TensegrityFabric,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    const [showPushes, updateShowPushes] = useState(storedState$.getValue().showPushes)\n    const [showPulls, updateShowPulls] = useState(storedState$.getValue().showPulls)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updateEllipsoids(newState.ellipsoids)\n            updateShowPushes(newState.showPushes)\n            updateShowPulls(newState.showPulls)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function ViewButton({pushes, pulls, children}: { pushes: boolean, pulls: boolean, children: JSX.Element }): JSX.Element {\n        return (\n            <Button\n                style={{color: \"white\"}}\n                color={pushes === showPushes && pulls === showPulls ? \"success\" : \"secondary\"}\n                onClick={() => {\n                    storedState$.next(transition(storedState$.getValue(), {showPulls: pulls, showPushes: pushes}))\n                }}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Coloring</h6>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <ViewButton pushes={true} pulls={true}>\n                        <span><FaFutbol/> All</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={true}>\n                        <span><FaVolleyballBall/> Pulls</span>\n                    </ViewButton>\n                    <ViewButton pushes={true} pulls={false}>\n                        <span><FaExpandArrowsAlt/> Pushes</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={false}>\n                        <span><FaCircle/> Roles</span>\n                    </ViewButton>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaCamera/> Snapshot</h6>\n                <ButtonGroup size=\"sm\">\n                    {INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            color={visibleRoles.indexOf(intervalRole) < 0 ? \"secondary\" : \"success\"}\n                            key={`viz${intervalRole}`}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    setVisibleRoles([...visibleRoles, intervalRole])\n                                } else {\n                                    setVisibleRoles(visibleRoles.filter(role => role !== intervalRole))\n                                }\n                            }}\n                            disabled={!ellipsoids}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel key=\"pushrad\" feature={floatFeatures[FabricFeature.PushRadiusFactor]}\n                              disabled={!ellipsoids}/>\n                <FeaturePanel key=\"pullrad\" feature={floatFeatures[FabricFeature.PullRadiusFactor]}\n                              disabled={!ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={floatFeatures[FabricFeature.IterationsPerFrame]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"ic\" feature={floatFeatures[FabricFeature.IntervalCountdown]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"pc\" feature={floatFeatures[FabricFeature.PretenstCountdown]} disabled={ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Realized}\n                            onClick={() => fabric.instance.engine.setAltitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Realized}\n                            onClick={() => fabric.instance.engine.setAltitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={ellipsoids}\n                            onClick={() => fabric.instance.engine.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                <ButtonGroup vertical={true} className=\"w-100\">\n                    <Button onClick={() => saveCSVZip(fabric)}>\n                        <FaDownload/> Download CSV <FaFileCsv/>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\nimport { Mesh, Object3D } from \"three\"\nimport { OBJExporter } from \"three/examples/jsm/exporters/OBJExporter\"\n\nimport { SPHERE, TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { FACE, roleMaterial } from \"../view/materials\"\n\nexport interface IOutputInterval {\n    joints: string,\n    type: string,\n    strainString: string,\n    stiffness: number,\n    stiffnessString: string,\n    linearDensity: number,\n    linearDensityString: string,\n    isPush: boolean,\n    role: string,\n    length: number,\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: {\n        index: string,\n        x: string,\n        y: string,\n        z: string,\n    }[]\n    intervals: IOutputInterval[]\n}\n\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([joint.index, joint.x, joint.y, joint.z]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"elasticity\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints}\"\"\"`,\n            interval.type,\n            interval.strainString,\n            interval.stiffnessString,\n            interval.linearDensityString,\n            interval.role,\n            interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(fabric: TensegrityFabric): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${fabric.submergedJoints.map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(fabric: TensegrityFabric): void {\n    const output = fabric.output\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(fabric))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        const dateString = new Date().toISOString()\n            .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n        FileSaver.saveAs(blob, `pretenst-${dateString}.zip`)\n    })\n}\n\nfunction extractOBJBlob(fabric: TensegrityFabric, faces: boolean): Blob {\n    const object3d = new Object3D()\n    if (faces) {\n        object3d.add(new Mesh(fabric.facesGeometry, FACE))\n    } else {\n        object3d.add(...fabric.intervals.map((interval: IInterval) => {\n            const {scale, rotation} = fabric.orientInterval(interval, interval.isPush ? 1 : 0.1, 1)\n            const mesh = new Mesh(SPHERE, roleMaterial(interval.intervalRole))\n            mesh.position.copy(fabric.instance.getIntervalMidpoint(interval.index))\n            mesh.scale.copy(scale)\n            mesh.rotation.setFromQuaternion(rotation)\n            return mesh\n        }))\n        object3d.updateMatrixWorld(true)\n    }\n    return new Blob([new OBJExporter().parse(object3d)], {type: \"text/plain\"})\n}\n\nexport function saveOBJFile(fabric: TensegrityFabric): void {\n    FileSaver.saveAs(extractOBJBlob(fabric, false), \"pretenst.obj\")\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, IntervalRole } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { StrainTab } from \"./strain-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\nimport { ViewTab } from \"./view-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        floatFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedFaces, clearSelectedFaces, selectedIntervals,\n        fabric, setFabric, runTenscript,\n        visibleRoles, setVisibleRoles,\n        toFullScreen, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedFaces: IFace[],\n        clearSelectedFaces: () => void,\n        selectedIntervals: IInterval[],\n        runTenscript: (tenscript: ITenscript) => void,\n        fabric?: TensegrityFabric,\n        setFabric: (fabric: TensegrityFabric) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(fabric ? fabric.life : undefined)\n    useEffect(() => {\n        const sub = fabric ? fabric.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [fabric])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelectedFaces()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => storedState$.next(transition(storedState$.getValue(), {controlTab: tab}))}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            fabric={fabric}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !fabric ? NO_FABRIC : (\n                        <ShapeTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedFaces={selectedFaces}\n                            clearSelectedFaces={clearSelectedFaces}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !fabric ? NO_FABRIC : (\n                        <RealizeTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.View:\n                    return !fabric ? NO_FABRIC : (\n                        <ViewTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            visibleRoles={visibleRoles}\n                            setVisibleRoles={setVisibleRoles}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Strain:\n                    return !fabric ? NO_FABRIC : (\n                        <StrainTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 1.0\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 2.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Face3, Geometry, Vector3 } from \"three\"\n\nimport { MeshKey } from \"../gotchi-view/selector\"\nimport { HEXAGON_POINTS, LAND_NORMAL_SPREAD, SIX, SURFACE_LAND_COLOR, UP } from \"../island/constants\"\n\nimport { SURFACE } from \"./materials\"\n\nexport function SurfaceComponent(): JSX.Element {\n    const spots = useMemo(() => spotsGeometry(), [])\n    return (\n        <mesh name=\"Spots\" geometry={spots} material={SURFACE}/>\n    )\n}\n\nfunction spotsGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(MeshKey.SPOTS_KEY, 0, geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    geometry.computeBoundingSphere()\n    return geometry\n}\n\nfunction addSurfaceGeometry(meshKey: MeshKey, index: number, vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const offset = index * (HEXAGON_POINTS.length + 1)\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(offset + SIX, offset + a, offset + b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useRender, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    Euler,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, FabricFeature, IntervalRole, Stage } from \"../fabric/fabric-engine\"\nimport { SPHERE, TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval, percentToFactor } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { FACE, LINE_VERTEX_COLORS, rainbowMaterial, roleMaterial, SELECT_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst ALTITUDE = 4\n\nexport function FabricView({\n                               fabric, fabricError, selectedIntervals, selectedFaces, setSelectedFaces, storedState$,\n                               shapeSelection, ellipsoids, visibleRoles,\n                           }: {\n    fabric: TensegrityFabric,\n    fabricError: (error: string) => void,\n    selectedIntervals: IInterval[],\n    selectedFaces: IFace[],\n    setSelectedFaces: (faces: IFace[]) => void,\n    shapeSelection: ShapeSelection,\n    ellipsoids: boolean,\n    visibleRoles: IntervalRole[],\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [age, setAge] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(orb => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(orbit.current.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        orb.object = perspective\n        orb.minPolarAngle = -0.98 * Math.PI / 2\n        orb.maxPolarAngle = 0.8 * Math.PI\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useRender(() => {\n        try {\n            const instance = fabric.instance\n            const target = instance.getMidpoint()\n            const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n            orbit.current.target.add(towardsTarget)\n            orbit.current.update()\n            if (!ellipsoids && shapeSelection !== ShapeSelection.Faces) {\n                const nextStage = fabric.iterate()\n                if (life.stage === Stage.Realizing && nextStage === Stage.Realized) {\n                    setTimeout(() => fabric.toStage(Stage.Realized, {}))\n                } else if (nextStage !== life.stage && life.stage !== Stage.Realizing && nextStage !== Stage.Busy) {\n                    setTimeout(() => fabric.toStage(nextStage, {}))\n                }\n            }\n            instance.engine.renderNumbers()\n            fabric.needsUpdate()\n            setAge(instance.engine.getAge())\n        } catch (e) {\n            fabricError(e)\n        }\n    }, true, [\n        fabric, fabric, age, life, shapeSelection, ellipsoids,\n    ])\n\n    function toggleFacesSelection(faceToToggle: IFace): void {\n        if (selectedFaces.some(selected => selected.index === faceToToggle.index)) {\n            setSelectedFaces(selectedFaces.filter(b => b.index !== faceToToggle.index))\n        } else {\n            setSelectedFaces([...selectedFaces, faceToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {ellipsoids ? (\n                    <EllipsoidView\n                        key=\"ellipsoid\"\n                        fabric={fabric}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        visibleRoles={visibleRoles}\n                    />\n                ) : (\n                    <LineView\n                        key=\"lines\"\n                        fabric={fabric}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                    />\n                )}\n                {shapeSelection !== ShapeSelection.Faces ? undefined : (\n                    <Faces\n                        key=\"faces\"\n                        fabric={fabric}\n                        stage={life.stage}\n                        selectFace={toggleFacesSelection}\n                    />\n                )}\n                {selectedFaces.map(face => <SelectedFace key={`Face${face.index}`} fabric={fabric} face={face}/>)}\n                {life.stage <= Stage.Slack ? undefined : <SurfaceComponent/>}\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectedFace({fabric, face}: { fabric: TensegrityFabric, face: IFace }): JSX.Element {\n    const scale = percentToFactor(face.brick.scale) / 8\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={fabric.instance.faceMidpoint(face.index)}\n            material={SELECT_MATERIAL}\n            scale={new Vector3(scale, scale, scale)}\n        />\n    )\n}\n\nfunction IntervalMesh({fabric, interval, storedState}: {\n    fabric: TensegrityFabric,\n    interval: IInterval,\n    storedState: IStoredState,\n}): JSX.Element | null {\n\n    let material = roleMaterial(interval.intervalRole)\n    if (storedState.showPushes || storedState.showPulls) {\n        material = rainbowMaterial(fabric.instance.strainNuances[interval.index])\n        if (!(storedState.showPushes && storedState.showPulls) && (storedState.showPushes && !interval.isPush || storedState.showPulls && interval.isPush)) {\n            return <group/>\n        }\n    }\n    const linearDensity = fabric.instance.linearDensities[interval.index]\n    const radiusFactor = storedState.featureValues[interval.isPush ? FabricFeature.PushRadiusFactor : FabricFeature.PullRadiusFactor]\n    const visualStrain = storedState.featureValues[FabricFeature.VisualStrain]\n    const {scale, rotation} = fabric.orientInterval(interval, radiusFactor.numeric * linearDensity, visualStrain.numeric)\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={fabric.instance.getIntervalMidpoint(interval.index)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={scale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n        />\n    )\n}\n\nfunction EllipsoidView({fabric, visibleRoles, selectedIntervals, storedState}: {\n    fabric: TensegrityFabric,\n    visibleRoles: IntervalRole[],\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            {selectedIntervals.length > 0 ? selectedIntervals.map(interval => (\n                <IntervalMesh\n                    key={`SI${interval.index}`}\n                    fabric={fabric}\n                    interval={interval}\n                    storedState={storedState}\n                />\n            )) : fabric.intervals.map(interval => (visibleRoles.indexOf(interval.intervalRole) < 0 ? undefined :\n                    <IntervalMesh\n                        key={`I${interval.index}`}\n                        fabric={fabric}\n                        interval={interval}\n                        storedState={storedState}\n                    />\n            ))}}\n        </group>\n    )\n}\n\nfunction LineView({fabric, selectedIntervals, storedState}: {\n    fabric: TensegrityFabric,\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            <lineSegments\n                key=\"lines\"\n                geometry={fabric.linesGeometry}\n                material={LINE_VERTEX_COLORS}\n            />\n            {selectedIntervals.map(interval => (\n                <IntervalMesh\n                    key={`SI${interval.index}`}\n                    fabric={fabric}\n                    interval={interval}\n                    storedState={storedState}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction Faces({fabric, stage, selectFace}: {\n    fabric: TensegrityFabric,\n    stage: Stage,\n    selectFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return fabric.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        selectFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={fabric.facesGeometry}\n            material={FACE}\n        />\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaCamera, FaHandPointUp, FaInfoCircle, FaPlay, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { Docs } from \"../docs/docs\"\nimport { FabricFeature, fabricFeatureIntervalRole, INTERVAL_ROLES, IntervalRole, Stage } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { FabricKernel } from \"../fabric/fabric-kernel\"\nimport { addNameToCode, BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval, percentToFactor } from \"../fabric/tensegrity-types\"\nimport {\n    getRecentTenscript,\n    IFeatureValue,\n    IStoredState,\n    roleDefaultFromFeatures,\n    transition,\n} from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript {\n    const fromUrl = getCodeFromUrl()\n    if (fromUrl) {\n        return fromUrl\n    }\n    const recentCode = getRecentTenscript(state)\n    return recentCode.length > 0 ? recentCode[0] : BOOTSTRAP[0]\n}\n\nfunction selectIntervals(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        const pushes = face.pushes.filter(unknown)\n        return [...accum, ...pushes, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function TensegrityView({fabricKernel, floatFeatures, storedState$}: {\n    fabricKernel: FabricKernel,\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => fabricKernel.allocateInstance(), [])\n    const slackInstance = useMemo(() => fabricKernel.allocateInstance(), [])\n\n    const [docs, setDocs] = useState(false)\n    const [fabric, setFabric] = useState<TensegrityFabric | undefined>()\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n    const [selectedFaces, setSelectedFaces] = useState<IFace[]>([])\n    useEffect(() => setSelectedIntervals(selectIntervals(selectedFaces)), [selectedFaces])\n\n    const [rootTenscript, setRootTenscript] = useState(() => getCodeToRun(storedState$.getValue()))\n    useEffect(() => {\n        if (location.hash.length === 0) {\n            location.hash = addNameToCode(rootTenscript.code, rootTenscript.name)\n        }\n    }, [rootTenscript])\n\n    const [visibleRoles, setVisibleRoles] = useState(INTERVAL_ROLES)\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => setVisibleRoles(INTERVAL_ROLES), [ellipsoids])\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            updateEllipsoids(storedState.ellipsoids)\n            updateRotating(storedState.rotating)\n            if (!fabric) {\n                return\n            }\n            const engine = fabric.instance.engine\n            engine.setColoring(storedState.showPushes, storedState.showPulls)\n            engine.setSurfaceCharacter(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [fabric])\n\n    useEffect(() => { // todo: look when this happens\n        const featureSubscriptions = Object.keys(floatFeatures).map(k => floatFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe((value: IFeatureValue) => {\n                if (!fabric) {\n                    return\n                }\n                fabric.instance.applyFeature(feature)\n                const intervalRole = fabricFeatureIntervalRole(feature.config.feature)\n                if (intervalRole !== undefined) {\n                    const engine = fabric.instance.engine\n                    fabric.intervals\n                        .filter(interval => interval.intervalRole === intervalRole)\n                        .forEach(interval => {\n                            const scaledLength = feature.numeric * percentToFactor(interval.scale)\n                            engine.changeRestLength(interval.index, scaledLength, 500)\n                        })\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [fabric])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance || !slackInstance) {\n            return\n        }\n        location.hash = addNameToCode(newTenscript.code, newTenscript.name)\n        mainInstance.engine.initInstance()\n        mainInstance.forgetDimensions()\n        floatFeatures[FabricFeature.ShapingPretenstFactor].percent = 100\n        floatFeatures[FabricFeature.ShapingDrag].percent = 100\n        floatFeatures[FabricFeature.ShapingStiffnessFactor].percent = 100\n        storedState$.next(transition(storedState$.getValue(), {ellipsoids: false}))\n        Object.keys(floatFeatures).map(k => floatFeatures[k]).forEach((feature: FloatFeature) => mainInstance.applyFeature(feature))\n        const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(floatFeatures, role)\n        const numericFeature = (feature: FabricFeature) => storedState$.getValue().featureValues[feature].numeric\n        setFabric(new TensegrityFabric(roleLength, numericFeature, mainInstance, slackInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!fabric) {\n                runTenscript(rootTenscript)\n            }\n        }, 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        storedState$.next(transition(storedState$.getValue(), {fullScreen: value}))\n    }\n\n    if (docs) {\n        return <Docs cancel={() => setDocs(false)}/>\n    }\n\n    return (\n        <>\n            {fullScreen ? (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        floatFeatures={floatFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        fabric={fabric}\n                        setFabric={setFabric}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedFaces={selectedFaces}\n                        clearSelectedFaces={() => setSelectedFaces([])}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        visibleRoles={visibleRoles}\n                        setVisibleRoles={setVisibleRoles}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!fabric ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle fabric={fabric}/>\n                        <div id=\"top-right\">\n                            <Button color=\"info\" onClick={() => setDocs(true)}><FaInfoCircle/> About</Button>\n                        </div>\n                        <div id=\"bottom-middle\">\n                            <ButtonGroup>\n                                <Button\n                                    color={ellipsoids ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {ellipsoids: !ellipsoids}))}\n                                >\n                                    <FaCamera/>\n                                </Button>\n                                <Button\n                                    color={shapeSelection === ShapeSelection.Faces ? \"warning\" : \"secondary\"}\n                                    disabled={ellipsoids && shapeSelection === ShapeSelection.None}\n                                    onClick={() => setShapeSelection(shapeSelection !== ShapeSelection.Faces ? ShapeSelection.Faces : ShapeSelection.None)}\n                                >\n                                    <span><FaHandPointUp/></span>\n                                </Button>\n                                <Button\n                                    color={rotating ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {rotating: !rotating}))}\n                                >\n                                    <FaSyncAlt/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: shapeSelection === ShapeSelection.Faces || ellipsoids ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Faces ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    fabric={fabric}\n                                    fabricError={error => {\n                                        console.error(error)\n                                        const tenscript = fabric.tenscript\n                                        setFabric(undefined)\n                                        setTimeout(() => runTenscript(tenscript), 1000)\n                                    }}\n                                    selectedIntervals={selectedIntervals}\n                                    selectedFaces={selectedFaces}\n                                    setSelectedFaces={setSelectedFaces}\n                                    shapeSelection={shapeSelection}\n                                    ellipsoids={ellipsoids}\n                                    visibleRoles={visibleRoles}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({fabric}: { fabric: TensegrityFabric }): JSX.Element {\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{fabric.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { App } from \"./app\"\nimport { API_URI } from \"./constants\"\nimport { IFabricEngine } from \"./fabric/fabric-engine\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/fabric-features\"\nimport { FabricKernel } from \"./fabric/fabric-kernel\"\nimport registerServiceWorker from \"./service-worker\"\nimport { RemoteStorage } from \"./storage/remote-storage\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n// eslint-disable-next-line @typescript-eslint/tslint/config\nimport \"./vendor/bootstrap.min.css\"\n// eslint-disable-next-line @typescript-eslint/tslint/config\nimport \"./index.css\"\n\ndeclare const getFabricEngine: () => Promise<IFabricEngine> // implementation: index.html\n\nconst TENSEGRITY = process.env.REACT_APP_ENABLED_APP === \"pretenst\"\n\n// APP_EVENT.subscribe(appEvent => {\n//     switch (appEvent.event) {\n//         case AppEvent.Command:\n//             console.log(`App Event: ${appEvent.event}: ${appEvent.command}`)\n//             break\n//         case AppEvent.AppMode:\n//             console.log(`App Event: ${appEvent.event}: ${appEvent.appMode}`)\n//             break\n//         default:\n//             console.log(`App Event: ${appEvent.event}`)\n//             break\n//     }\n// })\n\nasync function start(): Promise<void> {\n    const engine = await getFabricEngine()\n    const fabricKernel = new FabricKernel(engine)\n    const root = document.getElementById(\"root\") as HTMLElement\n    const storedState$ = new BehaviorSubject(loadState(featureConfig))\n    storedState$.subscribe(newState => saveState(newState))\n    if (TENSEGRITY) {\n        console.log(\"Starting Pretenst..\")\n        ReactDOM.render(\n            <TensegrityView\n                fabricKernel={fabricKernel}\n                floatFeatures={createFloatFeatures(storedState$)}\n                storedState$={storedState$}\n            />,\n            root,\n        )\n    } else {\n        console.log(\"Starting Galapagotchi..\")\n        console.log(`Using API at ${API_URI}`)\n        const storage = new RemoteStorage(API_URI)\n        const user = await storage.getUser()\n        ReactDOM.render(\n            <App\n                engine={engine}\n                floatFeatures={[]} // todo\n                storage={storage}\n                user={user}\n            />,\n            root,\n        )\n    }\n    registerServiceWorker()\n}\n\nstart()\n"],"sourceRoot":""}