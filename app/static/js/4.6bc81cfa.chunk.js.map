{"version":3,"sources":["fabric/eig-util.ts","fabric/tensegrity-types.ts","bridge/bridge-logic.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/fabric-instance.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/tenscript.ts","fabric/tensegrity-builder.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/island-geometry.ts","gotchi/island.ts","gotchi/patch.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/frozen-tab.tsx","view/stage-button.tsx","view/feature-panel.tsx","view/live-tab.tsx","view/phase-tab.tsx","view/script-tab.tsx","fabric/tensegrity-optimizer.ts","view/shape-tab.tsx","view/control-tabs.tsx","view/interval-stats.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["IntervalRole","FORWARD","Vector3","RIGHT","UP","PHI","roleDefaultLength","intervalRole","Push","Pull","PhiPush","RootPush","PhiTriangle","Twist","InterTwist","Ring","Math","sqrt","Cross","CROSS1","BowMid","BowEnd","DistancerPull","Error","FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","long","Version","Spin","FaceName","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","max","toFixed","sub","a","b","subVectors","normalize","avg","addVectors","midpoint","points","mid","forEach","point","add","multiplyScalar","length","vectorFromArray","array","index","vector","offset","set","oppositeSpin","spin","Left","Right","LeftRight","RightLeft","FaceSelection","FACE_NAMES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","expectPush","push","jointLocation","instance","jointDistance","distanceTo","intervalLocation","alpha","omega","intervalLength","addIntervalStats","interval","pushOverPull","pretenstFactor","floatView","stats","stiffness","stiffnesses","strain","strains","idealLength","idealLengths","linearDensity","linearDensities","expectStats","intervalJoins","acrossPush","joint","otherJoint","locationFromFace","face","ends","locationFromFaces","faces","reduce","accum","percentOrHundred","percent","_","factorFromPercent","percentFromFactor","factor","faceFromTwist","twist","faceName","emptySelection","intervals","joints","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","PretensingCountdown","VisualStrain","PretenstFactor","PushOverPull","ribbon","tensegrity","ribbonShort","ribbonLong","x","left","z","ribbonJoint","createJoint","scale","createInterval","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","identities","arch","group","shift","distance","jointIndex","name","hook","sortXY","aa","bb","lengthSq","sort","extractHooks","hanger","rj","floor","hookJoint","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","y","join","extractJointFile","csvIntervals","j","type","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","reverse","c","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECTED_MATERIAL","MeshBasicMaterial","color","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","ConnectorPull","RadialPull","roleMaterial","roleColor","SURFACE","MeshPhongMaterial","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","addScaledVector","Face3","addSurfaceGeometry","v","patchesGeometry","material","BridgeView","useState","stage$","getValue","updateStage","getFabricOutput","useEffect","subscribe","unsubscribe","id","style","position","right","height","ButtonGroup","vertical","Button","onClick","backgroundColor","Camera","BridgeScene","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","console","log","Pretenst","target","key","lineGeometry","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","unit","unitVector","rotation","Quaternion","setFromUnitVectors","isPush","intervalRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","args","matrixWorldNeedsUpdate","end","props","ref","useRef","setDefaultCamera","useThree","camera","current","fov","updateMatrixWorld","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","empty","Float32Array","intervalCount","faceCount","BufferGeometry","faceGeometry","jointLocations","unitVectors","strainLimits","strainNuances","createEmptyFloatView","adoptFabric","forward","featuresToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","set_float_value","worldFeature","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","crossVectors","get_stage","requested","request_stage","error","ControlTab","ViewMode","transition","state$","partial","state","next","nonce","initialStoredState","toConfig","demoCount","DEFAULT_FEATURE_VALUES","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Script","fullScreen","viewMode","Lines","rotating","visibleRoles","currentRole","pushBottom","pushTop","pullBottom","pullTop","saveState","storedState","localStorage","setItem","loadState","item","getItem","parse","featureConfig","percents","Antigravity","ShapingDrag","ShapingStiffnessFactor","ShapingPretenstFactor","StiffnessFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","value","createFloatFeatures","features","MarkAction","treeNeedsOmniTwist","d","B","C","D","Mb","Mc","Md","MB","MC","MD","MAIN_CODE","treeToCode","tree","s","treeToTenscript","pushesPerTwist","mainTree","marks","fromUrl","optionalPushes","mainCode","spinChars","markSections","mark","action","Subtree","BaseFace","JoinFaces","FaceDistance","Anchor","format","subtreesCode","code","isDirection","char","faceMark","isDigit","toNumber","digits","match","parseMain","main","parsed","exec","chars","spinFromChars","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","parts","split","foundName","find","part","endsWith","test","markCode","eq","Number","parseCode","matches","parseFloat","submerged","e","message","noParseErrors","BOOTSTRAP","script","grow","afterTree","omni","twistToMark","treeWithMarks","builder","baseFace","newTwist","createTwistOn","thisFace","reorient","execute","before","activeBuds","bud","decremented","A","apply","middle","sum","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationX","PI","rotate","makeRotationY","getInverse","multiply","reorientMatrix","childTree","brickMark","markTree","deleteFaceMark","TensegrityBuilder","createTwistAt","twistScale","baseFactor","pushRole","pullRole","bottom","createTwist","faceTwistPoints","bottomTopFace","top","createOmniTwist","connect","connectRoles","trianglePoints","faceToOriginMatrix","centerBrickFaceIntervals","averageScaleFactor","where","omniTwist","opposing","pulls","faceLocation","closestFace","createRadialPull","pullScale","distancers","faceA","indexA","faceB","indexB","radialPulls","removeInterval","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","rotatedWalk","bestRotation","minLength","rotateForBestRing","axis","alphaRays","omegaRays","isOmniSpin","bottomSpin","firstTwistPoints","bottomTwist","topTwist","topFace","bottomFace","avoidFaces","some","connectPulls","pushes","p","removed","createFaceTouching","facePulls","pull","thirdForward","thirdReverse","createFace","topTouching","bottomTouching","roles","reverseA","forwardB","a0","a1","b0","b1","c0","d0","ring","down","up","faceScale","c1","cN1","removeFace","omniA","omniB","base","angle","cos","sin","twistPoints","initialLength","tinyRadius","radials","copy","norm","bc","cd","ba","Tensegrity","numericFeature","tenscript","connectors","jobs","buds","createBud","newJoint","create_joint","alphaJoint","omegaJoint","creatAxis","alphaRestLength","omegaRestLength","createRay","radialPull","restLength","countdown","abs","create_interval","multiply_rest_length","existing","eliminateInterval","f0","f1","f2","create_face","list","pair","faceSelection","None","remove_face","job","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","checkConnectors","averagePullStrain","strainFactor","restoreSnapshot","copy_stiffnesses","pushRadius","pullRadius","jointRadius","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","oppositeJoint","chords","pushToA","dot","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","anchor","currentLength","alphaIndex","omegaIndex","CONNECTOR_LENGTH","remove_interval","snapshot","GeneName","faceToOrigin","createRadialPulls","MODIFIER_NAMES","Forward","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","pow","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","m","checkDirection","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","center","quaternionForDirection","distanceFromTarget","loc","topJoint","toTarget","degreeForward","degreeRight","oppositeFace","findLimb","oppositeLimb","opposite","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","pop","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","PatchCharacter","ARROW_GEOMETRY","geom","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","countdownToEvolution","evolutionPhase","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","treeNumber","wasSeconds","time","isSeconds","Resting","Evolving","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","Developing","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestStage","evolveWithPattern","toEvolve","pattern","withReducedCyclePattern","nextEvolution","ControlButtons","toRunning","Running","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","shapingTime","deadInterval","nextStage","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","SphereBuilder","sphere","VERTEX","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","hubs","spokes","segmentLength","hub","spoke","pullsForSpoke","set_altitude","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","sphereNumeric","FREQUENCIES","SphereView","createSphere","polygons","setPolygons","freq","f","setFrequency","setSphere","disabled","fabricOutput","SphereScene","PolygonView","CYLINDER","CylinderGeometry","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","otherSpokes","closest","distanceA","distanceToSquared","FrozenTab","worldFeatures","updateViewMode","updateVisibleRoles","subscription","newState","Grouping","size","StrainSlider","domain","values","setValues","setBottom","setTop","nuanceToStrain","nuance","min","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","FeaturePanel","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LiveTab","centralize","StageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","do","t","Symbol","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","PhaseTab","updateStoredState","subscriptions","active","ScriptTab","rootTenscript","runTenscript","setTenscript","setError","bootstrapOpen","setBootstrapOpen","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","bootstrapProgram","DropdownItem","tenscriptCode","setTenscriptCode","onCodeChange","newCode","compiled","compile","borderColor","Input","changeEvent","TensegrityOptimizer","pairs","findPush","i","crosses","intervalA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","intervalB","bAlpha","bOmega","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","ax","findInterval","ay","bx","by","ShapeTab","selection","updateCurrentRole","adjustValue","changeIntervalScale","Face","replaceCrosses","RoleLengthAdjuster","fine","adjustment","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Phase","Shape","Live","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","IntervalStatsSnapshot","Table","event","stopPropagation","colSpan","IntervalStatsLive","pretenst","updateStats","fontFamily","textAlign","AMBIENT_COLOR","FabricView","setSelection","visualStrain","updatePretenstFactor","updateInstance","setSelectedFaces","intervalRec","rec","Pulls","Pushes","Both","jointRec","bullseye","updateBullseye","nonBusyCount","updateNonBusyCount","clickInterval","eye","distanceChange","towardsDistance","makeDefault","autoRotate","enableKeys","enablePan","enableDamping","minPolarAngle","maxPolarAngle","r","strainNuance","intervalStrainNuance","isIntervalVisible","selected","Selecting","Faces","clickFace","intervalsWithStats","Tag","text","Text","fontSize","anchorY","anchorX","pretenstAdjustment","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","dx","clientX","dy","clientY","intersectObjects","intersection","FrontSide","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","codeToRun","setRootTenscript","updateRotating","updateFullScreen","updateDemoCount","newTenscript","setTimeout","set_surface_character","featureSubscriptions","applyFeature","timer","clearTimeout","visibility","TopMiddle","ViewModeButton","click","preserveJoints","tenscriptError","toTenscript","element","root","document","getElementById","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","bridgeInstance","at","sphereInstance","floatFeatures","registerServiceWorker"],"mappings":"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","file":"static/js/4.6bc81cfa.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    Push,\n    Pull,\n    PhiPush,\n    RootPush,\n    PhiTriangle,\n    Twist,\n    InterTwist,\n    Ring,\n    Cross,\n    BowMid,\n    BowEnd,\n    RadialPull,\n    ConnectorPull,\n    DistancerPull,\n}\n\nconst ROOT2 = 1.414213562373095\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst CROSS1 = 0.5\nconst CROSS2 = (PHI / 3 - 1 / 6) * ROOT3\nconst CROSS3 = PHI / 3 * ROOT3 - 1 + ROOT2 / ROOT3\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return 1\n        case IntervalRole.Pull:\n            return 1\n        case IntervalRole.PhiPush:\n            return PHI\n        case IntervalRole.RootPush:\n            return ROOT2\n        case IntervalRole.PhiTriangle:\n        case IntervalRole.Twist:\n        case IntervalRole.InterTwist:\n            return 1\n        case IntervalRole.Ring:\n            return Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\n        case IntervalRole.Cross:\n            return Math.sqrt(CROSS1 * CROSS1 + CROSS2 * CROSS2 + CROSS3 * CROSS3)\n        case IntervalRole.BowMid:\n            return 0.4\n        case IntervalRole.BowEnd:\n            return 0.6\n        case IntervalRole.DistancerPull:\n            return 1\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole, long?: boolean): string {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return long ? \"Push\" : \"P+\"\n        case IntervalRole.Pull:\n            return long ? \"Pull\" : \"P-\"\n        case IntervalRole.PhiPush:\n            return long ? \"Phi Push\" : \"PP\"\n        case IntervalRole.RootPush:\n            return long ? \"Root Push\" : \"RP\"\n        case IntervalRole.PhiTriangle:\n            return long ? \"Phi Triangle\" : \"PT\"\n        case IntervalRole.Ring:\n            return long ? \"Ring\" : \"RI\"\n        case IntervalRole.Twist:\n            return long ? \"Twist\" : \"TW\"\n        case IntervalRole.InterTwist:\n            return long ? \"Intertwist\" : \"IT\"\n        case IntervalRole.Cross:\n            return long ? \"Cross\" : \"CR\"\n        case IntervalRole.BowMid:\n            return long ? \"Bow-mid\" : \"BM\"\n        case IntervalRole.BowEnd:\n            return long ? \"Bow-end\" : \"BE\"\n        case IntervalRole.DistancerPull:\n            return long ? \"Distancer Pull\" : \"DP\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PhiPush:\n            case IntervalRole.RootPush:\n            case IntervalRole.PhiTriangle:\n            case IntervalRole.Twist:\n            case IntervalRole.InterTwist:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n            case IntervalRole.DistancerPull:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n        case IntervalRole.RootPush:\n        case IntervalRole.Push:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, isPushRole, JOINT_RADIUS, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {Left, Right, LeftRight, RightLeft}\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n        case Spin.LeftRight:\n            return Spin.RightLeft\n        case Spin.RightLeft:\n            return Spin.LeftRight\n    }\n}\n\nexport function spinChars(spin: Spin): string {\n    switch (spin) {\n        case Spin.Left:\n            return \"L\"\n        case Spin.Right:\n            return \"R\"\n        case Spin.LeftRight:\n            return \"LR\"\n        case Spin.RightLeft:\n            return \"RL\"\n    }\n}\n\nexport function spinFromChars(chars: string): Spin {\n    switch (chars) {\n        case \"L\":\n            return Spin.Left\n        case \"R\":\n            return Spin.Right\n        case \"LR\":\n            return Spin.LeftRight\n        default:\n            return Spin.RightLeft\n    }\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP}\n\nexport const FACE_NAMES = [FaceName.NNN, FaceName.PNN, FaceName.NPN, FaceName.NNP, FaceName.NPP, FaceName.PNP, FaceName.PPN, FaceName.PPP]\n\nexport const FACE_DIRECTIONS = \"aBCDbcdA\"\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    instance: FabricInstance\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IIntervalStats {\n    stiffness: number\n    strain: number\n    length: number\n    idealLength: number\n    linearDensity: number\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n    stats?: IIntervalStats\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function addIntervalStats(interval: IInterval, pushOverPull: number, pretenstFactor: number): IIntervalStats {\n    const {floatView} = interval.alpha.instance\n    const stiffness = floatView.stiffnesses[interval.index] * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n    const strain = floatView.strains[interval.index]\n    const length = intervalLength(interval)\n    const idealLength = floatView.idealLengths[interval.index] * (isPushRole(interval.intervalRole) ? 1 + pretenstFactor : 1.0)\n    const linearDensity = floatView.linearDensities[interval.index]\n    const stats: IIntervalStats = {stiffness, strain, length, idealLength, linearDensity}\n    interval.stats = stats\n    return stats\n}\n\nexport function expectStats({stats}: IInterval): IIntervalStats {\n    if (!stats) {\n        throw new Error()\n    }\n    return stats\n}\n\nexport function intervalStrainNuance({alpha, index}: IInterval): number {\n    return alpha.instance.floatView.strainNuances[index]\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport enum FaceSelection {\n    None = \"None\",\n    Face = \"Face\",\n    Pulls = \"Pulls\",\n    Pushes = \"Pushes\",\n    Both = \"Both\",\n}\n\nexport interface IFace {\n    index: number\n    omni: boolean\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    faceSelection: FaceSelection\n    mark?: IFaceMark\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function normalFromFace(face: IFace): Vector3 {\n    const origin = locationFromFace(face)\n    const cross = new Vector3()\n    const norm = new Vector3()\n    const toEnds = face.ends.map(jointLocation).map(location => location.sub(origin))\n    for (let index = 0; index < toEnds.length; index++) {\n        cross.crossVectors(toEnds[index], toEnds[(index + 1) % toEnds.length]).normalize()\n        norm.add(cross)\n    }\n    return norm.normalize()\n}\n\nexport function locationFromJoints(joints: IJoint[]): Vector3 {\n    return joints\n        .reduce((accum, joint) => accum.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / joints.length)\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface ITwist {\n    faces: IFace[]\n    scale: IPercent\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n\nexport function locationFromTwist(twist: ITwist): Vector3 {\n    const gatherJoints = (array: IJoint[], push: IInterval) => {\n        array.push(push.alpha, push.omega)\n        return array\n    }\n    return twist.pushes\n        .reduce(gatherJoints, [])\n        .reduce((loc, joint) => loc.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / (twist.pushes.length * 2))\n}\n\nexport function faceFromTwist(twist: ITwist, faceName: FaceName): IFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.NNN:\n                    return twist.faces[0]\n                case FaceName.PPP:\n                    return twist.faces[1]\n            }\n            break\n        case 8: // aBCDbcdA\n            switch (faceName) {\n                case FaceName.NNN: // a\n                    return twist.faces[0]\n                case FaceName.PNN: // B\n                    return twist.faces[2]\n                case FaceName.NPN: // C\n                    return twist.faces[1]\n                case FaceName.NNP: // D\n                    return twist.faces[3]\n                case FaceName.NPP: // b\n                    return twist.faces[4]\n                case FaceName.PNP: // c\n                    return twist.faces[5]\n                case FaceName.PPN: // d\n                    return twist.faces[6]\n                case FaceName.PPP: // A\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function faceConnectorLengthFromScale(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => isPushRole(interval.intervalRole))\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(mid)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationX(Math.PI * -0.27)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\nexport interface ISelection {\n    faces: IFace[]\n    intervals: IInterval[]\n    joints: IJoint[]\n}\n\nexport function emptySelection(): ISelection {\n    return {faces: [], intervals: [], joints: []}\n}\n\nexport function preserveJoints(selection: ISelection): ISelection {\n    return {faces: [], intervals: [], joints: selection.joints}\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole, roleDefaultLength } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    FaceName,\n    IFace,\n    IInterval,\n    IJoint,\n    jointDistance,\n    jointLocation,\n    percentFromFactor,\n    percentOrHundred,\n} from \"../fabric/tensegrity-types\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\n// const RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst AnchorLength = 5\nconst AnchorScale = 110\n\n/*\n\nconst RIBBON_WIDTH = 6\nconst RIBBON_STEP_LENGTH = 6\n\n        case IntervalRole.RibbonPush:\n            return Math.sqrt(RIBBON_WIDTH * RIBBON_WIDTH + RIBBON_STEP_LENGTH * RIBBON_STEP_LENGTH)\n        case IntervalRole.RibbonShort:\n            return RIBBON_STEP_LENGTH / 2\n        case IntervalRole.RibbonLong:\n            return RIBBON_WIDTH\n        case IntervalRole.RibbonHanger:\n            return 1\n\n\n */\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = roleDefaultLength(IntervalRole.Cross)\n    const ribbonLong = roleDefaultLength(IntervalRole.Cross)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location).index\n        const ribbonJoint: IJoint = {index: jointIndex, instance: tensegrity.instance}\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.Pull)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.Pull)\n        interval(curr[2], curr[3], IntervalRole.Pull)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.Pull)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.Push)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.Push)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.Push)\n        interval(prev[1], curr[0], IntervalRole.Push)\n        interval(prev[2], curr[3], IntervalRole.Push)\n        interval(prev[3], curr[2], IntervalRole.Push)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.Pull\n        const length = jointDistance(alpha, omega)\n        const scale = percentFromFactor(length)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.ends[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    tensegrity.faces.forEach(face => {\n        // const gatherAncestors = (f: IFace, id: FaceName[]): Arch => {\n        // const definition = BRICK_FACE_DEF[f.faceName]\n        // id.push(definition.negative ? definition.opposite : definition.name)\n        // const parentFace = f.brick.parentFace\n        // if (parentFace) {\n        //     return gatherAncestors(parentFace, id)\n        // } else {\n        //     return archFromFaceName(f.faceName)\n        // }\n        // return Arch.FrontRight\n        // }\n        const identities: FaceName[] = []\n        const arch = Arch.FrontRight // TODO: This is wrong! Just so it will compile.\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isFaceExtremity(group)) {\n            return\n        }\n        const distance = identities.length\n        face.ends.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${FaceName[group]}]:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        // switch (hook.faceName) {\n        //     case FaceName.NPN:\n        //         return arch === Arch.BackRight\n        //     case FaceName.NNP:\n        //         return arch === Arch.FrontRight\n        //     case FaceName.PNP:\n        //         return arch === Arch.BackLeft\n        //     case FaceName.PPN:\n        //         return arch === Arch.FrontLeft\n        //     default:\n        //         return false\n        // }\n        return true // TODO: this is wrong!\n    }\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = jointLocation(a.face.ends[a.jointIndex])\n        const bb = jointLocation(b.face.ends[b.jointIndex])\n        return aa.lengthSq() - bb.lengthSq()\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\n// function archFromFaceName(faceName: FaceName): Arch {\n//     switch (faceName) {\n//         case FaceName.NNN:\n//             return Arch.BackLeft\n//         case FaceName.PNN:\n//             return Arch.BackRight\n//         case FaceName.NPP:\n//             return Arch.FrontLeft\n//         case FaceName.PPP:\n//             return Arch.FrontRight\n//         default:\n//             throw new Error(\"Strange arch\")\n//     }\n// }\n\nfunction isFaceExtremity(faceName: FaceName): boolean {\n    return false // TODO\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, DoubleSide, LineBasicMaterial, Material, MeshBasicMaterial, MeshLambertMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return \"#281a4c\"\n        case IntervalRole.RootPush:\n            return \"#0d1147\"\n        case IntervalRole.PhiTriangle:\n            return \"#938b12\"\n        case IntervalRole.Twist:\n            return \"#6d6c6c\"\n        case IntervalRole.InterTwist:\n            return \"#45400d\"\n        case IntervalRole.Ring:\n            return \"#a71313\"\n        case IntervalRole.Cross:\n            return \"#1b9a32\"\n        case IntervalRole.BowMid:\n            return \"#4393b3\"\n        case IntervalRole.BowEnd:\n            return \"#4393b3\"\n        case IntervalRole.DistancerPull:\n        case IntervalRole.ConnectorPull:\n        case IntervalRole.RadialPull:\n            return \"#f3f3e6\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, DoubleSide, Face3, Geometry, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#101010\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.5,\n})\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.01\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport {\n    isPushRole,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n    stageName,\n    switchToVersion,\n    Version,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalLength, intervalLocation, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function getFabricOutput(): IFabricOutput {\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput())}><FaDownload/>\n                        <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(getFabricOutput())}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} stage={stage}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, stage}: { tensegrity: Tensegrity, stage: Stage }): JSX.Element {\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const nextStage = Stage.Slack // todo\n        // const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (stage === Stage.Growing) {\n                    // tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    // tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                // tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (stage === Stage.Pretensing) {\n                    // tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        // tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <OrbitControls target={tensegrity.instance.midpoint}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => (\n                            <IntervalMesh key={`I${interval.index}`} tensegrity={tensegrity} interval={interval}/>\n                        ))}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    onPointerDown?: (event: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = intervalLength(interval)\n    const isPush = isPushRole(interval.intervalRole)\n    const intervalRadius = isPush ? PUSH_RADIUS : PULL_RADIUS\n    const intervalScale = new Vector3(intervalRadius, length + (isPush ? -JOINT_RADIUS * 2 : 0), intervalRadius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {isPush ? (\n                <>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.alpha)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.omega)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.ends.map(end => (\n                <mesh\n                    key={`hook-${end.index}`}\n                    position={jointLocation(end)}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { UP, vectorFromArray } from \"./eig-util\"\nimport { FloatFeature } from \"./float-feature\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES, IntervalRole, isPushRole } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { IInterval, intervalStrainNuance } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Script = \"Script\",\n    Phase = \"Phase\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-10-12\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport enum ViewMode {\n    Lines = \"Lines\",\n    Selecting = \"Selecting\",\n    Frozen = \"Frozen\",\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    controlTab: ControlTab\n    fullScreen: boolean\n    demoCount: number\n    viewMode: ViewMode\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    currentRole: IntervalRole\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nexport function transition(state$: BehaviorSubject<IStoredState>, partial: Partial<IStoredState>): void {\n    const state = state$.getValue()\n    return state$.next({...state, nonce: state.nonce + 1, ...partial})\n}\n\nfunction initialStoredState(\n    toConfig: (feature: WorldFeature) => IFeatureConfig,\n    defaultValue: (feature: WorldFeature) => number,\n    demoCount: number,\n): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        controlTab: ControlTab.Script,\n        demoCount,\n        fullScreen: true,\n        viewMode: ViewMode.Lines,\n        rotating: true,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        currentRole: IntervalRole.PhiPush,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = intervalStrainNuance(interval)\n    if (isPushRole(interval.intervalRole)) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            if (storedState.demoCount === 0) {\n                return initialStoredState(toConfig, defaultValue, storedState.demoCount)\n            }\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue, 0)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Shaping Stiffness\",\n                percents: [10, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness\",\n                percents: [10, 50, 90, 100, 125, 150, 250, 500, 1000],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            transition(storedState$, {featureValues})\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    FACE_DIRECTIONS,\n    FACE_NAMES,\n    faceFromTwist,\n    FaceName,\n    IFaceMark,\n    IPercent,\n    ITwist,\n    jointLocation,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChars,\n    spinFromChars,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'Phi':(0)\",\n    \"'One':L(1)\",\n    \"'Six':L(6)\",\n    \"'Axoneme':L(30,S95)\",\n    \"'Knee':L(3,b3)\",\n    \"'Snelson Star':LR(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\",\n    \"'Tripod with Knees':R(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\",\n    \"'Pretenst Lander':LR(B(15,S90),C(15,S90),D(15,S90))\",\n    \"'Zig Zag Loop':L(d(3,MA0),c(7,b(7,d(7,d(7,d(7,d(3,MA0)))))))\",\n    \"'Bulge Ring':L(A(15,S90, MA1), a(16, S90, MA1))\",\n    \"'Ring':L(A(19,MA1),a(18,MA1))\",\n    \"'Convergence':L(a1,b(15,S92,MA1),c(15,S92,MA1),d(15,S92,MA1))\",\n    \"'Halo by Crane':L(5,S92,b(12,S92,MA1),d(11,S92,MA1))\",\n    \"'Thick Tripod':L(A3,B(8,MA1),C(8,MA1),D(8,MA1)):1=face-distance-35\",\n    \"'Diamond':R(a(5,b(5,c(5,c(2,MA3)),d(5,b(2,MA4))),c(5,d(5,b(2,MA5)),c(5,c(2,MA1))),d(5,c(5,c(2,MA6)),d(5,b(2,MA2)))),b(5,b(5,d(2,MA3)),c(5,c(2,MA2))),c(5,b(5,d(2,MA6)),c(5,c(2,MA5))),d(5,c(5,c(2,MA4)),b(5,d(2,MA1))))\",\n    \"'Composed':L(6,b(4,MA0),c(4,MA0),d(4,MA0)):0=subtree(b5,c5,d5)\",\n    \"'Equus Lunae':LR(A(16,S95,Mb0),b(16,S95,Md0),a(16,S95,Md0),B(16,Mb0,S95)):0=face-distance-60\",\n    \"'Infinity':LR(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Binfinity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Mobiosity':LR(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3))\",\n    \"'Cup':L24(15,S105)\",\n    \"'Torus':L24(A(13,S95,MA1),a(14,S95,MA1))\",\n    \"'Pretenst Squared':L(a(3,MA1),A(2,MA1)):1=face-distance-70\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeNeedsOmniTwist({_, b, c, d, B, C, D, Mb, Mc, Md, MB, MC, MD}: ITenscriptTree): boolean {\n    return !!(b || c || d || B || C || D || Mb || Mc || Md || MB || MC || MD)\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    spin: Spin,\n    pushesPerTwist: number,\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nconst MAIN_CODE = /([LR]*)(\\d*)(\\(.*\\))/\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainTree: ITenscriptTree,\n    marks: Record<number, IMark>,\n    fromUrl: boolean,\n): ITenscript {\n    const optionalPushes = pushesPerTwist > 3 ? pushesPerTwist.toFixed(0) : \"\"\n    const mainCode = spinChars(spin) + optionalPushes + treeToCode(mainTree)\n    const markSections: string[] = []\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=subtree${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, spin, pushesPerTwist, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return FACE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(faceName: FaceName, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[FACE_DIRECTIONS[faceName]]\n}\n\nfunction faceMark(faceName: FaceName, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${FACE_DIRECTIONS[faceName]}`]\n}\n\nfunction deleteFaceMark(faceName: FaceName, tree: ITenscriptTree): void {\n    tree[`M${FACE_DIRECTIONS[faceName]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseMain(main: string): { mainCode: string, spin: Spin, pushesPerTwist: number } {\n    const parsed = MAIN_CODE.exec(main)\n    if (!parsed) {\n        throw new Error(\"Couldn't parse\")\n    }\n    const spin = spinFromChars(parsed[1])\n    const pushesPerTwist = parsed[2].length === 0 ? 3 : parseInt(parsed[2], 10)\n    const mainCode = parsed[3]\n    return {mainCode, spin, pushesPerTwist}\n}\n\nfunction parseCode(code: string): {\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainCode: string,\n    markCode: Record<number, string>,\n} {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => MAIN_CODE.test(part)) || \"(0)\"\n    const {mainCode, spin, pushesPerTwist} = parseMain(foundMain)\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    const name = foundName ? foundName.replace(/'/g, \"\") : \"\"\n    return {name, spin, pushesPerTwist, mainCode, markCode}\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, spin, pushesPerTwist, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, spin, pushesPerTwist, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IBud {\n    builder: TensegrityBuilder\n    tree: ITenscriptTree\n    twist: ITwist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: ITenscriptTree): void {\n    FACE_NAMES.forEach(thisFace => {\n        const mark = faceMark(thisFace, treeWithMarks)\n        if (!mark) {\n            return\n        }\n        faceFromTwist(twistToMark, thisFace).mark = mark\n    })\n}\n\nfunction grow({builder, twist, marks}: IBud, afterTree: ITenscriptTree, faceName: FaceName, omni: boolean, scale: IPercent): IBud {\n    const baseFace = faceFromTwist(twist, faceName)\n    const newTwist = builder.createTwistOn(baseFace, scale, omni)\n    if (afterTree._ === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, builder, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, builder, reorient} = bud\n        const forward = tree._\n        if (forward) {\n            const decremented = forward - 1\n            const afterTree = {...tree, _: decremented}\n            const omni = treeNeedsOmniTwist(tree) && decremented === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.PPP, omni, percentOrHundred(tree.S)))\n            return\n        }\n        if (reorient) {\n            const {A, a, B, b} = tree\n            const abOrientation = !(!a || !A || !b || !B)\n            if (abOrientation) {\n                const points = builder.tensegrity.joints.map(jointLocation)\n                builder.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = childTree(faceName, tree)\n            const brickMark = faceMark(faceName, tree)\n            if (subtree) {\n                const decremented = subtree._ ? subtree._ - 1 : 0\n                const afterTree = {...subtree, _: decremented}\n                const omni = treeNeedsOmniTwist(subtree) && decremented === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, percentOrHundred(subtree.S)))\n            } else if (brickMark) {\n                const mark = marks[brickMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(faceName, tree)\n                    const omni = treeNeedsOmniTwist(markTree)\n                    activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { avg, CONNECTOR_LENGTH, IntervalRole, midpoint, normal, roleDefaultLength, sub } from \"./eig-util\"\nimport { IBud, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    faceFromTwist,\n    FaceName,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    IRadialPull,\n    isOmniSpin,\n    ITwist,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    oppositeSpin,\n    otherJoint,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class TensegrityBuilder {\n    constructor(public readonly tensegrity: Tensegrity) {\n    }\n\n    public createBud({spin, tree, marks}: ITenscript): IBud {\n        const reorient = tree._ === undefined\n        const twist = this.createTwistAt(new Vector3, spin, percentOrHundred())\n        return {builder: this, tree, twist, marks, reorient}\n    }\n\n    public createTwistOn(baseFace: IFace, twistScale: IPercent, omni: boolean): ITwist {\n        const baseFactor = factorFromPercent(baseFace.scale)\n        const scale = percentFromFactor(factorFromPercent(twistScale) * baseFactor)\n        if (omni) {\n            const pushRole = IntervalRole.PhiPush\n            const pullRole = IntervalRole.PhiTriangle\n            const bottom = this.createTwist(faceTwistPoints(baseFace, scale), scale, oppositeSpin(baseFace.spin), pushRole, pullRole)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), pushRole, pullRole)\n            const twist = this.createOmniTwist(bottom, top)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        } else {\n            const points = faceTwistPoints(baseFace, scale)\n            const twist = this.createTwist(points, scale, oppositeSpin(baseFace.spin), IntervalRole.RootPush, IntervalRole.InterTwist)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        }\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createRadialPulls(faces: IFace[], mark?: IMark): IRadialPull[] {\n        const centerBrickFaceIntervals = () => {\n            const scale = percentFromFactor(averageScaleFactor(faces))\n            const where = locationFromFaces(faces)\n            const omniTwist = this.createTwistAt(where, Spin.LeftRight, scale)\n            this.tensegrity.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.tensegrity.createRadialPull(closestFace, face)\n            })\n        }\n        if (!mark || mark.action === MarkAction.FaceDistance) {\n            const pullScale = mark ? mark.scale : percentFromFactor(0.75)\n            if (!pullScale) {\n                throw new Error(\"Missing pull scale\")\n            }\n            const distancers: IRadialPull[] = []\n            faces.forEach((faceA, indexA) => {\n                faces.forEach((faceB, indexB) => {\n                    if (indexA <= indexB) {\n                        return\n                    }\n                    distancers.push(this.tensegrity.createRadialPull(faceA, faceB, pullScale))\n                })\n            })\n            return distancers\n        } else if (mark.action === MarkAction.JoinFaces) {\n            switch (faces.length) {\n                case 2:\n                    if (faces[0].spin === faces[1].spin) {\n                        return centerBrickFaceIntervals()\n                    }\n                    return [this.tensegrity.createRadialPull(faces[0], faces[1])]\n                case 3:\n                    return centerBrickFaceIntervals()\n                default:\n                    return []\n            }\n        } else {\n            return []\n        }\n    }\n\n    public checkConnectors(radialPulls: IRadialPull[], removeInterval: (interval: IInterval) => void): IRadialPull[] {\n        if (radialPulls.length === 0) {\n            return radialPulls\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega, connectRoles(alpha.omni, omega.omni))\n        }\n        return radialPulls.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.ConnectorPull) {\n                const distance = jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    removeInterval(axis)\n                    alphaRays.forEach(removeInterval)\n                    omegaRays.forEach(removeInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    // =====================================================\n\n    private createTwistAt(location: Vector3, spin: Spin, scale: IPercent): ITwist {\n        const pushesPerTwist = this.tensegrity.pushesPerTwist\n        if (isOmniSpin(spin)) {\n            const pushRole = IntervalRole.PhiPush\n            const pullRole = IntervalRole.PhiTriangle\n            const bottomSpin = spin === Spin.LeftRight ? Spin.Left : Spin.Right\n            const bottom = this.createTwist(firstTwistPoints(location, pushesPerTwist, bottomSpin, scale), scale, bottomSpin, pushRole, pullRole)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), pushRole, pullRole)\n            return this.createOmniTwist(bottom, top)\n        } else {\n            return this.createTwist(firstTwistPoints(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.RootPush, IntervalRole.InterTwist)\n        }\n    }\n\n    private createOmniTwist(bottomTwist: ITwist, topTwist: ITwist): ITwist {\n        const topFace = topTwist.faces[1]\n        const bottomFace = bottomTwist.faces[0]\n        const avoidFaces = (joint: IJoint) => !(topFace.ends.some(end => joint.index === end.index) || bottomFace.ends.some(end => joint.index === end.index))\n        const connectPulls = this.connect(bottomTwist.faces[1], topTwist.faces[0], connectRoles(true, true))\n        const pushes = [...bottomTwist.pushes, ...topTwist.pushes]\n        const pulls = [...bottomTwist.pulls.filter(p => !p.removed), ...topTwist.pulls.filter(p => !p.removed), ...connectPulls]\n        const {scale} = bottomTwist\n        const createFaceTouching = (joint: IJoint, spin: Spin): IFace => {\n            const facePulls = pulls.filter(({alpha, omega}) => joint.index === alpha.index || joint.index === omega.index)\n            const ends = facePulls.map(pull => otherJoint(joint, pull)).filter(avoidFaces)\n            const thirdForward = pulls.find(({alpha, omega}) => alpha.index === ends[0].index && omega.index === ends[1].index)\n            const thirdReverse = pulls.find(({alpha, omega}) => alpha.index === ends[1].index && omega.index === ends[0].index)\n            ends.push(joint)\n            if (spin === Spin.Left) {\n                ends.reverse()\n            }\n            if (thirdForward) {\n                facePulls.push(thirdForward)\n            } else if (thirdReverse) {\n                facePulls.push(thirdReverse)\n            } else {\n                throw new Error(\"Interval not found\")\n            }\n            return this.tensegrity.createFace(ends, true, spin, scale)\n        }\n        const topTouching = topFace.ends.map(end => createFaceTouching(end, oppositeSpin(topFace.spin)))\n        const bottomTouching = bottomFace.ends.map(end => createFaceTouching(end, oppositeSpin(bottomFace.spin)))\n        bottomFace.omni = topFace.omni = true\n        const faces = [bottomFace, ...bottomTouching, ...topTouching, topFace]\n        return {scale, pushes, pulls, faces}\n    }\n\n    private connect(faceA: IFace, faceB: IFace, roles: IConnectRoles): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            const a0 = a[index]\n            const a1 = a[(index + 1) % a.length]\n            const b0 = b[index]\n            const b1 = b[(index + 1) % b.length]\n            const c0 = c[index]\n            const d0 = d[index]\n            pulls.push(this.tensegrity.createInterval(b0, c0, roles.ring, scale))\n            pulls.push(this.tensegrity.createInterval(c0, b1, roles.ring, scale))\n            if (faceA.spin === Spin.Left) {\n                pulls.push(this.tensegrity.createInterval(c0, a1, roles.down, scale))\n            } else {\n                pulls.push(this.tensegrity.createInterval(c0, a0, roles.down, scale))\n            }\n            if (faceB.spin === Spin.Left) {\n                pulls.push(this.tensegrity.createInterval(b1, d0, roles.up, scale))\n            } else {\n                pulls.push(this.tensegrity.createInterval(b0, d0, roles.up, scale))\n            }\n        }\n        if (roles.ring === IntervalRole.Ring) {\n            const faceScale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n            for (let index = 0; index < b.length; index++) {\n                const a0 = a[index]\n                const a1 = a[(index + 1) % a.length]\n                const b0 = b[index]\n                const b1 = b[(index + 1) % b.length]\n                const c0 = c[index]\n                const c1 = c[(index + 1) % c.length]\n                const cN1 = c[(index + c.length - 1) % c.length]\n                const d0 = d[index]\n                if (faceA.spin === Spin.Left) {\n                    this.tensegrity.createFace([c0, a1, b0], false, oppositeSpin(faceA.spin), faceScale)\n                } else {\n                    this.tensegrity.createFace([c0, b1, a0], false, oppositeSpin(faceA.spin), faceScale)\n                }\n                if (faceB.spin === Spin.Left) {\n                    this.tensegrity.createFace([b1, d0, c1], false, oppositeSpin(faceB.spin), faceScale)\n                } else {\n                    this.tensegrity.createFace([b0, cN1, d0], false, oppositeSpin(faceB.spin), faceScale)\n                }\n            }\n        }\n        this.tensegrity.removeFace(faceB)\n        this.tensegrity.removeFace(faceA)\n        return pulls\n    }\n\n    private createTwist(points: IPoint[], scale: IPercent, spin: Spin, pushRole: IntervalRole, pullRole: IntervalRole): ITwist {\n        const twist: ITwist = {scale, pushes: [], pulls: [], faces: []}\n        const ends = points.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const alphaEnds = ends.map(({alpha}) => alpha)\n        const omegaEnds = ends.map(({omega}) => omega).reverse()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, pushRole, scale)\n            twist.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        twist.pulls.push(...alphaEnds.map((alpha, index) =>\n            this.tensegrity.createInterval(alpha, alphaEnds[(index + 1) % alphaEnds.length], pullRole, scale)))\n        twist.faces.push(this.tensegrity.createFace(alphaEnds, false, spin, scale))\n        twist.pulls.push(...omegaEnds.map((omega, index) =>\n            this.tensegrity.createInterval(omega, omegaEnds[(index + 1) % omegaEnds.length], pullRole, scale)))\n        twist.faces.push(this.tensegrity.createFace(omegaEnds, false, spin, scale))\n        ends.forEach(({alpha}, index) => {\n            const offset = spin === Spin.Left ? ends.length - 1 : 1\n            const omega = ends[(index + offset) % ends.length].omega\n            twist.pulls.push(this.tensegrity.createInterval(alpha, omega, pullRole, scale))\n        })\n        return twist\n    }\n}\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\ninterface IConnectRoles {\n    ring: IntervalRole\n    up: IntervalRole\n    down: IntervalRole\n}\n\nfunction connectRoles(omniA: boolean, omniB: boolean): IConnectRoles {\n    if (!omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.InterTwist}\n    } else if (omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Cross, down: IntervalRole.InterTwist}\n    } else if (!omniA && omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.Cross}\n    } else {\n        return {ring: IntervalRole.PhiTriangle, down: IntervalRole.PhiTriangle, up: IntervalRole.PhiTriangle}\n    }\n}\n\ninterface IPoint {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction firstTwistPoints(location: Vector3, pushesPerTwist: number, spin: Spin, scale: IPercent): IPoint[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return twistPoints(base, spin, scale)\n}\n\nfunction faceTwistPoints(face: IFace, scale: IPercent): IPoint[] {\n    const base = face.ends.map(jointLocation).reverse()\n    return twistPoints(base, oppositeSpin(face.spin), scale)\n}\n\nfunction twistPoints(base: Vector3[], spin: Spin, scale: IPercent): IPoint[] {\n    const initialLength = roleDefaultLength(IntervalRole.PhiTriangle) * factorFromPercent(scale) / Math.sqrt(3)\n    const tinyRadius = initialLength * base.length / 3 / Math.sqrt(3)\n    const points: IPoint[] = []\n    const mid = midpoint(base)\n    const up = normal(base).multiplyScalar(-initialLength)\n    for (let index = 0; index < base.length; index++) {\n        const a = sub(base[(index + base.length - 1) % base.length], mid)\n        const b = sub(base[index], mid)\n        const c = sub(base[(index + 1) % base.length], mid)\n        const d = sub(base[(index + 2) % base.length], mid)\n        const bc = avg(b, c)\n        const cd = avg(c, d)\n        const ba = avg(b, a)\n        const alpha = new Vector3().copy(mid)\n        const omega = new Vector3().copy(mid).add(up)\n        if (spin === Spin.Left) {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(cd, tinyRadius)\n        } else {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(ba, tinyRadius)\n        }\n        points.push({alpha, omega})\n    }\n    return points\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, intervalRoleName, isPushRole, roleDefaultLength } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { execute, IBud, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    expectPush,\n    FaceSelection,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    intervalLength,\n    IPercent,\n    IRadialPull,\n    jointDistance,\n    jointHolesFromJoint,\n    jointLocation,\n    locationFromFace,\n    percentFromFactor,\n    percentOrHundred,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport type Job = (tensegrity: Tensegrity) => void\n\nexport class Tensegrity {\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public connectors: IRadialPull[] = []\n    public faces: IFace[] = []\n    public pushesPerTwist: number\n    public readonly builder: TensegrityBuilder\n\n    private jobs: Job[] = []\n    private buds: IBud[]\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly scale: IPercent,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.pushesPerTwist = this.tenscript.pushesPerTwist\n        this.builder = new TensegrityBuilder(this)\n        this.buds = [this.builder.createBud(this.tenscript)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public get intervalsWithStats(): IInterval[] {\n        return this.intervals.filter(interval => interval.stats)\n    }\n\n    public createJoint(location: Vector3): IJoint { // TODO: remove joint, reuse them\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const alphaJoint = this.createJoint(locationFromFace(alpha))\n        const omegaJoint = this.createJoint(locationFromFace(omega))\n        this.instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        if (axis.intervalRole === IntervalRole.ConnectorPull) {\n            this.connectors.push(radialPull)\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent): IInterval {\n        const restLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const idealLength = jointDistance(alpha, omega)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, isPushRole(intervalRole), idealLength, restLength, countdown)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(ends: IJoint[], omni: boolean, spin: Spin, scale: IPercent): IFace {\n        const f0 = ends[0]\n        const f1 = ends[Math.floor(2 * ends.length / 3)]\n        const f2 = ends[Math.floor(ends.length / 3)]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const pulls = [[f0, f1], [f1, f2], [f2, f0]].reduce((list: IInterval[], pair) => {\n            const p = this.intervals.find(intervalJoins(pair[0], pair[1]))\n            return p ? [...list, p] : list\n        }, [])\n        const faceSelection = FaceSelection.None\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {index, omni, spin, scale, ends, pushes, pulls, faceSelection}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public do(job: Job): void {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const job = this.jobs.shift()\n        if (job) {\n            job(this)\n            return true\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this.faces, this.tenscript.marks, this.builder).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.builder.checkConnectors(this.connectors, interval => this.removeInterval(interval))\n                return false\n            }\n            this.stage = Stage.Shaping\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const floatView = this.instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return jointLocation(interval.alpha).y >= 0 || jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        this.instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public findInterval(a: IJoint, b: IJoint): IInterval | undefined {\n        return this.intervals.find(intervalJoins(a, b))\n    }\n\n    public getFabricOutput(pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const holes = jointHolesFromJoint(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    radius: jointRadius,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor: false, // TODO: can this be determined?\n                    holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const isPush = isPushRole(interval.intervalRole)\n                const radius = isPush ? pushRadius : pullRadius\n                const currentLength = intervalLength(interval)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    scale: interval.scale._,\n                    idealLength: idealLengths[interval.index],\n                    isPush,\n                    length: currentLength,\n                    radius,\n                }\n            }),\n        }\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.DistancerPull : IntervalRole.ConnectorPull\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const scale = percentOrHundred()\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.RadialPull\n        const scale = percentFromFactor(restLength)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createRadialPulls(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                // this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceName } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: FaceName\n    faceName: FaceName\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    // private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            return true // todo\n            // const nextStage = embryo.iterate()\n            // const life = embryo.life$.getValue()\n            // if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            //     embryo.transition = {stage: Stage.Pretenst}\n            // } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n            //     embryo.transition = {stage: nextStage}\n            // }\n            // switch (nextStage) {\n            //     case Stage.Shaping:\n            //         if (this.shapingTime <= 0) {\n            //             instance.fabric.adopt_lengths()\n            //             // const faceIntervals = [...embryo.faceIntervals]\n            //             // faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n            //             // instance.iterate(Stage.Slack)\n            //             // instance.iterate(Stage.Pretensing)\n            //         } else {\n            //             this.shapingTime--\n            //         }\n            //         return false\n            //     case Stage.Pretensing:\n            //         return true\n            //     case Stage.Pretenst:\n            //         extractGotchiFaces(embryo, state.muscles, state.extremities)\n            //         embryo.transition = {stage: Stage.Pretenst}\n            //         embryo.iterate()\n            //         this.embryo = undefined\n            //         this.twitcher = new Twitcher(state)\n            //         return true\n            //     default:\n            //         return false\n            // }\n        } else {\n            // instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance} = muscle\n    const oppositeFace = FaceName.NNN\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.faceName === oppositeFace)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\n// function extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    // tensegrity.brickFaces\n    //     .filter(face => !face.removed && face.brick.parentFace)\n    //     .forEach(face => {\n    //         const gatherAncestors = (f: IBrickFace, faceNames: FaceName[]): Limb => {\n    //             const definition = BRICK_FACE_DEF[f.faceName]\n    //             faceNames.push(definition.negative ? definition.opposite : definition.name)\n    //             const parentFace = f.brick.parentFace\n    //             if (parentFace) {\n    //                 return gatherAncestors(parentFace, faceNames)\n    //             } else {\n    //                 return limbFromFaceName(f.faceName)\n    //             }\n    //         }\n    //         const identities: FaceName[] = []\n    //         const limb = gatherAncestors(face, identities)\n    //         const group = identities.shift()\n    //         const faceName = face.faceName\n    //         if (!group) {\n    //             throw new Error(\"no top!\")\n    //         }\n    //         const distance = identities.length\n    //         const faceIndex = face.index\n    //         if (isExtremity(group)) {\n    //             const name = `[${limb}]`\n    //             extremities.push({faceIndex, name, limb})\n    //         } else {\n    //             const name = `[${limb}]:[${distance}:${FaceName[group]}]:{tri=${FaceName[faceName]}}`\n    //             muscles.push({faceIndex, name, limb, distance, group, faceName})\n    //         }\n    //     })\n// }\n\n// function isExtremity(faceName: FaceName): boolean {\n//     const definition = BRICK_FACE_DEF[faceName]\n//     const normalizedFace = definition.negative ? definition.opposite : faceName\n//     return normalizedFace === FaceName.PPP\n// }\n//\n// function limbFromFaceName(face: FaceName): Limb {\n//     switch (face) {\n//         case FaceName.NNN:\n//             return Limb.BackLeft\n//         case FaceName.PNN:\n//             return Limb.BackRight\n//         case FaceName.NPP:\n//             return Limb.FrontLeft\n//         case FaceName.PPP:\n//             return Limb.FrontRight\n//         default:\n//             throw new Error(\"Strange limb\")\n//     }\n// }\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateStage(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.stage$.subscribe((latestStage) => {\n            if (stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(latestStage)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\n// const TOWARDS_POSITION = 0.003\n// const TOWARDS_TARGET = 0.01\n// const TARGET_HEIGHT = 3\n// const TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    // const midpoint = new Vector3()\n\n    // function developing(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 6\n    // }\n    //\n    // function resting(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 10\n    // }\n    //\n    // function running(g: Gotchi): number {\n    //     g.iterate(midpoint)\n    //     return 6\n    // }\n    //\n    // function evolving(e: Evolution): number {\n    //     switch (e.iterate()) {\n    //         case EvolutionPhase.EvolutionDone:\n    //             console.log(\"Evolution DONE\")\n    //             stopEvolution()\n    //             break\n    //         case EvolutionPhase.EvolutionHarder:\n    //             console.log(\"Evolution advance...\")\n    //             stopEvolution(e.withReducedCyclePattern)\n    //             break\n    //     }\n    //     e.getMidpoint(midpoint)\n    //     return 15\n    // }\n\n    useFrame(() => {\n        // const approachDistance = (distance: number) => {\n        //     const position = control.object.position\n        //     const positionToTarget = new Vector3().subVectors(position, control.target)\n        //     const deltaDistance = distance - positionToTarget.length()\n        //     positionToTarget.normalize()\n        //     position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n        //     position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        // }\n        // switch (happening) {\n        //     case Happening.Developing:\n        //         if (gotchi) {\n        //             approachDistance(developing(gotchi))\n        //         }\n        //         break\n        //     case Happening.Resting:\n        //         if (gotchi) {\n        //             approachDistance(resting(gotchi))\n        //         }\n        //         break\n        //     case Happening.Running:\n        //         if (gotchi) {\n        //             approachDistance(running(gotchi))\n        //         }\n        //         break\n        //     case Happening.Evolving:\n        //         if (evolution) {\n        //             approachDistance(evolving(evolution))\n        //             evolutionPhase(evolution.phase)\n        //         }\n        //         break\n        // }\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <OrbitControls/>\n            {/*todo: chase the gotchi*/}\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.stage$.getValue() === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.stage$.getValue()\n        this.tensegrity.iterate()\n        const nextStage = Stage.Slack // todo\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            // this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            // this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    // instance.iterate(Stage.Slack)\n                    // instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { jointDistance } from \"../fabric/tensegrity-types\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const push = this.sphere.hubs[0].spokes[0].push\n        const segmentLength = jointDistance(push.alpha, push.omega) * 0.28\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.VisualStrain:\n            return 0\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaCamera, FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, CylinderGeometry, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, PULL_RADIUS, PUSH_RADIUS, switchToVersion, UP, Version } from \"../fabric/eig-util\"\nimport { jointDistance } from \"../fabric/tensegrity-types\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [polygons, setPolygons] = useState(false)\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => setPolygons(!polygons)}><FaCamera/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere} polygons={polygons}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere, polygons}: {\n    sphere: TensegritySphere,\n    polygons: boolean,\n}): JSX.Element {\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        if (!polygons) {\n            sphere.iterate()\n        }\n        // const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        // control.target.add(toMidpoint)\n        // control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <OrbitControls/>\n            <scene>\n                {polygons ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: {\n    sphere: TensegritySphere,\n}): JSX.Element {\n    return (\n        <group>\n            {sphere.pulls.map((pull: IPull) => {\n                const unit = sphere.instance.unitVector(pull.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.PhiTriangle)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {sphere.pushes.map((push: IPush) => {\n                const unit = sphere.instance.unitVector(push.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.RootPush)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 4, 2.5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint, jointDistance, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const idealLength = alphaHub.location.distanceTo(omegaHub.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(alpha.index, omega.index, true, idealLength, idealLength, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub,\n            location: () => new Vector3()\n                .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, restLength: number) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const idealLength = jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, 100)\n            const interval: IPull = {\n                index, alpha, omega,\n                location: () => new Vector3()\n                    .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2)\n        return pulls\n    }\n\n    public iterate(): void {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return\n        }\n        switch (this.instance.stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.instance.stage = Stage.Shaping\n                break\n            case Stage.Shaping:\n                if (this.fabric.age > 8000) {\n                    this.instance.stage = Stage.Slack\n                }\n                break\n            case Stage.Slack:\n                this.instance.stage = Stage.Pretensing\n                break\n            case Stage.Pretensing:\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const jointRadius = radius * JOINT_RADIUS / PUSH_RADIUS\n                    const currentLength = jointDistance(push.alpha, push.omega)\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const jointRadius = JOINT_RADIUS\n                    const currentLength = jointDistance(interval.alpha, interval.omega)\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index, instance: this.instance}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (this.twist < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    intervalRoleName,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n} from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 1000\n\nexport function FrozenTab({tensegrity, worldFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updateViewMode(newState.viewMode)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function getFabricOutput(): IFabricOutput {\n        if (!tensegrity) {\n            throw new Error(\"No tensegrity\")\n        }\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    const disabled = viewMode !== ViewMode.Frozen\n    return (\n        <>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={viewMode !== ViewMode.Frozen}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    transition(storedState$, {visibleRoles: [...visibleRoles, intervalRole]})\n                                } else {\n                                    transition(storedState$, {visibleRoles: visibleRoles.filter(role => role !== intervalRole)})\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={disabled} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={disabled} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(getFabricOutput())} disabled={disabled}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(getFabricOutput())} disabled={disabled}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Pretensing)}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.do(t => t.stage = Stage.Shaping)}\n                    >\n                        Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Shaping}/> Shaping\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : \"#919191\"\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaCompressArrowsAlt, FaHandRock, FaParachuteBox } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {worldFeatures, tensegrity, storedState$}: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <Grouping>\n                <FeaturePanel feature={worldFeatures[WorldFeature.IterationsPerFrame]}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.IntervalCountdown]}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.PushOverPull]}/>\n            </Grouping>\n            {stage < Stage.Slack ? (\n                <Grouping>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingPretenstFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingDrag]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.ShapingStiffnessFactor]}/>\n                    <ButtonGroup className=\"w-100 my-3\">\n                        <Button disabled={stage !== Stage.Shaping}\n                                onClick={() => tensegrity.fabric.centralize()}>\n                            <FaCompressArrowsAlt/> Centralize\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            ) : stage > Stage.Slack ? (\n                <Grouping>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.PretenstFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.StiffnessFactor]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.Gravity]}/>\n                    <FeaturePanel feature={worldFeatures[WorldFeature.Drag]}/>\n                    <ButtonGroup className=\"w-100 my-3\">\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(1)}>\n                            <FaHandRock/> Nudge\n                        </Button>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/> Drop\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            ) : undefined}\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { StageButton, StageTransition } from \"./stage-button\"\n\nexport function PhaseTab({worldFeatures, tensegrity, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updateViewMode(newState.viewMode)\n                updateStoredState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const disabled = viewMode === ViewMode.Frozen\n    return (\n        <div>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabled}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabled}\n                />\n            </Grouping>\n            <Grouping>\n                <FeaturePanel key=\"pc\" feature={worldFeatures[WorldFeature.PretensingCountdown]} disabled={stage !== Stage.Slack}/>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={stage !== Stage.Slack}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => transition(storedState$, {surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabled}\n                />\n            </Grouping>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabled}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabled}\n                />\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaCanadianMapleLeaf, FaFutbol, FaHiking, FaPlay, FaRocket, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function ScriptTab({worldFeatures, rootTenscript,  tensegrity, runTenscript, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    rootTenscript: ITenscript,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Grow <FaCanadianMapleLeaf/> tensegrity</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/> Spheres\n                    </Button>\n                    <Button onClick={() => {\n                        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n                        runTenscript(BOOTSTRAP[0])\n                    }}>\n                        <FaPlay/> Demo\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole, isPushRole } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { IInterval, IJoint, IPercent, jointLocation } from \"./tensegrity-types\"\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => isPushRole(i.intervalRole))\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = jointLocation(intervalA.alpha)\n            const aOmegaLoc = jointLocation(intervalA.omega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = jointLocation(intervalB.alpha)\n                const bOmegaLoc = jointLocation(intervalB.omega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            // this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            // this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowDown, FaArrowUp, FaHandPointUp, FaList, FaMagic, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { FaceSelection, IInterval, ISelection } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function ShapeTab(\n    {tensegrity, selection, storedState$}: {\n        tensegrity: Tensegrity,\n        selection: ISelection,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [currentRole, updateCurrentRole] = useState(storedState$.getValue().currentRole)\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateCurrentRole(newState.currentRole))\n        return () => sub.unsubscribe()\n    }, [])\n\n    const adjustValue = (up: boolean) => () => {\n        const factor = 1.03\n        selection.intervals.forEach(interval => {\n            tensegrity.changeIntervalScale(interval, up ? factor : (1 / factor))\n        })\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={selection.intervals.length === 0} onClick={adjustValue(true)}>\n                        <FaArrowUp/> Lengthen\n                    </Button>\n                    <Button disabled={selection.intervals.length === 0} onClick={adjustValue(false)}>\n                        <FaArrowDown/> Shorten\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        onClick={() => tensegrity.do(t => t.builder\n                            .createRadialPulls(selection.faces.filter(f => f.faceSelection === FaceSelection.Face)))}>\n                        <span>Distance-75</span>\n                    </Button>\n                    <Button\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Interval Groups</h6>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map((intervalRole, index) => (\n                            <Button size=\"sm\" key={`IntervalRole[${index}]`}\n                                    onClick={() => transition(storedState$, {currentRole: intervalRole})}\n                                    color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n                <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                [{floatString(defaultLength())}]\n            </div>\n            <div>\n                {intervalRoleName(intervalRole, true)}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { ISelection } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { PhaseTab } from \"./phase-tab\"\nimport { ScriptTab } from \"./script-tab\"\nimport { ShapeTab } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        worldFeatures, rootTenscript, selection, tensegrity, runTenscript, toFullScreen, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        selection: ISelection,\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => transition(storedState$, {controlTab: tab})}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Script:\n                    return (\n                        <ScriptTab\n                            worldFeatures={worldFeatures}\n                            rootTenscript={rootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Phase:\n                    return !tensegrity ? NO_FABRIC : (\n                        <PhaseTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            tensegrity={tensegrity}\n                            selection={selection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            worldFeatures={worldFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaArrowsAltH, FaMousePointer } from \"react-icons/all\"\nimport { useFrame } from \"react-three-fiber\"\nimport { Table } from \"reactstrap\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { addIntervalStats, expectStats, IInterval, intervalLocation } from \"../fabric/tensegrity-types\"\n\nexport function IntervalStatsSnapshot({interval}: { interval: IInterval }): JSX.Element {\n    const {alpha, omega, intervalRole} = interval\n    const stats = expectStats(interval)\n    return (\n        <Html\n            className=\"interval-stats\"\n            style={{width: \"10em\"}}\n            position={intervalLocation(interval)}\n        >\n            <div style={{position: \"absolute\", top: \"0\", left: \"0\", color: \"red\"}}>\n                <FaMousePointer/>\n            </div>\n            <Table\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}>\n                <thead>\n                <tr>\n                    <th colSpan={2}>\n                        ({alpha.index} <FaArrowsAltH/> {omega.index}): {intervalRoleName(intervalRole, true)}\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td className=\"text-right\">Stiffness:</td>\n                    <td>{stats.stiffness.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Strain:</td>\n                    <td>{stats.strain.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Length:</td>\n                    <td>{stats.length.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Ideal Length:</td>\n                    <td>{stats.idealLength.toFixed(8)}</td>\n                </tr>\n                <tr>\n                    <td className=\"text-right\">Linear Density:</td>\n                    <td>{stats.linearDensity.toFixed(8)}</td>\n                </tr>\n                </tbody>\n            </Table>\n        </Html>\n    )\n}\n\nexport function IntervalStatsLive({interval, pushOverPull, pretenst}: {\n    interval: IInterval, pushOverPull: number, pretenst: number,\n}): JSX.Element {\n    const [stats, updateStats] = useState(expectStats(interval))\n    useFrame(() => updateStats(addIntervalStats(interval, pushOverPull, pretenst)))\n    return (\n        <Html className=\"interval-stats\"\n              style={{\n                  fontFamily: \"fixed\",\n                  padding: \"0.1em\",\n                  width: \"7em\",\n                  textAlign: \"center\",\n              }}\n              position={intervalLocation(interval)}>\n            <div\n                onClick={event => {\n                    event.stopPropagation()\n                    interval.stats = undefined\n                }}\n            >\n                {stats.strain.toFixed(8)}\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// export { ExtrudeGeometry, ExtrudeGeometryOptions } from './ExtrudeGeometry';\n// client/node_modules/three/src/geometries/Geometries.d.ts\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Text } from \"@react-three/drei/Text\"\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    Color,\n    CylinderGeometry,\n    Euler,\n    Face3,\n    FrontSide,\n    Geometry,\n    Mesh,\n    Object3D,\n    PerspectiveCamera as Cam,\n    Quaternion,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, isPushRole, UP } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    addIntervalStats,\n    FaceSelection,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLocation,\n    ISelection,\n    jointLocation,\n    locationFromFaces,\n    locationFromJoints,\n} from \"../fabric/tensegrity-types\"\nimport { isIntervalVisible, IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { IntervalStatsLive, IntervalStatsSnapshot } from \"./interval-stats\"\nimport { LINE_VERTEX_COLORS, roleMaterial, SELECTED_MATERIAL } from \"./materials\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst RADIUS_FACTOR = 0.01\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({worldFeatures, tensegrity, selection, setSelection, storedState$, viewMode}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    selection: ISelection,\n    setSelection: (selection: ISelection) => void,\n    viewMode: ViewMode,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const pushOverPull = worldFeatures[WorldFeature.PushOverPull]\n    const visualStrain = worldFeatures[WorldFeature.VisualStrain]\n    const [pretenstFactor, updatePretenstFactor] = useState(0)\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        updatePretenstFactor(stage < Stage.Pretenst ?\n            worldFeatures[WorldFeature.ShapingPretenstFactor].numeric :\n            worldFeatures[WorldFeature.PretenstFactor].numeric)\n    }, [stage])\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        updateInstance(tensegrity.instance)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const current = camera.current\n        if (!current) {\n            return\n        }\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        current.position.set(0, 1, instance.view.radius() * 2)\n        return () => sub.unsubscribe()\n    }, [])\n\n    function setSelectedFaces(faces: IFace[]): void {\n        const intervalRec = faces.reduce((rec: Record<number, IInterval>, face) => {\n            const add = (i: IInterval) => rec[i.index] = i\n            switch (face.faceSelection) {\n                case FaceSelection.Pulls:\n                    face.pulls.forEach(add)\n                    break\n                case FaceSelection.Pushes:\n                    face.pushes.forEach(add)\n                    break\n                case FaceSelection.Both:\n                    face.pulls.forEach(add)\n                    face.pushes.forEach(add)\n                    break\n            }\n            return rec\n        }, {})\n        const jointRec = faces.reduce((rec: Record<number, IJoint>, face) => {\n            face.ends.forEach(end => rec[end.index] = end)\n            return rec\n        }, {})\n        const intervals = Object.keys(intervalRec).map(k => intervalRec[k])\n        const joints = Object.keys(jointRec).map(k => jointRec[k])\n        setSelection({faces, intervals, joints})\n    }\n\n    const [bullseye, updateBullseye] = useState(new Vector3(0, 1, 0))\n    const [nonBusyCount, updateNonBusyCount] = useState(0)\n    useFrame(() => {\n        const current = camera.current\n        if (!current) {\n            return\n        }\n        const view = instance.view\n        const target =\n            selection.faces.length > 0 ? locationFromFaces(selection.faces) :\n                selection.joints.length > 0 ? locationFromJoints(selection.joints) :\n                    new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        updateBullseye(new Vector3().subVectors(target, bullseye).multiplyScalar(TOWARDS_TARGET).add(bullseye))\n        if (storedState.demoCount >= 0) {\n            const eye = current.position\n            eye.y += (target.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(target) - view.radius() * 2\n            const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        }\n        if (viewMode !== ViewMode.Frozen) {\n            const busy = tensegrity.iterate()\n            if (busy) {\n                return\n            }\n            if (storedState.demoCount >= 0) {\n                switch (stage) {\n                    case Stage.Shaping:\n                        if (nonBusyCount === 50) {\n                            tensegrity.stage = Stage.Slack\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Slack:\n                        if (nonBusyCount === 10) {\n                            tensegrity.stage = Stage.Pretensing\n                            transition(storedState$, {rotating: false})\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Pretenst:\n                        if (nonBusyCount === 100) {\n                            transition(storedState$, {demoCount: storedState.demoCount + 1, rotating: true})\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                }\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    function clickInterval(interval: IInterval): void {\n        if (interval.stats) {\n            interval.stats = undefined\n        } else {\n            addIntervalStats(interval, pushOverPull.numeric, pretenstFactor)\n        }\n    }\n\n    function clickFace(face: IFace): void {\n        switch (face.faceSelection) {\n            case FaceSelection.None:\n                face.faceSelection = FaceSelection.Face\n                setSelectedFaces([...selection.faces, face])\n                break\n            case FaceSelection.Face:\n                face.faceSelection = FaceSelection.Pulls\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pulls:\n                face.faceSelection = FaceSelection.Pushes\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Pushes:\n                face.faceSelection = FaceSelection.Both\n                setSelectedFaces(selection.faces)\n                break\n            case FaceSelection.Both:\n                face.faceSelection = FaceSelection.None\n                setSelectedFaces(selection.faces.filter(({index}) => index !== face.index))\n                break\n        }\n    }\n\n    const camera = useRef<Cam>()\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true}/>\n            <OrbitControls target={bullseye} autoRotate={storedState.rotating} enableKeys={false} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n            />\n            <scene>\n                {viewMode === ViewMode.Frozen ? (\n                    <group>\n                        {tensegrity.intervals\n                            .filter(interval => isIntervalVisible(interval, storedState))\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull.numeric}\n                                    visualStrain={visualStrain.numeric}\n                                    pretenstFactor={pretenstFactor}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    onPointerDown={event => {\n                                        event.stopPropagation()\n                                        clickInterval(interval)\n                                    }}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <>\n                        <lineSegments\n                            geometry={tensegrity.instance.floatView.lineGeometry}\n                            material={LINE_VERTEX_COLORS}\n                        />\n                    </>\n                )}\n                {viewMode !== ViewMode.Selecting ? undefined : (\n                    <Faces\n                        tensegrity={tensegrity}\n                        stage={stage}\n                        clickFace={face => clickFace(face)}\n                    />\n                )}\n                {selection.intervals.map(interval => (\n                    <IntervalMesh\n                        key={`SI${interval.index}`}\n                        pushOverPull={pushOverPull.numeric}\n                        visualStrain={visualStrain.numeric}\n                        pretenstFactor={pretenstFactor}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            clickInterval(interval)\n                        }}\n                    />\n                ))}\n                {viewMode === ViewMode.Frozen ?\n                    tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsSnapshot key={`S${interval.index}`} interval={interval}/>)\n                    : tensegrity.intervalsWithStats.map(interval =>\n                        <IntervalStatsLive key={`SL${interval.index}`} interval={interval}\n                                           pushOverPull={pushOverPull.numeric} pretenst={pretenstFactor}/>)\n                }\n                {selection.faces.filter(f => (f.faceSelection === FaceSelection.Face)).map(face => {\n                    const geometry = new Geometry()\n                    geometry.vertices = face.ends.map(jointLocation)\n                    geometry.faces.push(new Face3(0, 1, 2))\n                    return <mesh key={`SJ${face.index}`} geometry={geometry} material={SELECTED_MATERIAL}/>\n                })}\n                {viewMode === ViewMode.Frozen ? undefined : selection.joints.map(joint => {\n                    const key = `${joint.index}`\n                    return <Tag key={key} position={jointLocation(joint)} text={key}/>\n                })}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction Tag({position, text}: {\n    position: Vector3,\n    text: string,\n}): JSX.Element | null {\n    const {camera} = useThree()\n    const ref = useRef<Mesh>()\n    useFrame(() => {\n        if (ref.current) {\n            ref.current.quaternion.copy(camera.quaternion)\n        }\n    })\n    return <Text ref={ref} fontSize={0.1} position={position} anchorY=\"middle\" anchorX=\"center\">{text}</Text>\n}\n\nfunction IntervalMesh({pushOverPull, visualStrain, pretenstFactor, tensegrity, interval, selected, onPointerDown}: {\n    pushOverPull: number,\n    visualStrain: number,\n    pretenstFactor: number\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    onPointerDown?: (e: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const material = selected ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)\n    const stiffness = tensegrity.instance.floatView.stiffnesses[interval.index]\n        * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n    const radius = RADIUS_FACTOR * Math.sqrt(stiffness) * (selected ? 1.5 : 1)\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n    const strain = tensegrity.instance.floatView.strains[interval.index]\n    const pretenstAdjustment = 1 + (isPushRole(interval.intervalRole) ? pretenstFactor : 0)\n    const idealLength = tensegrity.instance.floatView.idealLengths[interval.index] * pretenstAdjustment\n    const length = idealLength + strain * idealLength * (1 - visualStrain)\n    const intervalScale = new Vector3(radius, (length < 0) ? 0.01 : length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={onPointerDown}\n        />\n    )\n}\n\nfunction Faces({tensegrity, stage, clickFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    clickFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<React.MouseEvent<Element, MouseEvent> | undefined>()\n    const onPointerDown = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        setDownEvent(event)\n    }\n    const onPointerUp = (event: React.MouseEvent<Element, MouseEvent>) => {\n        event.stopPropagation()\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 36) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        clickFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\" ref={meshRef} onPointerDown={onPointerDown} onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial attach=\"material\"\n                               transparent={true} side={FrontSide} depthTest={false} opacity={0.2} color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaHandPointUp, FaPlay, FaSignOutAlt, FaSnowflake, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version, versionFromUrl } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { emptySelection, ISelection, percentOrHundred, preserveJoints } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition, ViewMode } from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript | undefined {\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    } else {\n        const fromUrl = getCodeFromUrl()\n        if (fromUrl) {\n            return fromUrl\n        }\n        if (state.demoCount >= 0) {\n            return BOOTSTRAP[state.demoCount % BOOTSTRAP.length]\n        }\n    }\n    return undefined\n}\n\nexport function TensegrityView({createInstance, worldFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selection, setSelection] = useState<ISelection>(emptySelection)\n    const [rootTenscript, setRootTenscript] = useState(() => {\n        const codeToRun = getCodeToRun(storedState$.getValue())\n        if (codeToRun) {\n            return codeToRun\n        }\n        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n        return BOOTSTRAP[0]\n    })\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [demoCount, updateDemoCount] = useState(storedState$.getValue().demoCount)\n    const [viewMode, updateViewMode] = useState(storedState$.getValue().viewMode)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            if (storedState.demoCount < 0) {\n                updateDemoCount(storedState.demoCount)\n            } else if (storedState.demoCount > demoCount) {\n                if (demoCount + 1 === BOOTSTRAP.length) {\n                    setRootTenscript(BOOTSTRAP[0])\n                    setTimeout(() => {\n                        transition(storedState$, {demoCount: -1, fullScreen: false, rotating: false})\n                    }, 200)\n                } else {\n                    updateDemoCount(storedState.demoCount)\n                    setRootTenscript(BOOTSTRAP[storedState.demoCount])\n                }\n            }\n            updateViewMode(storedState.viewMode)\n            updateRotating(storedState.rotating)\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(worldFeatures).map(k => worldFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe(() => {\n                if (tensegrity) {\n                    tensegrity.instance.applyFeature(feature)\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        transition(storedState$, {viewMode: ViewMode.Lines})\n        setSelection(emptySelection)\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => runTenscript(rootTenscript), 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        transition(storedState$, {fullScreen: value})\n    }\n\n    return (\n        <>\n            {fullScreen ? demoCount >= 0 ? undefined : (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        worldFeatures={worldFeatures}\n                        rootTenscript={rootTenscript}\n                        tensegrity={tensegrity}\n                        selection={selection}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        {demoCount >= 0 ? (\n                            <div id=\"bottom-right\">\n                                <ButtonGroup>\n                                    <Button\n                                        color=\"success\"\n                                        onClick={() => {\n                                            transition(storedState$, {\n                                                demoCount: -1,\n                                                fullScreen: false,\n                                                rotating: false,\n                                            })\n                                        }}\n                                    >\n                                        <FaSignOutAlt/> Exit demo\n                                    </Button>\n                                </ButtonGroup>\n                            </div>\n                        ) : (\n                            <div>\n                                <div id=\"bottom-right\">\n                                    <ButtonGroup>\n                                        <Button\n                                            color={rotating ? \"warning\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {rotating: !rotating})}\n                                        >\n                                            <FaSyncAlt/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                                <div id=\"bottom-middle\">\n                                    <FeaturePanel feature={worldFeatures[WorldFeature.VisualStrain]}/>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <ButtonGroup>\n                                        <ViewModeButton item={ViewMode.Lines} storedState$={storedState$}\n                                                        click={() => setSelection(preserveJoints(selection))}>\n                                            <FaPlay/>\n                                        </ViewModeButton>\n                                        <ViewModeButton item={ViewMode.Selecting} storedState$={storedState$}>\n                                            <FaHandPointUp/>\n                                        </ViewModeButton>\n                                        <ViewModeButton item={ViewMode.Frozen} storedState$={storedState$}>\n                                            <FaSnowflake/>\n                                        </ViewModeButton>\n                                    </ButtonGroup>\n                                </div>\n                            </div>\n                        )}\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas\n                                style={{\n                                    backgroundColor: \"black\",\n                                    borderStyle: \"solid\",\n                                    borderColor: viewMode === ViewMode.Frozen ? \"#f0ad4e\" : \"black\",\n                                    cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                                    borderWidth: \"2px\",\n                                }}\n                            >\n                                <FabricView\n                                    worldFeatures={worldFeatures}\n                                    tensegrity={tensegrity}\n                                    selection={selection}\n                                    setSelection={setSelection}\n                                    viewMode={viewMode}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n\nfunction ViewModeButton({item, storedState$, children, click}: {\n    item: ViewMode, storedState$: BehaviorSubject<IStoredState>, click?: () => void,\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n}): JSX.Element {\n    const viewMode = storedState$.getValue().viewMode\n    return (\n        <Button\n            disabled={item === viewMode}\n            color={item === viewMode ? \"success\" : \"secondary\"}\n            onClick={() => {\n                transition(storedState$, {viewMode: item})\n                if (click) {\n                    click()\n                }\n            }}\n        >\n            {children}\n        </Button>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { percentFromFactor, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n            ) => {\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, percentOrHundred(), gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = percentFromFactor(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), scale, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => {\n                const sphereInstance = createInstance(false)\n                FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n                return new TensegritySphere(at, 0.7, frequency, 0.52, numeric, sphereInstance)\n            }\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   worldFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}