{"version":3,"sources":["view/feature-mapping.ts","fabric/eig-util.ts","fabric/fabric-instance.ts","service-worker.ts","fabric/tensegrity-types.ts","fabric/tenscript-node.ts","fabric/tensegrity-logic.ts","fabric/twist.ts","fabric/tensegrity.ts","fabric/tenscript.ts","storage/recoil.ts","view/bottom-left.tsx","storage/download.ts","view/bottom-right.tsx","view/materials.ts","view/live-view.tsx","view/look-view.tsx","view/interval-details.tsx","view/select-view.tsx","view/surface-component.tsx","construction/object-view.tsx","construction/construction-view.tsx","evo/island-geometry.ts","evo/genome.ts","evo/island.ts","evo/patch.ts","evo/evo-state.ts","evo/runner-logic.ts","evo/population.ts","evo/runner-view.tsx","evo/population-view.tsx","evo/island-view.tsx","evo/twitcher.ts","evo/runner.ts","evo/stats-view.tsx","evo/evo-view.tsx","fabric/bootstrap.ts","sphere/sphere-scaffold.ts","sphere/sphere-builder.ts","sphere/sphere-view.tsx","view/feature-slider.tsx","view/bottom-middle.tsx","view/fabric-view.tsx","view/script-panel.tsx","view/stage-button.tsx","view/top-left.tsx","view/top-middle.tsx","view/top-right.tsx","view/design-view.tsx","view/main-view.tsx","start.tsx"],"names":["FeatureStage","linearMapping","feature","name","featureStage","low","high","nuanceToPercent","nuance","percentToNuance","percent","percentToValue","default_world_feature","valueToPercent","value","featureMapping","WorldFeature","Gravity","Postslack","Antigravity","All","ShapingDrag","Preslack","ShapingStiffnessFactor","Drag","ShapingPretenstFactor","PretenstFactor","StiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","VisualStrain","PushOverPull","Error","FORWARD","Vector3","UP","DOWN","IntervalRole","Object","keys","filter","k","isNaN","parseInt","map","roleDefaultLength","intervalRole","PushA","PushB","PHI","PushC","PullA","PullB","PullAA","PullBB","Conflict","WORLD_FEATURES","intervalRoleName","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","GlobalMode","GLOBAL_MODES","nameToUrl","replace","globalModeFromUrl","split","location","hash","substring","mode","find","m","param","length","reloadGlobalMode","Choice","reload","floatString","numeric","expo","toExponential","zero","indexOf","Math","max","toFixed","sub","a","b","subVectors","normalize","midpoint","points","mid","forEach","point","add","multiplyScalar","pointsToNormal","radials","copy","norm","index","current","next","crossVectors","vectorFromArray","array","vector","offset","set","FabricInstance","constructor","eig","featureValues","jointCount","worldObject","fabricObject","fabric","world","view","floatView","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","valuesToApply","fabricBackup","this","key","entries","set_float_value","free","View","on_fabric","Fabric","new","iterate","busy","refreshFloatView","shift","get_stage","requested","request_stage","console","error","showFrozen","satisfied","updateFloatView","clone","snapshot","log","fabricClone","restoreSnapshot","backup","render","midpoint_x","midpoint_y","midpoint_z","clear","applyFeature","push","jointLocation","joint","averageJointLocation","joints","reduce","accum","jointDistance","distanceTo","intervalLocation","alpha","omega","twistLocation","pushes","sum","intervalLength","faceLocation","face","ends","end","averageFaceLocation","faces","apply","matrix","apply_matrix4","toArray","unitVector","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","position","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","isLocalhost","Boolean","window","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","Spin","Left","Right","LeftRight","RightLeft","spinChange","spin","opposite","toOmni","FaceName","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","jointPulls","pulls","twoJointKey","pairKey","intervalRotation","unit","dot","Quaternion","setFromUnitVectors","areAdjacent","filterRole","intervalJoins","acrossPush","otherJoint","interval","percentOrHundred","_","factorFromPercent","percentFromFactor","factor","TenscriptNode","forward","scale","subtrees","markNumbers","root","undefined","subtreeCode","markCode","action","afterNode","subtree","faceName","faceMarks","deleteMark","omniFaceNames","some","hasScale","parts","join","v","code","marks","mark","flat","bowtiePairs","tensegrity","pairs","onlyA","onlyB","common","aj","bj","intersection","pullA","instance","withPulls","pairMap","addPair","pair","addPairFor","near","pullB","far","otherFar","otherNear","commonNear","commonFar","acrossFar","acrossNear","nextPair","intervals","joint3APush","found","faceJoint","a3A","outwards","fjA","sort","f1","f2","namedJob","age","job","todo","n","upwards","b1","up","b2","x","y","z","xy","yz","zx","basisFromVector","Matrix4","makeBasis","setPosition","invert","set_altitude","conflicts","betweenDot","toAlpha","toOmega","jointA","pushA","jointB","pushB","otherA","otherB","findConflicts","createInterval","t","Twist","baseKnown","base","createBase","createSingle","createDouble","detailsSoFar","leftSpin","pointPairs","createJoint","alphaJoint","omegaJoint","makeFace","midJoint","j","createFace","reverse","botPairs","topPairs","bot","top","faceJoints","midJoints","midVector","fromMid","between","idx1","idx2","avg","addVectors","addScaledVector","pushesPerTwist","angle","PI","cos","sin","FaceAction","PostGrowthOp","PairSelection","AGE_POST_GROWTH","Tensegrity","countdown","builder","stage$","loops","twists","connectors","distancers","pretenstAge","jobs","BehaviorSubject","operateOn","newJoint","create_joint","removeJoint","remove_joint","createRadialPull","pullScale","axis","creatAxis","alphaRestLength","omegaRestLength","alphaRays","createRay","omegaRays","radialPull","Connector","ShapingDistancer","PretenstDistancer","patience","targetLength","stiffness","roleDefaultStiffness","currentLength","patienceFactor","abs","attack","create_interval","removed","changeIntervalScale","multiply_rest_length","removeInterval","existing","remove_interval","twist","f0","create_face","removeFace","pull","remove_face","faceToTriangle","endA","endB","triangleFaces","work","addPull","intervalKey","intervalToPair","createPulls","pairSelection","Bowtie","Snelson","snelsonPair","acrossA","acrossB","snelsonPairs","selectPairs","removeSlackPulls","pullC","createTwist","createTwistOn","baseFace","createLoop","findTwist","getValue","ray","jobsBefore","ageNow","finished","checkConnectors","Pretenst","strainToStiffness","averagePullStrain","strainFactor","copy_stiffnesses","createRadialPulls","actionScale","locationFromFace","centerBrickFaceIntervals","omniTwist","averageScaleFactor","opposing","closestFace","ShapingDistance","PretenstDistance","faceA","indexA","faceB","indexB","Join","connectFaces","alphaEnds","omegaEnds","ringLengths","rotation","ringLength","walk","rotatedWalk","bestRotation","minLength","rotateForBestRing","i","getIntervalDetails","strain","height","reverseA","forwardB","loop","a0","a1","idealLength","restLength","CONNECTOR_LENGTH","Radial","compileTenscript","tenscript","codeToNode","e","message","TenscriptBuilder","tree","markDefStrings","buds","set_surface_character","surfaceCharacter","toDo","postGrowthOp","Faces","BowtieFaces","postGrowthJob","createBud","before","activeBuds","bud","markActions","reorient","decremented","omni","needsOmniTwist","grow","f","middle","faceBasis","twirl","makeRotationZ","rotate","makeRotationY","multiply","reorientMatrix","treeMarks","twistMark","Subtree","markTree","execute","markStrings","markDefStringsToActions","collated","possibleMark","None","FaceStrategy","faceStrategies","strategy","markAction","startsWith","codeFragment","codeString","argument","content","skip","codeTree","addMark","markNumber","charAt","direction","isDigit","forwardArg","forwardCount","toNumber","repeat","scaleArg","faceNameChar","nonEmpty","afterTree","scaleChange","getSpin","newTwist","twistToMark","treeWithMarks","thisFace","digits","maybeBracketed","stripBrackets","commaPos","commaPresent","finalBracket","s","depth","matchBracket","contentOption","persistAtom","recoilPersist","storage","localStorage","effects_UNSTABLE","postGrowthAtom","atom","default","NoOp","bootstrapIndexAtom","tenscriptAtom","currentFeature","rotatingAtom","globalModeAtom","ViewMode","viewModeAtom","Time","visibleRolesAtom","SurfaceCharacter","Frozen","FEATURE_VALUES","mapping","percentAtom","selectedTwistAtom","visibleDetailsAtom","BottomLeft","viewMode","setViewMode","useRecoilState","ViewModeButton","item","children","Button","disabled","onClick","ButtonGroup","Select","Look","csvNumber","dateString","Date","toISOString","getFabricOutput","pushRadius","pullRadius","jointRadius","radius","anchor","isPush","alphaIndex","omegaIndex","type","linearDensity","saveCSVZip","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","blob","FileSaver","BottomRight","updateStage","useState","useEffect","subscribe","unsubscribe","rotating","setRotating","className","JSON","stringify","saveJSONZip","centralize","RAINBOW_COLORS","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","MeshBasicMaterial","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","roleMaterial","ghost","roleColor","cylinderRadius","CYLINDER_GEOMETRY","CylinderGeometry","LiveView","geometry","material","LookView","visibleRoles","intervalScale","Euler","setFromQuaternion","matrixWorldNeedsUpdate","IntervalDetails","details","singleDetails","Html","onMouseDown","Table","colSpan","SelectView","clickDetails","selected","setSelected","onDoubleClick","event","stopPropagation","again","MATERIAL","MeshPhongMaterial","specular","FrontSide","HEXAGON_POINTS","SURFACE_SCALE","KINDA","TRIANGLE_POSITION","SurfaceComponent","useMemo","positionF32","normalF32","faceOffset","BufferAttribute","patchesGeometry","ObjectView","aim","setAim","camera","useRef","useFrame","toMidpoint","lengthSq","eye","distanceChange","towardsDistance","Rendering","PerspectiveCamera","ref","makeDefault","OrbitControls","autoRotate","target","zoomSpeed","Stars","intensity","ConstructionView","createInstance","mainInstance","setTensegrity","setDetails","setPostGrowth","useSetRecoilState","emergency","ts","localValue","createTensegrity","Title","RecoilBridge","useRecoilBridgeAcrossReactRoots_UNSTABLE","style","left","right","backgroundColor","borderStyle","borderColor","cursor","borderWidth","adjacentPulls","id","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","Genome","roll","genes","createReader","GeneReader","getGene","withMutations","directionGeneNames","mutateTwitchConfig","genesCopy","gene","geneName","tosses","dice","slice","directionName","mutateGene","twitchConfig","GeneName","TwitchConfig","geneString","die","symbol","serializeGene","chooseFrom","total","floor","diceToNuance","nextDie","readMuscleTwitch","config","attackPeriod","decayPeriod","twitchNuance","muscle","when","diceToInteger","diceToFloat","decay","readFeatureValue","DICE","numeral","DICE_MAP","woops","random","currentRoll","rollTheDice","pow","PatchCharacter","emptyGenome","fromGeneData","geneData","search","fresh","Patch","island","coords","patchCharacter","runner","flora","center","adjacent","getItem","parse","setItem","SIX","RUNNER_CODE","Bouncy","islandAtom","seed","patches","_seed","patch","findPatch","p","equals","createSurroundedPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","homePatchSelector","selector","destinationAtom","showDetailsAtom","Direction","DIRECTIONS","directionGene","ToA","ToB","ToC","calculateDirections","toA","toB","toC","locations","fromTo","fromJoint","toJoint","from","to","EVO_PARAMETERS","EvolutionPhase","Population","ancestor","useTwitches","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","SurvivorsAdvance","cyclePatternIndex","currentCycle","currentMaxCycles","embryo","storedGenes","createAutoRunner","letter","proximityHistory","persisted","pop","winnerMinCycles","winnerMoved","cycleCount","getCycleCount","rankEvolvers","reachedTarget","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","genome","challenger","autopilot","ChallengersOvertake","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","SurvivorsStored","losers","splitEvolvers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","distanceFromTarget","proximityForCycle","proximity","String","fromCharCode","RunnerView","topFaceLocation","showDirection","onUpdate","self","computeBoundingSphere","attach","attachObject","count","itemSize","quaternion","directionQuaternion","PopulationView","population","IslandView","happening","evolutionPhase","countdownToEvo","stopEvo","destination","setDestination","happeningChanged","updateHappeningChanged","now","updateNow","updateTarget","updatePosition","adjustTarget","approachDistance","distance","positionToTarget","deltaDistance","Happening","Developing","Resting","Running","Evolving","withReducedCyclePattern","wasSeconds","time","isSeconds","enablePan","autoRotateSpeed","enableDamping","minPolarAngle","maxPolarAngle","positionArray","normalArray","removeRandomInterval","Rest","clickPatch","Sky","rayleigh","inclination","mieCoefficient","mieDirectionalG","turbidity","Twitcher","twitchCount","twitchCycles","reader","musclePeriod","readTwitchConfig","totalTwitches","TwitchCycle","loopMuscles","cycles","tick","twitch","timeSlice","twitchCycle","activate","slices","chosen","splice","addTwitch","twitches","twitchArray","Runner","shapingTime","twitcher","topFace","currentTwitchAge","twitchAge","directionHistory","twitchesPerCycle","auto","geneNames","dir","newTwitchAge","twitchInterval","twitch_interval","alphaInterval","omegaInterval","checkDirection","sortedFaces","aa","bb","locA","locB","findTopFace","alphaPulls","omegaPulls","onlyMuscles","extractLoopMuscles","targetPatch","quaternionForDirection","directionToTarget","towards","toTarget","matchA","matchB","matchC","StatsView","setShowStats","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","EvoView","createBodyInstance","homePatch","useRecoilValue","showStats","setRunner","newRunner","setHappening","setSnapshots","evolutionCountdown","setEvolutionCountdown","setPopulation","setPhase","storedGenome","Sticky","err","newStage","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","evoCountdown","toRunning","toEvolving","toRebirth","toRest","EvolutionStatsView","vertical","createContent","BOOTSTRAP","1","2","3","4","5","6","0","CONSTRUCTIONS","SphereScaffold","frequency","vertices","VERTEX","vertexAt","EDGE","edge","midVertices","v0","v1","midEdge","vertexBetween","FACE_EDGES","faceEdge","side0","side1","side2","buildFaces","buildEdgeVertices","sortVertex","edgeVertices","edgeVertexIndex","verticesOfEdge","vertex","previousVertex","loc0","loc1","spot","lerpVectors","faceVertexArrays","FACE_VERTICES","faceVertexIndex","faceIndex","faceVertex","which","walkA","vectorA","walkB","v2","vectorB","row","rowMember","vert","sideVertices","antiWalk","walkSide","faceEdges","vsVertex","PENTAGON_VERTICES","vertexArray","edgeVertexA","front","edgeVertexB","lerp","ONE","outward","first","sorted","vectorTo","neigbor","toAdjacent","toTop","adj","SphereBuilder","segmentSize","scaffold","hubs","spokes","allSpokes","centerHub","outerHub","centerJoint","outerJoint","createPush","spoke","segmentLength","averageIntervalLength","allPulls","hub","pullsForSpoke","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","createPull","pullName","nextSpoke","nearOppositeNext","spokeLength","colorString","PUSH_MATERIAL","PULL_MATERIAL","FREQUENCY_CHOICES","showPushAtom","showPullAtom","frozenAtom","gravityAtom","SphereView","frequencyParam","createSphere","frequencyChoice","setFrozen","showPush","setShowPush","showPull","setShowPull","gravity","setGravity","sphere","setSphere","freq","Sphere","SPHERE_RADIUS","SphereScene","setTarget","PolygonView","CYLINDER","domain","FeatureSlider","sliderValue","setPercent","values","setValues","round","percentString","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","handles","getHandleProps","handle","Handle","tracks","getTrackProps","source","Track","min","aria-valuemin","aria-valuemax","aria-valuenow","width","BottomMiddle","open","setOpen","worldFeature","setWorldFeature","featureValue","setFeatureValue","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","AMBIENT_COLOR","FabricView","updateAim","ScriptPanel","runTenscript","setTenscript","postGrowth","json","setJson","setError","toJson","flexDirection","Input","changeEvent","newTenscript","StageTransition","STAGE_TRANSITIONS","StageButton","stageTransition","allDisabledExcept","stageAccepted","doNow","CaptureLengthsToSlack","Symbol","SlackToPretensing","CapturePretenstToSlack","CaptureStrainForStiffness","TopLeft","setBootstrapIndex","showScriptPanel","setShowScriptPanel","bootstrapOpen","setBootstrapOpen","run","pgo","opChanged","opColor","bootstrapProgram","TopMiddle","TopRight","updateVisibleRoles","currentRole","updateCurrentRole","adjustSelection","concat","RoleLengthAdjuster","nextRoles","adjustValue","fine","adjustment","DesignView","worldFeatures","bootstrapIndex","removeItem","MainView","globalMode","visit","url","Design","Construction","Evolution","g","size","async","startReact","element","document","getElementById","ReactDOM","registerServiceWorker"],"mappings":"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","file":"static/js/4.acf98f73.chunk.js","sourcesContent":["/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\n\nexport enum FeatureStage {\n    Preslack,\n    Postslack,\n    All,\n}\n\nexport interface IFeatureMapping {\n    feature: WorldFeature\n    name: string\n    featureStage: FeatureStage\n    nuanceToPercent: (nuance: number) => number\n    percentToNuance: (percent: number) => number\n    percentToValue: (percent: number) => number\n    valueToPercent: (value: number) => number\n}\n\nfunction linearMapping(feature: WorldFeature, name: string, featureStage: FeatureStage, low: number, high: number): IFeatureMapping {\n    const nuanceToPercent = (nuance: number) => (low * (1 - nuance) + high * nuance)\n    const percentToNuance = (percent: number) => (percent - low) / (high - low)\n    const percentToValue = (percent: number) => default_world_feature(feature) * percent / 100\n    const valueToPercent = (value: number) => value / default_world_feature(feature) * 100\n    return {feature, name, featureStage, nuanceToPercent, percentToNuance, percentToValue, valueToPercent}\n}\n\nexport function featureMapping(feature: WorldFeature): IFeatureMapping {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            // percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Gravity\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.Antigravity:\n            // percents: [5, 25, 50, 100, 150, 200, 500],\n            return linearMapping(feature, \"-Antigravity\", FeatureStage.All, 5, 500)\n        case WorldFeature.ShapingDrag:\n            // percents: [0, 10, 50, 100, 200, 500],\n            return linearMapping(feature, \"Shaping Drag\", FeatureStage.Preslack, 0, 500)\n        case WorldFeature.ShapingStiffnessFactor:\n            // percents: [10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Shaping Stiffness\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.Drag:\n            // percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            return linearMapping(feature, \"Drag\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.ShapingPretenstFactor:\n            // percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Shaping Pretenst\", FeatureStage.Preslack, 0, 1000)\n        case WorldFeature.PretenstFactor:\n            // percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            return linearMapping(feature, \"Pretenst Factor\", FeatureStage.Postslack, 0, 500)\n        case WorldFeature.StiffnessFactor:\n            // percents: [1, 10, 50, 100, 150, 200, 300],\n            return linearMapping(feature, \"Stiffness\", FeatureStage.Postslack, 1, 300)\n        case WorldFeature.IterationsPerFrame:\n            // percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            return linearMapping(feature, \"Iterations/frame\", FeatureStage.All, 2, 500)\n        case WorldFeature.IntervalCountdown:\n            // percents: [10, 20, 30, 100, 150, 400, 1000],\n            return linearMapping(feature, \"-Interval Countdown\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.PretensingCountdown:\n            // percents: [50, 75, 90, 100, 125, 150, 200],\n            return linearMapping(feature, \"-Pretenst countdown\", FeatureStage.All, 50, 200)\n        case WorldFeature.VisualStrain:\n            // percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Visual strain\", FeatureStage.All, 0, 300)\n        case WorldFeature.PushOverPull:\n            // percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            return linearMapping(feature, \"Push/Pull\", FeatureStage.All, 10, 700)\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\nexport const DOWN = new Vector3(0, -1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    PushA,\n    PushB,\n    PushC,\n    PullA,\n    PullB,\n    PullAA,\n    PullBB,\n    Conflict,\n    Radial,\n    Connector,\n    ShapingDistancer,\n    PretenstDistancer,\n}\n\nexport const INTERVAL_ROLES = Object.keys(IntervalRole)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => IntervalRole[k])\n\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst ROOT6 = 2.44948974278\nconst SHORTENING = 0.5\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return ROOT6\n        case IntervalRole.PushB:\n            return PHI * ROOT3\n        case IntervalRole.PushC:\n            return 1\n        case IntervalRole.PullA:\n            return 1\n        case IntervalRole.PullB:\n            return ROOT3\n        case IntervalRole.PullAA:\n            return roleDefaultLength(IntervalRole.PullA) * SHORTENING\n        case IntervalRole.PullBB:\n            return roleDefaultLength(IntervalRole.PullB) * SHORTENING\n        case IntervalRole.Conflict:\n            return 0.01\n        default:\n            throw new Error(`Length for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport function roleDefaultStiffness(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n        case IntervalRole.PushC:\n        case IntervalRole.PullA:\n        case IntervalRole.PullB:\n        case IntervalRole.Conflict:\n            return 1\n        case IntervalRole.PullAA:\n        case IntervalRole.PullBB:\n            return 0.4\n        default:\n            throw new Error(`Stiffness for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const WORLD_FEATURES: string[] = Object.keys(WorldFeature)\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"[A]\"\n        case IntervalRole.PushB:\n            return \"[B]\"\n        case IntervalRole.PullA:\n            return \"(a)\"\n        case IntervalRole.PullB:\n            return \"(b)\"\n        case IntervalRole.PullAA:\n            return \"(aa)\"\n        case IntervalRole.PullBB:\n            return \"(bb)\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PushA:\n            case IntervalRole.PushB:\n            case IntervalRole.PullA:\n            case IntervalRole.PullB:\n            case IntervalRole.PullAA:\n            case IntervalRole.PullBB:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n        case IntervalRole.PushC:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum GlobalMode {\n    Choice = \"choice\",\n    Design = \"design\",\n    Sphere = \"sphere\",\n    Construction = \"construction\",\n    Evolution = \"evolution\",\n}\n\nexport const GLOBAL_MODES: GlobalMode[] = Object.keys(GlobalMode).map(k => GlobalMode[k])\n\nexport interface IGlobalMode {\n    mode: GlobalMode,\n    param?: string\n}\n\nexport function nameToUrl(name: string): string {\n    return name.replace(/ /g, \"-\")\n}\n\nexport function globalModeFromUrl(): IGlobalMode {\n    const hash = location.hash.substring(1)\n    const split = hash.split(\";\")\n    const mode = GLOBAL_MODES.find(m => m === split[0])\n    if (mode) {\n        const param = split.length > 1 ? split[1] : \"\"\n        return {mode, param}\n    }\n    return reloadGlobalMode(GlobalMode.Choice)\n}\n\nexport function reloadGlobalMode(mode: GlobalMode, param?: string): IGlobalMode {\n    location.hash = param && param.length > 0 ? `${mode};${param}` : mode\n    location.reload()\n    return {mode, param}\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(3)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(3)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"), expo.indexOf(\"e+3\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function percentString(percent: number): string {\n    if (percent <= 100) {\n        return `${percent.toFixed(0)}%`\n    } else {\n        return `${(percent / 100).toFixed(1)}x`\n    }\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function pointsToNormal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport function basisFromVector(up: Vector3): { b1: Vector3, up: Vector3, b2: Vector3 } {\n    const {x, y, z} = up\n    const xy = x * x + y * y\n    const yz = y * y + z * z\n    const zx = z * z + x * x\n    const b1 = new Vector3()\n    if (xy > yz && xy > zx) {\n        b1.set(-y, x, 0).normalize()\n    } else if (yz > xy && yz > zx) {\n        b1.set(0, -z, y).normalize()\n    } else {\n        b1.set(-z, 0, x).normalize()\n    }\n    const b2 = new Vector3().crossVectors(up, b1).normalize()\n    return {b1, up, b2}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World, WorldFeature } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { featureMapping } from \"../view/feature-mapping\"\n\nimport { midpoint, vectorFromArray } from \"./eig-util\"\nimport { IFace, IInterval, IJoint } from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (featureValues?: Record<WorldFeature, number>, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n\n    private valuesToApply: ICurrentValue[] = []\n    private fabricBackup?: Fabric\n\n    constructor(\n        eig: typeof import(\"eig\"),\n        featureValues: Record<WorldFeature, number>,\n        jointCount: number,\n        worldObject: object,\n        fabricObject?: object,\n    ) {\n        this.world = worldObject as World\n        for (const [key, percent] of Object.entries(featureValues)) {\n            const feature = parseInt(key, 10)\n            const {percentToValue} = featureMapping(feature)\n            const value = percentToValue(percent)\n            this.world.set_float_value(feature, value)\n        }\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const current = this.valuesToApply.shift()\n        if (current) {\n            this.world.set_float_value(current.feature, current.value)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: WorldFeature, percent: number, value: number): void {\n        this.valuesToApply.push({feature, percent, value})\n    }\n\n    public jointLocation(joint: IJoint): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, joint.index)\n    }\n\n    public averageJointLocation(joints: IJoint[]): Vector3 {\n        return joints\n            .reduce((accum, joint) => accum.add(this.jointLocation(joint)), new Vector3())\n            .multiplyScalar(1 / joints.length)\n    }\n\n    public jointDistance(a: IJoint, b: IJoint): number {\n        return this.jointLocation(a).distanceTo(this.jointLocation(b))\n    }\n\n    public intervalLocation({alpha, omega}: IInterval): Vector3 {\n        return this.jointLocation(alpha).add(this.jointLocation(omega)).multiplyScalar(0.5)\n    }\n\n    public twistLocation({pushes}: Twist): Vector3 {\n        return pushes\n            .reduce((sum, push) => sum.add(this.intervalLocation(push)), new Vector3())\n            .multiplyScalar(1 / pushes.length)\n    }\n\n    public intervalLength({alpha, omega}: IInterval): number {\n        return this.jointDistance(alpha, omega)\n    }\n\n    public faceLocation(face: IFace): Vector3 {\n        return midpoint(face.ends.map(end => this.jointLocation(end)))\n    }\n\n    public averageFaceLocation(faces: IFace[]): Vector3 {\n        return faces\n            .reduce((accum, face) => accum.add(this.faceLocation(face)), new Vector3())\n            .multiplyScalar(1 / faces.length)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n\ninterface ICurrentValue {\n    feature: WorldFeature\n    percent: number\n    value: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Quaternion, Vector3 } from \"three\"\n\nimport { DOWN, IntervalRole, intervalRoleName, sub, UP } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { Twist } from \"./twist\"\n\nexport enum Spin {\n    Left = \"Left\",\n    Right = \"Right\",\n    LeftRight = \"Left-Right\",\n    RightLeft = \"Right-Left\",\n}\n\nexport const SPINS = [Spin.Left, Spin.Right, Spin.LeftRight, Spin.RightLeft]\n\nexport function spinChange(spin: Spin, opposite: boolean, toOmni: boolean): Spin {\n    if (opposite) {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.RightLeft : Spin.Right\n            case Spin.Right:\n                return toOmni ? Spin.LeftRight : Spin.Left\n            case Spin.LeftRight:\n                return Spin.RightLeft\n            case Spin.RightLeft:\n                return Spin.LeftRight\n        }\n    } else {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.LeftRight : spin\n            case Spin.Right:\n                return toOmni ? Spin.RightLeft : spin\n            case Spin.LeftRight:\n            case Spin.RightLeft:\n                return spin\n        }\n    }\n    throw new Error(\"Spin?\")\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    pulls?: IInterval[]\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointPulls({pulls}: IJoint): IInterval[] {\n    if (!pulls) {\n        throw new Error(\"no pulls\")\n    }\n    return pulls\n}\n\nexport interface IIntervalDetails {\n    interval: IInterval\n    strain: number\n    length: number\n    height: number\n}\n\nfunction indexKey(a: number, b: number): string {\n    return a < b ? `(${a},${b})` : `(${b},${a})`\n}\n\nexport function twoJointKey(alpha: IJoint, omega: IJoint): string {\n    return indexKey(alpha.index, omega.index)\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function pairKey({alpha, omega}: IPair): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalRotation(unit: Vector3): Quaternion {\n    const dot = UP.dot(unit)\n    return new Quaternion().setFromUnitVectors(dot > 0 ? UP : DOWN, unit)\n}\n\nexport function areAdjacent(a: IInterval, b: IInterval): boolean {\n    if (a.index === b.index) {\n        return false\n    }\n    return a.alpha.index === b.alpha.index\n        || a.omega.index === b.omega.index\n        || a.alpha.index === b.omega.index\n        || a.omega.index === b.alpha.index\n}\n\nexport function filterRole(role: IntervalRole): (interval: IInterval) => boolean {\n    return ({intervalRole}) => intervalRole === role\n}\n\nexport function intervalToPair({alpha, omega, scale, intervalRole}: IInterval): IPair {\n    return {alpha, omega, scale, intervalRole}\n}\n\nexport function intervalKey({alpha, omega}: IInterval): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IMarkNumber {\n    _: number\n}\n\nexport interface IFace {\n    twist: Twist,\n    index: number\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    markNumbers: IMarkNumber[]\n    joint?: IJoint\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(instance: FabricInstance, alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += instance.jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += instance.jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * -0.24)\n    const rotate = new Matrix4().makeRotationY(-Math.PI / 2 - rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FACE_NAME_CHARS, FACE_NAMES, FaceName, IMarkNumber, IPercent } from \"./tensegrity-types\"\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: string | undefined,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly markNumbers: Record<FaceName, IMarkNumber[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === undefined && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): { afterNode: TenscriptNode, action: string } {\n        if (this.forward !== undefined && this.forward.length > 0) {\n            const action = this.forward.substring(0, 1)\n            return {\n                afterNode: new TenscriptNode(this.forward.substring(1), this.scale, this.subtrees, this.markNumbers),\n                action,\n            }\n        }\n        return {afterNode: this, action: \"\"}\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IMarkNumber [] | undefined {\n        return this.markNumbers[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.markNumbers[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.markNumbers[faceName])\n    }\n\n    public get code(): string {\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && this.forward && this.forward.length > 0 && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (this.forward && this.forward.length > 0) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.markNumbers)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n","import { Stage } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { basisFromVector, IntervalRole, midpoint, pointsToNormal } from \"./eig-util\"\nimport { AGE_POST_GROWTH, IJob, PairSelection, PostGrowthOp, Tensegrity, ToDo } from \"./tensegrity\"\nimport {\n    acrossPush,\n    areAdjacent,\n    filterRole,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    IPercent,\n    jointPulls,\n    otherJoint,\n    pairKey,\n    percentOrHundred,\n} from \"./tensegrity-types\"\n\nexport interface IConflict {\n    jointA: IJoint\n    jointB: IJoint\n}\n\nconst CONFLICT_MULTIPLE = 6\n\nexport function findConflicts(tensegrity: Tensegrity): IConflict[] {\n    const conflicts: IConflict[] = []\n    const instance = tensegrity.instance\n    const betweenDot = (joint: IJoint, interval: IInterval) => {\n        const toAlpha = instance.jointLocation(joint).sub(instance.jointLocation(interval.alpha)).normalize()\n        const toOmega = instance.jointLocation(joint).sub(instance.jointLocation(interval.omega)).normalize()\n        return toAlpha.dot(toOmega) < 0\n    }\n    tensegrity.joints.forEach((jointA, a) => {\n        const pushA = jointA.push\n        if (pushA) {\n            tensegrity.joints.forEach((jointB, b) => {\n                if (b <= a) {\n                    return\n                }\n                const pushB = jointB.push\n                if (pushB) {\n                    const otherA = otherJoint(jointA, pushA)\n                    const otherB = otherJoint(jointB, pushB)\n                    const distanceNear = instance.jointDistance(jointA, jointB)\n                    const distanceFar = instance.jointDistance(otherA, otherB)\n                    if (distanceNear * CONFLICT_MULTIPLE > distanceFar) {\n                        return\n                    }\n                    if (betweenDot(jointA, pushB) && betweenDot(jointB, pushA)) {\n                        conflicts.push({jointA, jointB})\n                    }\n                }\n            })\n        }\n    })\n    return conflicts\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function snelsonPairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const snelsonPair = (alpha: IJoint, pullB: IInterval): IPair | undefined => {\n        const a = acrossPush(alpha)\n        const b = otherJoint(alpha, pullB)\n        if (!a.push || !b.push) {\n            return undefined\n        }\n        const acrossA = jointPulls(a).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(a, pullA))\n        const acrossB = jointPulls(b).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(b, pullA))\n        const omega = acrossA.find(jointA => !!acrossB.find(jointB => jointA.index === jointB.index))\n        if (!omega || !omega.push) {\n            return undefined\n        }\n        const intervalRole = IntervalRole.PullB\n        const scale = pullB.scale\n        return {alpha, omega, intervalRole, scale}\n    }\n    tensegrity.withPulls(pairMap => {\n        const pullBs = tensegrity.intervals.filter(filterRole(IntervalRole.PullB))\n        pullBs.forEach(pullB => {\n            const alpha = snelsonPair(pullB.alpha, pullB)\n            if (alpha) {\n                const existingAlpha = pairMap[pairKey(alpha)]\n                if (!existingAlpha) {\n                    pairs.push(alpha)\n                }\n            }\n            const omega = snelsonPair(pullB.omega, pullB)\n            if (omega) {\n                const existingOmega = pairMap[pairKey(omega)]\n                if (!existingOmega) {\n                    pairs.push(omega)\n                }\n            }\n        })\n    })\n    return pairs\n}\n\nexport function bowtiePairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const onlyA = filterRole(IntervalRole.PullA)\n    const onlyB = filterRole(IntervalRole.PullB)\n    const intersection = (a: IJoint[], b: IJoint[]) => a.find(aj => b.find(bj => aj.index === bj.index))\n    const common = (a: IJoint, b: IJoint) => intersection(\n        jointPulls(a).filter(onlyA).map(pullA => otherJoint(a, pullA)),\n        jointPulls(b).filter(onlyA).map(pullA => otherJoint(b, pullA)),\n    )\n    const nextPair = (near: IJoint): IPair | undefined => {\n        const pullB = jointPulls(near).filter(onlyB)[0]\n        const far = otherJoint(near, pullB)\n        const otherFar = acrossPush(near)\n        const otherB = jointPulls(otherFar).filter(onlyB)[0]\n        const otherNear = otherJoint(otherFar, otherB)\n        const commonNear = common(near, otherNear)\n        const commonFar = common(far, otherFar)\n        if (!commonNear || !commonFar) {\n            return undefined\n        }\n        if (commonNear.push && !commonFar.push) {\n            const acrossFar = acrossPush(far)\n            if (!jointPulls(acrossFar).some(intervalJoins(commonNear, acrossFar))) {\n                return undefined\n            }\n        } else if (commonFar.push && !commonNear.push) {\n            const acrossNear = acrossPush(near)\n            if (!jointPulls(acrossNear).some(intervalJoins(commonFar, acrossNear))) {\n                return undefined\n            }\n        }\n        const alpha = commonNear.push ? commonNear : near\n        const omega = commonFar.push ? commonFar : far\n        const scale = pullB.scale\n        const intervalRole = !commonNear.push || !commonFar.push ? IntervalRole.PullB : IntervalRole.PullBB\n        return {alpha, omega, scale, intervalRole}\n    }\n    const instance = tensegrity.instance\n    tensegrity.withPulls(pairMap => {\n        const addPair = (pair: IPair) => {\n            const key = pairKey(pair)\n            const exists = pairMap[key]\n            if (!exists) {\n                pairs.push(pair)\n                pairMap[key] = pair\n            }\n        }\n        const addPairFor = (joint: IJoint) => {\n            const pair = nextPair(joint)\n            if (pair) {\n                addPair(pair)\n            }\n        }\n        tensegrity.intervals\n            .filter(filterRole(IntervalRole.PullB))\n            .forEach(({alpha, omega}) => {\n                addPairFor(alpha)\n                addPairFor(omega)\n            })\n        tensegrity.joints\n            .filter(joint => joint.push && jointPulls(joint).filter(onlyA).length === 3)\n            .forEach(joint3APush => {\n                const noPushAcross = (interval: IInterval) => !otherJoint(joint3APush, interval).push\n                const found = jointPulls(joint3APush).filter(onlyA).find(noPushAcross)\n                if (!found) {\n                    throw new Error(\"no-push not found\")\n                }\n                const faceJoint = otherJoint(joint3APush, found)\n                const a3A = jointPulls(joint3APush).filter(onlyA).map(pullA => otherJoint(joint3APush, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                const fjA = jointPulls(faceJoint).filter(onlyA).map(pullA => otherJoint(faceJoint, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                a3A.map(a => {\n                    const b = fjA.sort((f1, f2) =>\n                        a.outwards.dot(f2.outwards) - a.outwards.dot(f1.outwards))[0]\n                    const intervalRole = IntervalRole.PullAA\n                    const scale = found.scale\n                    const pair: IPair = {alpha: a.end, omega: b.end, scale, intervalRole}\n                    addPair(pair)\n                })\n            })\n    })\n    return pairs\n}\n\nexport function namedJob(name: string, age: number): IJob {\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (name) {\n        case \"orient-0\":\n            return job(tensegrity => {\n                const faces = tensegrity.faces.filter(({markNumbers}) => markNumbers.find((n) => n._ === 0))\n                if (faces.length === 0) {\n                    throw new Error(\"No faces marked zero\")\n                }\n                const instance = tensegrity.instance\n                const position = faces\n                    .reduce((v, {ends}) =>\n                        v.add(midpoint(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .multiplyScalar(1 / faces.length)\n                const upwards = faces\n                    .reduce((v, {ends}) =>\n                        v.sub(pointsToNormal(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .normalize()\n                const {b1, up, b2} = basisFromVector(upwards)\n                tensegrity.instance.apply(new Matrix4().makeBasis(b1, up, b2).setPosition(position).invert())\n                tensegrity.fabric.set_altitude(5)\n            })\n        case \"conflict\":\n            return job(tensegrity => {\n                findConflicts(tensegrity).forEach(({jointA, jointB}) => {\n                    tensegrity.createInterval(jointA, jointB, IntervalRole.Conflict, percentOrHundred())\n                })\n            })\n        case \"pretensing\":\n            return job(tensegrity => {\n                tensegrity.stage = Stage.Slack\n                tensegrity.stage = Stage.Pretensing\n            })\n        case \"age\":\n            return job(t => {\n                console.log(`age exceeds ${t.name} @ ${age}`, t.fabric.age)\n            })\n        default:\n            throw new Error(`No job named ${name}`)\n    }\n}\n\nexport function postGrowthJob(postGrowthOp: PostGrowthOp): IJob {\n    const age = AGE_POST_GROWTH\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (postGrowthOp) {\n        case PostGrowthOp.Faces:\n            return job(tensegrity => {\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Snelson:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Snelson)\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Bowtie:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n            })\n        case PostGrowthOp.BowtieFaces:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n                tensegrity.triangleFaces()\n            })\n        default:\n            return job(() => {\n            })\n    }\n}\n\nexport function isAdjacent(targetInterval: IInterval): (interval: IInterval) => boolean {\n    return (interval: IInterval) => areAdjacent(targetInterval, interval)\n}\n","import { Vector3 } from \"three\"\n\nimport { avg, IntervalRole, isPushRole, midpoint, pointsToNormal, sub } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { areAdjacent, FaceName, factorFromPercent, IFace, IInterval, IJoint, IPercent, Spin } from \"./tensegrity-types\"\n\nexport class Twist {\n\n    public readonly faces: IFace[] = []\n    public readonly pushes: IInterval[] = []\n    public readonly pulls: IInterval[] = []\n\n    constructor(\n        public readonly tensegrity: Tensegrity,\n        public readonly spin: Spin,\n        public readonly scale: IPercent,\n        baseKnown?: Vector3[],\n    ) {\n        const base = !baseKnown ? createBase(new Vector3(), 3) :\n            baseKnown.length === 3 ? baseKnown : createBase(baseKnown[0], 3)\n        switch (this.spin) {\n            case Spin.Left:\n                this.createSingle(base, true)\n                break\n            case Spin.Right:\n                this.createSingle(base, false)\n                break\n            case Spin.LeftRight:\n                this.createDouble(base, true)\n                break\n            case Spin.RightLeft:\n                this.createDouble(base, false)\n                break\n            default:\n                throw new Error(\"Spin?\")\n        }\n    }\n\n    public face(faceName: FaceName): IFace {\n        switch (this.faces.length) {\n            case 2:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.A:\n                        return this.faces[1]\n                }\n                break\n            case 8:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.B:\n                        return this.faces[2]\n                    case FaceName.C:\n                        return this.faces[1]\n                    case FaceName.D:\n                        return this.faces[3]\n                    case FaceName.b:\n                        return this.faces[4]\n                    case FaceName.c:\n                        return this.faces[5]\n                    case FaceName.d:\n                        return this.faces[6]\n                    case FaceName.A:\n                        return this.faces[7]\n                }\n                break\n        }\n        throw new Error(`Face ${FaceName[faceName]} not found in twist with ${this.faces.length} faces`)\n    }\n\n    public get adjacentPulls(): IInterval[] {\n        return this.tensegrity.intervals\n            .filter(({intervalRole}) => !isPushRole(intervalRole))\n            .reduce((detailsSoFar, interval) => {\n                const adjacent = this.pushes.find(push => areAdjacent(push, interval))\n                if (adjacent) {\n                    detailsSoFar.push(interval)\n                }\n                return detailsSoFar\n            }, [] as IInterval[])\n    }\n\n    private createSingle(base: Vector3[], leftSpin: boolean): void {\n        const pairs = pointPairs(base, this.scale, leftSpin)\n        const ends = pairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const alphaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({alpha}) => alpha)))\n        const omegaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({omega}) => omega)))\n        this.tensegrity.instance.refreshFloatView()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushA, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const makeFace = (joints: IJoint[], midJoint: IJoint) => {\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, this.spin, this.scale, midJoint))\n        }\n        makeFace(ends.map(({alpha}) => alpha), alphaJoint)\n        makeFace(ends.map(({omega}) => omega).reverse(), omegaJoint)\n        ends.forEach(({alpha}, index) => {\n            const omega = ends[(ends.length + index + (leftSpin ? -1 : 1)) % ends.length].omega\n            this.pulls.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.PullB, this.scale))\n        })\n    }\n\n    private createDouble(base: Vector3[], leftSpin: boolean): void {\n        const botPairs = pointPairs(base, this.scale, leftSpin)\n        const topPairs = pointPairs(botPairs.map(({omega}) => omega), this.scale, !leftSpin)\n        const bot = botPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const top = topPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const ends = [...bot, ...top]\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushB, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const faceJoints = leftSpin ?\n            [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[1].omega, top[1].alpha], // B\n                [bot[0].alpha, bot[2].omega, top[2].alpha], // C\n                [bot[1].alpha, bot[0].omega, top[0].alpha], // D\n                [top[1].omega, top[0].alpha, bot[1].omega].reverse(), // b\n                [top[0].omega, top[2].alpha, bot[0].omega].reverse(), // d\n                [top[2].omega, top[1].alpha, bot[2].omega].reverse(), // c\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ] : [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[0].omega, top[2].alpha].reverse(), // D\n                [bot[0].alpha, bot[1].omega, top[0].alpha].reverse(), // B\n                [bot[1].alpha, bot[2].omega, top[1].alpha].reverse(), // C\n                [top[1].omega, top[2].alpha, bot[2].omega], // b\n                [top[2].omega, top[0].alpha, bot[0].omega], // c\n                [top[0].omega, top[1].alpha, bot[1].omega], // d\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ]\n        const jointLocation = (joint: IJoint) => this.tensegrity.instance.jointLocation(joint)\n        const midJoints = faceJoints.map(joints => this.tensegrity.createJoint(midpoint(joints.map(jointLocation))))\n        this.tensegrity.instance.refreshFloatView()\n        faceJoints.forEach((joints, index) => {\n            const midJoint = midJoints[index]\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            const spin = leftSpin === ([0, 4, 5, 6].some(n => n === index)) ? Spin.Left : Spin.Right\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, spin, this.scale, midJoint))\n        })\n    }\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction pointPairs(base: Vector3[], scale: IPercent, leftSpin: boolean): IPointPair[] {\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const midVector = () => new Vector3().copy(mid)\n    const factor = factorFromPercent(scale)\n    const up = pointsToNormal(base).multiplyScalar(-factor)\n    for (let index = 0; index < base.length; index++) {\n        const fromMid = (offset: number) => sub(base[(index + base.length + offset) % base.length], mid)\n        const between = (idx1: number, idx2: number) => avg(fromMid(idx1), fromMid(idx2))\n        const alpha = midVector().addScaledVector(between(0, 1), factor)\n        const omega = midVector().add(up).addScaledVector(leftSpin ? between(1, 2) : between(-1, 0), factor)\n        points.push({alpha, omega})\n    }\n    return points\n}\n\nfunction createBase(location: Vector3, pushesPerTwist: number): Vector3[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return base\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, isPushRole, roleDefaultLength, roleDefaultStiffness } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { bowtiePairs, IPair, snelsonPairs } from \"./tensegrity-logic\"\nimport {\n    averageScaleFactor,\n    expectPush,\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IIntervalDetails,\n    IJoint,\n    intervalKey,\n    intervalToPair,\n    IPercent,\n    IRadialPull,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport enum FaceAction {\n    Subtree,\n    Join,\n    ShapingDistance,\n    PretenstDistance,\n    None,\n}\n\nexport enum PostGrowthOp {\n    NoOp,\n    Faces,\n    Snelson,\n    Bowtie,\n    BowtieFaces,\n}\n\nexport enum PairSelection {\n    Bowtie,\n    Snelson,\n}\n\nexport type ToDo = (tensegrity: Tensegrity) => void\n\nexport const AGE_POST_GROWTH = -1\n\nexport interface IJob {\n    todo: ToDo,\n    age?: number\n}\n\nexport interface ITensegrityBuilder {\n    operateOn: (tensegrity: Tensegrity) => void\n    finished: () => boolean\n    work: () => void\n}\n\nexport class Tensegrity {\n    public name: string\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public loops: IInterval[][] = []\n    public faces: IFace[] = []\n    public twists: Twist[] = []\n\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n    public pretenstAge = -1\n    public scale = 1\n\n    private jobs: IJob[] = []\n\n    constructor(\n        public readonly instance: FabricInstance,\n        public readonly countdown: number,\n        private builder: ITensegrityBuilder,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.builder.operateOn(this)\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public removeJoint(joint: IJoint): void {\n        const index = joint.index\n        this.fabric.remove_joint(index)\n        this.joints = this.joints.filter(j => j.index !== index)\n        joint.index = -index // mark it\n        this.joints.forEach(j => j.index = j.index > index ? j.index - 1 : j.index)\n        this.instance.refreshFloatView()\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, intervalRole: IntervalRole, pullScale?: IPercent): IRadialPull {\n        const instance = this.instance\n        const alphaJoint = this.createJoint(instance.faceLocation(alpha))\n        const omegaJoint = this.createJoint(instance.faceLocation(omega))\n        instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, intervalRole, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + instance.jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + instance.jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.intervalRole) {\n            case IntervalRole.Connector:\n                this.connectors.push(radialPull)\n                break\n            case IntervalRole.ShapingDistancer:\n                this.distancers.push(radialPull)\n                break\n            case IntervalRole.PretenstDistancer:\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, patience?: number): IInterval {\n        const push = isPushRole(intervalRole)\n        const targetLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const stiffness = roleDefaultStiffness(intervalRole)\n        const currentLength = targetLength === 0 ? 0 : this.instance.jointDistance(alpha, omega)\n        const patienceFactor = patience === undefined ? 1 : patience\n        const countdown = this.countdown * Math.abs(targetLength - currentLength) * patienceFactor\n        const attack = countdown <= 0 ? 0 : 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, push, currentLength, targetLength, stiffness, attack)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        const index = interval.index\n        this.intervals = this.intervals.filter(existing => existing.index !== index)\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n    }\n\n    public createFace(twist: Twist, ends: IJoint[], pulls: IInterval[], spin: Spin, scale: IPercent, joint?: IJoint): IFace {\n        const f0 = ends[0]\n        const f1 = ends[2]\n        const f2 = ends[1]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {twist, index, spin, scale, ends, pushes, pulls, markNumbers: [], joint}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        face.index = -1\n    }\n\n    public faceToTriangle(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        for (let index = 0; index < face.ends.length; index++) {\n            const endA = face.ends[index]\n            const endB = face.ends[(index + 1) % face.ends.length]\n            face.pulls.push(this.createInterval(endA, endB, IntervalRole.PullB, face.scale))\n        }\n    }\n\n    public triangleFaces(): void {\n        this.faces.forEach(face => this.faceToTriangle(face))\n    }\n\n    public withPulls(work: (pairMap: Record<string, IPair>) => void): void {\n        const addPull = (end: IJoint, pull: IInterval) => {\n            if (end.pulls) {\n                end.pulls.push(pull)\n            } else {\n                end.pulls = [pull]\n            }\n        }\n        this.intervals\n            .filter(({intervalRole}) => !isPushRole(intervalRole))\n            .forEach(pull => {\n                addPull(pull.alpha, pull)\n                addPull(pull.omega, pull)\n            })\n        const pairMap: Record<string, IPair> = {}\n        this.intervals.forEach(interval => pairMap[intervalKey(interval)] = intervalToPair(interval))\n        work(pairMap)\n        this.joints.forEach(joint => joint.pulls = undefined)\n    }\n\n    public createPulls(pairSelection: PairSelection): void {\n        const selectPairs = () => {\n            switch (pairSelection) {\n                case PairSelection.Bowtie:\n                    return bowtiePairs(this)\n                case PairSelection.Snelson:\n                    return snelsonPairs(this)\n                default:\n                    throw new Error()\n            }\n        }\n        // selectPairs().forEach(pair=> console.log(pairKey(pair)))\n        selectPairs().forEach(({alpha, omega, intervalRole, scale}) => {\n            this.createInterval(alpha, omega, intervalRole, scale, 5)\n        })\n    }\n\n    public removeSlackPulls(): void {\n        const slack = this.intervals\n            .filter(({intervalRole}) => intervalRole === IntervalRole.PullAA)\n            .filter(pullC => this.instance.floatView.strains[pullC.index] === 0)\n        slack.forEach(interval => this.removeInterval(interval))\n    }\n\n    public createTwist(spin: Spin, scale: IPercent, baseKnown?: Vector3[]): Twist {\n        const twist = new Twist(this, spin, scale, baseKnown)\n        this.twists.push(twist)\n        return twist\n    }\n\n    public createTwistOn(baseFace: IFace, spin: Spin, scale: IPercent): Twist {\n        const jointLocation = (joint: IJoint) => this.instance.jointLocation(joint)\n        const twist = this.createTwist(spin, scale, baseFace.ends.map(jointLocation).reverse())\n        this.createLoop(baseFace, twist.face(FaceName.a))\n        return twist\n    }\n\n    public findTwist(push: IInterval): Twist {\n        const found = this.twists.find(({pushes}) => pushes.find(({index}) => index === push.index))\n        if (!found) {\n            throw new Error(\"Cannot find twist\")\n        }\n        return found\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public set toDo(job: IJob) {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const jobsBefore = this.jobs.length\n        if (jobsBefore) {\n            const ageNow = this.instance.fabric.age\n            this.jobs = this.jobs.filter(({todo, age}) => {\n                if (age !== undefined && (age < 0 || age > ageNow)) {\n                    return true // keep\n                }\n                todo(this)\n                return false\n            })\n            if (this.jobs.length < jobsBefore) {\n                return true\n            }\n        }\n        switch (this.stage) {\n            case Stage.Growing:\n                if (!this.builder.finished()) {\n                    this.builder.work()\n                    return false\n                } else if (this.connectors.length > 0) {\n                    this.connectors = this.checkConnectors()\n                    return false\n                }\n                this.stage = Stage.Shaping\n                this.jobs = this.jobs.filter(({todo, age}) => {\n                    if (age === AGE_POST_GROWTH) {\n                        todo(this)\n                        return false\n                    }\n                    return true\n                })\n                break\n            case Stage.Shaping:\n                break\n            case Stage.Slack:\n                break\n            case Stage.Pretensing:\n                this.stage = Stage.Pretenst\n                break\n            case Stage.Pretenst:\n                if (this.pretenstAge < 0) {\n                    this.pretenstAge = this.fabric.age\n                }\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const instance = this.instance\n        const floatView = instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return instance.jointLocation(interval.alpha).y >= 0 || instance.jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public createRadialPulls(faces: IFace[], action: FaceAction, actionScale?: IPercent): void {\n        const locationFromFace = (face: IFace) => this.instance.faceLocation(face)\n        const centerBrickFaceIntervals = () => {\n            const omniTwist = this.createTwist(Spin.LeftRight, percentFromFactor(averageScaleFactor(faces)), [this.instance.averageFaceLocation(faces)])\n            this.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.createRadialPull(closestFace, face, IntervalRole.Connector)\n            })\n        }\n        const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n        switch (action) {\n            case FaceAction.ShapingDistance:\n            case FaceAction.PretenstDistance:\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        const intervalRole = action === FaceAction.ShapingDistance ? IntervalRole.ShapingDistancer : IntervalRole.PretenstDistancer\n                        this.createRadialPull(faceA, faceB, intervalRole, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.createRadialPull(faces[0], faces[1], IntervalRole.Connector)\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n    }\n\n    public checkConnectors(): IRadialPull[] {\n        if (this.connectors.length === 0) {\n            return this.connectors\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(this.instance, alpha, omega)\n            this.createLoop(alpha, omega)\n        }\n        return this.connectors.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.Connector) {\n                const distance = this.instance.jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    this.removeInterval(axis)\n                    alphaRays.forEach(i => this.removeInterval(i))\n                    omegaRays.forEach(i => this.removeInterval(i))\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public getIntervalDetails(interval: IInterval): IIntervalDetails {\n        const instance = this.instance\n        const {floatView} = instance\n        const strain = floatView.strains[interval.index]\n        const length = instance.intervalLength(interval) * this.scale\n        const height = instance.intervalLocation(interval).y * this.scale\n        return {interval, strain, length, height}\n    }\n\n    private createLoop(faceA: IFace, faceB: IFace): void {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const loop: IInterval[] = []\n        for (let index = 0; index < reverseA.length; index++) {\n            const a0 = reverseA[index]\n            const a1 = reverseA[(index + 1) % reverseA.length]\n            const b = forwardB[index]\n            loop.push(this.createInterval(a0, b, IntervalRole.PullA, scale))\n            loop.push(this.createInterval(b, a1, IntervalRole.PullA, scale))\n        }\n        this.removeFace(faceB)\n        this.removeFace(faceA)\n        this.loops.push(loop)\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, pullScale?: IPercent): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const stiffness = 1\n        const scale = percentOrHundred()\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.Radial\n        const stiffness = 1\n        const scale = percentFromFactor(restLength)\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { FaceAction, ITensegrityBuilder, PostGrowthOp, Tensegrity } from \"./tensegrity\"\nimport { namedJob, postGrowthJob } from \"./tensegrity-logic\"\nimport {\n    FaceName,\n    faceNameFromChar,\n    FACE_NAMES,\n    factorFromPercent,\n    IFace,\n    IMarkNumber,\n    IPercent,\n    isFaceNameChar,\n    percentFromFactor,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChange,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport interface INamedJob {\n    todo: string\n    age: number\n}\n\nexport interface ITenscript {\n    name: string\n    spin: Spin\n    postGrowthOp: PostGrowthOp\n    surfaceCharacter: SurfaceCharacter\n    code: string[]\n    scale?: number\n    jobs?: INamedJob[]\n    markDefStrings?: Record<number, string>\n    featureValues?: Record<WorldFeature, number>\n}\n\nexport interface IMarkAction {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport function compileTenscript(tenscript: ITenscript, error: (message: string) => void): TenscriptNode | undefined {\n    try {\n        const code = tenscript.code.join()\n        const root = codeToNode(code)\n        if (!root) {\n            error(\"Nothing to compile\")\n            return undefined\n        }\n        root.root = true\n        return root\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nexport type RunTenscript = (tenscript: ITenscript, error: (message: string) => void) => boolean\n\nexport interface IBud {\n    tree: TenscriptNode\n    twist: Twist\n    markActions: Record<number, IMarkAction>\n    reorient: boolean\n}\n\nexport class TenscriptBuilder implements ITensegrityBuilder {\n    private tensegrity: Tensegrity\n    private markDefStrings: Record<number, string>\n    private buds: IBud[]\n\n    constructor(\n        private location: Vector3,\n        private tenscript: ITenscript,\n        private tree: TenscriptNode,\n    ) {\n    }\n\n    public operateOn(tensegrity: Tensegrity): void {\n        this.tensegrity = tensegrity\n        if (this.tenscript.scale) {\n            this.tensegrity.scale = this.tenscript.scale\n        }\n        tensegrity.name = this.tenscript.name\n        tensegrity.instance.world.set_surface_character(this.tenscript.surfaceCharacter)\n        this.markDefStrings = this.tenscript.markDefStrings ? this.tenscript.markDefStrings : {}\n        if (this.tenscript.jobs) {\n            this.tenscript.jobs.forEach(({todo, age}) => tensegrity.toDo = namedJob(todo, age))\n        }\n        this.tensegrity.toDo = postGrowthJob(this.tenscript.postGrowthOp)\n        this.buds = [createBud(tensegrity, this.location, this.tenscript, this.tree)]\n    }\n\n    public finished(): boolean {\n        return this.buds.length === 0\n    }\n\n    public work(): void {\n        this.buds = execute(this.buds)\n        if (this.finished()) { // last one executed\n            faceStrategies(this.tensegrity, this.tensegrity.faces, this.markDefStrings).forEach(strategy => strategy.execute())\n        }\n    }\n}\n\nfunction faceStrategies(tensegrity: Tensegrity, faces: IFace[], markStrings?: Record<number, string>): FaceStrategy[] {\n    const marks = markDefStringsToActions(markStrings)\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        face.markNumbers.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(tensegrity, collated[key], mark)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private tensegrity: Tensegrity, private faces: IFace[], private markAction: IMarkAction) {\n    }\n\n    public execute(): void {\n        switch (this.markAction.action) {\n            case FaceAction.Join:\n            case FaceAction.ShapingDistance:\n            case FaceAction.PretenstDistance:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n        }\n    }\n}\n\nexport function createBud(tensegrity: Tensegrity, location: Vector3, tenscript: ITenscript, tree: TenscriptNode): IBud {\n    const reorient = tree.forward === undefined\n    const {spin, markDefStrings} = tenscript\n    const twist = tensegrity.createTwist(spin, percentOrHundred(), [location])\n    return {tree, twist, markActions: markDefStringsToActions(markDefStrings), reorient}\n}\n\nexport function markDefStringsToActions(markStrings?: Record<number, string>): Record<number, IMarkAction> {\n    const markActions: Record<number, IMarkAction> = {}\n    if (markStrings) {\n        Object.keys(markStrings).forEach(key => {\n            const c: string = markStrings[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = codeToNode(c.substring(\"subtree\".length))\n                markActions[key] = <IMarkAction>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"join\")) {\n                markActions[key] = <IMarkAction>{action: FaceAction.Join}\n            } else if (c.startsWith(\"shaping-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.ShapingDistance, scale}\n            } else if (c.startsWith(\"pretenst-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.PretenstDistance, scale}\n            }\n        })\n    }\n    return markActions\n}\n\nfunction codeToNode(codeFragment: string): TenscriptNode | undefined {\n    const initialCode = argument(codeFragment, true)\n    const codeString = initialCode.content\n    let forward: string | undefined\n    let scale = percentOrHundred()\n    const subtrees = {} as Record<FaceName, TenscriptNode>\n    const faceMarks = {} as Record<FaceName, IMarkNumber[]>\n\n    function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n        const {content, skip} = argument(codeString.substring(index), false)\n        const codeTree = codeToNode(content)\n        return {codeTree, skip}\n    }\n\n    function addMark(faceName: FaceName, mark: number): void {\n        const found = faceMarks[faceName]\n        const markNumber: IMarkNumber = {_: mark}\n        if (found) {\n            found.push(markNumber)\n        } else {\n            faceMarks[faceName] = [markNumber]\n        }\n    }\n\n    for (let index = 0; index < codeString.length; index++) {\n        const char = codeString.charAt(index)\n        if (isFaceNameChar(char)) {\n            const direction = subtree(index + 1)\n            const codeTree = direction.codeTree\n            if (!codeTree) {\n                throw new Error(`No subtree: ${codeString.substring(index)}`)\n            }\n            subtrees[faceNameFromChar(char)] = codeTree\n            index += direction.skip\n        } else if (isDigit(char)) {\n            const forwardArg = argument(codeString, false)\n            const forwardCount = toNumber(forwardArg.content)\n            forward = \"X\".repeat(forwardCount)\n            index += forwardArg.skip\n        } else if (char === \"X\" || char === \"O\") {\n            const forwardArg = argument(codeString, false)\n            forward = forwardArg.content\n            index += forwardArg.skip\n        } else {\n            switch (char) {\n                case \"S\":\n                    const scaleArg = argument(codeString.substring(index + 1), true)\n                    scale = {_: toNumber(scaleArg.content)}\n                    index += scaleArg.skip\n                    break\n                case \"M\":\n                    const faceNameChar = codeString.charAt(index + 1)\n                    const markNumber = argument(codeString.substring(index + 2), true)\n                    addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                    index += markNumber.skip + 1\n                    break\n                case \",\":\n                case \" \":\n                case \"\\n\":\n                    break\n                default:\n                    throw new Error(`Unexpected character: ${char}`)\n            }\n        }\n    }\n    return new TenscriptNode(forward, scale, subtrees, faceMarks).nonEmpty\n}\n\nfunction markTwist(twistToMark: Twist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        twistToMark.face(thisFace).markNumbers.push(...marks)\n    })\n}\n\nfunction grow(\n    {twist, markActions}: IBud,\n    action: string,\n    afterTree: TenscriptNode,\n    faceName: FaceName,\n    toOmni: boolean,\n    scaleChange: IPercent,\n): IBud {\n    const baseFace = twist.face(faceName)\n    const getSpin = () => {\n        switch (action) {\n            case \"O\":\n                return spinChange(baseFace.spin, false, toOmni)\n            default:\n                return spinChange(baseFace.spin, true, toOmni)\n        }\n    }\n    const spin = getSpin()\n    const scale = percentFromFactor(factorFromPercent(baseFace.scale) * factorFromPercent(scaleChange))\n    const newTwist = twist.tensegrity.createTwistOn(baseFace, spin, scale)\n    if (afterTree.forward === \"\") {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, markActions, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, markActions, reorient, twist} = bud\n        if (tree.forward !== undefined && tree.forward.length > 0) {\n            const {afterNode, action} = tree.decremented\n            const omni = tree.needsOmniTwist && afterNode.forward !== undefined && afterNode.forward.length === 0\n            activeBuds.push(grow(bud, action, afterNode, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = twist.tensegrity.joints.map(joint => twist.tensegrity.instance.jointLocation(joint))\n                twist.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const {afterNode, action} = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === \"\"\n                activeBuds.push(grow(bud, action, afterNode, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const mark = markActions[twistMark._]\n                        if (mark && mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, \"\", markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, RecoilState } from \"recoil\"\nimport { recoilPersist } from \"recoil-persist\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    globalModeFromUrl,\n    IGlobalMode,\n    IntervalRole,\n    WORLD_FEATURES,\n} from \"../fabric/eig-util\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { Twist } from \"../fabric/twist\"\nimport { featureMapping, IFeatureMapping } from \"../view/feature-mapping\"\n\nexport const STORAGE_KEY = \"pretenst-2021-11-02\"\nconst DEFAULT_BOOTSTRAP = 0\n\nconst {persistAtom} = recoilPersist({\n    key: STORAGE_KEY,\n    storage: localStorage,\n})\n\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst effects_UNSTABLE = [persistAtom]\n\nexport const postGrowthAtom = atom({\n    key: \"postGrowth\",\n    default: PostGrowthOp.NoOp,\n    effects_UNSTABLE,\n})\n\nexport const bootstrapIndexAtom = atom({\n    key: \"bootstrapIndex\",\n    default: DEFAULT_BOOTSTRAP,\n    effects_UNSTABLE,\n})\n\nexport const tenscriptAtom = atom<ITenscript | undefined>({\n    key: \"tenscript\",\n    default: undefined,\n    effects_UNSTABLE,\n})\n\nexport const currentFeature = atom<WorldFeature>({\n    key: \"currentFeature\",\n    default: WorldFeature.VisualStrain,\n    effects_UNSTABLE,\n})\n\nfunction createWorldFeatureValues(): IWorldFeatureValue[] {\n    return WORLD_FEATURES.map(feature => {\n        const mapping = featureMapping(WorldFeature[feature])\n        const percentAtom = atom({\n            key: mapping.name,\n            default: 100,\n            effects_UNSTABLE,\n        })\n        return <IWorldFeatureValue>{mapping, percentAtom}\n    })\n}\n\nexport const rotatingAtom = atom({\n    key: \"rotating\",\n    default: false,\n})\n\nexport const globalModeAtom = atom<IGlobalMode>({\n    key: \"globalMode\",\n    default: globalModeFromUrl(),\n})\n\nexport enum ViewMode {\n    Time = \"Time\",\n    Select = \"Select\",\n    Look = \"Look\",\n}\n\nexport const viewModeAtom = atom<ViewMode>({\n    key: \"viewMode\",\n    default: ViewMode.Time,\n})\n\nexport const surfaceCharacterAtom = atom({\n    key: \"surfaceCharacter\",\n    default: SurfaceCharacter.Frozen,\n})\n\nexport const visibleRolesAtom = atom<IntervalRole[]>({\n    key: \"visibleRoles\",\n    default: ADJUSTABLE_INTERVAL_ROLES,\n})\n\nexport interface IWorldFeatureValue {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n}\n\nexport const FEATURE_VALUES = createWorldFeatureValues()\n\nexport const selectedTwistAtom = atom<Twist | undefined>({\n    key: \"selectedTwist\",\n    default: undefined,\n})\n\nexport const visibleDetailsAtom = atom<IIntervalDetails[]>({\n    key: \"visibleDetails\",\n    default: [],\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaCamera, FaHandPointUp, FaPlay } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomLeft(): JSX.Element {\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    function ViewModeButton({item, children}: {\n        item: ViewMode,\n        children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    }): JSX.Element {\n        return (\n            <Button\n                disabled={item === viewMode}\n                color={item === viewMode ? \"success\" : \"secondary\"}\n                onClick={() => setViewMode(item)}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <ButtonGroup>\n            <ViewModeButton item={ViewMode.Time}>\n                <FaPlay/><span> Time</span>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Select}>\n                <FaHandPointUp/><span> Select</span>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Look}>\n                <FaCamera/><span> Look</span>\n            </ViewModeButton>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { intervalRoleName, isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nexport function getFabricOutput({name, instance, joints, intervals}: Tensegrity, pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n    instance.refreshFloatView()\n    const idealLengths = instance.floatView.idealLengths\n    const strains = instance.floatView.strains\n    const stiffnesses = instance.floatView.stiffnesses\n    const linearDensities = instance.floatView.linearDensities\n    return {\n        name,\n        joints: joints.map(joint => {\n            const vector = instance.jointLocation(joint)\n            return <IOutputJoint>{\n                index: joint.index,\n                radius: jointRadius,\n                x: vector.x, y: vector.z, z: vector.y,\n                anchor: false, // TODO: can this be determined?\n            }\n        }),\n        intervals: intervals.map(interval => {\n            const isPush = isPushRole(interval.intervalRole)\n            const radius = isPush ? pushRadius : pullRadius\n            const currentLength = instance.intervalLength(interval)\n            const alphaIndex = interval.alpha.index\n            const omegaIndex = interval.omega.index\n            if (alphaIndex >= joints.length || omegaIndex >= joints.length) {\n                throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${joints.length}`)\n            }\n            return <IOutputInterval>{\n                index: interval.index,\n                joints: [alphaIndex, omegaIndex],\n                type: isPush ? \"Push\" : \"Pull\",\n                strain: strains[interval.index],\n                stiffness: stiffnesses[interval.index],\n                linearDensity: linearDensities[interval.index],\n                role: intervalRoleName(interval.intervalRole),\n                scale: interval.scale._,\n                idealLength: idealLengths[interval.index],\n                isPush,\n                length: currentLength,\n                radius,\n            }\n        }),\n    }\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\", \"ideal length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, csvNumber(interval.length), csvNumber(interval.idealLength),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCompressArrowsAlt,\n    FaDownload,\n    FaFile,\n    FaFileCsv,\n    FaParachuteBox,\n    FaSignOutAlt,\n    FaSyncAlt,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { GlobalMode, JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { getFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomRight({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup>\n                {viewMode !== ViewMode.Time ? (\n                    <>\n                        <Button\n                            onClick={() => saveCSVZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFileCsv/>\n                        </Button>\n                        <Button\n                            onClick={() => saveJSONZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFile/>\n                        </Button>\n                    </>\n                ) : stage > Stage.Slack ? (\n                    <>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/>\n                        </Button>\n                    </>\n                ) : undefined}\n                <Button onClick={() => tensegrity.fabric.centralize()}><FaCompressArrowsAlt/></Button>\n                <Button\n                    color={rotating ? \"warning\" : \"secondary\"}\n                    onClick={() => setRotating(!rotating)}\n                >\n                    <FaSyncAlt/>\n                </Button>\n                <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}>\n                    <FaSignOutAlt/>\n                </Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport {\n    Color,\n    CylinderGeometry,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshBasicMaterial,\n    MeshLambertMaterial,\n} from \"three\"\n\nimport { IntervalRole, isPushRole } from \"../fabric/eig-util\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { ViewMode } from \"../storage/recoil\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"#191f86\"\n        case IntervalRole.PushB:\n            return \"#5739a0\"\n        case IntervalRole.PullA:\n            return \"#a20d0d\"\n        case IntervalRole.PullB:\n            return \"#eeec05\"\n        case IntervalRole.PullAA:\n            return \"#da04b7\"\n        case IntervalRole.PullBB:\n            return \"#00ff06\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole, ghost?: boolean): Material {\n    const color = roleColor(intervalRole)\n    const opacity = ghost ? 0.4 : 1\n    const transparent = true\n    return new MeshLambertMaterial({color, opacity, transparent})\n}\n\nexport function cylinderRadius(interval: IInterval, viewMode: ViewMode): number {\n    switch (viewMode) {\n        case ViewMode.Select:\n            return isPushRole(interval.intervalRole) ? 0.05 : 0.02\n        case ViewMode.Look:\n            return isPushRole(interval.intervalRole) ? 0.03 : 0.01\n        default:\n            throw new Error(\"Bad view mode\")\n    }\n}\n\nexport const CYLINDER_GEOMETRY = new CylinderGeometry(1, 1, 1, 12, 1, false)\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { LINE_VERTEX_COLORS } from \"./materials\"\n\nexport function LiveView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    return (\n        <lineSegments\n            key=\"lines\"\n            geometry={tensegrity.instance.floatView.lineGeometry}\n            material={LINE_VERTEX_COLORS}\n        />\n    )\n}\n\n//            onUpdate={self => self.geometry.computeBoundingSphere()}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Euler, Vector3 } from \"three\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalRotation } from \"../fabric/tensegrity-types\"\nimport { ViewMode, visibleRolesAtom } from \"../storage/recoil\"\n\nimport { cylinderRadius, CYLINDER_GEOMETRY, roleMaterial } from \"./materials\"\n\nexport function LookView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const instance = tensegrity.instance\n    const [visibleRoles] = useRecoilState(visibleRolesAtom)\n    const intervals = visibleRoles.length === ADJUSTABLE_INTERVAL_ROLES.length ? tensegrity.intervals :\n        tensegrity.intervals.filter(interval => visibleRoles.some(role => role === interval.intervalRole))\n    return (\n        <group>\n            {intervals.map((interval: IInterval) => {\n                const {alpha, omega, intervalRole} = interval\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(alpha, omega)\n                const radius = cylinderRadius(interval, ViewMode.Look)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER_GEOMETRY}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(intervalRole)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { FaMousePointer } from \"react-icons/all\"\nimport { Table } from \"reactstrap\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\n\nconst DIGITS = 1\n\nexport function IntervalDetails({instance, details, singleDetails, onClick}: {\n    instance: FabricInstance,\n    details: IIntervalDetails,\n    singleDetails: boolean,\n    onClick: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    return (\n        <Html\n            className={`interval-details ${singleDetails ? \"single-details\" : \"\"}`}\n            position={instance.intervalLocation(details.interval)}\n        >\n            <div onMouseDown={(e) => onClick(details)}>\n\n                <div className=\"details-mouse\">\n                    <FaMousePointer/>\n                </div>\n                <Table className=\"details-table\">\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>{details.interval.alpha.index}-{details.interval.omega.index}</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td className=\"text-right\">Length:</td>\n                        <td className=\"text-center\">{details.length.toFixed(DIGITS)}mm</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-right\">Height:</td>\n                        <td className=\"text-center\">{(details.height).toFixed(DIGITS)}mm</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-right\">Strain:</td>\n                        <td className=\"text-center\">{(details.strain * 100).toFixed(DIGITS)}%</td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Euler, Vector3 } from \"three\"\n\nimport { isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { areAdjacent, IInterval, IIntervalDetails, intervalRotation } from \"../fabric/tensegrity-types\"\nimport { selectedTwistAtom, ViewMode, visibleDetailsAtom } from \"../storage/recoil\"\n\nimport { IntervalDetails } from \"./interval-details\"\nimport { cylinderRadius, CYLINDER_GEOMETRY, roleMaterial } from \"./materials\"\n\nexport function SelectView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details] = useRecoilState(visibleDetailsAtom)\n    const instance = tensegrity.instance\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = isPushRole(interval.intervalRole)\n                if (!isPush) {\n                    if (selected) {\n                        const adjacent = selected.pushes.find(push => areAdjacent(push, interval))\n                        if (!adjacent) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = cylinderRadius(interval, ViewMode.Select)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER_GEOMETRY}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(interval.intervalRole)}\n                        matrixWorldNeedsUpdate={true}\n                        onDoubleClick={event => {\n                            event.stopPropagation()\n                            if (!isPushRole(interval.intervalRole)) {\n                                return\n                            }\n                            if (!selected) {\n                                setSelected(tensegrity.findTwist(interval))\n                            } else {\n                                const again = selected.pushes.find(push => push.index === interval.index)\n                                if (again) {\n                                    setSelected(undefined)\n                                } else {\n                                    setSelected(tensegrity.findTwist(interval))\n                                }\n                            }\n                        }}\n                    />\n                )\n            })}\n            {details.map(d => (\n                <IntervalDetails key={`deets-${d.interval.index}`} instance={tensegrity.instance}\n                                 details={d} singleDetails={details.length === 1} onClick={clickDetails}\n                />\n            ))}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { BufferAttribute, BufferGeometry, Color, FrontSide, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst MATERIAL = new MeshPhongMaterial({\n    color: new Color(\"#070707\"),\n    specular: new Color(\"#110404\"),\n    side: FrontSide,\n})\nconst KINDA = 0.866\nconst SURFACE_SCALE = 20\nconst HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(),\n]\nconst TRIANGLES = [\n    6, 0, 1,\n    6, 1, 2,\n    6, 2, 3,\n    6, 3, 4,\n    6, 4, 5,\n    6, 5, 0,\n]\nconst TRIANGLE_POSITION = TRIANGLES.map(t => HEXAGON_POINTS[t])\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return <mesh name=\"Patches\" geometry={geometry} material={MATERIAL}/>\n}\n\nfunction patchesGeometry(): BufferGeometry {\n    const geometry = new BufferGeometry()\n    const positionF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    const normalF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    TRIANGLE_POSITION.forEach((position, index) => {\n        const faceOffset = index * 3\n        positionF32[faceOffset] = position.x\n        positionF32[faceOffset + 1] = position.y - 0.01\n        positionF32[faceOffset + 2] = position.z\n        const normal = new Vector3(0,300,0).add(position).normalize()\n        normalF32[faceOffset] = normal.x\n        normalF32[faceOffset + 1] = normal.y\n        normalF32[faceOffset + 2] = normal.z\n    })\n    geometry.setAttribute(\"position\", new BufferAttribute(positionF32, 3))\n    geometry.setAttribute(\"normal\", new BufferAttribute(normalF32, 3))\n    return geometry\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, Vector3 } from \"three\"\nimport { PerspectiveCamera as Cam } from \"three/src/cameras/PerspectiveCamera\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, selectedTwistAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { LiveView } from \"../view/live-view\"\nimport { LookView } from \"../view/look-view\"\nimport { SelectView } from \"../view/select-view\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nconst TOWARDS_TARGET = 0.1\nconst TOWARDS_POSITION = 0.1\n\nexport function ObjectView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [selected] = useRecoilState(selectedTwistAtom)\n    const [aim, setAim] = useState(new Vector3())\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [rotating] = useRecoilState(rotatingAtom)\n    const camera = useRef<Cam>()\n    useEffect(() => {\n        if (!camera.current) {\n            return\n        }\n        camera.current.position.set(0, 5, tensegrity.instance.view.radius() * 5)\n    }, [])\n    useFrame(() => {\n        if (!camera.current) {\n            return\n        }\n        if (viewMode === ViewMode.Time) {\n            tensegrity.iterate()\n        }\n        const midpoint = selected ? tensegrity.instance.twistLocation(selected) : tensegrity.instance.midpoint\n        const toMidpoint = new Vector3().subVectors(midpoint, aim).multiplyScalar(TOWARDS_TARGET)\n        if (viewMode === ViewMode.Time || toMidpoint.lengthSq() > 0.001) {\n            setAim(new Vector3().copy(aim).add(toMidpoint))\n        }\n        const eye = camera.current.position\n        if (stage === Stage.Growing) {\n            eye.y += (midpoint.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(midpoint) - tensegrity.instance.view.radius() * 2.5\n            const towardsDistance = new Vector3().subVectors(midpoint, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        } else {\n            if (eye.y < 0) {\n                eye.y -= eye.y * TOWARDS_POSITION * 20\n            }\n        }\n\n    })\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <LiveView tensegrity={tensegrity}/>\n            case ViewMode.Select:\n                return <SelectView tensegrity={tensegrity} clickDetails={clickDetails}/>\n            case ViewMode.Look:\n                return <LookView tensegrity={tensegrity}/>\n        }\n    }\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true}/>\n            <OrbitControls autoRotate={rotating} target={aim} zoomSpeed={0.5}/>\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Canvas } from \"@react-three/fiber\"\nimport { default_world_feature, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { isPushRole, stageName, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { postGrowthAtom, selectedTwistAtom, ViewMode, viewModeAtom, visibleDetailsAtom } from \"../storage/recoil\"\nimport { BottomLeft } from \"../view/bottom-left\"\nimport { BottomRight } from \"../view/bottom-right\"\nimport { featureMapping } from \"../view/feature-mapping\"\n\nimport { ObjectView } from \"./object-view\"\n\nexport function ConstructionView({tenscript, createInstance}: {\n    tenscript: ITenscript,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    const mainInstance = useMemo(() => createInstance(tenscript.featureValues), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details, setDetails] = useRecoilState(visibleDetailsAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const emergency = (message: string) => console.error(\"build view\", message)\n    const [stage, updateStage] = useState<Stage | undefined>()\n\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.stage$.subscribe(updateStage) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const createTensegrity: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Time)\n            setPostGrowth(ts.postGrowthOp)\n            const featureValues = ts.featureValues\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            const builder =  new TenscriptBuilder(new Vector3(), ts, tree)\n            setTensegrity(new Tensegrity(mainInstance, countdown, builder))\n        } catch (e) {\n            throw new Error(\"Problem running\")\n        }\n        return true\n    }\n    useEffect(() => {\n        createTensegrity(tenscript, emergency)\n    }, [])\n    useEffect(() => {\n        if (viewMode === ViewMode.Time) {\n            setSelected(undefined)\n        }\n    }, [viewMode])\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(selected.pushes.map(push => tensegrity.getIntervalDetails(push)))\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n\n    const Title = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <span>{stage !== undefined ? stageName(stage) : \"New\"} {tensegrity ? `\"${tensegrity.name}\"` : \"\"}</span>\n            case ViewMode.Select:\n                return <span>Double click to select a twist</span>\n            case ViewMode.Look:\n                return <span>{tensegrity ? `\"${tensegrity.name}\"` : \"\"}</span>\n        }\n    }\n\n    // const camera = useRef<Cam>()\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            {!tensegrity ? (\n                <div className=\"h-100\">\n                    <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                        <h1><FaPlay/></h1>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"h-100\">\n                    <Canvas\n                        style={{\n                            backgroundColor: \"black\",\n                            borderStyle: \"solid\",\n                            borderColor: viewMode !== ViewMode.Time ? \"#f0ad4e\" : \"black\",\n                            cursor: viewMode === ViewMode.Select ? \"pointer\" : \"default\",\n                            borderWidth: \"2px\",\n                        }}\n                    >\n                        <RecoilBridge>\n                            <ObjectView\n                                tensegrity={tensegrity}\n                                clickDetails={({interval}) => {\n                                    if (!selected || !tensegrity) {\n                                        return\n                                    }\n                                    if (details.length === 1) { // one pull, presumably\n                                        setDetails(selected.adjacentPulls.map(pull => tensegrity.getIntervalDetails(pull)))\n                                    } else {\n                                        if (isPushRole(interval.intervalRole)) {\n                                            setDetails(selected.adjacentPulls.map(pull => tensegrity.getIntervalDetails(pull)))\n                                        } else {\n                                            setDetails(details.filter(d => d.interval.index === interval.index))\n                                        }\n                                    }\n                                }}\n                            />\n                        </RecoilBridge>\n                    </Canvas>\n                    <div id=\"top-middle\">\n                        <Title/>\n                    </div>\n                    <div id=\"bottom-left\">\n                        <BottomLeft/>\n                    </div>\n                    <div id=\"bottom-right\">\n                        <BottomRight tensegrity={tensegrity}/>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Vector3 } from \"three\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 35\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#091009\")\nexport const FLORA_PATCH_COLOR = new Color(\"#100902\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./runner-logic\"\nimport { ITwitchConfig } from \"./twitcher\"\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        return 16\n    }\n\n    public withMutations(directionGeneNames: GeneName[], mutateTwitchConfig: boolean): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionGeneNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (mutateTwitchConfig) {\n            const twitchConfig = getGene(GeneName.TwitchConfig, genesCopy)\n            mutateGene(() => this.roll(), twitchConfig)\n            twitchConfig.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}: IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public chooseFrom(total: number): number {\n        return Math.floor(total * diceToNuance(this.nextDie(), this.nextDie()))\n    }\n\n    public readMuscleTwitch(loop: IMuscle[], config: ITwitchConfig): ITwitch {\n        const {attackPeriod, decayPeriod, twitchNuance} = config\n        const muscle = loop[this.nextDie().index]\n        return {\n            muscle, twitchNuance,\n            when: diceToInteger(36, this.nextDie(), this.nextDie()),\n            attack: (2 + diceToFloat(6, this.nextDie())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.nextDie())) * decayPeriod,\n        }\n    }\n\n    public readFeatureValue(low: number, high: number): number {\n        const nuance = diceToNuance(this.nextDie(), this.nextDie(), this.nextDie())\n        return low * nuance + high * (1 - nuance)\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    public nextDie(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n}\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\"},\n    {index: 1, numeral: \"2\", symbol: \"⚁\"},\n    {index: 2, numeral: \"3\", symbol: \"⚂\"},\n    {index: 3, numeral: \"4\", symbol: \"⚃\"},\n    {index: 4, numeral: \"5\", symbol: \"⚄\"},\n    {index: 5, numeral: \"6\", symbol: \"⚅\"},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(...dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(...dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(...dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n\nexport enum GeneName {\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n    TwitchConfig = \"TwitchConfig\",\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Flora } from \"./flora\"\nimport { emptyGenome, IGeneData } from \"./genome\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport class Patch {\n    public runner?: Runner\n    public flora?: Flora\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, selector } from \"recoil\"\n\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { Spin } from \"../fabric/tensegrity-types\"\n\nimport { Island } from \"./island\"\nimport { Patch } from \"./patch\"\n\nconst LEG = 5\nconst SCALE = 90\n\nexport const RUNNER_CODE: ITenscript = {\n    name: \"Runner\",\n    spin: Spin.LeftRight,\n    code: [\n        `(A1,B(${LEG},S${SCALE}),C(${LEG},S${SCALE}),D(${LEG},S${SCALE}))`,\n    ],\n    postGrowthOp: PostGrowthOp.Bowtie,\n    markDefStrings: {},\n    surfaceCharacter: SurfaceCharacter.Bouncy,\n    featureValues: {\n        [WorldFeature.IterationsPerFrame]: 300,\n        [WorldFeature.Drag]: 200,\n        [WorldFeature.StiffnessFactor]: 150,\n        [WorldFeature.Gravity]: 500,\n    },\n}\n\nexport const FLORA_CODE: ITenscript = {\n    name: \"Flora\",\n    postGrowthOp: PostGrowthOp.Bowtie,\n    code: [\"(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0))\"],\n    spin: Spin.Left,\n    markDefStrings: {\n        0: \"subtree(b(3, S85),c(3, S85),d(3, S85))\",\n    },\n    surfaceCharacter: SurfaceCharacter.Frozen,\n    featureValues: {},\n}\n\nexport const islandAtom = atom<Island>({\n    key: \"island\",\n    default: new Island(\"galapagos\", 383),\n})\n\nexport const homePatchSelector = selector<Patch>({\n    key: \"MySelector\",\n    get: ({get}) => get(islandAtom).patches[0], // todo: for now\n})\n\nexport const destinationAtom = atom<number>({\n    key: \"destination\",\n    default: 0,\n})\n\nexport const showDetailsAtom = atom<boolean>({\n    key: \"showDetails\",\n    default: false,\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval, IJoint } from \"../fabric/tensegrity-types\"\n\nimport { GeneName, Genome } from \"./genome\"\nimport { Patch } from \"./patch\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.ToA:\n            return GeneName.ToA\n        case Direction.ToB:\n            return GeneName.ToB\n        case Direction.ToC:\n            return GeneName.ToC\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IMuscle {\n    interval: IInterval\n    alphaInterval?: IInterval\n    omegaInterval?: IInterval\n}\n\nexport interface IRunnerState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    midpoint: Vector3,\n    genome: Genome\n    loopMuscles: IMuscle[][]\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function findTopFace(tensegrity: Tensegrity): IFace {\n    const sortedFaces = tensegrity.faces.sort((a, b) => {\n        const aa = a.joint\n        const bb = b.joint\n        if (!aa || !bb) {\n            throw new Error(\"faces without joints\")\n        }\n        const locA = tensegrity.instance.jointLocation(aa)\n        const locB = tensegrity.instance.jointLocation(bb)\n        return locA.y - locB.y\n    })\n    const top = sortedFaces.pop()\n    sortedFaces.forEach(face => tensegrity.faceToTriangle(face))\n    if (!top) {\n        throw new Error(\"no top face\")\n    }\n    return top\n}\n\nexport function calculateDirections(instance: FabricInstance, toA: Vector3, toB: Vector3, toC: Vector3, face?: IFace): void {\n    if (!face) {\n        return\n    }\n    const joint = face.joint\n    if (!joint) {\n        return undefined\n    }\n    const locations = instance.floatView.jointLocations\n    const fromTo = (fromJoint: IJoint, toJoint: IJoint, vector: Vector3) => {\n        const from = fromJoint.index * 3\n        const to = toJoint.index * 3\n        vector.set(locations[to] - locations[from], 0, locations[to + 2] - locations[from + 2])\n        vector.normalize()\n    }\n    fromTo(joint, face.ends[0], toA)\n    fromTo(joint, face.ends[1], toB)\n    fromTo(joint, face.ends[2], toC)\n}\n\nexport function extractLoopMuscles(tensegrity: Tensegrity): IMuscle[][]{\n    const loopMuscles: IMuscle[][] = []\n    tensegrity.withPulls(() => {\n        tensegrity.loops.forEach(loop => loopMuscles.push(loop.map(interval => {\n            const alphaPulls = interval.alpha.pulls\n            const omegaPulls = interval.omega.pulls\n            if (!alphaPulls || !omegaPulls) {\n                throw new Error(\"missing pulls\")\n            }\n            const onlyMuscles = ({intervalRole}: IInterval) =>\n                intervalRole === IntervalRole.PullAA ||\n                intervalRole === IntervalRole.PullBB\n            const alphaInterval = alphaPulls.find(onlyMuscles)\n            const omegaInterval = omegaPulls.find(onlyMuscles)\n            if (!alphaInterval && !omegaInterval) {\n                throw new Error(\"cannot find any intervals\")\n            }\n            return <IMuscle>{interval, alphaInterval, omegaInterval}\n        })))\n    })\n    return loopMuscles\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { RUNNER_CODE } from \"./evo-state\"\nimport { fromGeneData, Genome } from \"./genome\"\nimport { Runner } from \"./runner\"\nimport { directionGene } from \"./runner-logic\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [4, 5, 6, 7, 8, 9],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    SurvivorsAdvance = \"Survivors advance\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersOvertake = \"Challengers try to overtake\",\n    SurvivorsStored = \"Survivors stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    runner: Runner\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Population {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public midpoint: Vector3\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.SurvivorsAdvance\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n\n    constructor(\n        private ancestor: Runner,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (ancestor.embryo) {\n            throw new Error(\"Cannot create evolution from runner which is not pretenst\")\n        }\n        this.midpoint = ancestor.state.midpoint\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Runner[] = []\n        const storedGenes = ancestor.state.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoRunner(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((runner, index) => ({\n            runner,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Population | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Population(this.ancestor, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.SurvivorsAdvance:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({runner}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.runner.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Runner[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].runner.state.genome.geneData)\n                    challengers.push(this.createAutoRunner(genome.withMutations([directionGene(this.ancestor.direction)], false)))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{runner: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.runner.adoptFabric(this.ancestor.state.instance.fabricClone)\n                    const runner = challenger.runner.recycled(instance, parent.runner.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    runner.autopilot = true\n                    return {runner, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersOvertake:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({runner, name}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.SurvivorsStored\n                }\n                break\n            case EvolutionPhase.SurvivorsStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.ancestor.state.patch.storedGenes = winners.map(({runner}) => runner.state.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.SurvivorsAdvance\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        this.midpoint.set(0, 0, 0)\n        this.winners.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.challengers.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.midpoint.multiplyScalar(1.0 / (this.winners.length + this.challengers.length))\n        return this.phase\n    }\n\n    public get target(): Vector3 {\n        return this.ancestor.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoRunner(genome: Genome): Runner {\n        const instance = this.createInstance(RUNNER_CODE.featureValues, this.ancestor.state.instance.fabricClone)\n        const runner = this.ancestor.recycled(instance, genome.geneData)\n        runner.autopilot = true\n        return runner\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            const event = evolver.runner.distanceFromTarget\n            evolver.proximityHistory.push(event)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({runner, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = runner.state.genome.tosses\n    const reachedTarget = runner.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Runner } from \"./runner\"\n\nexport function RunnerView({runner}: { runner: Runner }): JSX.Element {\n    const {topFaceLocation, target, state, showDirection} = runner\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!showDirection || !topFaceLocation ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topFaceLocation.x, topFaceLocation.y, topFaceLocation.z,\n                                    target.x, topFaceLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#FFFFFF\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        quaternion={runner.directionQuaternion}\n                        position={topFaceLocation}\n                    >\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    0,0,0,\n                                    0,0,5,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#f80303\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Population } from \"./population\"\nimport { RunnerView } from \"./runner-view\"\n\nexport function PopulationView({population}: { population: Population }): JSX.Element {\n    const height = 6\n    const {midpoint, target} = population\n    return (\n        <group>\n            {population.winners.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index}`} runner={runner}/>\n            ))}\n            {!population.challengersVisible ? undefined : population.challengers.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index + population.winners.length}`} runner={runner}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#ffffff\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Sky } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { destinationAtom } from \"./evo-state\"\nimport { Happening } from \"./evo-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { FAUNA_PATCH_COLOR, FLORA_PATCH_COLOR, SIX, SUN_POSITION } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, Population } from \"./population\"\nimport { PopulationView } from \"./population-view\"\nimport { Runner } from \"./runner\"\nimport { Direction } from \"./runner-logic\"\nimport { RunnerView } from \"./runner-view\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.05\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 5\n\nexport function IslandView({island, happening, runner, population, evolutionPhase, countdownToEvo, stopEvo}: {\n    island: Island,\n    happening: Happening,\n    runner?: Runner,\n    population?: Population,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvo: (countdown: number) => void,\n    stopEvo: (nextEvolution?: Population) => void,\n}): JSX.Element {\n    const [rotating, setRotating] = useState(false)\n    const [destination, setDestination] = useRecoilState(destinationAtom)\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const [target, updateTarget] = useState(new Vector3(0, 1, 0))\n    const [position, updatePosition] = useState(new Vector3(0, 1, 10))\n\n    function adjustTarget(midpoint: Vector3): void {\n        updateTarget(new Vector3().subVectors(midpoint, target).multiplyScalar(TOWARDS_TARGET).add(target))\n    }\n\n    useFrame(() => {\n        const approachDistance = (distance: number) => {\n            const positionToTarget = new Vector3().subVectors(position, target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n            updatePosition(position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION)))\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Resting:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(8)\n                }\n                break\n            case Happening.Running:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Evolving:\n                if (population) {\n                    switch (population.iterate()) {\n                        case EvolutionPhase.EvolutionDone:\n                            console.log(\"Evolution DONE\")\n                            stopEvo()\n                            break\n                        case EvolutionPhase.EvolutionHarder:\n                            console.log(\"Evolution advance...\")\n                            stopEvo(population.withReducedCyclePattern)\n                            break\n                    }\n                    adjustTarget(population.midpoint)\n                    approachDistance(15)\n                    evolutionPhase(population.phase)\n                }\n                break\n        }\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvo(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n        setRotating(happening === Happening.Evolving)\n    }, [happening])\n\n    function clickPatch(patch: Patch): void {\n        if (patch.flora) {\n            patch.flora.removeRandomInterval()\n            console.log(\"remove\", patch.name)\n        } else if (runner && runner.direction === Direction.Rest) {\n            setDestination((destination + 1) % SIX)\n        }\n    }\n\n    return (\n        <group>\n            <OrbitControls target={target} autoRotate={rotating}\n                           enablePan={false} position={position}\n                           autoRotateSpeed={0.6}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n            />\n            <scene>\n                {(population && happening === Happening.Evolving) ? (\n                    <PopulationView population={population}/>\n                ) : (runner ? (\n                    <RunnerView runner={runner}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const array = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={() => clickPatch(patch)}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                side={DoubleSide}\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={array}\n                                    count={array.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                <Sky\n                    distance={1000000}\n                    rayleigh={3}\n                    inclination={0.505}\n                    mieCoefficient={0.001}\n                    mieDirectionalG={0.93}\n                    turbidity={7.5}\n                />\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\"/>\n            </scene>\n        </group>\n    )\n}\n\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IMuscle, IRunnerState } from \"./runner-logic\"\n\nexport type TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nexport interface ITwitchConfig {\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IRunnerState) {\n        const genome = this.state.genome\n        const readTwitchConfig = (): ITwitchConfig => {\n            const reader = genome.createReader(GeneName.TwitchConfig)\n            const musclePeriod = reader.readFeatureValue(800, 1200)\n            return <ITwitchConfig>{\n                twitchNuance: reader.readFeatureValue(0.1, 0.3),\n                musclePeriod,\n                attackPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n                decayPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n            }\n        }\n        this.config = readTwitchConfig()\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, this.state.loopMuscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: TwitchFunction): boolean {\n        const state = this.state\n        state.timeSlice++\n        if (state.timeSlice >= 36) {\n            state.timeSlice = 0\n            this.cycleCount++\n            return true\n        }\n        const twitchCycle = this.twitchCycles[state.direction]\n        if (twitchCycle) {\n            this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(reader: GeneReader, config: ITwitchConfig, loopMuscles: IMuscle[][], totalTwitches: number) {\n        const loops = [...loopMuscles]\n        while (totalTwitches-- > 0) {\n            const chosen = reader.chooseFrom(loops.length)\n            const twitch = reader.readMuscleTwitch(loops[chosen], config)\n            loops.splice(chosen, 1)\n            this.addTwitch(twitch.when, twitch)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.interval.index}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: TwitchFunction): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, IGeneData } from \"./genome\"\nimport {\n    calculateDirections,\n    Direction,\n    directionGene,\n    DIRECTIONS,\n    extractLoopMuscles,\n    findTopFace,\n    IMuscle,\n    IRunnerState,\n} from \"./runner-logic\"\nimport { Twitcher, TwitchFunction } from \"./twitcher\"\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\nconst MAX_HISTORY_LENGTH = 20\n\nexport class Runner {\n\n    public toA = new Vector3(1, 0, 0)\n    public toB = new Vector3(0, 0, 1)\n    public toC = new Vector3(0, 0, -1)\n\n    private shapingTime = 150\n    private twitcher?: Twitcher\n    private topFace?: IFace\n    private currentTwitchAge = 0\n\n    constructor(public readonly state: IRunnerState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n        this.currentTwitchAge = this.twitchAge\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Runner {\n        const genome = fromGeneData(geneData ? geneData : this.state.patch.storedGenes[0])\n        const midpoint = new Vector3().copy(this.state.midpoint)\n        const state: IRunnerState = {...this.state, instance, midpoint, genome, directionHistory: []}\n        const runner = new Runner(state)\n        runner.topFace = this.topFace\n        calculateDirections(runner.state.instance, runner.toA, runner.toB, runner.toC, this.topFace)\n        return runner\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        return this.state.genome.withMutations(geneNames, Math.random() > 0.9).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public get distanceFromTarget(): number {\n        return this.state.midpoint.distanceTo(this.target)\n    }\n\n    public iterate(): boolean {\n        const instance = this.state.instance\n        const view = instance.view\n        this.state.midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const embryo = this.embryo\n        if (embryo) {\n            const busy = embryo.iterate()\n            if (busy) {\n                return true\n            }\n            const stage = embryo.stage$.getValue()\n            switch (stage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        embryo.stage = Stage.Slack\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Slack:\n                    this.topFace = findTopFace(embryo)\n                    embryo.stage = Stage.Pretensing\n                    return false\n                case Stage.Pretensing:\n                    return false\n                case Stage.Pretenst:\n                    this.state.loopMuscles = extractLoopMuscles(embryo)\n                    this.state.instance.refreshFloatView()\n                    calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n                    this.checkDirection()\n                    this.twitcher = new Twitcher(this.state)\n                    this.embryo = undefined\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            this.state.instance.iterate()\n            if (this.twitcher) {\n                const newTwitchAge = this.twitchAge\n                if (newTwitchAge <= this.currentTwitchAge) {\n                    return true\n                }\n                this.currentTwitchAge = newTwitchAge\n                const twitch: TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => {\n                    const twitchInterval = (interval?: IInterval) => {\n                        if (interval) {\n                            this.state.instance.fabric.twitch_interval(interval.index, attack, decay, twitchNuance)\n                            // console.log(`twitch ${interval.index}: ${attack}, ${decay}, ${twitchNuance}`)\n                        }\n                    }\n                    twitchInterval(muscle.alphaInterval)\n                    twitchInterval(muscle.omegaInterval)\n                }\n                if (this.state.autopilot && this.twitcher.tick(twitch)) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.state.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get topFaceLocation(): Vector3 | undefined {\n        const face = this.topFace\n        if (!face) {\n            return undefined\n        }\n        const joint = face.joint\n        if (!joint) {\n            return undefined\n        }\n        return this.state.instance.jointLocation(joint)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            if (state.direction === Direction.Rest) {\n                console.error(\"direction is REST??\")\n                return\n            }\n            state.directionHistory.push(state.direction)\n            if (state.directionHistory.length > MAX_HISTORY_LENGTH) {\n                state.directionHistory.shift()\n            }\n        }\n    }\n\n    private get twitchAge(): number {\n        return this.state.instance.fabric.age / 600\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.ToA:\n                    return this.toA\n                case Direction.ToB:\n                    return this.toB\n                case Direction.ToC:\n                    return this.toC\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n        const matchA = toTarget.dot(this.toA)\n        const matchB = toTarget.dot(this.toB)\n        const matchC = toTarget.dot(this.toC)\n        if (matchA > matchB && matchA > matchC) {\n            return Direction.ToA\n        }\n        if (matchB > matchA && matchB > matchC) {\n            return Direction.ToB\n        }\n        if (matchC > matchA && matchC > matchB) {\n            return Direction.ToC\n        }\n        return Direction.Rest\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        toTarget.subVectors(this.target, this.state.midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\nimport { useSetRecoilState } from \"recoil\"\n\nimport { showDetailsAtom } from \"./evo-state\"\nimport { IEvolutionSnapshot, letter } from \"./population\"\n\nexport function StatsView({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"text-monospace d-inline-flex\" onClick={() => setShowStats(false)}>\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\" onClick={() => setShowStats(false)}>\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { PerspectiveCamera } from \"@react-three/drei\"\nimport { Canvas } from \"@react-three/fiber\"\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBaby, FaDna, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useRecoilValue } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode, stageName } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { destinationAtom, homePatchSelector, islandAtom, RUNNER_CODE, showDetailsAtom } from \"./evo-state\"\nimport { emptyGenome, fromGeneData } from \"./genome\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, EVO_PARAMETERS, IEvolutionSnapshot, Population } from \"./population\"\nimport { Runner } from \"./runner\"\nimport { Direction, IRunnerState } from \"./runner-logic\"\nimport { EvolutionInfo, StatsView } from \"./stats-view\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function EvoView({createBodyInstance}: { createBodyInstance: CreateInstance }): JSX.Element {\n    const [island] = useRecoilState(islandAtom)\n    const homePatch = useRecoilValue(homePatchSelector)\n    const destination = useRecoilValue(destinationAtom)\n    const [showStats, setShowStats] = useRecoilState(showDetailsAtom)\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [runner, setRunner] = useState(() => newRunner(homePatch))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [population, setPopulation] = useState<Population | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.SurvivorsAdvance)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    function newRunner(patch: Patch): Runner {\n        const targetPatch = patch.adjacent[0]\n        if (!targetPatch) {\n            throw new Error(\"No adjacent\")\n        }\n        const storedGenome = patch.storedGenes[0]\n        const genome = storedGenome ? fromGeneData(storedGenome) : emptyGenome()\n        const instance = createBodyInstance(RUNNER_CODE.featureValues)\n        instance.world.set_surface_character(SurfaceCharacter.Sticky)\n        const state: IRunnerState = {\n            patch,\n            targetPatch,\n            instance,\n            midpoint: new Vector3().copy(patch.center),\n            genome,\n            loopMuscles: [],\n            direction: Direction.ToA,\n            directionHistory: [],\n            autopilot: false,\n            timeSlice: 10,\n            twitchesPerCycle: 10,\n        }\n        const tree = compileTenscript(RUNNER_CODE, (err) => {\n            throw new Error(\"unable to compile runner: \" + err)\n        })\n        if (!tree) {\n            throw new Error(\"no tree\")\n        }\n        const builder = new TenscriptBuilder(patch.center, RUNNER_CODE, tree)\n        const embryo = new Tensegrity(instance, 1000, builder)\n        return new Runner(state, embryo)\n    }\n\n    // function newFlora(patch: Patch, instance: FabricInstance): Flora {\n    //     const tree = compileTenscript(FLORA_CODE, (err) => {\n    //         throw new Error(\"unable to compile sat tree: \" + err)\n    //     })\n    //     if (!tree) {\n    //         throw new Error(\"no tree\")\n    //     }\n    //     const tensegrity = new Tensegrity(patch.center, percentOrHundred(), instance, 1000, FLORA_CODE, tree)\n    //     return new Flora(patch.name, tensegrity)\n    // }\n\n    useEffect(() => {\n        if (runner) {\n            const adjacent = runner.state.patch.adjacent[destination]\n            if (adjacent) {\n                runner.state.targetPatch = adjacent\n            }\n        }\n    }, [destination])\n\n    useEffect(() => {\n        if (!runner || !runner.embryo) {\n            updateStage(undefined)\n            return\n        }\n        const sub = runner.embryo.stage$.subscribe((newStage: Stage) => {\n            if (newStage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(newStage)\n        })\n        return () => sub.unsubscribe()\n    }, [runner])\n\n    useEffect(() => {\n        if (!population) {\n            return\n        }\n        const sub = population.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [population])\n\n    const evolveWithPattern = (toEvolve: Runner, pattern: number[]) => {\n        if (population) {\n            setPopulation(population.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setPopulation(new Population(toEvolve, createBodyInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (runner && countdown === 0) {\n            evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Population) => {\n        // todo: free up current evolution?\n        setPopulation(nextEvolution)\n        if (!nextEvolution) {\n            setRunner(newRunner(homePatch))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <PerspectiveCamera makeDefault={true}/>\n                <RecoilBridge>\n                    <IslandView\n                        island={island}\n                        happening={happening}\n                        runner={runner}\n                        population={population}\n                        evolutionPhase={evolutionPhase => {\n                            if (evolutionPhase !== phase) {\n                                setPhase(evolutionPhase)\n                            }\n                        }}\n                        countdownToEvo={countdownToEvolution}\n                        stopEvo={stopEvolution}\n                    />\n                </RecoilBridge>\n            </Canvas>\n            {!runner ? <h1>no runner</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    runner={runner}\n                    happening={happening}\n                    evoCountdown={evolutionCountdown}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        runner.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setRunner(newRunner(homePatch))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        runner.direction = Direction.Rest\n                    }}\n                />\n            )}\n            {!population ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {showStats ? undefined : (\n                            <Button color=\"info\" onClick={() => setShowStats(true)}>\n                                Phase: {phase}<br/>\n                                {snapshots.length === 0 ? undefined :\n                                    <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                                }\n                            </Button>\n                        )}\n                    </div>\n                    {!showStats ? undefined : (\n                        <EvolutionStatsView happening={happening} snapshots={snapshots}/>\n                    )}\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({\n                            runner,\n                            happening,\n                            evoCountdown,\n                            toRunning,\n                            toRest,\n                            toEvolving,\n                            toRebirth,\n                        }: {\n    runner?: Runner,\n    happening: Happening,\n    evoCountdown: number,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evoCountdown >= 0 ? evoCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, snapshots}: {\n    happening: Happening,\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return (\n                <div id=\"evolution-stats\">\n                    {snapshots.length > 0 ? (\n                        <StatsView snapshots={snapshots}/>\n                    ) : (\n                        <h2 className=\"p-2\">First round, please wait</h2>\n                    )}\n                </div>\n            )\n    }\n}\n","import { SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { compileTenscript, ITenscript } from \"./tenscript\"\nimport { PostGrowthOp } from \"./tensegrity\"\nimport { Spin } from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS: ITenscript[] = [\n    {\n        name: \"Phi\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"()\"],\n    },\n    {\n        name: \"One\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(1)\"],\n        jobs: [\n            {\n                age: 30000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 300,\n        },\n    },\n    {\n        name: \"Axoneme\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        code: [\"(30,S95)\"],\n    },\n    {\n        name: \"Knee\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(3,b3)\"],\n    },\n    {\n        name: \"Jack\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b2,c2,d2)\"],\n    },\n    {\n        name: \"Star\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\"],\n    },\n    {\n        name: \"Tripod with Knees\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\"],\n    },\n    {\n        name: \"Zigzag\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(c(3,MA1),d(7,b(7,c(7,d(7,c(7,d(3,MA1)))))))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n    },\n    {\n        name: \"Diamond\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"   a(5,\",\n            \"      b(5,b(5,b(2,MA3)),c(5,c(2,MA4))),\",\n            \"      c(5,b(5,b(2,MA1)),c(5,c(2,MA5))),\",\n            \"      d(5,b(5,b(2,MA6)),c(5,c(2,MA2)))\",\n            \"   )\",\n            \"   b(5,b(5,b(2,MA5)),c(5,c(2,MA3))),\",\n            \"   c(5,b(5,b(2,MA2)),c(5,c(2,MA1))),\",\n            \"   d(5,b(5,b(2,MA4)),c(5,c(2,MA6)))\",\n            \")\",\n        ],\n        markDefStrings: {\n            1: \"join\",\n            2: \"join\",\n            3: \"join\",\n            4: \"join\",\n            5: \"join\",\n            6: \"join\",\n        },\n    },\n    {\n        name: \"Composed Tree\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(6,b(4,MA1),c(4,MA1),d(4,MA1))\"],\n        markDefStrings: {\n            1: \"subtree(b5,c5,d5)\",\n        },\n    },\n    {\n        name: \"Equus Lunae\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"  A(16,S95,Md0),\",\n            \"  b(16,S95,Md0),\",\n            \"  a(16,S95,Md0),\",\n            \"  B(16,S95,Md0)\",\n            \")\",\n        ],\n        markDefStrings: {\n            0: \"shaping-distance-60\",\n        },\n    },\n    {\n        name: \"Runner\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A1,B(5,S90),C(5,S90),D(5,S90))\"],\n    },\n    {\n        name: \"Infinity\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"A(11,S88,MA1),b(11,S88,MA1),\",\n            \"a(11,S88,MA2),B(11,S88,MA2)\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n        },\n    },\n    {\n        name: \"Propellor Tree\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"  a(5,S110),\",\n            \"  B(11,S90,MA3),\",\n            \"  b(11,S90,MA1),\",\n            \"  C(11,S90,MA2),\",\n            \"  c(11,S90,MA3),\",\n            \"  D(11,S90,MA1),\",\n            \"  d(11,S90,MA2),\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n            \"3\": \"join\",\n            \"4\": \"join\",\n        },\n    },\n    {\n        name: \"Halo by Crane\",\n        spin: Spin.Left,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(5,S92,b(12,S92,MA1),d(11,S92,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.Gravity]: 50,\n            [WorldFeature.IterationsPerFrame]: 1000,\n        },\n    },\n    {\n        name: \"Convergence\",\n        spin: Spin.LeftRight,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b(10,S90,MA1),c(10,S90,MA1),d(10,S90,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n        },\n    },\n    {\n        name: \"Headless Hug\",\n        spin: Spin.LeftRight,\n        scale: 105,\n        postGrowthOp: PostGrowthOp.BowtieFaces,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"A(OOOOXOO,S95,MA0),\",\n            \"b(OOOOXOO,S95,MA0),\",\n            \"a(3,C(XOOOXOO,S93,MA3),S90,MA2),\",\n            \"B(3,C(XOOOXOO,S93,MA3),S90,MA2)\",\n            \")\",\n        ],\n        markDefStrings: {\n            \"0\": \"shaping-distance-5\",\n            \"2\": \"shaping-distance-7\",\n            \"3\": \"shaping-distance-5\",\n        },\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n            [WorldFeature.PushOverPull]: 400,\n        },\n        jobs: [\n            {\n                age: 100000,\n                todo: \"pretensing\",\n            },\n            {\n                age: 110000,\n                todo: \"conflict\",\n            },\n            {\n                age: 120000,\n                todo: \"orient-0\",\n            },\n        ],\n    },\n    {\n        name: \"Triped\",\n        spin: Spin.LeftRight,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(B(9,S90,MA1),C(9,S90,MA1),D(9,S90,MA1))\"],\n        markDefStrings: {\n            1: \"shaping-distance-25\",\n        },\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n            [WorldFeature.PushOverPull]: 1000,\n        },\n        jobs: [\n            {\n                age: 80000,\n                todo: \"pretensing\",\n            },\n        ],\n    },\n    {\n        name: \"Arch\",\n        spin: Spin.Left,\n        scale: 1600,\n        postGrowthOp: PostGrowthOp.Faces,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A(3,MA0), a(4,MA0))\"],\n        markDefStrings: {\n            0: \"pretenst-distance-35\",\n        },\n        featureValues: {\n            [WorldFeature.PushOverPull]: 1000,\n            [WorldFeature.IterationsPerFrame]: 500,\n        },\n        jobs: [\n            {\n                age: 50000,\n                todo: \"orient-0\",\n            },\n        ],\n    },\n]\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(tenscript => {\n    compileTenscript(tenscript, (message: string) => {\n        throw new Error(`Bootstrap compile error in \"${tenscript}\"! ${message}`)\n    })\n    return tenscript\n})\n\nexport const CONSTRUCTIONS = BOOTSTRAP.filter(({scale}) => scale !== undefined)\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nexport interface IVertex {\n    index: number,\n    location: Vector3\n    adjacent: IVertex[]\n}\n\nexport class SphereScaffold {\n    public readonly vertices: IVertex[] = []\n\n    constructor(public readonly frequency: number, public readonly radius: number) {\n        VERTEX.forEach(location => this.vertexAt(location))\n        if (frequency === 1) {\n            EDGE.forEach(edge => {\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                adjacent(v0, v1)\n            })\n        } else if (frequency === 2) {\n            const midVertices = EDGE.map(edge => {\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const midEdge = this.vertexBetween(v0, v1)\n                adjacent(v0, midEdge)\n                adjacent(midEdge, v1)\n                return midEdge\n            })\n            FACE_EDGES.forEach(faceEdge => {\n                const side0 = midVertices[faceEdge[0]]\n                const side1 = midVertices[faceEdge[1]]\n                const side2 = midVertices[faceEdge[2]]\n                adjacent(side0, side1)\n                adjacent(side1, side2)\n                adjacent(side2, side0)\n            })\n        } else {\n            this.buildFaces(this.buildEdgeVertices())\n        }\n        this.vertices.forEach(sortVertex)\n    }\n\n    private buildEdgeVertices(): IVertex[][] {\n        const edgeVertices: IVertex[][] = []\n        EDGE.forEach(edgeVertexIndex => {\n            const verticesOfEdge: IVertex[] = []\n            edgeVertices.push(verticesOfEdge)\n            let vertex: IVertex | undefined\n            let previousVertex: IVertex | undefined\n            for (let walk = 0; walk < this.frequency - 1; walk++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edgeVertexIndex[0]]\n                const v1 = this.vertices[edgeVertexIndex[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walk + 1) / this.frequency)\n                vertex = this.vertexAt(spot)\n                verticesOfEdge.push(vertex)\n                if (previousVertex) {\n                    adjacent(vertex, previousVertex)\n                    if (walk === this.frequency - 2) {\n                        adjacent(vertex, v1)\n                    }\n                } else {\n                    adjacent(vertex, v0)\n                }\n            }\n        })\n        return edgeVertices\n    }\n\n    private buildFaces(edgeVertices: IVertex[][]): void {\n        const faceVertexArrays: IVertex[][] = []\n        FACE_VERTICES.forEach((faceVertexIndex, faceIndex) => {\n            const faceVertex = (which: number) => this.vertices[faceVertexIndex[which]]\n            const v0 = faceVertex(0)\n            const origin = v0.location\n            // interpolate along the edges of the face creating arrays of vertices on the way\n            for (let walkA = 1; walkA < this.frequency - 1; walkA++) {\n                const v1 = faceVertex(1)\n                const vectorA = new Vector3().lerpVectors(origin, v1.location, walkA / this.frequency)\n                vectorA.sub(origin)\n                faceVertexArrays[walkA - 1] = []\n                for (let walkB = 1; walkB < this.frequency - walkA; walkB++) {\n                    const v2 = faceVertex(2)\n                    const vectorB = new Vector3().lerpVectors(origin, v2.location, walkB / this.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    faceVertexArrays[walkA - 1].push(this.vertexAt(spot))\n                }\n            }\n            // define the adjacency among face vertices\n            for (let row = 0; row < faceVertexArrays.length; row++) {\n                for (let rowMember = 0; rowMember < faceVertexArrays[row].length; rowMember++) {\n                    if (rowMember < faceVertexArrays[row].length - 1) {\n                        adjacent(faceVertexArrays[row][rowMember], faceVertexArrays[row][rowMember + 1])\n                    }\n                    if (row > 0) {\n                        const vert = faceVertexArrays[row][rowMember]\n                        adjacent(vert, faceVertexArrays[row - 1][rowMember])\n                        adjacent(vert, faceVertexArrays[row - 1][rowMember + 1])\n                    }\n                }\n            }\n            // compile side vertices (of a triangle!) reversing traversal when necessary\n            const sideVertices: IVertex[] [] = [[], [], []]\n            for (let walk = 0; walk < this.frequency - 2; walk++) {\n                const antiWalk = faceVertexArrays.length - walk - 1\n                sideVertices[0].push(faceVertexArrays[walk][0])\n                sideVertices[1].push(faceVertexArrays[antiWalk][faceVertexArrays[antiWalk].length - 1])\n                sideVertices[2].push(faceVertexArrays[0][walk])\n            }\n            // define adjacency between face vertices and edge vertices\n            for (let walkSide = 0; walkSide < sideVertices.length; walkSide++) {\n                const faceEdges = FACE_EDGES[faceIndex]\n                const edge = edgeVertices[faceEdges[walkSide]]\n                for (let walk = 0; walk < faceVertexArrays.length; walk++) {\n                    const vsVertex = sideVertices[walkSide][walk]\n                    adjacent(vsVertex, edge[walk])\n                    adjacent(vsVertex, edge[walk + 1])\n                }\n            }\n        })\n        PENTAGON_VERTICES.forEach(vertexArray => {\n            // define the adjacency for this pentagon\n            for (let current = 0; current < vertexArray.length; current++) {\n                const next = (current + 1) % vertexArray.length\n                const edgeVertexA = vertexArray[current].front ? 0 : this.frequency - 2\n                const edgeVertexB = vertexArray[next].front ? 0 : this.frequency - 2\n                const vertexA = edgeVertices[vertexArray[current].edge][edgeVertexA]\n                const vertexB = edgeVertices[vertexArray[next].edge][edgeVertexB]\n                adjacent(vertexA, vertexB)\n            }\n        })\n    }\n\n    private vertexBetween(v0: IVertex, v1: IVertex): IVertex {\n        const location = new Vector3().copy(v0.location).lerp(v1.location, 0.5)\n        return this.vertexAt(location)\n    }\n\n    private vertexAt(location: Vector3): IVertex {\n        const length = location.length()\n        location.multiplyScalar(this.radius / length)\n        const index = this.vertices.length\n        const vertex = {index, location, adjacent: []}\n        this.vertices.push(vertex)\n        return vertex\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX: Vector3[] = [\n    new Vector3(+ONE, NUL, +PHI), new Vector3(+ONE, NUL, -PHI),\n    new Vector3(+PHI, +ONE, NUL), new Vector3(-PHI, +ONE, NUL),\n    new Vector3(NUL, +PHI, +ONE), new Vector3(NUL, -PHI, +ONE),\n    new Vector3(-ONE, NUL, -PHI), new Vector3(-ONE, NUL, +PHI),\n    new Vector3(-PHI, -ONE, NUL), new Vector3(+PHI, -ONE, NUL),\n    new Vector3(NUL, -PHI, -ONE), new Vector3(NUL, +PHI, -ONE),\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE_VERTICES = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGES = [\n    [0, 11, 1], [0, 12, 4], [1, 19, 3], [2, 21, 3], [2, 23, 4],\n    [7, 10, 6], [7, 12, 9], [8, 24, 5], [8, 25, 6], [9, 29, 5],\n    [11, 18, 10], [14, 18, 13], [14, 19, 16], [15, 25, 13], [15, 26, 17],\n    [16, 27, 17], [21, 27, 22], [22, 28, 20], [23, 29, 20], [26, 28, 24],\n]\n\ninterface IPentagonVertex {\n    edge: number\n    front: boolean\n}\n\nconst PENTAGON_VERTICES: IPentagonVertex[][] = [\n    [{edge: 0, front: true}, {edge: 1, front: true},\n        {edge: 3, front: true}, {edge: 2, front: true}, {edge: 4, front: true}],\n    [{edge: 7, front: true}, {edge: 6, front: true},\n        {edge: 8, front: true}, {edge: 5, front: true}, {edge: 9, front: true}],\n    [{edge: 10, front: true}, {edge: 11, front: true},\n        {edge: 0, front: false}, {edge: 12, front: true}, {edge: 7, front: false}],\n    [{edge: 14, front: true}, {edge: 13, front: true},\n        {edge: 15, front: true}, {edge: 17, front: true}, {edge: 16, front: true}],\n    [{edge: 18, front: true}, {edge: 11, front: false},\n        {edge: 1, front: false}, {edge: 19, front: true}, {edge: 14, front: false}],\n    [{edge: 21, front: true}, {edge: 22, front: true},\n        {edge: 20, front: true}, {edge: 23, front: true}, {edge: 2, front: false}],\n    [{edge: 26, front: true}, {edge: 24, front: true},\n        {edge: 8, front: false}, {edge: 25, front: true}, {edge: 15, front: false}],\n    [{edge: 27, front: true}, {edge: 16, front: false},\n        {edge: 19, front: false}, {edge: 3, front: false}, {edge: 21, front: false}],\n    [{edge: 28, front: true}, {edge: 22, front: false},\n        {edge: 27, front: false}, {edge: 17, front: false}, {edge: 26, front: false}],\n    [{edge: 4, front: false}, {edge: 23, front: false},\n        {edge: 29, front: true}, {edge: 9, front: false}, {edge: 12, front: false}],\n    [{edge: 28, front: false}, {edge: 20, front: false},\n        {edge: 29, front: false}, {edge: 5, front: false}, {edge: 24, front: false}],\n    [{edge: 6, front: false}, {edge: 10, front: false},\n        {edge: 18, front: false}, {edge: 13, front: false}, {edge: 25, front: false}],\n]\n\nfunction adjacent(v0: IVertex, v1: IVertex): void {\n    v0.adjacent.push(v1)\n    v1.adjacent.push(v0)\n}\n\n// sort the adjacent vertices of a vertex in a clockwise way\nfunction sortVertex(vertex: IVertex): void {\n    const outward = new Vector3().copy(vertex.location).normalize()\n    const first = vertex.adjacent.pop()\n    if (!first) {\n        throw new Error(\"No first to pop!\")\n    }\n    const sorted: IVertex[] = [first]\n    const vectorTo = ({location}: IVertex) => new Vector3().subVectors(location, vertex.location).normalize()\n    while (vertex.adjacent.length > 0) {\n        const top: IVertex = sorted[sorted.length - 1]\n        const next = vertex.adjacent.find(neigbor => {\n            const toAdjacent = vectorTo(neigbor)\n            const toTop = vectorTo(top)\n            if (toAdjacent.dot(toTop) < 0.25) {\n                return false\n            }\n            return new Vector3().crossVectors(toTop, toAdjacent).dot(outward) > 0\n        })\n        if (!next) {\n            throw new Error(\"No next found\")\n        }\n        sorted.push(next)\n        vertex.adjacent = vertex.adjacent.filter(adj => adj.index !== next.index)\n    }\n    vertex.adjacent = sorted\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { ITensegrityBuilder, Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IJoint, percentFromFactor } from \"../fabric/tensegrity-types\"\n\nimport { IVertex, SphereScaffold } from \"./sphere-scaffold\"\n\nconst TWIST_ANGLE = 0.52\n\ninterface IHub {\n    vertex: IVertex\n    spokes: ISpoke[]\n}\n\ninterface ISpoke {\n    centerHub: IHub\n    centerJoint: IJoint\n    outerHub: IHub\n    outerJoint: IJoint\n    push: IInterval\n}\n\nexport class SphereBuilder implements ITensegrityBuilder {\n    private readonly scaffold: SphereScaffold\n    private readonly hubs: IHub[]\n    private tensegrity: Tensegrity\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly frequency: number,\n        public readonly radius: number,\n        public readonly segmentSize: number,\n    ) {\n        this.scaffold = new SphereScaffold(frequency, radius)\n        this.hubs = this.scaffold.vertices.map(vertex => ({vertex, spokes: []} as IHub))\n    }\n\n    public operateOn(tensegrity: Tensegrity): void {\n        this.tensegrity = tensegrity\n    }\n\n    public finished(): boolean {\n        return this.tensegrity.joints.length > 0\n    }\n\n    public work(): void {\n        const allSpokes: Record<string, ISpoke> = {}\n        // create pushes and populate spokes\n        this.hubs.forEach(({vertex, spokes}) => {\n            const centerHub = this.hubs[vertex.index]\n            vertex.adjacent.forEach(adjacent => {\n                const outerHub = this.hubs[adjacent.index]\n                const existing = allSpokes[`${adjacent.index}-${vertex.index}`]\n                if (existing) {\n                    const {push} = existing\n                    const centerJoint = push.omega\n                    const outerJoint = push.alpha\n                    spokes.push({push, centerHub, centerJoint, outerHub, outerJoint})\n                } else {\n                    const push = this.createPush(vertex, adjacent)\n                    const centerJoint = push.alpha\n                    const outerJoint = push.omega\n                    const spoke: ISpoke = {push, centerHub, centerJoint, outerHub, outerJoint}\n                    allSpokes[`${vertex.index}-${adjacent.index}`] = spoke\n                    spokes.push(spoke)\n                }\n            })\n        })\n        this.instance.refreshFloatView()\n        const segmentLength = this.segmentSize * this.averageIntervalLength\n        const allPulls: Record<string, IInterval> = {}\n        this.hubs.forEach(hub => hub.spokes.forEach(spoke => this.pullsForSpoke(hub, spoke, segmentLength, allPulls)))\n        this.tensegrity.toDo = {\n            age: 20000,\n            todo: (t: Tensegrity) => {\n                t.stage = Stage.Slack\n                t.fabric.set_altitude(this.location.y)\n                t.stage = Stage.Pretensing\n            },\n        }\n    }\n\n    private createPush(alpha: IVertex, omega: IVertex): IInterval {\n        const midpoint = new Vector3().addVectors(alpha.location, omega.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, TWIST_ANGLE)\n        const alphaLocation = new Vector3().copy(alpha.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omega.location).applyQuaternion(quaternion)\n        const length0 = alpha.location.distanceTo(omega.location)\n        const scale = percentFromFactor(length0)\n        const alphaJoint = this.tensegrity.createJoint(alphaLocation)\n        const omegaJoint = this.tensegrity.createJoint(omegaLocation)\n        this.instance.refreshFloatView()\n        return this.tensegrity.createInterval(alphaJoint, omegaJoint, IntervalRole.PushC, scale)\n    }\n\n    private pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number, allPulls: Record<string, IInterval>): void {\n        const createPull = (alpha: IJoint, omega: IJoint, idealLength: number) => {\n            const pullName = omega.index > alpha.index ? `${alpha.index}-${omega.index}` : `${omega.index}-${alpha.index}`\n            if (allPulls[pullName]) {\n                return\n            }\n            allPulls[pullName] = this.tensegrity.createInterval(alpha, omega, IntervalRole.PullA, percentFromFactor(idealLength))\n        }\n        const next = nextSpoke(hub, spoke)\n        createPull(spoke.centerJoint, next.centerJoint, segmentLength)\n        const nearOppositeNext = nextSpoke(spoke.outerHub, spoke).centerJoint\n        const spokeLength = this.instance.intervalLength(spoke.push)\n        createPull(next.centerJoint, nearOppositeNext, spokeLength - segmentLength * 2)\n    }\n\n    private get averageIntervalLength(): number {\n        const length = (interval: IInterval) => this.instance.intervalLength(interval)\n        return this.intervals.reduce((sum, push) => sum + length(push), 0) / this.intervals.length\n    }\n\n    private get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    private get intervals(): IInterval[] {\n        return this.tensegrity.intervals\n    }\n}\n\nfunction nextSpoke(hub: IHub, spoke: ISpoke): ISpoke {\n    const index = hub.spokes.findIndex(({push}) => push.index === spoke.push.index)\n    if (index < 0) {\n        throw new Error(\"Cannot find current spoke when looking for next\")\n    }\n    return hub.spokes[(index + 1) % hub.spokes.length]\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Canvas, useFrame } from \"@react-three/fiber\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt, FaSnowflake } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { atom, useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Material, MeshLambertMaterial, Vector3 } from \"three\"\n\nimport { GlobalMode, isPushRole, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { intervalRotation } from \"../fabric/tensegrity-types\"\nimport { getFabricOutput, saveCSVZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nexport const SPHERE_RADIUS = 15\n\nconst PUSH_RADIUS = 0.004 * SPHERE_RADIUS\nconst PULL_RADIUS = 0.002 * SPHERE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst PUSH_MATERIAL = material(\"#011884\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nconst FREQUENCY_CHOICES = [1, 2, 3, 4, 5]\n\nexport const showPushAtom = atom({\n    key: \"show push\",\n    default: true,\n})\nexport const showPullAtom = atom({\n    key: \"show pull\",\n    default: true,\n})\nexport const frozenAtom = atom({\n    key: \"frozen\",\n    default: false,\n})\nexport const gravityAtom = atom({\n    key: \"gravity\",\n    default: 2,\n})\n\nexport function SphereView({frequencyParam, createSphere}: {\n    frequencyParam?: string,\n    createSphere: (frequency: number, gravity: number) => Tensegrity,\n}): JSX.Element {\n    const frequencyChoice = useMemo(() => {\n        const frequency = (frequencyParam === undefined) ? 1 : parseInt(frequencyParam, 10)\n        const index = FREQUENCY_CHOICES.findIndex(c => c === frequency)\n        return index >= 0 ? index : 0\n    }, [])\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n    const [showPush, setShowPush] = useRecoilState(showPushAtom)\n    const [showPull, setShowPull] = useRecoilState(showPullAtom)\n    const [gravity, setGravity] = useRecoilState(gravityAtom)\n    const [sphere, setSphere] = useState(() => createSphere(FREQUENCY_CHOICES[frequencyChoice], gravity))\n\n    useEffect(() => {\n        setFrozen(false)\n        setSphere(createSphere(FREQUENCY_CHOICES[frequencyChoice], gravity))\n    }, [gravity, frequencyChoice])\n\n    useEffect(() => {\n        if (!showPush && !showPull) {\n            setShowPush(true)\n            setShowPull(true)\n        }\n    }, [showPush, showPull])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveCSVZip(getFabricOutput(sphere, 1, 1, 1))}><FaDownload/></Button>\n                    <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"top-left\">\n                <ButtonGroup>\n                    {FREQUENCY_CHOICES.map((freq, index) => (\n                        <Button key={`Freq${freq}`} onClick={() => reloadGlobalMode(GlobalMode.Sphere, freq.toFixed(0))}\n                                color={index === frequencyChoice ? \"success\" : \"secondary\"}>\n                            {freq}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"top-right\">\n                <ButtonGroup>\n                    <Button color={gravity === 2 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(2)}>Heavy Gravity</Button>\n                    <Button color={gravity === 1 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(1)}>Light Gravity</Button>\n                    <Button color={gravity === 0 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(0)}>Space</Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-left\">\n                <ButtonGroup>\n                    <Button color={frozen ? \"success\" : \"secondary\"}\n                            onClick={() => setFrozen(!frozen)}><FaSnowflake/></Button>\n                    <Button color={showPush ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPush(!showPush)}>C</Button>\n                    <Button color={showPull ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPull(!showPull)}>T</Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <PerspectiveCamera makeDefault={true} position={[0, SPHERE_RADIUS, SPHERE_RADIUS * 3.6]}/>\n                <RecoilBridge>\n                    {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n                </RecoilBridge>\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere}: { sphere: Tensegrity }): JSX.Element {\n    const [target, setTarget] = useState(new Vector3())\n    const [frozen] = useRecoilState(frozenAtom)\n\n    useFrame(() => {\n        if (!frozen) {\n            sphere.iterate()\n            const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, target).multiplyScalar(0.1)\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    return (\n        <group>\n            <OrbitControls target={target}/>\n            <scene>\n                {frozen ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: { sphere: Tensegrity }): JSX.Element {\n    const [showPush] = useRecoilState(showPushAtom)\n    const [showPull] = useRecoilState(showPullAtom)\n    const instance = sphere.instance\n    return (\n        <group>\n            {!showPull ? undefined : sphere.intervals.filter(({intervalRole}) => !isPushRole(intervalRole)).map(interval => {\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n            {!showPush ? undefined : sphere.intervals.filter(({intervalRole}) => isPushRole(intervalRole)).map(interval => {\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PUSH_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaBalanceScale } from \"react-icons/all\"\nimport { RecoilState, useRecoilState } from \"recoil\"\n\nimport { floatString, percentString } from \"../fabric/eig-util\"\n\nimport { IFeatureMapping } from \"./feature-mapping\"\n\nconst MAX_SLIDER = 100000\nconst domain = [0, MAX_SLIDER]\n\nexport function FeatureSlider({mapping, percentAtom, apply}: {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n    apply: (wf: WorldFeature, percent: number, value: number) => void,\n}): JSX.Element {\n    const {name, nuanceToPercent, percentToNuance, percentToValue} = mapping\n    const sliderValue = (p: number) => [Math.floor(percentToNuance(p) * MAX_SLIDER)]\n    const [percent, setPercent] = useRecoilState(percentAtom)\n    const [values, setValues] = useState(sliderValue(percent))\n\n    useEffect(() => {\n        setPercent(Math.round(nuanceToPercent(values[0] / MAX_SLIDER)))\n    }, [values])\n    useEffect(() => apply(mapping.feature, percent, percentToValue(percent)), [percent])\n    useEffect(() => {\n        setValues(sliderValue(percent))\n    }, [mapping, percent])\n\n    return (\n        <div className=\"slider\">\n            <div className=\"float-right mr-4\">\n                <FaBalanceScale onClick={() => setValues(sliderValue(100))}/>\n            </div>\n            <div className=\"ml-2 small my-1\">\n                {name} = {percentString(percent)} ({floatString(percentToValue(percent))})\n            </div>\n            <Slider\n                mode={1} step={1} domain={domain} rootStyle={sliderStyle}\n                values={values}\n                onChange={(newValues: number[]) => setValues(newValues)}\n            >\n                <Rail>\n                    {({getRailProps}) => <div className=\"slider-rail\" {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle key={handle.id} handle={handle} getHandleProps={getHandleProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track key={id} source={source} target={target} getTrackProps={getTrackProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({handle, getHandleProps}: {\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            className=\"slider-handle\"\n            style={{left: `${percent}%`}}\n            aria-valuemin={min} aria-valuemax={max} aria-valuenow={value}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n}): JSX.Element {\n    return (\n        <div className=\"slider-track\"\n             style={{left: `${source.percent}%`, width: `${target.percent - source.percent}%`}}\n             {...getTrackProps()}\n        />\n    )\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"1%\",\n    position: \"relative\",\n    width: \"98%\",\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { currentFeature, FEATURE_VALUES } from \"../storage/recoil\"\n\nimport { FeatureSlider } from \"./feature-slider\"\n\nexport function BottomMiddle({tensegrity}: {\n    tensegrity: Tensegrity,\n}): JSX.Element {\n    const [open, setOpen] = useState(false)\n    const [worldFeature, setWorldFeature] = useRecoilState(currentFeature)\n    const [featureValue, setFeatureValue] = useState(FEATURE_VALUES[worldFeature])\n    return (\n        <div className=\"w-100 d-flex\">\n            <ButtonDropdown isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle>Choose</DropdownToggle>\n                <DropdownMenu>{\n                    FEATURE_VALUES\n                        .filter(value => !value.mapping.name.startsWith(\"-\"))\n                        .map((value) => (\n                            <DropdownItem key={`fitem-${value.mapping.feature}`} onClick={() => {\n                                setWorldFeature(value.mapping.feature)\n                                setFeatureValue(value)\n                            }}>\n                                {value.mapping.name}\n                            </DropdownItem>\n                        ))\n                }</DropdownMenu>\n            </ButtonDropdown>\n            <FeatureSlider\n                mapping={featureValue.mapping}\n                percentAtom={featureValue.percentAtom}\n                apply={(feature, percent, value) => {\n                    tensegrity.instance.applyFeature(feature, percent, value)\n                }}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, PerspectiveCamera as Cam, Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, selectedTwistAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { LiveView } from \"./live-view\"\nimport { LookView } from \"./look-view\"\nimport { SelectView } from \"./select-view\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [rotating] = useRecoilState(rotatingAtom)\n    const [selected] = useRecoilState(selectedTwistAtom)\n\n    const [aim, updateAim] = useState(new Vector3(0, 1, 0))\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n\n    const camera = useRef<Cam>()\n\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        current.position.set(0, 5, tensegrity.instance.view.radius() * 5)\n    }, [])\n\n    useFrame(() => {\n        if (!camera.current) {\n            return\n        }\n        if (viewMode === ViewMode.Time) {\n            tensegrity.iterate()\n        }\n        const midpoint = selected ? tensegrity.instance.twistLocation(selected) : tensegrity.instance.midpoint\n        updateAim(new Vector3().subVectors(midpoint, aim).multiplyScalar(TOWARDS_TARGET).add(aim))\n        const eye = camera.current.position\n        if (stage === Stage.Growing) {\n            eye.y += (midpoint.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(midpoint) - tensegrity.instance.view.radius() * 2.5\n            const towardsDistance = new Vector3().subVectors(midpoint, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        } else {\n            if (eye.y < 0) {\n                eye.y -= eye.y * TOWARDS_POSITION * 20\n            }\n        }\n    })\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <LiveView tensegrity={tensegrity}/>\n            case ViewMode.Select:\n                return <SelectView tensegrity={tensegrity} clickDetails={clickDetails}/>\n            case ViewMode.Look:\n                return <LookView tensegrity={tensegrity}/>\n        }\n    }\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true}/>\n            <OrbitControls target={aim} autoRotate={rotating} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           zoomSpeed={0.5}\n            />\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonGroup, Input } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { compileTenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { postGrowthAtom, tenscriptAtom } from \"../storage/recoil\"\n\nexport function ScriptPanel({runTenscript}: { runTenscript: RunTenscript }): JSX.Element {\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [json, setJson] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const toJson = () => JSON.stringify(tenscript, undefined, 2)\n\n    function parse(): void {\n        try {\n            const newTenscript = JSON.parse(json)\n            if (compileTenscript(newTenscript, setError)) {\n                setError(\"\")\n                newTenscript.postGrowthOp = postGrowth\n                setTenscript(newTenscript)\n                runTenscript(newTenscript, setError)\n            }\n        } catch (e) {\n            setError(e.toString())\n        }\n    }\n\n    useEffect(() => {\n        if (tenscript) {\n            setJson(toJson())\n        } else {\n            setJson(\"\")\n        }\n    }, [tenscript])\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <div>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{flexDirection: \"column\", height: \"available\"}}>\n                    <Input\n                        style={{borderRadius: \"1em\", height: \"22em\", marginBottom: \"0.5em\"}}\n                        type=\"textarea\" id=\"tenscript\"\n                        value={json}\n                        onChange={changeEvent => setJson(changeEvent.target.value)}\n                    />\n                    <ButtonGroup vertical={true} className=\"w-100 my-2\">\n                        {error.length === 0 ? undefined : (\n                            <Button className=\"my-2\" color=\"warning\" onClick={() => {\n                                setJson(toJson())\n                                setError(\"\")\n                            }}>\n                                <FaBug/><hr/>{error}\n                            </Button>\n                        )}\n                        <Button color=\"success\" onClick={() => parse()}>\n                            Try it out!\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button } from \"reactstrap\"\n\nimport { Tensegrity, ToDo } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport const STAGE_TRANSITIONS = Object.keys(StageTransition)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => StageTransition[k])\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    function doNow(todo: ToDo): void {\n        tensegrity.toDo = {todo}\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <FaCamera/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => doNow(t => t.stage = Stage.Pretensing)}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/><FaChartBar/>\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaEye, FaHiking } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { bootstrapIndexAtom, postGrowthAtom, tenscriptAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { ScriptPanel } from \"./script-panel\"\nimport { STAGE_TRANSITIONS, StageButton } from \"./stage-button\"\n\nexport function TopLeft({tensegrity, runTenscript}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const setBootstrapIndex = useSetRecoilState(bootstrapIndexAtom)\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth, setPostGrowth] = useRecoilState(postGrowthAtom)\n\n    const [showScriptPanel, setShowScriptPanel] = useState(false)\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    const run = (pgo: PostGrowthOp) => {\n        if (!tenscript) {\n            return\n        }\n        setPostGrowth(pgo)\n        if (tenscript.postGrowthOp === pgo) {\n            runTenscript(tenscript, error => console.error(error))\n        } else {\n            const opChanged: ITenscript = {...tenscript, postGrowthOp: pgo}\n            setTenscript(opChanged)\n            runTenscript(opChanged, error => console.error(error))\n        }\n    }\n\n    const opColor = (pgo: PostGrowthOp) => postGrowth === pgo ? \"success\" : \"secondary\"\n\n    return (\n        <>\n            <ButtonGroup>{STAGE_TRANSITIONS\n                .map(stageTransition => (\n                    <StageButton\n                        key={`strans-${stageTransition}`}\n                        tensegrity={tensegrity}\n                        stageTransition={stageTransition}\n                        disabled={viewMode === ViewMode.Look}/>\n                ))\n            }</ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => run(PostGrowthOp.NoOp)} color={opColor(PostGrowthOp.NoOp)}>0</Button>\n                <Button onClick={() => run(PostGrowthOp.Faces)} color={opColor(PostGrowthOp.Faces)}>&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Snelson)} color={opColor(PostGrowthOp.Snelson)}>S&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Bowtie)} color={opColor(PostGrowthOp.Bowtie)}>&#8904;</Button>\n                <Button onClick={() => run(PostGrowthOp.BowtieFaces)} color={opColor(PostGrowthOp.BowtieFaces)}>&#8904; <strong>&#9653;</strong></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <ButtonDropdown\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle><FaHiking/></DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => {\n                            setBootstrapIndex(index)\n                            runTenscript(bootstrapProgram, () => console.error(\"impossible\"))\n                        }}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n                <Button\n                    color={showScriptPanel ? \"warning\" : \"secondary\"}\n                    onClick={() => setShowScriptPanel(!showScriptPanel)}>\n                    <FaEye/>\n                </Button>\n            </ButtonGroup>\n            {!showScriptPanel ? undefined : <ScriptPanel runTenscript={runTenscript}/>}\n        </>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport { stageName } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport function TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaCircle, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { Twist } from \"../fabric/twist\"\nimport { ViewMode, viewModeAtom, visibleRolesAtom } from \"../storage/recoil\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function TopRight({tensegrity, selected}: {\n    tensegrity: Tensegrity,\n    selected: Twist | undefined,\n}): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [visibleRoles, updateVisibleRoles] = useRecoilState(visibleRolesAtom)\n    const [currentRole, updateCurrentRole] = useState(IntervalRole.PullA)\n\n    const adjustSelection = (up: boolean) => () => {\n        const factor = 1.03\n        if (selected) {\n            const parts = selected.pulls.concat(selected.adjacentPulls)\n            parts.forEach(interval => tensegrity.changeIntervalScale(interval, up ? factor : (1 / factor)))\n        }\n    }\n\n    switch (viewMode) {\n        case ViewMode.Time:\n            return (\n                <>\n                    <ButtonGroup>{\n                        ADJUSTABLE_INTERVAL_ROLES\n                            .map((intervalRole, index) => (\n                                <Button key={`IntervalRole[${index}]`}\n                                        onClick={() => updateCurrentRole(intervalRole)}\n                                        color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                                >\n                                    {intervalRoleName(intervalRole)}\n                                </Button>\n                            ))\n                    }</ButtonGroup>\n                    <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n                </>\n            )\n        case ViewMode.Select:\n            return (\n                <ButtonGroup>\n                    <Button onClick={adjustSelection(true)}>\n                        <FaPlusSquare/>\n                    </Button>\n                    <Button onClick={adjustSelection(false)}>\n                        <FaMinusSquare/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case ViewMode.Look:\n            return (\n                <ButtonGroup>\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button key={`viz${intervalRole}`} onClick={() => {\n                            if (visibleRoles.indexOf(intervalRole) < 0) {\n                                updateVisibleRoles([...visibleRoles, intervalRole])\n                            } else {\n                                const nextRoles = visibleRoles.filter(role => role !== intervalRole)\n                                updateVisibleRoles(nextRoles.length > 0 ? nextRoles : ADJUSTABLE_INTERVAL_ROLES)\n                            }\n                        }}\n                                color={visibleRoles.some(role => role === intervalRole) ? \"success\" : \"secondary\"}\n                        >\n                            {intervalRoleName(intervalRole)}\n                            <FaCircle style={{color: roleColorString(intervalRole)}}/>\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            )\n        default:\n            return <span>?</span>\n    }\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup className=\"my-1\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <Button>{intervalRoleName(intervalRole)} = [{floatString(defaultLength())}]</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Canvas } from \"@react-three/fiber\"\nimport { default_world_feature, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { isPushRole, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    postGrowthAtom,\n    selectedTwistAtom,\n    STORAGE_KEY,\n    tenscriptAtom,\n    ViewMode,\n    viewModeAtom,\n    visibleDetailsAtom,\n} from \"../storage/recoil\"\n\nimport { BottomLeft } from \"./bottom-left\"\nimport { BottomMiddle } from \"./bottom-middle\"\nimport { BottomRight } from \"./bottom-right\"\nimport { FabricView } from \"./fabric-view\"\nimport { featureMapping } from \"./feature-mapping\"\nimport { TopLeft } from \"./top-left\"\nimport { TopMiddle } from \"./top-middle\"\nimport { TopRight } from \"./top-right\"\n\nexport function DesignView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance({}), [])\n    const worldFeatures = FEATURE_VALUES.map(({percentAtom}) => useRecoilState(percentAtom))\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [bootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details, setDetails] = useRecoilState(visibleDetailsAtom)\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(selected.pushes.map(push => tensegrity.getIntervalDetails(push)))\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    const runTenscript: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Time)\n            setSelected(undefined)\n            const featureValues = ts.featureValues\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTenscript(ts)\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    worldFeatures[feature][1](percent)\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            setPostGrowth(ts.postGrowthOp)\n            const builder = new TenscriptBuilder(new Vector3(), ts, tree)\n            setTensegrity(new Tensegrity(mainInstance, countdown, builder))\n        } catch (e) {\n            console.log(\"Problem running\", e)\n            return runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n        return true\n    }\n\n    useEffect(() => {\n        Object.keys(localStorage).filter(k => k !== STORAGE_KEY).forEach(k => localStorage.removeItem(k))\n        if (tenscript) {\n            runTenscript(tenscript, emergency)\n        } else {\n            runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n    }, [])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div>\n            <div style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <h1><FaPlay/></h1>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <Canvas\n                            style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: viewMode !== ViewMode.Time ? \"#f0ad4e\" : \"black\",\n                                cursor: viewMode === ViewMode.Select ? \"pointer\" : \"default\",\n                                borderWidth: \"2px\",\n                            }}\n                        >\n                            <RecoilBridge>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    clickDetails={({interval}) => {\n                                        if (!selected || !tensegrity) {\n                                            return\n                                        }\n                                        if (details.length === 1) { // one pull, presumably\n                                            setDetails(selected.adjacentPulls.map(pull => tensegrity.getIntervalDetails(pull)))\n                                        } else {\n                                            if (isPushRole(interval.intervalRole)) {\n                                                setDetails(selected.adjacentPulls.map(pull => tensegrity.getIntervalDetails(pull)))\n                                            } else {\n                                                setDetails(details.filter(d => d.interval.index === interval.index))\n                                            }\n                                        }\n                                    }}\n                                />\n                            </RecoilBridge>\n                        </Canvas>\n                        <div id=\"top-left\">\n                            <TopLeft tensegrity={tensegrity} runTenscript={runTenscript}/>\n                        </div>\n                        <div id=\"top-right\">\n                            <TopRight tensegrity={tensegrity} selected={selected}/>\n                        </div>\n                        <div id=\"bottom-left\">\n                            <BottomLeft/>\n                        </div>\n                        <div id=\"bottom-middle\" style={{width: \"60%\"}}>\n                            <BottomMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"top-middle\">\n                            <TopMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"bottom-right\">\n                            <BottomRight tensegrity={tensegrity}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { ConstructionView } from \"../construction/construction-view\"\nimport { EvoView } from \"../evo/evo-view\"\nimport { BOOTSTRAP, CONSTRUCTIONS } from \"../fabric/bootstrap\"\nimport { GlobalMode, globalModeFromUrl, nameToUrl, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { SphereBuilder } from \"../sphere/sphere-builder\"\nimport { SPHERE_RADIUS, SphereView } from \"../sphere/sphere-view\"\nimport { globalModeAtom } from \"../storage/recoil\"\n\nimport { DesignView } from \"./design-view\"\n\nexport function MainView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const [globalMode] = useRecoilState(globalModeAtom)\n    useEffect(() => {\n        const {mode, param} = globalModeFromUrl()\n        if (mode !== globalMode.mode) {\n            reloadGlobalMode(mode, param)\n        }\n    }, [])\n\n    function visit(url: string): void {\n        window.open(url, \"_blank\")\n    }\n\n    switch (globalMode.mode) {\n        case GlobalMode.Design:\n            return <DesignView createInstance={createInstance}/>\n        case GlobalMode.Construction:\n            const tenscript = CONSTRUCTIONS.find(({name}) => nameToUrl(name) === globalMode.param)\n            if (tenscript) {\n                return <ConstructionView tenscript={tenscript} createInstance={createInstance}/>\n            } else {\n                reloadGlobalMode(GlobalMode.Choice)\n                return <div/>\n            }\n        case GlobalMode.Evolution:\n            return (\n                <EvoView createBodyInstance={createInstance}/>\n            )\n        case GlobalMode.Sphere:\n            return (\n                <SphereView\n                    frequencyParam={globalMode.param}\n                    createSphere={(frequency: number, gravity: number) => {\n                        const g = () => {\n                            switch (gravity) {\n                                case 0:\n                                    return 0\n                                case 1:\n                                    return 25\n                                default:\n                                    return 1500\n                            }\n                        }\n                        const instance = createInstance({\n                            [WorldFeature.IterationsPerFrame]: 200,\n                            [WorldFeature.Gravity]: g(),\n                            [WorldFeature.ShapingStiffnessFactor]: 300,\n                            [WorldFeature.ShapingDrag]: 300,\n                            [WorldFeature.Drag]: 0,\n                            [WorldFeature.VisualStrain]: 0,\n                            [WorldFeature.StiffnessFactor]: 800,\n                        })\n                        const builder = new SphereBuilder(new Vector3(0, 60, 0), frequency, SPHERE_RADIUS, 0.3333)\n                        return new Tensegrity(instance, 100, builder)\n                    }}\n                />\n            )\n        default:\n            return (\n                <div id=\"choice-menu\">\n                    <h1>Pretenst App</h1>\n                    <div className=\"d-inline-flex\">\n                        <div className=\"choice-menu-box\">\n                            <h4>Projects</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                {BOOTSTRAP.map(({scale, name}) => {\n                                    if (scale === undefined) {\n                                        return undefined\n                                    }\n                                    return (\n                                        <Button size=\"lg\" color=\"info\" key={name}\n                                                onClick={() => reloadGlobalMode(GlobalMode.Construction, nameToUrl(name))}\n                                        >\n                                            \"{name}\"\n                                        </Button>\n                                    )\n                                })}\n                            </ButtonGroup>\n                        </div>\n                        <div className=\"choice-menu-box\">\n                            <h4>Modes</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Sphere)}>\n                                    Sphere\n                                </Button>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Design)}>\n                                    Design\n                                </Button>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Evolution)}>\n                                    Evolution\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div className=\"choice-menu-box\">\n                            <h4>Background</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                <Button size=\"lg\" color=\"info\" onClick={() => visit(\"https://pretenst.com/\")}>\n                                    Construction Stories\n                                </Button>\n                                <Button size=\"lg\" color=\"info\"\n                                        onClick={() => visit(\"https://github.com/elastic-interval/pretenst\")}>\n                                    Virtual Design Software\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { RecoilRoot } from \"recoil\"\n\nimport { FabricInstance } from \"./fabric/fabric-instance\"\nimport registerServiceWorker from \"./service-worker\"\nimport { MainView } from \"./view/main-view\"\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    world: typeof import(\"eig\").World,\n): Promise<void> {\n    render(\n        <RecoilRoot>\n            <MainView createInstance={(\n                featureValues: Record<WorldFeature, number>,\n                fabric?: object,\n            ) => new FabricInstance(\n                    eig,\n                    featureValues,\n                    2000, // TODO\n                    world,\n                    fabric,\n                )}/>\n        </RecoilRoot>,\n    )\n    registerServiceWorker()\n}\n"],"sourceRoot":""}