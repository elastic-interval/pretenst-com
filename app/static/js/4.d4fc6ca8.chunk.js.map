{"version":3,"sources":["fabric/eig-util.ts","fabric/tensegrity-types.ts","bridge/bridge-logic.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/fabric-instance.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/tenscript.ts","fabric/tensegrity-builder.ts","fabric/tensegrity-optimizer.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/island-geometry.ts","gotchi/island.ts","gotchi/patch.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","view/orbit.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/frozen-tab.tsx","view/stage-button.tsx","view/feature-panel.tsx","view/live-tab.tsx","view/phase-tab.tsx","view/shape-tab.tsx","view/script-tab.tsx","view/control-tabs.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["IntervalRole","FORWARD","Vector3","RIGHT","UP","PHI","roleDefaultLength","intervalRole","Push","Pull","PhiPush","RootPush","PhiTriangle","Twist","InterTwist","Ring","Math","sqrt","Cross","CROSS1","BowMid","BowEnd","DistancerPull","Error","FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","long","Version","Spin","FaceName","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","max","toFixed","sub","a","b","subVectors","normalize","avg","addVectors","midpoint","points","mid","forEach","point","add","multiplyScalar","length","vectorFromArray","array","index","vector","offset","set","oppositeSpin","spin","Left","Right","FACE_NAMES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","jointLocation","instance","jointDistance","distanceTo","intervalLocation","alpha","omega","intervalLength","acrossPush","joint","push","otherJoint","interval","locationFromFace","face","ends","percentOrHundred","percent","_","factorFromPercent","percentFromFactor","factor","faceFromTwist","twist","faceName","faces","emptySelection","intervals","joints","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","PretensingCountdown","VisualStrain","PretenstFactor","PushOverPull","ribbon","tensegrity","ribbonShort","ribbonLong","x","left","z","ribbonJoint","createJoint","scale","createInterval","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","identities","arch","group","shift","distance","jointIndex","name","hook","sortXY","aa","bb","lengthSq","sort","extractHooks","hanger","rj","floor","hookJoint","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","y","join","extractJointFile","csvIntervals","j","type","strain","stiffness","linearDensity","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","reverse","c","Color","setHex","SURFACE","MeshPhongMaterial","color","side","FrontSide","opacity","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECT_MATERIAL","JOINT_MATERIAL","MeshLambertMaterial","roleColorString","ConnectorPull","RadialPull","roleMaterial","roleColor","SUBDUED_MATERIAL","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","addScaledVector","Face3","addSurfaceGeometry","v","patchesGeometry","material","BridgeView","useState","stage$","getValue","updateStage","getFabricOutput","useEffect","subscribe","unsubscribe","id","style","position","right","height","ButtonGroup","vertical","Button","onClick","backgroundColor","Camera","BridgeScene","perspective","useThree","camera","viewContainer","document","getElementById","orbit","useUpdate","orb","minPolarAngle","maxPolarAngle","PI","minDistance","maxDistance","SPACE_RADIUS","zoomSpeed","enableZoom","target","update","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","control","current","copy","console","log","autoRotate","rotateSpeed","Pretenst","ref","args","key","floatView","lineGeometry","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","unit","unitVector","rotation","Quaternion","setFromUnitVectors","isPush","intervalRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","matrixWorldNeedsUpdate","end","props","useRef","setDefaultCamera","fov","updateMatrixWorld","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","empty","Float32Array","intervalCount","faceCount","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","forward","featuresToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","set_float_value","worldFeature","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","crossVectors","get_stage","requested","request_stage","error","ControlTab","transition","state$","partial","state","next","nonce","saveState","storedState","localStorage","setItem","loadState","toConfig","item","getItem","parse","DEFAULT_FEATURE_VALUES","reduce","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Script","demoCount","fullScreen","polygons","rotating","visibleRoles","pushBottom","pushTop","pullBottom","pullTop","initialStoredState","featureConfig","percents","Antigravity","ShapingDrag","ShapingPretenstFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","value","createFloatFeatures","features","MarkAction","treeNeedsOmniTwist","d","B","C","D","Mb","Mc","Md","MB","MC","MD","MAIN_CODE","treeToCode","tree","s","treeToTenscript","pushesPerTwist","mainTree","marks","fromUrl","optionalPushes","mainCode","spinChar","markSections","mark","action","Subtree","BaseFace","JoinFaces","FaceDistance","Anchor","format","subtreesCode","code","isDirection","char","faceMark","isDigit","toNumber","digits","match","parseCode","parts","split","foundName","find","part","endsWith","main","parsed","exec","parseMain","test","markCode","eq","Number","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","matches","parseFloat","submerged","e","message","noParseErrors","BOOTSTRAP","script","grow","afterTree","omni","twistToMark","treeWithMarks","builder","baseFace","newTwist","createTwistOn","thisFace","reorient","execute","before","activeBuds","bud","decremented","A","apply","middle","sum","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationX","rotate","makeRotationY","getInverse","multiply","reorientMatrix","childTree","brickMark","markTree","deleteFaceMark","TensegrityBuilder","createTwistAt","twistScale","baseFactor","bottom","createTwist","faceTwistPoints","bottomTopFace","top","createOmniTwist","connect","connectRoles","trianglePoints","faceToOriginMatrix","centerBrickFaceIntervals","averageScaleFactor","where","accum","locationFromFaces","omniTwist","opposing","pulls","faceLocation","closestFace","createRadialPull","pullScale","distancers","faceA","indexA","faceB","indexB","radialPulls","removeInterval","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","rotatedWalk","bestRotation","minLength","rotateForBestRing","axis","alphaRays","omegaRays","firstTwistPoints","bottomTwist","topTwist","connectPulls","createFaceTouching","facePulls","pull","thirdForward","thirdReverse","createFace","topFace","topTouching","bottomFace","bottomTouching","pushes","roles","reverseA","forwardB","a0","a1","b0","b1","c0","d0","ring","down","up","faceScale","knownPulls","c1","cN1","removeFace","pushRole","alphaPulls","alphaFace","omegaPulls","omegaFace","omniA","omniB","base","angle","cos","sin","twistPoints","initialLength","tinyRadius","radials","norm","bc","cd","ba","TensegrityOptimizer","countdown","pairs","findPush","i","crosses","intervalA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","intervalB","bAlpha","bOmega","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","ax","findInterval","ay","bx","by","includeInterval","pushOverPull","numericFeature","getAverageStrain","toAverage","included","averagePushStrain","averagePullStrain","averageAbsoluteStrain","changes","adjustedStiffness","restoreSnapshot","copy_material","Tensegrity","tenscript","connectors","jobs","buds","createBud","newJoint","create_joint","alphaJoint","omegaJoint","creatAxis","alphaRestLength","omegaRestLength","createRay","radialPull","restLength","idealLength","abs","scaleToPhysical","create_interval","removed","multiply_rest_length","existing","eliminateInterval","f0","f1","f2","create_face","remove_face","job","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","checkConnectors","stiffnessesFromStrains","joint1","joint2","pushRadius","pullRadius","jointRadius","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","oppositeJoint","chords","pushToA","dot","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","anchor","currentLength","alphaIndex","omegaIndex","CONNECTOR_LENGTH","remove_interval","snapshot","GeneName","faceToOrigin","createRadialPulls","MODIFIER_NAMES","Forward","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","pow","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","m","checkDirection","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","center","quaternionForDirection","distanceFromTarget","loc","topJoint","toTarget","degreeForward","degreeRight","oppositeFace","findLimb","oppositeLimb","opposite","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","pop","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","PatchCharacter","ARROW_GEOMETRY","geom","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","p","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","evolutionPhase","countdownToEvolution","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","approachDistance","object","positionToTarget","deltaDistance","Developing","Resting","g","resting","Running","running","Evolving","withReducedCyclePattern","evolving","treeNumber","wasSeconds","time","isSeconds","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","transparent","DoubleSide","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestStage","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","toRunning","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","shapingTime","deadInterval","nextStage","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","SphereBuilder","sphere","VERTEX","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","hubs","spokes","segmentLength","hub","spoke","pullsForSpoke","set_altitude","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","sphereNumeric","STATE","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","enabled","enableRotate","enablePan","keyPanSpeed","autoRotateSpeed","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","BOTTOM","ORBIT","ZOOM","MIDDLE","PAN","zoom","inverse","event","preventDefault","button","clientX","clientY","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","setFromSpherical","lookAt","distanceToSquared","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","panLeft","panUp","dollyScale","updateProjectionMatrix","extend","FREQUENCIES","SphereView","createSphere","setPolygons","freq","f","setFrequency","setSphere","disabled","fabricOutput","SphereScene","toMidpoint","PolygonView","CYLINDER","CylinderGeometry","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","omegaLocation","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","otherSpokes","closest","distanceA","FrozenTab","worldFeatures","updatePolygons","updateVisibleRoles","subscription","newState","Grouping","size","StrainSlider","domain","values","setValues","setBottom","setTop","nuanceToStrain","nuance","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","FeaturePanel","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LiveTab","centralize","StageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","do","t","Symbol","CurrentLengthsToPretenst","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","PhaseTab","updateStoredState","disabledStage","subscriptions","active","SelectionMode","ScriptTab","rootTenscript","runTenscript","setTenscript","setError","bootstrapOpen","setBootstrapOpen","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","bootstrapProgram","DropdownItem","tenscriptCode","setTenscriptCode","onCodeChange","newCode","compiled","compile","borderColor","Input","changeEvent","ShapeTab","selection","selectionMode","setSelectionMode","clearSelection","currentRole","setCurrentRole","adjustValue","changeIntervalScale","isEmptySelection","Joints","Intervals","Faces","selectionCount","ModeButton","SelectNone","replaceCrosses","RoleLengthAdjuster","fine","adjustment","ControlTabs","shapeSelection","setShapeSelection","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Phase","Shape","Live","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","SPHERE","SphereGeometry","SELECTION_SCALE","AMBIENT_COLOR","SPACE_GEOMETRY","FabricView","setSelection","whyThis","updateWhyThis","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateInstance","updatedOrbit","ALTITUDE","far","near","toggleSelectedJoint","jointToToggle","newSelection","some","selected","toggleSelectedInterval","intervalToToggle","towardsTarget","eye","distanceChange","towardsDistance","clickFace","faceToToggle","toggleSelectedFace","toggleInterval","JointMesh","toggleJoint","r","strainNuance","intervalStrainNuance","isIntervalVisible","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","intersectObjects","intersection","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","codeToRun","setRootTenscript","updateRotating","updateFullScreen","updateDemoCount","newTenscript","setTimeout","set_surface_character","featureSubscriptions","applyFeature","timer","clearTimeout","visibility","TopMiddle","tenscriptError","toTenscript","root","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","bridgeInstance","at","sphereInstance","floatFeatures","registerServiceWorker"],"mappings":"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","file":"static/js/4.d4fc6ca8.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    Push,\n    Pull,\n    PhiPush,\n    RootPush,\n    PhiTriangle,\n    Twist,\n    InterTwist,\n    Ring,\n    Cross,\n    BowMid,\n    BowEnd,\n    RadialPull,\n    ConnectorPull,\n    DistancerPull,\n}\n\nconst ROOT2 = 1.414213562373095\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst CROSS1 = 0.5\nconst CROSS2 = (PHI / 3 - 1 / 6) * ROOT3\nconst CROSS3 = PHI / 3 * ROOT3 - 1 + ROOT2 / ROOT3\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return 1\n        case IntervalRole.Pull:\n            return 1\n        case IntervalRole.PhiPush:\n            return PHI\n        case IntervalRole.RootPush:\n            return ROOT2\n        case IntervalRole.PhiTriangle:\n        case IntervalRole.Twist:\n        case IntervalRole.InterTwist:\n            return 1\n        case IntervalRole.Ring:\n            return Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\n        case IntervalRole.Cross:\n            return Math.sqrt(CROSS1 * CROSS1 + CROSS2 * CROSS2 + CROSS3 * CROSS3)\n        case IntervalRole.BowMid:\n            return 0.4\n        case IntervalRole.BowEnd:\n            return 0.6\n        case IntervalRole.DistancerPull:\n            return 1\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole, long?: boolean): string {\n    switch (intervalRole) {\n        case IntervalRole.Push:\n            return long ? \"Push\" : \"P+\"\n        case IntervalRole.Pull:\n            return long ? \"Pull\" : \"P-\"\n        case IntervalRole.PhiPush:\n            return long ? \"Phi Push\" : \"PP\"\n        case IntervalRole.RootPush:\n            return long ? \"Root Push\" : \"RP\"\n        case IntervalRole.PhiTriangle:\n            return long ? \"Phi Triangle\" : \"PT\"\n        case IntervalRole.Ring:\n            return long ? \"Ring\" : \"RI\"\n        case IntervalRole.Twist:\n            return long ? \"Twist\" : \"TW\"\n        case IntervalRole.InterTwist:\n            return long ? \"Intertwist\" : \"IT\"\n        case IntervalRole.Cross:\n            return long ? \"Cross\" : \"CR\"\n        case IntervalRole.BowMid:\n            return long ? \"Bow-mid\" : \"BM\"\n        case IntervalRole.BowEnd:\n            return long ? \"Bow-end\" : \"BE\"\n        case IntervalRole.DistancerPull:\n            return long ? \"Distancer Pull\" : \"DP\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PhiPush:\n            case IntervalRole.RootPush:\n            case IntervalRole.PhiTriangle:\n            case IntervalRole.Twist:\n            case IntervalRole.InterTwist:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n            case IntervalRole.DistancerPull:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n        case IntervalRole.RootPush:\n        case IntervalRole.Push:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(next, current).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, isPushRole, JOINT_RADIUS, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {Left, Right}\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n    }\n}\n\nexport function spinChar(spin: Spin): string {\n    return spin === Spin.Left ? \"L\" : \"R\"\n}\n\nexport enum FaceName {NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP}\n\nexport const FACE_NAMES = [FaceName.NNN, FaceName.PNN, FaceName.NPN, FaceName.NNP, FaceName.NPP, FaceName.PNP, FaceName.PPN, FaceName.PPP]\n\nexport const FACE_DIRECTIONS = \"aBCDbcdA\"\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    instance: FabricInstance\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function intervalStrainNuance({alpha, index}: IInterval): number {\n    return alpha.instance.floatView.strainNuances[index]\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IFace {\n    index: number\n    omni: boolean\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    mark?: IFaceMark\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function normalFromFace(face: IFace): Vector3 {\n    const origin = locationFromFace(face)\n    const cross = new Vector3()\n    const norm = new Vector3()\n    const toEnds = face.ends.map(jointLocation).map(location => location.sub(origin))\n    for (let index = 0; index < toEnds.length; index++) {\n        cross.crossVectors(toEnds[index], toEnds[(index + 1) % toEnds.length]).normalize()\n        norm.add(cross)\n    }\n    return norm.normalize()\n}\n\nexport function locationFromJoints(joints: IJoint[]): Vector3 {\n    return joints\n        .reduce((accum, joint) => accum.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / joints.length)\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface ITwist {\n    faces: IFace[]\n    scale: IPercent\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n\nexport function locationFromTwist(twist: ITwist): Vector3 {\n    const gatherJoints = (array: IJoint[], push: IInterval) => {\n        array.push(push.alpha, push.omega)\n        return array\n    }\n    return twist.pushes\n        .reduce(gatherJoints, [])\n        .reduce((loc, joint) => loc.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / (twist.pushes.length * 2))\n}\n\nexport function faceFromTwist(twist: ITwist, faceName: FaceName): IFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.NNN:\n                    return twist.faces[0]\n                case FaceName.PPP:\n                    return twist.faces[1]\n            }\n            break\n        case 8: // aBCDbcdA\n            switch (faceName) {\n                case FaceName.NNN: // a\n                    return twist.faces[0]\n                case FaceName.PNN: // B\n                    return twist.faces[2]\n                case FaceName.NPN: // C\n                    return twist.faces[1]\n                case FaceName.NNP: // D\n                    return twist.faces[3]\n                case FaceName.NPP: // b\n                    return twist.faces[4]\n                case FaceName.PNP: // c\n                    return twist.faces[5]\n                case FaceName.PPN: // d\n                    return twist.faces[6]\n                case FaceName.PPP: // A\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function faceConnectorLengthFromScale(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => isPushRole(interval.intervalRole))\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(mid)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationX(Math.PI * -0.27)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\nexport interface ISelection {\n    faces: IFace[]\n    intervals: IInterval[]\n    joints: IJoint[]\n}\n\nexport function emptySelection(): ISelection {\n    return {faces:[], intervals:[], joints:[]}\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole, roleDefaultLength } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    FaceName,\n    IFace,\n    IInterval,\n    IJoint,\n    jointDistance,\n    jointLocation,\n    percentFromFactor,\n    percentOrHundred,\n} from \"../fabric/tensegrity-types\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\n// const RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst AnchorLength = 5\nconst AnchorScale = 110\n\n/*\n\nconst RIBBON_WIDTH = 6\nconst RIBBON_STEP_LENGTH = 6\n\n        case IntervalRole.RibbonPush:\n            return Math.sqrt(RIBBON_WIDTH * RIBBON_WIDTH + RIBBON_STEP_LENGTH * RIBBON_STEP_LENGTH)\n        case IntervalRole.RibbonShort:\n            return RIBBON_STEP_LENGTH / 2\n        case IntervalRole.RibbonLong:\n            return RIBBON_WIDTH\n        case IntervalRole.RibbonHanger:\n            return 1\n\n\n */\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = roleDefaultLength(IntervalRole.Cross)\n    const ribbonLong = roleDefaultLength(IntervalRole.Cross)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location).index\n        const ribbonJoint: IJoint = {index: jointIndex, instance: tensegrity.instance}\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.Pull)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.Pull)\n        interval(curr[2], curr[3], IntervalRole.Pull)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.Pull)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.Push)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.Push)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.Push)\n        interval(prev[1], curr[0], IntervalRole.Push)\n        interval(prev[2], curr[3], IntervalRole.Push)\n        interval(prev[3], curr[2], IntervalRole.Push)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.Pull\n        const length = jointDistance(alpha, omega)\n        const scale = percentFromFactor(length)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.ends[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    tensegrity.faces.forEach(face => {\n        // const gatherAncestors = (f: IFace, id: FaceName[]): Arch => {\n        // const definition = BRICK_FACE_DEF[f.faceName]\n        // id.push(definition.negative ? definition.opposite : definition.name)\n        // const parentFace = f.brick.parentFace\n        // if (parentFace) {\n        //     return gatherAncestors(parentFace, id)\n        // } else {\n        //     return archFromFaceName(f.faceName)\n        // }\n        // return Arch.FrontRight\n        // }\n        const identities: FaceName[] = []\n        const arch = Arch.FrontRight // TODO: This is wrong! Just so it will compile.\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isFaceExtremity(group)) {\n            return\n        }\n        const distance = identities.length\n        face.ends.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${FaceName[group]}]:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        // switch (hook.faceName) {\n        //     case FaceName.NPN:\n        //         return arch === Arch.BackRight\n        //     case FaceName.NNP:\n        //         return arch === Arch.FrontRight\n        //     case FaceName.PNP:\n        //         return arch === Arch.BackLeft\n        //     case FaceName.PPN:\n        //         return arch === Arch.FrontLeft\n        //     default:\n        //         return false\n        // }\n        return true // TODO: this is wrong!\n    }\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = jointLocation(a.face.ends[a.jointIndex])\n        const bb = jointLocation(b.face.ends[b.jointIndex])\n        return aa.lengthSq() - bb.lengthSq()\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\n// function archFromFaceName(faceName: FaceName): Arch {\n//     switch (faceName) {\n//         case FaceName.NNN:\n//             return Arch.BackLeft\n//         case FaceName.PNN:\n//             return Arch.BackRight\n//         case FaceName.NPP:\n//             return Arch.FrontLeft\n//         case FaceName.PPP:\n//             return Arch.FrontRight\n//         default:\n//             throw new Error(\"Strange arch\")\n//     }\n// }\n\nfunction isFaceExtremity(faceName: FaceName): boolean {\n    return false // TODO\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, FrontSide, LineBasicMaterial, Material, MeshLambertMaterial, MeshPhongMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nexport const SELECTION_COLOR = \"#ffbf00\"\nexport const JOINT_COLOR = \"#6c72e0\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#181818\"),\n    side: FrontSide,\n    opacity: 0.5,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n})\n\nexport const JOINT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(JOINT_COLOR),\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return \"#8955fa\"\n        case IntervalRole.RootPush:\n            return \"#2b38ff\"\n        case IntervalRole.PhiTriangle:\n            return \"#d0c61a\"\n        case IntervalRole.Twist:\n            return \"#ffffff\"\n        case IntervalRole.InterTwist:\n            return \"#d0c61a\"\n        case IntervalRole.Ring:\n            return \"#ff5c2b\"\n        case IntervalRole.Cross:\n            return \"#28c245\"\n        case IntervalRole.BowMid:\n            return \"#4393b3\"\n        case IntervalRole.BowEnd:\n            return \"#4393b3\"\n        case IntervalRole.DistancerPull:\n        case IntervalRole.ConnectorPull:\n        case IntervalRole.RadialPull:\n            return \"#f3f3e6\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n\nexport const SUBDUED_MATERIAL = new MeshLambertMaterial({color: \"#1d1d1d\"})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z).multiplyScalar(4)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, DomEvent, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport {\n    isPushRole,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n    SPACE_RADIUS,\n    SPACE_SCALE,\n    stageName,\n    switchToVersion,\n    Version,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalLength, intervalLocation, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function getFabricOutput(): IFabricOutput {\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput())}><FaDownload/>\n                        <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(getFabricOutput())}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} stage={stage}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, stage}: { tensegrity: Tensegrity, stage: Stage }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(0, 50, 0)\n        orb.update()\n    }, [])\n\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        control.target.copy(tensegrity.instance.midpoint)\n        control.update()\n        const nextStage = Stage.Slack // todo\n        // const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (stage === Stage.Growing) {\n                    // tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    control.autoRotate = true\n                    control.rotateSpeed = 5\n                    // tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                // tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (stage === Stage.Pretensing) {\n                    // tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        // tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => (\n                            <IntervalMesh key={`I${interval.index}`} tensegrity={tensegrity} interval={interval}/>\n                        ))}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = intervalLength(interval)\n    const isPush = isPushRole(interval.intervalRole)\n    const intervalRadius = isPush ? PUSH_RADIUS : PULL_RADIUS\n    const intervalScale = new Vector3(intervalRadius, length + (isPush ? -JOINT_RADIUS * 2 : 0), intervalRadius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {isPush ? (\n                <>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.alpha)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.omega)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.ends.map(end => (\n                <mesh\n                    key={`hook-${end.index}`}\n                    position={jointLocation(end)}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { UP, vectorFromArray } from \"./eig-util\"\nimport { FloatFeature } from \"./float-feature\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES, IntervalRole, isPushRole } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { IInterval, intervalStrainNuance } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Script = \"Script\",\n    Phase = \"Phase\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-09-24\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    controlTab: ControlTab\n    fullScreen: boolean\n    demoCount: number\n    polygons: boolean\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nexport function transition(state$: BehaviorSubject<IStoredState>, partial: Partial<IStoredState>): void {\n    const state = state$.getValue()\n    return state$.next({...state, nonce: state.nonce + 1, ...partial})\n}\n\nfunction initialStoredState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        controlTab: ControlTab.Script,\n        demoCount: 0,\n        fullScreen: true,\n        polygons: false,\n        rotating: true,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = intervalStrainNuance(interval)\n    if (isPushRole(interval.intervalRole)) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000, 10000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 2000, 3000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            transition(storedState$, {featureValues})\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    FACE_DIRECTIONS,\n    FACE_NAMES,\n    faceFromTwist,\n    FaceName,\n    IFaceMark,\n    IPercent,\n    ITwist,\n    jointLocation,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChar,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'One':(1)\",\n    \"'Six':(6)\",\n    \"'Axoneme':(30,S95)\",\n    \"'Knee':(3,b3)\",\n    \"'Snelson Star':(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\",\n    \"'Tripod with Knees':R(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\",\n    \"'Pretenst Lander':(B(15,S90),C(15,S90),D(15,S90))\",\n    \"'Zig Zag Loop':(d(3,MA0),c(7,b(7,d(7,d(7,d(7,d(3,MA0)))))))\",\n    \"'Bulge Ring':(A(15,S90, MA1), a(16, S90, MA1))\",\n    \"'Ring':(A(19,MA1),a(18,MA1))\",\n    \"'Convergence':(a1,b(15,S92,MA1),c(15,S92,MA1),d(15,S92,MA1))\",\n    \"'Halo by Crane':L(5,S92,b(12,S92,MA1),d(11,S92,MA1))\",\n    \"'Thick Tripod':(A3,B(8,MA1),C(8,MA1),D(8,MA1)):1=face-distance-35\",\n    \"'Diamond':R(a(5,b(5,c(5,c(2,MA3)),d(5,b(2,MA4))),c(5,d(5,b(2,MA5)),c(5,c(2,MA1))),d(5,c(5,c(2,MA6)),d(5,b(2,MA2)))),b(5,b(5,d(2,MA3)),c(5,c(2,MA2))),c(5,b(5,d(2,MA6)),c(5,c(2,MA5))),d(5,c(5,c(2,MA4)),b(5,d(2,MA1))))\",\n    \"'Composed':(6,b(4,MA0),c(4,MA0),d(4,MA0)):0=subtree(b5,c5,d5)\",\n    \"'Equus Lunae':L(A(16,S95,Mb0),b(16,S95,Md0),a(16,S95,Md0),B(16,Mb0,S95)):0=face-distance-60\",\n    \"'Infinity':(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Binfinity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Mobiosity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3))\",\n    \"'Cup':L24(15,S105)\",\n    \"'Torus':L24(A(13,S95,MA1),a(14,S95,MA1))\",\n    \"'Pretenst Squared':L(a(3,MA1),A(2,MA1)):1=face-distance-70\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeNeedsOmniTwist({_, b, c, d, B, C, D, Mb, Mc, Md, MB, MC, MD}: ITenscriptTree): boolean {\n    return !!(b || c || d || B || C || D || Mb || Mc || Md || MB || MC || MD)\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    spin: Spin,\n    pushesPerTwist: number,\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nconst MAIN_CODE = /([LR]?)(\\d*)(\\(.*\\))/\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainTree: ITenscriptTree,\n    marks: Record<number, IMark>,\n    fromUrl: boolean,\n): ITenscript {\n    const optionalPushes = pushesPerTwist > 3 ? pushesPerTwist.toFixed(0) : \"\"\n    const mainCode = spinChar(spin) + optionalPushes + treeToCode(mainTree)\n    const markSections: string[] = []\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=subtree${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, spin, pushesPerTwist, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return FACE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(faceName: FaceName, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[FACE_DIRECTIONS[faceName]]\n}\n\nfunction faceMark(faceName: FaceName, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${FACE_DIRECTIONS[faceName]}`]\n}\n\nfunction deleteFaceMark(faceName: FaceName, tree: ITenscriptTree): void {\n    tree[`M${FACE_DIRECTIONS[faceName]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseMain(main: string): { mainCode: string, spin: Spin, pushesPerTwist: number } {\n    const parsed = MAIN_CODE.exec(main)\n    if (!parsed) {\n        throw new Error(\"Couldn't parse\")\n    }\n    const spin = parsed[1] === \"R\" ? Spin.Right : Spin.Left\n    const pushesPerTwist = parsed[2].length === 0 ? 3 : parseInt(parsed[2], 10)\n    const mainCode = parsed[3]\n    return {mainCode, spin, pushesPerTwist}\n}\n\nfunction parseCode(code: string): {\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainCode: string,\n    markCode: Record<number, string>,\n} {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => MAIN_CODE.test(part)) || \"(0)\"\n    const {mainCode, spin, pushesPerTwist} = parseMain(foundMain)\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    const name = foundName ? foundName.replace(/'/g, \"\") : \"\"\n    return {name, spin, pushesPerTwist, mainCode, markCode}\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, spin, pushesPerTwist, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, spin, pushesPerTwist, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IBud {\n    builder: TensegrityBuilder\n    tree: ITenscriptTree\n    twist: ITwist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: ITenscriptTree): void {\n    FACE_NAMES.forEach(thisFace => {\n        const mark = faceMark(thisFace, treeWithMarks)\n        if (!mark) {\n            return\n        }\n        faceFromTwist(twistToMark, thisFace).mark = mark\n    })\n}\n\nfunction grow({builder, twist, marks}: IBud, afterTree: ITenscriptTree, faceName: FaceName, omni: boolean, scale: IPercent): IBud {\n    const baseFace = faceFromTwist(twist, faceName)\n    const newTwist = builder.createTwistOn(baseFace, scale, omni)\n    if (afterTree._ === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, builder, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, builder, reorient} = bud\n        const forward = tree._\n        if (forward) {\n            const decremented = forward - 1\n            const afterTree = {...tree, _: decremented}\n            const omni = treeNeedsOmniTwist(tree) && decremented === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.PPP, omni, percentOrHundred(tree.S)))\n            return\n        }\n        if (reorient) {\n            const {A, a, B, b} = tree\n            const abOrientation = !(!a || !A || !b || !B)\n            if (abOrientation) {\n                const points = builder.tensegrity.joints.map(jointLocation)\n                builder.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = childTree(faceName, tree)\n            const brickMark = faceMark(faceName, tree)\n            if (subtree) {\n                const decremented = subtree._ ? subtree._ - 1 : 0\n                const afterTree = {...subtree, _: decremented}\n                const omni = treeNeedsOmniTwist(subtree) && decremented === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, percentOrHundred(subtree.S)))\n            } else if (brickMark) {\n                const mark = marks[brickMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(faceName, tree)\n                    const omni = treeNeedsOmniTwist(markTree)\n                    activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { avg, CONNECTOR_LENGTH, IntervalRole, midpoint, normal, roleDefaultLength, sub } from \"./eig-util\"\nimport { IBud, IMark, ITenscript, MarkAction, treeNeedsOmniTwist } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    faceFromTwist,\n    FaceName,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    IRadialPull,\n    ITwist,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    oppositeSpin,\n    otherJoint,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class TensegrityBuilder {\n    constructor(public readonly tensegrity: Tensegrity) {\n    }\n\n    public createBud({spin, tree, marks}: ITenscript): IBud {\n        const reorient = tree._ === undefined\n        const omni = treeNeedsOmniTwist(tree) && reorient\n        const twist = this.createTwistAt(new Vector3, spin, percentOrHundred(), omni)\n        return {builder: this, tree, twist, marks, reorient}\n    }\n\n    public createTwistOn(baseFace: IFace, twistScale: IPercent, omni: boolean): ITwist {\n        const baseFactor = factorFromPercent(baseFace.scale)\n        const scale = percentFromFactor(factorFromPercent(twistScale) * baseFactor)\n        if (omni) {\n            const bottom = this.createTwist(faceTwistPoints(baseFace, scale), scale, oppositeSpin(baseFace.spin), IntervalRole.PhiPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.PhiPush)\n            const twist = this.createOmniTwist(bottom, top)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        } else {\n            const points = faceTwistPoints(baseFace, scale)\n            const twist = this.createTwist(points, scale, oppositeSpin(baseFace.spin), IntervalRole.RootPush)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        }\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createRadialPulls(faces: IFace[], mark?: IMark): IRadialPull[] {\n        const centerBrickFaceIntervals = () => {\n            const scale = percentFromFactor(averageScaleFactor(faces))\n            const where = locationFromFaces(faces)\n            const omniTwist = this.createTwistAt(where, Spin.Left, scale, true)\n            this.tensegrity.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.tensegrity.createRadialPull(closestFace, face)\n            })\n        }\n        if (!mark || mark.action === MarkAction.FaceDistance) {\n            const pullScale = mark ? mark.scale : percentFromFactor(0.75)\n            if (!pullScale) {\n                throw new Error(\"Missing pull scale\")\n            }\n            const distancers: IRadialPull[] = []\n            faces.forEach((faceA, indexA) => {\n                faces.forEach((faceB, indexB) => {\n                    if (indexA <= indexB) {\n                        return\n                    }\n                    distancers.push(this.tensegrity.createRadialPull(faceA, faceB, pullScale))\n                })\n            })\n            return distancers\n        } else if (mark.action === MarkAction.JoinFaces) {\n            switch (faces.length) {\n                case 2:\n                    if (faces[0].spin === faces[1].spin) {\n                        return centerBrickFaceIntervals()\n                    }\n                    return [this.tensegrity.createRadialPull(faces[0], faces[1])]\n                case 3:\n                    return centerBrickFaceIntervals()\n                default:\n                    return []\n            }\n        } else {\n            return []\n        }\n    }\n\n    public checkConnectors(radialPulls: IRadialPull[], removeInterval: (interval: IInterval) => void): IRadialPull[] {\n        if (radialPulls.length === 0) {\n            return radialPulls\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega, connectRoles(alpha.omni, omega.omni))\n        }\n        return radialPulls.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.ConnectorPull) {\n                const distance = jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    removeInterval(axis)\n                    alphaRays.forEach(removeInterval)\n                    omegaRays.forEach(removeInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    // =====================================================\n\n    private createTwistAt(location: Vector3, spin: Spin, scale: IPercent, omni: boolean): ITwist {\n        const pushesPerTwist = this.tensegrity.pushesPerTwist\n        if (omni) {\n            const bottom = this.createTwist(firstTwistPoints(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.PhiPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.PhiPush)\n            return this.createOmniTwist(bottom, top)\n        } else {\n            return this.createTwist(firstTwistPoints(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.RootPush)\n        }\n    }\n\n    private createOmniTwist(bottomTwist: ITwist, topTwist: ITwist): ITwist {\n        const {scale} = bottomTwist\n        const connectPulls = this.connect(faceFromTwist(bottomTwist, FaceName.PPP), faceFromTwist(topTwist, FaceName.NNN), connectRoles(true, true))\n        const pulls = [...bottomTwist.pulls, ...topTwist.pulls, ...connectPulls]\n        const createFaceTouching = (joint: IJoint, spin: Spin): IFace => {\n            const facePulls = pulls.filter(({alpha, omega}) => joint.index === alpha.index || joint.index === omega.index)\n            const ends = facePulls.map(pull => otherJoint(joint, pull))\n            const thirdForward = pulls.find(({alpha, omega}) => alpha.index === ends[0].index && omega.index === ends[1].index)\n            const thirdReverse = pulls.find(({alpha, omega}) => alpha.index === ends[1].index && omega.index === ends[0].index)\n            ends.push(joint)\n            if (spin === Spin.Left) {\n                ends.reverse()\n            }\n            if (thirdForward) {\n                facePulls.push(thirdForward)\n            } else if (thirdReverse) {\n                facePulls.push(thirdReverse)\n            } else {\n                throw new Error(\"Interval not found\")\n            }\n            return this.tensegrity.createFace(ends, true, spin, scale, facePulls)\n        }\n        const topFace = topTwist.faces[1]\n        const topTouching = topFace.ends.map(end => createFaceTouching(end, oppositeSpin(topFace.spin)))\n        const bottomFace = bottomTwist.faces[0]\n        const bottomTouching = bottomFace.ends.map(end => createFaceTouching(end, oppositeSpin(bottomFace.spin)))\n        bottomFace.omni = topFace.omni = true\n        const pushes = [...bottomTwist.pushes, ...topTwist.pushes]\n        const faces = [bottomFace, ...bottomTouching, ...topTouching, topFace]\n        return {scale, pushes, pulls, faces}\n    }\n\n    private connect(faceA: IFace, faceB: IFace, roles: IConnectRoles): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            const a0 = a[index]\n            const a1 = a[(index + 1) % a.length]\n            const b0 = b[index]\n            const b1 = b[(index + 1) % b.length]\n            const c0 = c[index]\n            const d0 = d[index]\n            pulls.push(this.tensegrity.createInterval(b0, c0, roles.ring, scale))\n            pulls.push(this.tensegrity.createInterval(c0, b1, roles.ring, scale))\n            if (faceA.spin === Spin.Left) {\n                pulls.push(this.tensegrity.createInterval(c0, a1, roles.down, scale))\n            } else {\n                pulls.push(this.tensegrity.createInterval(c0, a0, roles.down, scale))\n            }\n            if (faceB.spin === Spin.Left) {\n                pulls.push(this.tensegrity.createInterval(b1, d0, roles.up, scale))\n            } else {\n                pulls.push(this.tensegrity.createInterval(b0, d0, roles.up, scale))\n            }\n        }\n        if (roles.ring === IntervalRole.Ring) {\n            const faceScale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n            for (let index = 0; index < b.length; index++) {\n                const knownPulls = [...faceA.pulls, ... faceB.pulls]\n                const a0 = a[index]\n                const a1 = a[(index + 1) % a.length]\n                const b0 = b[index]\n                const b1 = b[(index + 1) % b.length]\n                const c0 = c[index]\n                const c1 = c[(index + 1) % c.length]\n                const cN1 = c[(index + c.length - 1) % c.length]\n                const d0 = d[index]\n                if (faceA.spin === Spin.Left) {\n                    this.tensegrity.createFace([c0, a1, b0], false, oppositeSpin(faceA.spin), faceScale, knownPulls)\n                } else {\n                    this.tensegrity.createFace([c0, b1, a0], false, oppositeSpin(faceA.spin), faceScale, knownPulls)\n                }\n                if (faceB.spin === Spin.Left) {\n                    this.tensegrity.createFace([b1, d0, c1], false, oppositeSpin(faceB.spin), faceScale, knownPulls)\n                } else {\n                    this.tensegrity.createFace([b0, cN1, d0], false, oppositeSpin(faceB.spin), faceScale, knownPulls)\n                }\n            }\n        }\n        this.tensegrity.removeFace(faceB)\n        this.tensegrity.removeFace(faceA)\n        return pulls\n    }\n\n    private createTwist(points: IPoint[], scale: IPercent, spin: Spin, pushRole: IntervalRole): ITwist {\n        const ends = points.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const alphaEnds = ends.map(({alpha}) => alpha)\n        const omegaEnds = ends.map(({omega}) => omega).reverse()\n        const alphaPulls = alphaEnds.map((alpha, index) =>\n            this.tensegrity.createInterval(alpha, alphaEnds[(index + 1) % alphaEnds.length], IntervalRole.InterTwist, scale))\n        const alphaFace = this.tensegrity.createFace(alphaEnds, false, spin, scale, alphaPulls)\n        const omegaPulls = omegaEnds.map((omega, index) =>\n            this.tensegrity.createInterval(omega, omegaEnds[(index + 1) % omegaEnds.length], IntervalRole.InterTwist, scale))\n        const omegaFace = this.tensegrity.createFace(omegaEnds, false, spin, scale, omegaPulls)\n        const twist: ITwist = {scale, pushes: [], pulls: [], faces: [alphaFace, omegaFace]}\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, pushRole, scale)\n            twist.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        ends.forEach(({alpha}, index) => {\n            const offset = spin === Spin.Left ? ends.length - 1 : 1\n            const omega = ends[(index + offset) % ends.length].omega\n            twist.pulls.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.Twist, scale))\n        })\n        // console.log(`${ends.map(e => `${e.alpha.index}-${e.omega.index}`).join(\" \")} : ${spin === Spin.Left ? \"L\" : \"R\"}`)\n        return twist\n    }\n}\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\ninterface IConnectRoles {\n    ring: IntervalRole\n    up: IntervalRole\n    down: IntervalRole\n}\n\nfunction connectRoles(omniA: boolean, omniB: boolean): IConnectRoles {\n    if (!omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.InterTwist}\n    } else if (omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Cross, down: IntervalRole.InterTwist}\n    } else if (!omniA && omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.Cross}\n    } else {\n        return {ring: IntervalRole.PhiTriangle, down: IntervalRole.PhiTriangle, up: IntervalRole.PhiTriangle}\n    }\n}\n\ninterface IPoint {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction firstTwistPoints(location: Vector3, pushesPerTwist: number, spin: Spin, scale: IPercent): IPoint[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return twistPoints(base, spin, scale)\n}\n\nfunction faceTwistPoints(face: IFace, scale: IPercent): IPoint[] {\n    const base = face.ends.map(jointLocation).reverse()\n    return twistPoints(base, oppositeSpin(face.spin), scale)\n}\n\nfunction twistPoints(base: Vector3[], spin: Spin, scale: IPercent): IPoint[] {\n    const initialLength = roleDefaultLength(IntervalRole.PhiTriangle) * factorFromPercent(scale) / Math.sqrt(3)\n    const tinyRadius = initialLength * base.length / 3 / Math.sqrt(3)\n    const points: IPoint[] = []\n    const mid = midpoint(base)\n    const up = normal(base).multiplyScalar(initialLength)\n    for (let index = 0; index < base.length; index++) {\n        const a = sub(base[(index + base.length - 1) % base.length], mid)\n        const b = sub(base[index], mid)\n        const c = sub(base[(index + 1) % base.length], mid)\n        const d = sub(base[(index + 2) % base.length], mid)\n        const bc = avg(b, c)\n        const cd = avg(c, d)\n        const ba = avg(b, a)\n        const alpha = new Vector3().copy(mid)\n        const omega = new Vector3().copy(mid).add(up)\n        if (spin === Spin.Left) {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(cd, tinyRadius)\n        } else {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(ba, tinyRadius)\n        }\n        points.push({alpha, omega})\n    }\n    return points\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole, isPushRole } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { IInterval, IJoint, IPercent, jointLocation } from \"./tensegrity-types\"\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => isPushRole(i.intervalRole))\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = jointLocation(intervalA.alpha)\n            const aOmegaLoc = jointLocation(intervalA.omega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = jointLocation(intervalB.alpha)\n                const bOmegaLoc = jointLocation(intervalB.omega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            // this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            // this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n\n    public stiffnessesFromStrains(includeInterval: (interval: IInterval) => boolean): void {\n        const pushOverPull = this.tensegrity.numericFeature(WorldFeature.PushOverPull)\n        const {stiffnesses, linearDensities} = adjustedStiffness(this.tensegrity, includeInterval, pushOverPull)\n        this.tensegrity.instance.restoreSnapshot()\n        this.tensegrity.fabric.copy_material(stiffnesses, linearDensities)\n    }\n}\n\nfunction adjustedStiffness(tensegrity: Tensegrity, includeInterval: (interval: IInterval) => boolean, pushOverPull: number): {\n    stiffnesses: Float32Array,\n    linearDensities: Float32Array,\n} {\n    const floatView = tensegrity.instance.floatView\n    const strains: Float32Array = floatView.strains\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const included = toAverage.filter(includeInterval)\n        const totalStrain = included.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / included.length\n    }\n    const intervals = tensegrity.intervals\n    const pushes = intervals.filter(interval => isPushRole(interval.intervalRole))\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !isPushRole(interval.intervalRole))\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        if (!includeInterval(interval)) {\n            return 1\n        }\n        const absoluteStrain = strains[interval.index] * (isPushRole(interval.intervalRole) ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffnesses = floatView.stiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = floatView.linearDensities.map((value, index) => Math.sqrt(value * value * changes[index]))\n    return {stiffnesses, linearDensities}\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { CONNECTOR_LENGTH, IntervalRole, intervalRoleName, isPushRole, roleDefaultLength } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { execute, IBud, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport { TensegrityOptimizer } from \"./tensegrity-optimizer\"\nimport {\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLength,\n    IPercent,\n    IRadialPull,\n    jointDistance,\n    jointHolesFromJoint,\n    jointLocation,\n    locationFromFace,\n    percentFromFactor,\n    percentOrHundred,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport type Job = (tensegrity: Tensegrity) => void\n\nexport class Tensegrity {\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public connectors: IRadialPull[] = []\n    public faces: IFace[] = []\n    public pushesPerTwist: number\n    public readonly builder: TensegrityBuilder\n\n    private jobs: Job[] = []\n    private buds: IBud[]\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly scale: IPercent,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.pushesPerTwist = this.tenscript.pushesPerTwist\n        this.builder = new TensegrityBuilder(this)\n        this.buds = [this.builder.createBud(this.tenscript)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public createJoint(location: Vector3): IJoint { // TODO: remove joint, reuse them\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const alphaJoint = this.createJoint(locationFromFace(alpha))\n        const omegaJoint = this.createJoint(locationFromFace(omega))\n        this.instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        if (axis.intervalRole === IntervalRole.ConnectorPull) {\n            this.connectors.push(radialPull)\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent): IInterval {\n        const restLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const idealLength = jointDistance(alpha, omega)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const {stiffness, linearDensity} = scaleToPhysical(scale)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, isPushRole(intervalRole),\n            idealLength, restLength, stiffness, linearDensity, countdown)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(ends: IJoint[], omni: boolean, spin: Spin, scale: IPercent, knownPulls?: IInterval[]): IFace {\n        const pull = (a: IJoint, b: IJoint) => {\n            for (let walk = this.intervals.length - 1; walk >= 0; walk--) { // backwards: more recent\n                const interval = this.intervals[walk]\n                const {alpha, omega} = interval\n                if (alpha.index === a.index && omega.index === b.index ||\n                    omega.index === a.index && alpha.index === b.index) {\n                    return interval\n                }\n            }\n            throw new Error(\"Could not find pull\")\n        }\n        const f0 = ends[0]\n        const f1 = ends[Math.floor(ends.length / 3)]\n        const f2 = ends[Math.floor(2 * ends.length / 3)]\n        const index = this.fabric.create_face(f0.index, f1.index, f2.index)\n        const pulls = knownPulls ? knownPulls : [pull(f0, f1), pull(f1, f2), pull(f2, f0)]\n        const face: IFace = {index, omni, spin, scale, ends, pulls}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public do(job: Job): void {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const job = this.jobs.shift()\n        if (job) {\n            job(this)\n            return true\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this.faces, this.tenscript.marks, this.builder).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.builder.checkConnectors(this.connectors, interval => this.removeInterval(interval))\n                return false\n            }\n            this.stage = Stage.Shaping\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        new TensegrityOptimizer(this).stiffnessesFromStrains(interval => {\n            switch (interval.intervalRole) {\n                case IntervalRole.Push:\n                case IntervalRole.Pull:\n                    return false\n                default:\n                    const alphaY = jointLocation(interval.alpha).y\n                    const omegaY = jointLocation(interval.omega).y\n                    const surface = (alphaY + omegaY) < 0.1\n                    return !surface\n            }\n        })\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public getFabricOutput(pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const holes = jointHolesFromJoint(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    radius: jointRadius,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor: false, // TODO: can this be determined?\n                    holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const isPush = isPushRole(interval.intervalRole)\n                const radius = isPush ? pushRadius : pullRadius\n                const currentLength = intervalLength(interval)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    scale: interval.scale._,\n                    idealLength: idealLengths[interval.index],\n                    isPush,\n                    length: currentLength,\n                    radius,\n                }\n            }),\n        }\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.DistancerPull : IntervalRole.ConnectorPull\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const scale = percentOrHundred()\n        const {stiffness, linearDensity} = scaleToPhysical(scale)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, false,\n            idealLength, restLength, stiffness, linearDensity, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.RadialPull\n        const scale = percentFromFactor(restLength)\n        const {stiffness, linearDensity} = scaleToPhysical(scale)\n        const countdown = this.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(restLength - idealLength)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, false,\n            idealLength, restLength, stiffness, linearDensity, countdown)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createRadialPulls(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                // this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n\nfunction scaleToPhysical(scale: IPercent): { stiffness: number, linearDensity: number } {\n    const stiffness = 0.0001\n    const linearDensity = Math.sqrt(stiffness)\n    return {stiffness, linearDensity}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceName } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: FaceName\n    faceName: FaceName\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    // private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            return true // todo\n            // const nextStage = embryo.iterate()\n            // const life = embryo.life$.getValue()\n            // if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            //     embryo.transition = {stage: Stage.Pretenst}\n            // } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n            //     embryo.transition = {stage: nextStage}\n            // }\n            // switch (nextStage) {\n            //     case Stage.Shaping:\n            //         if (this.shapingTime <= 0) {\n            //             instance.fabric.adopt_lengths()\n            //             // const faceIntervals = [...embryo.faceIntervals]\n            //             // faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n            //             // instance.iterate(Stage.Slack)\n            //             // instance.iterate(Stage.Pretensing)\n            //         } else {\n            //             this.shapingTime--\n            //         }\n            //         return false\n            //     case Stage.Pretensing:\n            //         return true\n            //     case Stage.Pretenst:\n            //         extractGotchiFaces(embryo, state.muscles, state.extremities)\n            //         embryo.transition = {stage: Stage.Pretenst}\n            //         embryo.iterate()\n            //         this.embryo = undefined\n            //         this.twitcher = new Twitcher(state)\n            //         return true\n            //     default:\n            //         return false\n            // }\n        } else {\n            // instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance} = muscle\n    const oppositeFace = FaceName.NNN\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.faceName === oppositeFace)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\n// function extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    // tensegrity.brickFaces\n    //     .filter(face => !face.removed && face.brick.parentFace)\n    //     .forEach(face => {\n    //         const gatherAncestors = (f: IBrickFace, faceNames: FaceName[]): Limb => {\n    //             const definition = BRICK_FACE_DEF[f.faceName]\n    //             faceNames.push(definition.negative ? definition.opposite : definition.name)\n    //             const parentFace = f.brick.parentFace\n    //             if (parentFace) {\n    //                 return gatherAncestors(parentFace, faceNames)\n    //             } else {\n    //                 return limbFromFaceName(f.faceName)\n    //             }\n    //         }\n    //         const identities: FaceName[] = []\n    //         const limb = gatherAncestors(face, identities)\n    //         const group = identities.shift()\n    //         const faceName = face.faceName\n    //         if (!group) {\n    //             throw new Error(\"no top!\")\n    //         }\n    //         const distance = identities.length\n    //         const faceIndex = face.index\n    //         if (isExtremity(group)) {\n    //             const name = `[${limb}]`\n    //             extremities.push({faceIndex, name, limb})\n    //         } else {\n    //             const name = `[${limb}]:[${distance}:${FaceName[group]}]:{tri=${FaceName[faceName]}}`\n    //             muscles.push({faceIndex, name, limb, distance, group, faceName})\n    //         }\n    //     })\n// }\n\n// function isExtremity(faceName: FaceName): boolean {\n//     const definition = BRICK_FACE_DEF[faceName]\n//     const normalizedFace = definition.negative ? definition.opposite : faceName\n//     return normalizedFace === FaceName.PPP\n// }\n//\n// function limbFromFaceName(face: FaceName): Limb {\n//     switch (face) {\n//         case FaceName.NNN:\n//             return Limb.BackLeft\n//         case FaceName.PNN:\n//             return Limb.BackRight\n//         case FaceName.NPP:\n//             return Limb.FrontLeft\n//         case FaceName.PPP:\n//             return Limb.FrontRight\n//         default:\n//             throw new Error(\"Strange limb\")\n//     }\n// }\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateStage(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.stage$.subscribe((latestStage) => {\n            if (stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(latestStage)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { DoubleSide, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { SPACE_RADIUS, SPACE_SCALE } from \"../fabric/eig-util\"\nimport { Orbit } from \"../view/orbit\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.01\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const midpoint = new Vector3()\n\n    function developing(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function resting(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 10\n    }\n\n    function running(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function evolving(e: Evolution): number {\n        switch (e.iterate()) {\n            case EvolutionPhase.EvolutionDone:\n                console.log(\"Evolution DONE\")\n                stopEvolution()\n                break\n            case EvolutionPhase.EvolutionHarder:\n                console.log(\"Evolution advance...\")\n                stopEvolution(e.withReducedCyclePattern)\n                break\n        }\n        e.getMidpoint(midpoint)\n        return 15\n    }\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        const approachDistance = (distance: number) => {\n            const position = control.object.position\n            const positionToTarget = new Vector3().subVectors(position, control.target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (gotchi) {\n                    approachDistance(developing(gotchi))\n                }\n                break\n            case Happening.Resting:\n                if (gotchi) {\n                    approachDistance(resting(gotchi))\n                }\n                break\n            case Happening.Running:\n                if (gotchi) {\n                    approachDistance(running(gotchi))\n                }\n                break\n            case Happening.Evolving:\n                if (evolution) {\n                    approachDistance(evolving(evolution))\n                    evolutionPhase(evolution.phase)\n                }\n                break\n        }\n        control.target.add(new Vector3().subVectors(midpoint, control.target).multiplyScalar(TOWARDS_TARGET))\n        control.update()\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useEffect(() => {\n        orbit.current.autoRotate = happening === Happening.Evolving\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.stage$.getValue() === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.stage$.getValue()\n        this.tensegrity.iterate()\n        const nextStage = Stage.Slack // todo\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            // this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            // this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    // instance.iterate(Stage.Slack)\n                    // instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { jointDistance } from \"../fabric/tensegrity-types\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const push = this.sphere.hubs[0].spokes[0].push\n        const segmentLength = jointDistance(push.alpha, push.omega) * 0.28\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.VisualStrain:\n            return 0\n        default:\n            return defaultValue\n    }\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 0.5\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 1.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaCamera, FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, CylinderGeometry, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, PULL_RADIUS, PUSH_RADIUS, switchToVersion, UP, Version } from \"../fabric/eig-util\"\nimport { jointDistance } from \"../fabric/tensegrity-types\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nextend({Orbit})\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [polygons, setPolygons] = useState(false)\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => setPolygons(!polygons)}><FaCamera/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere} polygons={polygons}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere, polygons}: {\n    sphere: TensegritySphere,\n    polygons: boolean,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 1\n        orb.maxDistance = 10000\n        orb.enableZoom = true\n        orb.update()\n    }, [])\n\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        if (tick === 0) {\n            control.autoRotate = true\n            control.target.copy(sphere.location)\n        }\n        if (!polygons) {\n            sphere.iterate()\n        }\n        const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        control.target.add(toMidpoint)\n        control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: {\n    sphere: TensegritySphere,\n}): JSX.Element {\n    return (\n        <group>\n            {sphere.pulls.map((pull: IPull) => {\n                const unit = sphere.instance.unitVector(pull.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.PhiTriangle)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {sphere.pushes.map((push: IPush) => {\n                const unit = sphere.instance.unitVector(push.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.RootPush)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 4, 2.5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint, jointDistance, jointLocation } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const stiffness = 0.00001\n        const linearDensity = Math.sqrt(stiffness)\n        const idealLength = alphaHub.location.distanceTo(omegaHub.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, true,\n            idealLength, idealLength, stiffness, linearDensity, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub,\n            location: () => new Vector3()\n                .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, restLength: number) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const stiffness = 0.000001\n            const linearDensity = Math.sqrt(stiffness)\n            const idealLength = jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(\n                alpha.index, omega.index, false,\n                idealLength, restLength, stiffness, linearDensity, 100)\n            const interval: IPull = {\n                index, alpha, omega,\n                location: () => new Vector3()\n                    .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2)\n        return pulls\n    }\n\n    public iterate(): void {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return\n        }\n        switch (this.instance.stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.instance.stage = Stage.Shaping\n                break\n            case Stage.Shaping:\n                if (this.fabric.age > 8000) {\n                    this.instance.stage = Stage.Slack\n                }\n                break\n            case Stage.Slack:\n                this.instance.stage = Stage.Pretensing\n                break\n            case Stage.Pretensing:\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const jointRadius = radius * JOINT_RADIUS / PUSH_RADIUS\n                    const currentLength = jointDistance(push.alpha, push.omega)\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const jointRadius = JOINT_RADIUS\n                    const currentLength = jointDistance(interval.alpha, interval.omega)\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.Push),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index, instance: this.instance}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (this.twist < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    intervalRoleName,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n} from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 1000\n\nexport function FrozenTab({tensegrity, worldFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function getFabricOutput(): IFabricOutput {\n        if (!tensegrity) {\n            throw new Error(\"No tensegrity\")\n        }\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={!polygons}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    transition(storedState$, {visibleRoles: [...visibleRoles, intervalRole]})\n                                } else {\n                                    transition(storedState$, {visibleRoles: visibleRoles.filter(role => role !== intervalRole)})\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    CurrentLengthsToPretenst,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.CurrentLengthsToPretenst:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Pretenst)}\n                >\n                    Current Lengths <Symbol stage={Stage.Shaping}/> <FaArrowRight/>\n                    <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Pretensing)}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.do(t => t.stage = Stage.Shaping)}\n                    >\n                        Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Shaping}/> Shaping\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => t.stage = Stage.Slack)}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.do(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : \"#919191\"\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaCompressArrowsAlt, FaGlobe, FaHandRock, FaParachuteBox, FaTools } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {\n        worldFeatures, tensegrity,\n        storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return (\n        <div>\n            <Grouping>\n                <FeaturePanel\n                    feature={worldFeatures[WorldFeature.VisualStrain]}\n                    disabled={polygons}\n                />\n                <FeaturePanel feature={worldFeatures[WorldFeature.PushOverPull]}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Shaping</h6>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingPretenstFactor]} disabled={stage !== Stage.Shaping}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingDrag]} disabled={stage !== Stage.Shaping}/>\n                <ButtonGroup className=\"w-100 my-3\">\n                    <Button disabled={stage !== Stage.Shaping}\n                            onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Pretenst</h6>\n                <FeaturePanel feature={worldFeatures[WorldFeature.PretenstFactor]} disabled={stage !== Stage.Pretenst}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Gravity]} disabled={stage !== Stage.Pretenst}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Drag]} disabled={stage !== Stage.Pretenst}/>\n                <ButtonGroup className=\"w-100 my-3\">\n                    <Button disabled={stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { StageButton, StageTransition } from \"./stage-button\"\n\nexport function PhaseTab({worldFeatures, tensegrity, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updatePolygons(newState.polygons)\n                updateStoredState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    function disabledStage(): boolean {\n        return polygons\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledStage()}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CurrentLengthsToPretenst}\n                    disabled={disabledStage()}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <FeaturePanel key=\"pc\" feature={worldFeatures[WorldFeature.PretensingCountdown]}/>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => transition(storedState$, {surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabledStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabledStage()}\n                />\n                <StageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledStage()}\n                />\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport {\n    FaArrowDown,\n    FaArrowUp,\n    FaHandPointUp,\n    FaList,\n    FaMagic,\n    FaMinusSquare,\n    FaPlusSquare,\n    FaTimesCircle,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    isPushRole,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { IInterval, ISelection } from \"../fabric/tensegrity-types\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport enum SelectionMode {\n    SelectNone = \"Select None\",\n    Joints = \"Joints\",\n    Intervals = \"Intervals\",\n    Faces = \"Faces\",\n}\n\nexport function ShapeTab(\n    {\n        tensegrity, selection,\n        selectionMode, setSelectionMode,\n        clearSelection,\n    }: {\n        tensegrity: Tensegrity,\n        selection: ISelection,\n        selectionMode: SelectionMode,\n        setSelectionMode: (mode: SelectionMode) => void,\n        clearSelection: () => void,\n    }): JSX.Element {\n\n    const [currentRole, setCurrentRole] = useState(IntervalRole.PhiPush)\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        selection.intervals.forEach(interval => {\n            const isPush = isPushRole(interval.intervalRole)\n            if (isPush && !pushes || !isPush && !pulls) {\n                return\n            }\n            tensegrity.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function selectionCount(mode: SelectionMode): number {\n        switch (mode) {\n            case SelectionMode.Joints:\n                return selection.joints.length\n            case SelectionMode.Intervals:\n                return selection.intervals.length\n            case SelectionMode.Faces:\n                return selection.faces.length\n            default:\n                return 0\n        }\n    }\n\n    function isEmptySelection(mode?: SelectionMode): boolean {\n        if (mode) {\n            return selectionCount(mode) === 0\n        } else {\n            return selection.joints.length === 0 && selection.intervals.length === 0 && selection.faces.length === 0\n        }\n    }\n\n    function ModeButton({item, disabled}: {\n        item: SelectionMode,\n        disabled?: boolean,\n    }): JSX.Element {\n        return (\n            <Button\n                color={item === selectionMode ? \"success\" : \"secondary\"}\n                disabled={disabled}\n                onClick={() => setSelectionMode(item)}\n            >\n                <span>{item}</span>\n            </Button>\n        )\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <ModeButton item={SelectionMode.SelectNone}/>\n                    <ModeButton item={SelectionMode.Faces}/>\n                    <ModeButton item={SelectionMode.Intervals}/>\n                    <ModeButton item={SelectionMode.Joints}/>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={isEmptySelection(SelectionMode.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selection.joints.length === 0 || selectionMode !== SelectionMode.SelectNone}\n                        onClick={() => clearSelection()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selection.joints.length === 0 || selectionMode !== SelectionMode.SelectNone}\n                    >\n                        do nothing\n                    </Button>\n                    <Button\n                        onClick={() => tensegrity.do(t => t.builder.createRadialPulls([]))}>\n                        <span> Distance75</span>\n                    </Button>\n                    <Button\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Interval Lengths</h6>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map((intervalRole, index) => (\n                            <Button size=\"sm\" key={`IntervalRole[${index}]`}\n                                    onClick={() => setCurrentRole(intervalRole)}\n                                    color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n                <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                [{floatString(defaultLength())}]\n            </div>\n            <div>\n                {intervalRoleName(intervalRole, true)}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaClock, FaFutbol, FaHiking, FaPlay, FaRocket, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function ScriptTab({worldFeatures, rootTenscript,  tensegrity, runTenscript, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    rootTenscript: ITenscript,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={worldFeatures[WorldFeature.IterationsPerFrame]}/>\n                <FeaturePanel key=\"ic\" feature={worldFeatures[WorldFeature.IntervalCountdown]}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/>\n                    </Button>\n                    <Button onClick={() => {\n                        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n                        runTenscript(BOOTSTRAP[0])\n                    }}>\n                        <FaPlay/>\n                    </Button>\n                    {/*<Button onClick={() => switchToVersion(Version.Bridge)}>*/}\n                    {/*    <FaDungeon/>*/}\n                    {/*</Button>*/}\n                    {/*<Button onClick={() => switchToVersion(Version.Gotchi)}>*/}\n                    {/*    <FaBug/>*/}\n                    {/*</Button>*/}\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { ISelection } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { PhaseTab } from \"./phase-tab\"\nimport { ScriptTab } from \"./script-tab\"\nimport { SelectionMode, ShapeTab } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        worldFeatures,\n        rootTenscript,\n        shapeSelection, setShapeSelection,\n        selection, clearSelection,\n        tensegrity, runTenscript,\n        toFullScreen, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        selection: ISelection,\n        clearSelection: () => void,\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        shapeSelection: SelectionMode,\n        setShapeSelection: (shapeSelection: SelectionMode) => void,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [stage, updateStage] = useState<Stage | undefined>(tensegrity ? tensegrity.stage$.getValue() : undefined)\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.stage$.subscribe(updateStage) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelection()\n        }\n    }, [controlTab, stage])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => transition(storedState$, {controlTab: tab})}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Script:\n                    return (\n                        <ScriptTab\n                            worldFeatures={worldFeatures}\n                            rootTenscript={rootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Phase:\n                    return !tensegrity ? NO_FABRIC : (\n                        <PhaseTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            tensegrity={tensegrity}\n                            selection={selection}\n                            selectionMode={shapeSelection}\n                            setSelectionMode={setShapeSelection}\n                            clearSelection={clearSelection}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            worldFeatures={worldFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    CylinderGeometry,\n    Euler,\n    FrontSide,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    Quaternion,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, isPushRole, UP } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLength,\n    intervalLocation,\n    intervalsTouching,\n    ISelection,\n    jointLocation,\n    locationFromJoints,\n} from \"../fabric/tensegrity-types\"\nimport { isIntervalVisible, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { JOINT_MATERIAL, LINE_VERTEX_COLORS, roleMaterial, SELECT_MATERIAL, SUBDUED_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { SelectionMode } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\nconst RADIUS_FACTOR = 100\nconst SPHERE = new SphereGeometry(0.05, 32, 8)\nconst SELECTION_SCALE = new Vector3(1.1, 1.1, 1.1)\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\nconst ALTITUDE = 1\n\nexport function FabricView(\n    {\n        pushOverPull, tensegrity, selection, setSelection, storedState$, shapeSelection, polygons,\n    }: {\n        pushOverPull: FloatFeature,\n        tensegrity: Tensegrity,\n        selection: ISelection,\n        setSelection: (selection: ISelection) => void,\n        shapeSelection: SelectionMode,\n        polygons: boolean,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [whyThis, updateWhyThis] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    if (!perspective) {\n        throw new Error(\"Wheres the camera tenseg?\")\n    }\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        updateInstance(tensegrity.instance)\n        updateWhyThis(0)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(updatedOrbit => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(updatedOrbit.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        updatedOrbit.object = perspective\n        updatedOrbit.minPolarAngle = -0.98 * Math.PI / 2\n        updatedOrbit.maxPolarAngle = 0.8 * Math.PI\n        updatedOrbit.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        updatedOrbit.zoomSpeed = 0.5\n        updatedOrbit.enableZoom = true\n        updatedOrbit.target.set(midpoint.x, midpoint.y, midpoint.z)\n        updatedOrbit.update()\n    }, [])\n\n    useFrame(() => {\n        const view = instance.view\n        const target = selection.joints.length > 0 ? locationFromJoints(selection.joints) :\n            new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n        orbit.current.target.add(towardsTarget)\n        if (storedState.demoCount >= 0) {\n            const eye = camera.position\n            eye.y += (target.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(target) - view.radius() * 1.7\n            const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        }\n        orbit.current.update()\n        if (!polygons && shapeSelection === SelectionMode.SelectNone) {\n            const busy = tensegrity.iterate()\n            if (busy) {\n                updateWhyThis(whyThis - 1)\n                return\n            }\n            switch (stage) {\n                case Stage.Growing:\n                    updateWhyThis(whyThis - 1)\n                    break\n                case Stage.Shaping:\n                    if (whyThis < 0) {\n                        updateWhyThis(0)\n                    } else {\n                        updateWhyThis(whyThis + 1)\n                    }\n                    if (whyThis === 500 && storedState.demoCount >= 0) {\n                        transition(storedState$, {demoCount: storedState.demoCount + 1, rotating: true})\n                    }\n                    break\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    function toggleSelectedJoint(jointToToggle: IJoint): void {\n        const newSelection = {...selection}\n        if (selection.joints.some(selected => selected.index === jointToToggle.index)) {\n            newSelection.joints = selection.joints.filter(joint => joint.index !== jointToToggle.index)\n        } else {\n            newSelection.joints.push(jointToToggle)\n        }\n        newSelection.intervals = tensegrity.intervals.filter(intervalsTouching(newSelection.joints))\n        setSelection(newSelection)\n    }\n\n    function toggleSelectedInterval(intervalToToggle: IInterval): void {\n        const newSelection = {...selection}\n        if (selection.intervals.some(selected => selected.index === intervalToToggle.index)) {\n            newSelection.intervals = selection.intervals.filter(joint => joint.index !== intervalToToggle.index)\n        } else {\n            newSelection.intervals.push(intervalToToggle)\n        }\n        setSelection(newSelection)\n    }\n\n    function toggleSelectedFace(faceToToggle: IFace): void {\n        const newSelection = {...selection}\n        if (selection.intervals.some(selected => selected.index === faceToToggle.index)) {\n            newSelection.faces = selection.faces.filter(face => face.index !== faceToToggle.index)\n        } else {\n            newSelection.faces.push(faceToToggle)\n        }\n        setSelection(newSelection)\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <group>\n                        {tensegrity.intervals\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    storedState={storedState}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <>\n                        <lineSegments\n                            key=\"lines\"\n                            geometry={tensegrity.instance.floatView.lineGeometry}\n                            material={LINE_VERTEX_COLORS}\n                        />\n                        <Faces\n                            tensegrity={tensegrity}\n                            stage={stage}\n                            clickFace={face => toggleSelectedFace(face)}\n                        />\n                    </>\n                )}\n                {shapeSelection !== SelectionMode.Intervals ? undefined : tensegrity.intervals.map(interval => (\n                    <IntervalMesh\n                        key={`I${interval.index}`}\n                        pushOverPull={pushOverPull}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={false}\n                        storedState={storedState}\n                        toggleInterval={() => toggleSelectedInterval(interval)}\n                    />\n                ))}\n                {shapeSelection === SelectionMode.SelectNone ? undefined : selection.intervals.map(interval => (\n                    <IntervalMesh\n                        key={`SI${interval.index}`}\n                        pushOverPull={pushOverPull}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={true}\n                        storedState={storedState}\n                        toggleInterval={() => toggleSelectedInterval(interval)}\n                    />\n                ))}\n                {shapeSelection !== SelectionMode.Joints ? undefined : tensegrity.joints.map(joint => (\n                    <JointMesh\n                        key={`J${joint.index}`}\n                        joint={joint}\n                        selected={false}\n                        toggleJoint={() => toggleSelectedJoint(joint)}\n                    />\n                ))}\n                {shapeSelection === SelectionMode.SelectNone ? undefined : selection.joints.map(joint => (\n                    <JointMesh\n                        key={`SJ${joint.index}`}\n                        joint={joint}\n                        selected={true}\n                        toggleJoint={() => toggleSelectedJoint(joint)}\n                    />\n                ))}\n                <SurfaceComponent/>\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction JointMesh({joint, selected, toggleJoint}: { joint: IJoint, selected: boolean, toggleJoint: () => void }): JSX.Element {\n    return (\n        <mesh\n            key={`SJ${joint.index}`}\n            geometry={SPHERE}\n            position={jointLocation(joint)}\n            material={selected ? SELECT_MATERIAL : JOINT_MATERIAL}\n            matrixWorldNeedsUpdate={true}\n            scale={selected ? SELECTION_SCALE : undefined}\n            onPointerDown={toggleJoint}\n        />\n    )\n}\n\nfunction IntervalMesh({pushOverPull, tensegrity, interval, selected, storedState, toggleInterval}: {\n    pushOverPull: FloatFeature,\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    storedState: IStoredState,\n    toggleInterval?: (event: DomEvent) => void,\n}): JSX.Element | null {\n\n    const material = isIntervalVisible(interval, storedState) ? roleMaterial(interval.intervalRole) : SUBDUED_MATERIAL\n    const stiffness = tensegrity.instance.floatView.stiffnesses[interval.index]\n    const radius = RADIUS_FACTOR * stiffness * (isPushRole(interval.intervalRole) ? pushOverPull.numeric : 1.0) * (selected ? 3 : 1)\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n    const length = intervalLength(interval)\n    const intervalScale = new Vector3(radius, length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={toggleInterval}\n        />\n    )\n}\n\nfunction Faces({tensegrity, stage, clickFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    clickFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        clickFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial\n                attach=\"material\"\n                transparent={true}\n                side={FrontSide}\n                opacity={0.4}\n                color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaMale, FaPlay, FaRunning, FaSignOutAlt, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version, versionFromUrl } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { emptySelection, ISelection, percentOrHundred } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { SelectionMode } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript | undefined {\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    } else {\n        const fromUrl = getCodeFromUrl()\n        if (fromUrl) {\n            return fromUrl\n        }\n        if (state.demoCount >= 0) {\n            return BOOTSTRAP[state.demoCount % BOOTSTRAP.length]\n        }\n    }\n    return undefined\n}\n\nexport function TensegrityView({createInstance, worldFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selection, setSelection] = useState<ISelection>(emptySelection)\n\n    const [rootTenscript, setRootTenscript] = useState(() => {\n        const codeToRun = getCodeToRun(storedState$.getValue())\n        if (codeToRun) {\n            return codeToRun\n        }\n        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n        return BOOTSTRAP[0]\n    })\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [selectionMode, setSelectionMode] = useState(SelectionMode.SelectNone)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [demoCount, updateDemoCount] = useState(storedState$.getValue().demoCount)\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            if (storedState.demoCount < 0) {\n                updateDemoCount(storedState.demoCount)\n            } else if (storedState.demoCount > demoCount) {\n                if (demoCount + 1 === BOOTSTRAP.length) {\n                    setRootTenscript(BOOTSTRAP[0])\n                    setTimeout(() => {\n                        transition(storedState$, {demoCount: -1, fullScreen: false, rotating: false})\n                    }, 200)\n                } else {\n                    updateDemoCount(storedState.demoCount)\n                    setRootTenscript(BOOTSTRAP[storedState.demoCount])\n                }\n            }\n            updatePolygons(storedState.polygons)\n            updateRotating(storedState.rotating)\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(worldFeatures).map(k => worldFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe(() => {\n                if (tensegrity) {\n                    tensegrity.instance.applyFeature(feature)\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        transition(storedState$, {polygons: false})\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => runTenscript(rootTenscript), 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        transition(storedState$, {fullScreen: value})\n    }\n\n    return (\n        <>\n            {fullScreen ? demoCount >= 0 ? undefined : (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        worldFeatures={worldFeatures}\n                        rootTenscript={rootTenscript}\n                        tensegrity={tensegrity}\n                        selection={selection}\n                        shapeSelection={selectionMode}\n                        setShapeSelection={setSelectionMode}\n                        clearSelection={() => setSelection(emptySelection)}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        {demoCount >= 0 ? (\n                            <div id=\"bottom-right\">\n                                <ButtonGroup>\n                                    <Button\n                                        color=\"success\"\n                                        onClick={() => {\n                                            transition(storedState$, {\n                                                demoCount: -1,\n                                                fullScreen: false,\n                                                rotating: false,\n                                            })\n                                        }}\n                                    >\n                                        <FaSignOutAlt/> Exit demo\n                                    </Button>\n                                </ButtonGroup>\n                            </div>\n                        ) : (\n                            <div>\n                                <div id=\"bottom-right\">\n                                    <ButtonGroup>\n                                        <Button\n                                            color={rotating ? \"warning\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {rotating: !rotating})}\n                                        >\n                                            <FaSyncAlt/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <ButtonGroup>\n                                        <Button\n                                            disabled={!polygons}\n                                            color={!polygons ? \"success\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {polygons: false})}\n                                        >\n                                            <FaRunning/>\n                                        </Button>\n                                        <Button\n                                            disabled={polygons}\n                                            color={polygons ? \"success\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {polygons: true})}\n                                        >\n                                            <FaMale/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                            </div>\n                        )}\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: polygons || selectionMode !== SelectionMode.SelectNone ? \"#f0ad4e\" : \"black\",\n                                cursor: selectionMode !== SelectionMode.SelectNone ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    pushOverPull={worldFeatures[WorldFeature.PushOverPull]}\n                                    tensegrity={tensegrity}\n                                    selection={selection}\n                                    setSelection={setSelection}\n                                    shapeSelection={selectionMode}\n                                    polygons={polygons}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { percentFromFactor, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n            ) => {\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, percentOrHundred(), gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = percentFromFactor(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), scale, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => {\n                const sphereInstance = createInstance(false)\n                FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n                return new TensegritySphere(at, 0.7, frequency, 0.52, numeric, sphereInstance)\n            }\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   worldFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}