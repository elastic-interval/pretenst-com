{"version":3,"sources":["pretenst.ts","fabric/eig-util.ts","fabric/tensegrity-types.ts","fabric/tensegrity-optimizer.ts","bridge/bridge-logic.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/fabric-instance.ts","fabric/tenscript.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/life.ts","fabric/tensegrity-builder.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/island-geometry.ts","gotchi/island.ts","gotchi/patch.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","view/orbit.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/frozen-tab.tsx","view/life-stage-button.tsx","view/shape-tab.tsx","view/feature-panel.tsx","view/live-tab.tsx","view/realize-tab.tsx","view/tenscript-tab.tsx","view/control-tabs.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["PHI","roleDefaultLength","intervalRole","IntervalRole","NexusPush","ColumnPush","Triangle","Ring","Math","sqrt","Cross","CROSS1","BowMid","BowEnd","RibbonPush","RIBBON_WIDTH","RibbonShort","RIBBON_STEP_LENGTH","RibbonLong","RibbonHanger","Error","Y_AXIS","Vector3","FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","FaceConnector","FaceDistancer","FaceAnchor","SpherePush","SpherePull","Version","Spin","FaceName","ADJUSTABLE_INTERVAL_ROLES","role","isPushInterval","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","max","toFixed","sub","a","b","subVectors","normalize","avg","addVectors","midpoint","points","mid","forEach","point","add","multiplyScalar","length","oppositeSpin","spin","Left","Right","FACE_NAMES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","jointLocation","instance","index","jointDistance","distanceTo","intervalLocation","alpha","omega","intervalLength","acrossPush","joint","push","otherJoint","interval","locationFromFace","face","ends","locationFromFaces","faces","reduce","accum","percentOrHundred","percent","_","factorFromPercent","percentFromFactor","factor","faceFromTwist","twist","faceName","scaleToInitialStiffness","scale","scaleFactor","pow","TensegrityOptimizer","tensegrity","countdown","this","pairs","findPush","jointIndex","intervals","i","isPush","find","crosses","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","intervalB","indexB","bAlpha","bOmega","x","y","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","stiffness","linearDensity","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","console","log","includeInterval","pushOverPull","numericFeature","PushOverPull","floatView","strains","getAverageStrain","toAverage","included","sum","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffnesses","value","linearDensities","adjustedStiffness","restoreSnapshot","fabric","copy_material","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","ShapingStiffnessFactor","PretensingCountdown","VisualStrain","PretenstFactor","StiffnessFactor","ribbon","ribbonShort","ribbonLong","left","z","ribbonJoint","createJoint","joints","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","identities","arch","group","shift","distance","name","hook","sortXY","aa","bb","lengthSq","sort","extractHooks","hanger","rj","floor","hookJoint","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","join","extractJointFile","csvIntervals","j","type","strain","extractIntervalFile","csvSubmerged","anchor","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","reverse","c","Color","setHex","SURFACE","MeshPhongMaterial","color","side","DoubleSide","opacity","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECT_MATERIAL","JOINT_MATERIAL","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","SUBDUED_MATERIAL","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","UP","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","addScaledVector","Face3","addSurfaceGeometry","v","patchesGeometry","material","BridgeView","useState","life$","getValue","life","updateLife","getFabricOutput","useEffect","subscribe","unsubscribe","id","style","position","right","height","ButtonGroup","vertical","Button","onClick","backgroundColor","Camera","BridgeScene","perspective","useThree","camera","viewContainer","document","getElementById","orbit","useUpdate","orb","minPolarAngle","maxPolarAngle","PI","minDistance","maxDistance","SPACE_RADIUS","zoomSpeed","enableZoom","target","set","update","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","control","current","copy","iterate","transition","autoRotate","rotateSpeed","adoptLengths","Pretenst","ref","args","key","lineGeometry","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","unit","unitVector","rotation","Quaternion","setFromUnitVectors","intervalRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","matrixWorldNeedsUpdate","end","props","useRef","setDefaultCamera","fov","updateMatrixWorld","FORWARD","RIGHT","vectorFromArray","array","vector","offset","FabricInstance","eig","jointCount","worldObject","fabricObject","world","view","empty","Float32Array","intervalCount","faceCount","BufferGeometry","faceGeometry","jointLocations","jointVelocities","unitVectors","idealLengths","strainLimits","strainNuances","createEmptyFloatView","adoptFabric","forward","featuresToApply","fabricBackup","free","View","on_fabric","Fabric","new","requestedStage","set_float_value","worldFeature","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","facePosition","faceNormal","normal","copy_joint_locations_to","copy_joint_velocities_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","crossVectors","MarkAction","treeNeedsOmniTwist","d","B","C","D","Mb","Mc","Md","MB","MC","MD","treeToCode","tree","s","treeToTenscript","mainTree","marks","fromUrl","mainCode","spinChar","markSections","mark","action","Subtree","BaseFace","JoinFaces","FaceDistance","Anchor","format","subtreesCode","code","isDirection","char","faceMark","isDigit","toNumber","digits","match","parseCode","parts","split","foundName","part","endsWith","main","parseMain","markCode","eq","Number","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","error","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","matches","parseFloat","submerged","e","message","noParseErrors","ControlTab","BOOTSTRAP","script","grow","afterTree","omni","twistToMark","treeWithMarks","builder","baseFace","newTwist","createTwistOn","thisFace","reorient","execute","before","activeBuds","bud","decremented","A","apply","middle","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationX","rotate","makeRotationY","getInverse","multiply","reorientMatrix","childTree","brickMark","markTree","deleteFaceMark","getRecentTenscript","state","recentCode","tenscript","partial","nonce","saveState","storedState","localStorage","setItem","loadState","toConfig","item","getItem","parse","DEFAULT_FEATURE_VALUES","record","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Grow","fullScreen","polygons","rotating","visibleRoles","pushBottom","pushTop","pullBottom","pullTop","initialStoredState","featureConfig","percents","Antigravity","ShapingDrag","ShapingPretenstFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","next","createFloatFeatures","features","Life","_stage","tx","adopt_lengths","faceIntervals","removeFaceInterval","faceAnchors","removeFaceAnchor","snapshot","stiffnessesFromStrains","TensegrityBuilder","createTwistAt","twistScale","baseFactor","bottom","createTwist","faceTwistPoints","bottomTopFace","top","createOmniTwist","connect","connectRoles","trianglePoints","faceToOriginMatrix","centerBrickFaceIntervals","averageScaleFactor","where","omniTwist","opposing","faceLocation","closestFace","createFaceConnector","pullScale","distancers","faceA","faceB","createFaceDistancer","connectFaceInterval","alphaEnds","omegaEnds","ringLengths","ringLength","rotatedWalk","bestRotation","minLength","rotateForBestRing","faceInterval","connector","scaleToFaceConnectorLength","createFaceAnchor","firstTwistPoints","bottomTwist","topTwist","omniRoles","ring","down","up","connectPulls","createFaceTouching","facePulls","pull","thirdForward","thirdReverse","createFace","topFace","topTouching","bottomFace","bottomTouching","roles","reverseA","forwardB","offsetA","offsetB","removeFace","columnRole","createIJoint","alphaFace","omegaFace","create_face","currentLength","idealLength","abs","omniA","omniB","base","angle","cos","sin","twistPoints","initialLength","tinyRadius","radials","norm","ab","bc","ca","Tensegrity","buds","transitionQueue","createBud","executeTransition","create_joint","newJoint","createFaceInterval","omegaJointIndex","anchor_joint","restLength","create_interval","removed","existing","eliminateInterval","coundown","multiply_rest_length","set_interval_role","change_rest_length","remove_face","lifeTransition","activeCode","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","finish_growing","checkFaceIntervals","joint1","joint2","pushRadius","pullRadius","jointRadius","is_anchor_joint","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","oppositeJoint","chords","pushToA","dot","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","alphaIndex","omegaIndex","faceConnectorLengthFromScale","remove_interval","GeneName","faceToOrigin","createFaceIntervals","MODIFIER_NAMES","Forward","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","shapingTime","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","m","checkDirection","nextStage","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","center","quaternionForDirection","distanceFromTarget","loc","topJoint","toTarget","degreeForward","degreeRight","oppositeFace","findLimb","oppositeLimb","opposite","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","pop","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","PatchCharacter","ARROW_GEOMETRY","geom","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","p","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","evolutionPhase","countdownToEvolution","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","approachDistance","object","positionToTarget","deltaDistance","Developing","Resting","g","resting","Running","running","Evolving","withReducedCyclePattern","evolving","treeNumber","wasSeconds","time","isSeconds","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","transparent","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestLife","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","toRunning","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","deadInterval","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","SphereBuilder","sphere","VERTEX","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","hubs","spokes","segmentLength","hub","spoke","pullsForSpoke","set_altitude","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","sphereNumeric","STATE","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","enabled","enableRotate","enablePan","keyPanSpeed","autoRotateSpeed","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","BOTTOM","ORBIT","ZOOM","MIDDLE","PAN","zoom","inverse","event","preventDefault","button","clientX","clientY","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","setFromSpherical","lookAt","distanceToSquared","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","panLeft","panUp","dollyScale","updateProjectionMatrix","extend","FREQUENCIES","SphereView","createSphere","setPolygons","freq","f","setFrequency","setSphere","disabled","fabricOutput","SphereScene","toMidpoint","PolygonView","CYLINDER","CylinderGeometry","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","omegaLocation","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","otherSpokes","closest","distanceA","FrozenTab","worldFeatures","updatePolygons","updateVisibleRoles","subscription","newState","Grouping","size","StrainSlider","domain","values","setValues","setBottom","setTop","nuanceToStrain","nuance","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","ShapeSelection","FeaturePanel","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LiveTab","centralize","LifeStageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","Symbol","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","ShapeTab","selectedIntervals","setFabric","shapeSelection","setShapeSelection","selectedFaces","clearSelection","pushAndPull","setPushAndPull","set_push_and_pull","subscriptions","adjustValue","changeIntervalScale","disableUnlessFaceCount","None","Faces","Intervals","replaceCrosses","RealizeTab","updateFabricState","disabledLifeStage","active","changed","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","borderColor","Input","changeEvent","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Shape","Live","Realize","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","SPHERE","SphereGeometry","AMBIENT_COLOR","SPACE_GEOMETRY","FabricView","toggleSelectedInterval","setSelectedFaces","whyThis","updateWhyThis","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateInstance","updateStoredState","ALTITUDE","far","near","towardsTarget","LineView","selectFace","faceToToggle","some","selected","SelectedFace","r","strainNuance","intervalStrainNuance","isIntervalVisible","SelectedInterval","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","intersectObjects","intersection","FrontSide","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","setSelectedIntervals","updateRotating","updateFullScreen","newTenscript","set_surface_character","featureSubscriptions","applyFeature","timer","setTimeout","clearTimeout","visibility","TopMiddle","tenscriptError","toTenscript","root","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","bridgeInstance","sphereInstance","at","floatFeatures","registerServiceWorker"],"mappings":"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","file":"static/js/4.d59cd907.chunk.js","sourcesContent":["/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { IntervalRole } from \"eig\"\n\nconst ROOT2 = 1.414213562373095\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst RIBBON_WIDTH = 6\nconst RIBBON_STEP_LENGTH = 6\nconst CROSS1 = 0.5\nconst CROSS2 = (PHI / 3 - 1 / 6) * ROOT3\nconst CROSS3 = PHI / 3 * ROOT3 - 1 + ROOT2 / ROOT3\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return PHI\n        case IntervalRole.ColumnPush:\n            return ROOT2\n        case IntervalRole.Triangle:\n            return 1\n        case IntervalRole.Ring:\n            return Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\n        case IntervalRole.Cross:\n            return Math.sqrt(CROSS1 * CROSS1 + CROSS2 * CROSS2 + CROSS3 * CROSS3)\n        case IntervalRole.BowMid:\n            return 0.4\n        case IntervalRole.BowEnd:\n            return 0.6\n        case IntervalRole.RibbonPush:\n            return Math.sqrt(RIBBON_WIDTH * RIBBON_WIDTH + RIBBON_STEP_LENGTH * RIBBON_STEP_LENGTH)\n        case IntervalRole.RibbonShort:\n            return RIBBON_STEP_LENGTH / 2\n        case IntervalRole.RibbonLong:\n            return RIBBON_WIDTH\n        case IntervalRole.RibbonHanger:\n            return 1\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport const PUSH_RADIUS = 0.02\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const Y_AXIS = new Vector3(0, 1, 0)\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"NP\"\n        case IntervalRole.ColumnPush:\n            return \"CP\"\n        case IntervalRole.Triangle:\n            return \"TR\"\n        case IntervalRole.Ring:\n            return \"RI\"\n        case IntervalRole.Cross:\n            return \"CR\"\n        case IntervalRole.BowMid:\n            return \"BM\"\n        case IntervalRole.BowEnd:\n            return \"BE\"\n        case IntervalRole.RibbonPush:\n            return \"RP\"\n        case IntervalRole.RibbonShort:\n            return \"RS\"\n        case IntervalRole.RibbonLong:\n            return \"RL\"\n        case IntervalRole.RibbonHanger:\n            return \"RH\"\n        case IntervalRole.FaceConnector:\n            return \"FC\"\n        case IntervalRole.FaceDistancer:\n            return \"FD\"\n        case IntervalRole.FaceAnchor:\n            return \"FA\"\n        case IntervalRole.SpherePush:\n            return \"SB\"\n        case IntervalRole.SpherePull:\n            return \"SC\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.NexusPush:\n            case IntervalRole.ColumnPush:\n            case IntervalRole.Triangle:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushInterval(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n        case IntervalRole.ColumnPush:\n        case IntervalRole.RibbonPush:\n        case IntervalRole.SpherePush:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(next, current).normalize())\n    }\n    return norm.normalize()\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { JOINT_RADIUS } from \"../pretenst\"\n\nimport { intervalRoleName, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {Left, Right}\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n    }\n}\n\nexport function spinChar(spin: Spin): string {\n    return spin === Spin.Left ? \"L\" : \"R\"\n}\n\nexport enum FaceName {NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP}\n\nexport const FACE_NAMES = [FaceName.NNN, FaceName.PNN, FaceName.NPN, FaceName.NNP, FaceName.NPP, FaceName.PNP, FaceName.PPN, FaceName.PPP]\n\nexport const FACE_DIRECTIONS = \"aBCDbcdA\"\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    instance: FabricInstance\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function intervalStrainNuance({alpha, index}: IInterval): number {\n    return alpha.instance.floatView.strainNuances[index]\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IFace {\n    index: number\n    omni: boolean\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    mark?: IFaceMark\n}\n\nexport interface IFaceInterval {\n    index: number\n    alpha: IFace\n    omega: IFace\n    connector: boolean\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFaceAnchor {\n    index: number\n    alpha: IFace\n    omega: IJoint\n    removed: boolean\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface ITwist {\n    faces: IFace[]\n    scale: IPercent\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n\nexport function locationFromTwist(twist: ITwist): Vector3 {\n    const gatherJoints = (array: IJoint[], push: IInterval) => {\n        array.push(push.alpha, push.omega)\n        return array\n    }\n    return twist.pushes\n        .reduce(gatherJoints, [])\n        .reduce((loc, joint) => loc.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / (twist.pushes.length * 2))\n}\n\nexport function faceFromTwist(twist: ITwist, faceName: FaceName): IFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.NNN:\n                    return twist.faces[0]\n                case FaceName.PPP:\n                    return twist.faces[1]\n            }\n            break\n        case 8: // aBCDbcdA\n            switch (faceName) {\n                case FaceName.NNN: // a\n                    return twist.faces[0]\n                case FaceName.PNN: // B\n                    return twist.faces[2]\n                case FaceName.NPN: // C\n                    return twist.faces[1]\n                case FaceName.NNP: // D\n                    return twist.faces[3]\n                case FaceName.NPP: // b\n                    return twist.faces[4]\n                case FaceName.PNP: // c\n                    return twist.faces[5]\n                case FaceName.PPN: // d\n                    return twist.faces[6]\n                case FaceName.PPP: // A\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function faceConnectorLengthFromScale(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => interval.isPush)\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(mid)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationX(Math.PI * -0.27)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { factorFromPercent, IInterval, IJoint, IPercent, jointLocation } from \"./tensegrity-types\"\n\nexport function scaleToInitialStiffness(scale: IPercent): number {\n    const scaleFactor = factorFromPercent(scale)\n    return Math.pow(scaleFactor, 0.6) * 0.001\n}\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = jointLocation(intervalA.alpha)\n            const aOmegaLoc = jointLocation(intervalA.omega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = jointLocation(intervalB.alpha)\n                const bOmegaLoc = jointLocation(intervalB.omega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            const stiffness = scaleToInitialStiffness(scale)\n            const linearDensity = Math.sqrt(stiffness)\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale, stiffness, linearDensity, countdown)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n\n    public stiffnessesFromStrains(includeInterval: (interval: IInterval) => boolean): void {\n        const pushOverPull = this.tensegrity.numericFeature(WorldFeature.PushOverPull)\n        const {stiffnesses, linearDensities} = adjustedStiffness(this.tensegrity, includeInterval, pushOverPull)\n        this.tensegrity.instance.restoreSnapshot()\n        this.tensegrity.fabric.copy_material(stiffnesses, linearDensities)\n    }\n}\n\nfunction adjustedStiffness(tensegrity: Tensegrity, includeInterval: (interval: IInterval) => boolean, pushOverPull: number): {\n    stiffnesses: Float32Array,\n    linearDensities: Float32Array,\n} {\n    const floatView = tensegrity.instance.floatView\n    const strains: Float32Array = floatView.strains\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const included = toAverage.filter(includeInterval)\n        const totalStrain = included.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / included.length\n    }\n    const intervals = tensegrity.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        if (!includeInterval(interval)) {\n            return 1\n        }\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffnesses = floatView.stiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = floatView.linearDensities.map((value, index) => Math.sqrt(value * value * changes[index]))\n    return {stiffnesses, linearDensities}\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { scaleToInitialStiffness } from \"../fabric/tensegrity-optimizer\"\nimport {\n    FaceName,\n    IFace,\n    IInterval,\n    IJoint,\n    jointDistance,\n    jointLocation,\n    percentFromFactor,\n    percentOrHundred,\n} from \"../fabric/tensegrity-types\"\nimport { roleDefaultLength } from \"../pretenst\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\nconst RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst AnchorLength = 5\nconst AnchorScale = 110\n\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 200.0\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = roleDefaultLength(IntervalRole.RibbonShort)\n    const ribbonLong = roleDefaultLength(IntervalRole.RibbonLong)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location)\n        const ribbonJoint: IJoint = {index: jointIndex, instance: tensegrity.instance}\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = intervalRole === IntervalRole.RibbonPush ? RibbonPushDensity : Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 100)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.RibbonLong)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.RibbonLong)\n        interval(curr[2], curr[3], IntervalRole.RibbonLong)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.RibbonShort)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.RibbonPush)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.RibbonPush)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.RibbonPush)\n        interval(prev[1], curr[0], IntervalRole.RibbonPush)\n        interval(prev[2], curr[3], IntervalRole.RibbonPush)\n        interval(prev[3], curr[2], IntervalRole.RibbonPush)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.RibbonHanger\n        const length = jointDistance(alpha, omega)\n        const scale = percentFromFactor(length)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 10)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.ends[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    tensegrity.faces.forEach(face => {\n        // const gatherAncestors = (f: IFace, id: FaceName[]): Arch => {\n        // const definition = BRICK_FACE_DEF[f.faceName]\n        // id.push(definition.negative ? definition.opposite : definition.name)\n        // const parentFace = f.brick.parentFace\n        // if (parentFace) {\n        //     return gatherAncestors(parentFace, id)\n        // } else {\n        //     return archFromFaceName(f.faceName)\n        // }\n        // return Arch.FrontRight\n        // }\n        const identities: FaceName[] = []\n        const arch = Arch.FrontRight // TODO: This is wrong! Just so it will compile.\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isFaceExtremity(group)) {\n            return\n        }\n        const distance = identities.length\n        face.ends.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${FaceName[group]}]:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        // switch (hook.faceName) {\n        //     case FaceName.NPN:\n        //         return arch === Arch.BackRight\n        //     case FaceName.NNP:\n        //         return arch === Arch.FrontRight\n        //     case FaceName.PNP:\n        //         return arch === Arch.BackLeft\n        //     case FaceName.PPN:\n        //         return arch === Arch.FrontLeft\n        //     default:\n        //         return false\n        // }\n        return true // TODO: this is wrong!\n    }\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = jointLocation(a.face.ends[a.jointIndex])\n        const bb = jointLocation(b.face.ends[b.jointIndex])\n        return aa.lengthSq() - bb.lengthSq()\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\n// function archFromFaceName(faceName: FaceName): Arch {\n//     switch (faceName) {\n//         case FaceName.NNN:\n//             return Arch.BackLeft\n//         case FaceName.PNN:\n//             return Arch.BackRight\n//         case FaceName.NPP:\n//             return Arch.FrontLeft\n//         case FaceName.PPP:\n//             return Arch.FrontRight\n//         default:\n//             throw new Error(\"Strange arch\")\n//     }\n// }\n\nfunction isFaceExtremity(faceName: FaceName): boolean {\n    return false // TODO\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    anchor: boolean\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport {\n    Color,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n} from \"three\"\n\nexport const SELECTION_COLOR = \"#91934f\"\nexport const JOINT_COLOR = \"#343434\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#181818\"),\n    side: DoubleSide,\n    opacity: 0.5,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n})\n\nexport const JOINT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(JOINT_COLOR),\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"#8955fa\"\n        case IntervalRole.ColumnPush:\n            return \"#2b38ff\"\n        case IntervalRole.Triangle:\n            return \"#d0c61a\"\n        case IntervalRole.Ring:\n            return \"#ff5c2b\"\n        case IntervalRole.Cross:\n            return \"#28c245\"\n        case IntervalRole.BowMid:\n            return \"#4393b3\"\n        case IntervalRole.BowEnd:\n            return \"#4393b3\"\n        case IntervalRole.FaceConnector:\n            return \"#fe0105\"\n        case IntervalRole.FaceDistancer:\n            return \"#9e9b02\"\n        case IntervalRole.FaceAnchor:\n            return \"#dc5bf8\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n\nexport const SUBDUED_MATERIAL = new MeshLambertMaterial({color: \"#1d1d1d\"})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z).multiplyScalar(4)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, DomEvent, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { Life } from \"../fabric/life\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalLength, intervalLocation, jointLocation } from \"../fabric/tensegrity-types\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, SPACE_RADIUS, SPACE_SCALE } from \"../pretenst\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function getFabricOutput(): IFabricOutput {\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(life.stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput())}><FaDownload/>\n                        <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(getFabricOutput())}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} life={life}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, life}: { tensegrity: Tensegrity, life: Life }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(0, 50, 0)\n        orb.update()\n    }, [])\n\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        control.target.copy(tensegrity.instance.midpoint)\n        control.update()\n        const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (life.stage === Stage.Growing) {\n                    tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    control.autoRotate = true\n                    control.rotateSpeed = 5\n                    tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (life.stage === Stage.Pretensing) {\n                    tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => (\n                            <IntervalMesh key={`I${interval.index}`} tensegrity={tensegrity} interval={interval}/>\n                        ))}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = intervalLength(interval)\n    const intervalRadius = interval.isPush ? PUSH_RADIUS : PULL_RADIUS\n    const intervalScale = new Vector3(intervalRadius, length + (interval.isPush ? -JOINT_RADIUS * 2 : 0), intervalRadius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.alpha)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.omega)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.ends.map(end => (\n                <mesh\n                    key={`hook-${end.index}`}\n                    position={jointLocation(end)}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { FloatFeature } from \"./float-feature\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nconst vectorFromArray = (array: Float32Array, index: number, vector?: Vector3): Vector3 => {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    jointVelocities: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(requestedStage: Stage): Stage | undefined {\n        const stage = this.fabric.iterate(requestedStage, this.world)\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        this.refreshFloatView()\n        return stage\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.jointVelocities = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_joint_velocities_to(floatView.jointVelocities)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, jointVelocities: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    FACE_DIRECTIONS,\n    FACE_NAMES,\n    faceFromTwist,\n    FaceName,\n    IFaceMark,\n    IPercent,\n    ITwist,\n    jointLocation,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChar,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'Zero':(0)\",\n    \"'One':(1)\",\n    \"'Six':(6)\",\n    \"'Axoneme':(30,S95)\",\n    \"'Knee':(3,b3)\",\n    \"'Snelson Star':(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\",\n    \"'Tripod with Knees':R(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\",\n    \"'Pretenst Lander':(B(15,S90),C(15,S90),D(15,S90))\",\n    \"'Zig Zag Loop':(d(3,MA0),c(7,b(7,d(7,d(7,d(7,d(3,MA0)))))))\",\n    \"'Bulge Ring':(A(15,S90, MA1), a(16, S90, MA1))\",\n    \"'Ring':(A(19,MA1),a(18,MA1))\",\n    \"'Convergence':(a1,b(15,S90,MA1),c(15,S90,MA1),d(15,S90,MA1))\",\n    \"'Halo by Crane':L(5,S95,b(14,S90,MA1),d(15,S90,MA1))\",\n    \"'Thick Tripod':(A3,B(8,MA1),C(8,MA1),D(8,MA1)):1=face-distance-35\",\n    \"'Diamond':R(a(5,b(5,c(5,c(2,MA3)),d(5,b(2,MA4))),c(5,d(5,b(2,MA5)),c(5,c(2,MA1))),d(5,c(5,c(2,MA6)),d(5,b(2,MA2)))),b(5,b(5,d(2,MA3)),c(5,c(2,MA2))),c(5,b(5,d(2,MA6)),c(5,c(2,MA5))),d(5,c(5,c(2,MA4)),b(5,d(2,MA1))))\",\n    \"'Composed':(6,b(4,MA0),c(4,MA0),d(4,MA0)):0=subtree(b5,c5,d5)\",\n    \"'Equus Lunae':L(A(16,S95,Mb0),b(16,S95,Md0),a(16,S95,Md0),B(16,Mb0,S95)):0=face-distance-60\",\n    \"'Infinity':(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Binfinity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Mobiosity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3))\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeNeedsOmniTwist({_, b, c, d, B, C, D, Mb, Mc, Md, MB, MC, MD}: ITenscriptTree): boolean {\n    return !!(b || c || d || B || C || D || Mb || Mc || Md || MB || MC || MD)\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    spin: Spin,\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(name: string, spin: Spin, mainTree: ITenscriptTree, marks: Record<number, IMark>, fromUrl: boolean): ITenscript {\n    const mainCode = spinChar(spin) + treeToCode(mainTree)\n    const markSections: string[] = []\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=subtree${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, spin, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return FACE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(faceName: FaceName, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[FACE_DIRECTIONS[faceName]]\n}\n\nfunction faceMark(faceName: FaceName, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${FACE_DIRECTIONS[faceName]}`]\n}\n\nfunction deleteFaceMark(faceName: FaceName, tree: ITenscriptTree): void {\n    tree[`M${FACE_DIRECTIONS[faceName]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseMain(main: string): { mainCode: string, spin: Spin } {\n    const spin = main.startsWith(\"R\") ? Spin.Right : Spin.Left\n    const mainCode = main.substring(main.indexOf(\"(\"))\n    return {mainCode, spin}\n}\n\nfunction parseCode(code: string): { name: string, spin: Spin, mainCode: string, markCode: Record<number, string> } {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => part.match(/[LR]?\\(.*\\)/))\n    const {mainCode, spin} = parseMain(foundMain || \"(0)\")\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    const name = foundName ? foundName.replace(/'/g, \"\") : \"\"\n    return {name, spin, mainCode, markCode}\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, spin, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, spin, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IBud {\n    builder: TensegrityBuilder\n    tree: ITenscriptTree\n    twist: ITwist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: ITenscriptTree): void {\n    FACE_NAMES.forEach(thisFace => {\n        const mark = faceMark(thisFace, treeWithMarks)\n        if (!mark) {\n            return\n        }\n        faceFromTwist(twistToMark, thisFace).mark = mark\n    })\n}\n\nfunction grow({builder, twist, marks}: IBud, afterTree: ITenscriptTree, faceName: FaceName, omni: boolean, scale: IPercent): IBud {\n    const baseFace = faceFromTwist(twist, faceName)\n    const newTwist = builder.createTwistOn(baseFace, scale, omni)\n    if (afterTree._ === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, builder, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, builder, reorient} = bud\n        const forward = tree._\n        if (forward) {\n            const decremented = forward - 1\n            const afterTree = {...tree, _: decremented}\n            const omni = treeNeedsOmniTwist(tree) && decremented === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.PPP, omni, percentOrHundred(tree.S)))\n            return\n        }\n        if (reorient) {\n            const {A, a, B, b} = tree\n            const abOrientation = !(!a || !A || !b || !B)\n            if (abOrientation) {\n                const points = builder.tensegrity.joints.map(jointLocation)\n                builder.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = childTree(faceName, tree)\n            const brickMark = faceMark(faceName, tree)\n            if (subtree) {\n                const decremented = subtree._ ? subtree._ - 1 : 0\n                const afterTree = {...subtree, _: decremented}\n                const omni = treeNeedsOmniTwist(subtree) && decremented === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, percentOrHundred(subtree.S)))\n            } else if (brickMark) {\n                const mark = marks[brickMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(faceName, tree)\n                    const omni = treeNeedsOmniTwist(markTree)\n                    activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { IInterval, intervalStrainNuance } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Realize = \"Realize\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-07-08\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    recentCode: Record<string, string>\n    controlTab: ControlTab\n    fullScreen: boolean\n    polygons: boolean\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nexport function addRecentCode(state: IStoredState, {code, name}: ITenscript): IStoredState {\n    const recentCode = {...state.recentCode}\n    recentCode[name] = code\n    return transition(state, {recentCode})\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return Object.keys(state.recentCode).map(key => {\n        const code = state.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function transition(state: IStoredState, partial: Partial<IStoredState>): IStoredState {\n    return {...state, nonce: state.nonce + 1, ...partial}\n}\n\nfunction initialStoredState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        fullScreen: true,\n        polygons: false,\n        rotating: false,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = intervalStrainNuance(interval)\n    if (interval.isPush) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Shaping Stiffness factor\",\n                percents: [20, 50, 100, 150, 200, 250, 300],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness Factor\",\n                percents: [5, 25, 50, 100, 150, 200, 250, 300, 400, 500],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 2000, 3000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            storedState$.next(transition(storedState, {featureValues}))\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityOptimizer } from \"./tensegrity-optimizer\"\nimport { jointLocation } from \"./tensegrity-types\"\n\nexport interface ILifeTransition {\n    stage: Stage\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (worldFeature: WorldFeature) => number, private tensegrity: Tensegrity, stage: Stage) {\n        this._stage = stage\n    }\n\n    public executeTransition(tx: ILifeTransition): Life {\n        this.transition(tx)\n        this._stage = tx.stage\n        return new Life(this.numericFeature, this.tensegrity, tx.stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition({stage, adoptLengths, strainToStiffness}: ILifeTransition): void {\n        const tensegrity = this.tensegrity\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            const faceIntervals = [...tensegrity.faceIntervals]\n                            faceIntervals.forEach(interval => tensegrity.removeFaceInterval(interval))\n                            const faceAnchors = [...tensegrity.faceAnchors]\n                            faceAnchors.forEach(interval => tensegrity.removeFaceAnchor(interval))\n                            tensegrity.instance.snapshot()\n                        }\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Pretensing:\n                switch (stage) {\n                    case Stage.Pretenst:\n                        return\n                }\n                break\n            case Stage.Pretenst:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (strainToStiffness) {\n                            new TensegrityOptimizer(tensegrity).stiffnessesFromStrains(interval => {\n                                switch (interval.intervalRole) {\n                                    case IntervalRole.RibbonPush:\n                                    case IntervalRole.RibbonShort:\n                                    case IntervalRole.RibbonLong:\n                                    case IntervalRole.RibbonHanger:\n                                        return false\n                                    default:\n                                        const alphaY = jointLocation(interval.alpha).y\n                                        const omegaY = jointLocation(interval.omega).y\n                                        const surface = (alphaY + omegaY) < 0.1\n                                        return !surface\n                                }\n                            })\n                            return\n                        }\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            tensegrity.instance.snapshot()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { roleDefaultLength } from \"../pretenst\"\n\nimport { avg, midpoint, normal, sub } from \"./eig-util\"\nimport { IBud, IMark, ITenscript, MarkAction, treeNeedsOmniTwist } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    faceFromTwist,\n    FaceName,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    IPercent,\n    ITwist,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    oppositeSpin,\n    otherJoint,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\n\nconst CYL_SIZE = 3\n\nexport class TensegrityBuilder {\n\n    constructor(public readonly tensegrity: Tensegrity) {\n    }\n\n    public createBud({spin, tree, marks}: ITenscript): IBud {\n        const reorient = tree._ === undefined\n        const omni = treeNeedsOmniTwist(tree) && reorient\n        const twist = this.createTwistAt(new Vector3, spin, percentOrHundred(), omni)\n        return {builder: this, tree, twist, marks, reorient}\n    }\n\n    public createTwistOn(baseFace: IFace, twistScale: IPercent, omni: boolean): ITwist {\n        const baseFactor = factorFromPercent(baseFace.scale)\n        const scale = percentFromFactor(factorFromPercent(twistScale) * baseFactor)\n        if (omni) {\n            const bottom = this.createTwist(faceTwistPoints(baseFace, scale), scale, oppositeSpin(baseFace.spin), IntervalRole.NexusPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.NexusPush)\n            const twist = this.createOmniTwist(bottom, top)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        } else {\n            const points = faceTwistPoints(baseFace, scale)\n            const twist = this.createTwist(points, scale, oppositeSpin(baseFace.spin), IntervalRole.ColumnPush)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        }\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createFaceIntervals(faces: IFace[], mark: IMark): IFaceInterval[] {\n        const centerBrickFaceIntervals = () => {\n            const scale = percentFromFactor(averageScaleFactor(faces))\n            const where = locationFromFaces(faces)\n            const omniTwist = this.createTwistAt(where, Spin.Left, scale, true)\n            this.tensegrity.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.tensegrity.createFaceConnector(closestFace, face)\n            })\n        }\n        switch (mark.action) {\n            case MarkAction.JoinFaces:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            return centerBrickFaceIntervals()\n                        }\n                        return [this.tensegrity.createFaceConnector(faces[0], faces[1])]\n                    case 3:\n                        return centerBrickFaceIntervals()\n                    default:\n                        return []\n                }\n            case MarkAction.FaceDistance:\n                const pullScale = mark.scale\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                const distancers: IFaceInterval[] = []\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        distancers.push(this.tensegrity.createFaceDistancer(faceA, faceB, pullScale))\n                    })\n                })\n                return distancers\n            default:\n                return []\n        }\n    }\n\n    public checkFaceIntervals(faceIntervals: IFaceInterval[], removeInterval: (faceInterval: IFaceInterval) => void): IFaceInterval[] {\n        if (faceIntervals.length === 0) {\n            return faceIntervals\n        }\n        const connectFaceInterval = ({alpha, omega}: IFaceInterval) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega, connectRoles(alpha.omni, omega.omni))\n        }\n        return faceIntervals.filter(faceInterval => {\n            if (faceInterval.connector) {\n                const {alpha, omega, scaleFactor} = faceInterval\n                const distance = locationFromFace(alpha).distanceTo(locationFromFace(omega))\n                const closeEnough = distance <= scaleToFaceConnectorLength(scaleFactor) * 10\n                if (closeEnough) {\n                    connectFaceInterval(faceInterval)\n                    removeInterval(faceInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public createFaceAnchor(face: IFace, mark: IMark): IFaceAnchor {\n        if (mark.action !== MarkAction.Anchor) {\n            throw new Error(\"Anchor problem\")\n        }\n        const point = mark.point\n        const scale = mark.scale\n        if (!point || !scale) {\n            throw new Error(\"Missing anchor point specs\")\n        }\n        return this.tensegrity.createFaceAnchor(face, point, scale)\n    }\n\n    // =====================================================\n\n    private createTwistAt(location: Vector3, spin: Spin, scale: IPercent, omni: boolean): ITwist {\n        if (omni) {\n            const bottom = this.createTwist(firstTwistPoints(location, spin, scale), scale, spin, IntervalRole.NexusPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.NexusPush)\n            return this.createOmniTwist(bottom, top)\n        } else {\n            return this.createTwist(firstTwistPoints(location, spin, scale), scale, spin, IntervalRole.ColumnPush)\n        }\n    }\n\n    private createOmniTwist(bottomTwist: ITwist, topTwist: ITwist): ITwist {\n        const {scale} = bottomTwist\n        const omniRoles = {ring: IntervalRole.Triangle, down: IntervalRole.Triangle, up: IntervalRole.Triangle}\n        const connectPulls = this.connect(faceFromTwist(bottomTwist, FaceName.PPP), faceFromTwist(topTwist, FaceName.NNN), omniRoles)\n        const pulls = [...bottomTwist.pulls, ...topTwist.pulls, ...connectPulls]\n        const createFaceTouching = (joint: IJoint, spin: Spin): IFace => {\n            const facePulls = pulls.filter(({alpha, omega}) => joint.index === alpha.index || joint.index === omega.index)\n            const ends = facePulls.map(pull => otherJoint(joint, pull))\n            const thirdForward = pulls.find(({alpha, omega}) => alpha.index === ends[0].index && omega.index === ends[1].index)\n            const thirdReverse = pulls.find(({alpha, omega}) => alpha.index === ends[1].index && omega.index === ends[0].index)\n            ends.push(joint)\n            if (spin === Spin.Left) {\n                ends.reverse()\n            }\n            if (thirdForward) {\n                facePulls.push(thirdForward)\n            } else if (thirdReverse) {\n                facePulls.push(thirdReverse)\n            } else {\n                throw new Error(\"Interval not found\")\n            }\n            const face = <IFace>{index: this.createFace(ends), omni: true, spin, scale, ends, pulls: facePulls}\n            this.tensegrity.faces.push(face)\n            return face\n        }\n        const topFace = topTwist.faces[1]\n        const topTouching = topFace.ends.map(end => createFaceTouching(end, oppositeSpin(topFace.spin)))\n        const bottomFace = bottomTwist.faces[0]\n        const bottomTouching = bottomFace.ends.map(end => createFaceTouching(end, oppositeSpin(bottomFace.spin)))\n        bottomFace.omni = topFace.omni = true\n        const pushes = [...bottomTwist.pushes, ...topTwist.pushes]\n        const faces = [bottomFace, ...bottomTouching, ...topTouching, topFace]\n        return {scale, pushes, pulls, faces}\n    }\n\n    private connect(faceA: IFace, faceB: IFace, roles: IConnectRoles): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const offsetA = faceA.spin === Spin.Left ? 1 : 0\n        const offsetB = faceB.spin === Spin.Left ? 1 : 0\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            pulls.push(this.createInterval(b[index], c[index], scale, roles.ring))\n            pulls.push(this.createInterval(c[index], b[(index + 1) % b.length], scale, roles.ring))\n            pulls.push(this.createInterval(c[index], a[(index + offsetA) % a.length], scale, roles.down))\n            pulls.push(this.createInterval(b[(index + offsetB) % b.length], d[index], scale, roles.up))\n        }\n        this.tensegrity.removeFace(faceB)\n        this.tensegrity.removeFace(faceA)\n        return pulls\n    }\n\n    private createTwist(points: IPoint[], scale: IPercent, spin: Spin, columnRole: IntervalRole): ITwist {\n        const ends = points.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createIJoint(alpha),\n            omega: this.tensegrity.createIJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const alphaEnds = ends.map(({alpha}) => alpha)\n        const omegaEnds = ends.map(({omega}) => omega).reverse()\n        const alphaFace: IFace = {\n            index: this.createFace(alphaEnds),\n            spin, scale, ends: alphaEnds, omni: false,\n            pulls: alphaEnds.map((alpha, index) =>\n                this.createInterval(alpha, alphaEnds[(index + 1) % alphaEnds.length], scale, IntervalRole.Triangle)),\n        }\n        const omegaFace: IFace = {\n            index: this.createFace(omegaEnds),\n            spin, scale, ends: omegaEnds, omni: false,\n            pulls: omegaEnds.map((omega, index) =>\n                this.createInterval(omega, omegaEnds[(index + 1) % omegaEnds.length], scale, IntervalRole.Triangle)),\n        }\n        this.tensegrity.faces.push(alphaFace, omegaFace)\n        const twist: ITwist = {scale, pushes: [], pulls: [], faces: [alphaFace, omegaFace]}\n        ends.forEach(({alpha, omega}) => {\n            const push = this.createInterval(alpha, omega, scale, columnRole)\n            twist.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        ends.forEach(({alpha}, index) => {\n            const offset = spin === Spin.Left ? ends.length - 1 : 1\n            const omega = ends[(index + offset) % ends.length].omega\n            twist.pulls.push(this.createInterval(alpha, omega, scale, IntervalRole.Triangle))\n        })\n        return twist\n    }\n\n    private createFace(ends: IJoint[]): number {\n        return this.tensegrity.fabric.create_face(ends[0].index, ends[1].index, ends[2].index)\n    }\n\n    private createInterval(alpha: IJoint, omega: IJoint, scale: IPercent, intervalRole: IntervalRole): IInterval {\n        const currentLength = jointDistance(alpha, omega)\n        const idealLength = factorFromPercent(scale) * roleDefaultLength(intervalRole)\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(currentLength - idealLength)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return this.tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, countdown)\n    }\n}\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\ninterface IConnectRoles {\n    ring: IntervalRole\n    up: IntervalRole\n    down: IntervalRole\n}\n\nfunction connectRoles(omniA: boolean, omniB: boolean): IConnectRoles {\n    if (!omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Triangle, down: IntervalRole.Triangle}\n    } else if (omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Cross, down: IntervalRole.Triangle}\n    } else if (!omniA && omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Triangle, down: IntervalRole.Cross}\n    } else {\n        throw new Error(\"Cannot create connected twist\")\n    }\n}\n\ninterface IPoint {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction firstTwistPoints(location: Vector3, spin: Spin, scale: IPercent): IPoint[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < CYL_SIZE; index++) {\n        const angle = index * Math.PI * 2 / CYL_SIZE\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return twistPoints(base, spin, scale)\n}\n\nfunction faceTwistPoints(face: IFace, scale: IPercent): IPoint[] {\n    const base = face.ends.map(jointLocation).reverse()\n    return twistPoints(base, oppositeSpin(face.spin), scale)\n}\n\nfunction twistPoints(base: Vector3[], spin: Spin, scale: IPercent): IPoint[] {\n    const initialLength = roleDefaultLength(IntervalRole.Triangle) * factorFromPercent(scale) / Math.sqrt(3)\n    const tinyRadius = initialLength / Math.sqrt(3)\n    const points: IPoint[] = []\n    const mid = midpoint(base)\n    const up = normal(base).multiplyScalar(initialLength)\n    for (let index = 0; index < base.length; index++) {\n        const a = sub(base[index], mid)\n        const b = sub(base[(index + 1) % base.length], mid)\n        const c = sub(base[(index + 2) % base.length], mid)\n        const ab = avg(a, b)\n        const bc = avg(b, c)\n        const ca = avg(c, a)\n        const alpha = new Vector3().copy(mid)\n        const omega = new Vector3().copy(mid).add(up)\n        if (spin === Spin.Left) {\n            alpha.addScaledVector(ab, tinyRadius)\n            omega.addScaledVector(bc, tinyRadius)\n        } else {\n            alpha.addScaledVector(ab, tinyRadius)\n            omega.addScaledVector(ca, tinyRadius)\n        }\n        points.push({alpha, omega})\n    }\n    return points\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { roleDefaultLength } from \"../pretenst\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { intervalRoleName, isPushInterval } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ILifeTransition, Life } from \"./life\"\nimport { execute, IBud, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    faceConnectorLengthFromScale,\n    factorFromPercent,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    intervalLength,\n    IPercent,\n    jointDistance,\n    jointHolesFromJoint,\n    jointLocation,\n    locationFromFace,\n    percentFromFactor,\n    percentOrHundred,\n} from \"./tensegrity-types\"\n\nexport class Tensegrity {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public faceIntervals: IFaceInterval[] = []\n    public faceAnchors: IFaceAnchor[] = []\n    public faces: IFace[] = []\n    public buds?: IBud[]\n    private transitionQueue: ILifeTransition[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly scale: IPercent,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        this.buds = [new TensegrityBuilder(this).createBud(this.tenscript)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public lifeTransition(tx: ILifeTransition): void {\n        const life = this.life$.getValue()\n        if (tx.stage === life.stage) {\n            return\n        }\n        this.life$.next(life.executeTransition(tx))\n    }\n\n    public createJoint(location: Vector3): number {\n        return this.fabric.create_joint(location.x, location.y, location.z)\n    }\n\n    public createIJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public createFaceConnector(alpha: IFace, omega: IFace): IFaceInterval {\n        return this.createFaceInterval(alpha, omega)\n    }\n\n    public createFaceDistancer(alpha: IFace, omega: IFace, pullScale: IPercent): IFaceInterval {\n        return this.createFaceInterval(alpha, omega, pullScale)\n    }\n\n    public createFaceAnchor(alpha: IFace, point: Vector3, scale: IPercent): IFaceAnchor {\n        const intervalRole = IntervalRole.FaceAnchor\n        const omegaJointIndex = this.createJoint(point)\n        this.fabric.anchor_joint(omegaJointIndex)\n        const omega: IJoint = {index: omegaJointIndex, instance: this.instance}\n        this.joints.push(omega)\n        const idealLength = locationFromFace(alpha).distanceTo(point)\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const linearDensity = 0\n        const restLength = -point.y * factorFromPercent(scale)\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceAnchor = {index, alpha, omega, removed: false}\n        this.faceAnchors.push(interval)\n        return interval\n    }\n\n    public removeFaceInterval(interval: IFaceInterval): void {\n        this.faceIntervals = this.faceIntervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public removeFaceAnchor(interval: IFaceAnchor): void {\n        this.faceAnchors = this.faceAnchors.filter(existing => existing.index !== interval.index)\n        interval.alpha.ends.forEach(end => this.fabric.anchor_joint(end.index))\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createInterval(\n        alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent,\n        stiffness: number, linearDensity: number, coundown: number,\n    ): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const scaleFactor = factorFromPercent(scale)\n        const defaultLength = roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPushInterval(intervalRole),\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        this.fabric.set_interval_role(interval.index, intervalRole)\n        this.fabric.change_rest_length(interval.index, factorFromPercent(scaleFactor) * roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public get anchorJoints(): IJoint[] {\n        return this.joints.filter(joint => this.fabric.is_anchor_joint(joint.index))\n    }\n\n    public startTightening(intervals: IFaceInterval[]): void {\n        this.faceIntervals = intervals\n    }\n\n    public set transition(tx: ILifeTransition) {\n        if (tx.stage === undefined) {\n            throw new Error(\"Undefined stage!\")\n        }\n        this.transitionQueue.push(tx)\n    }\n\n    public iterate(): Stage | undefined {\n        const tx = this.transitionQueue.shift()\n        if (tx) {\n            this.lifeTransition(tx)\n        }\n        const stage = this.instance.iterate(this.life$.getValue().stage)\n        if (stage === undefined) {\n            return undefined\n        }\n        const activeCode = this.buds\n        const builder = () => new TensegrityBuilder(this)\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.buds = execute(activeCode)\n            }\n            if (activeCode.length === 0) {\n                this.buds = undefined\n                faceStrategies(this.faces, this.tenscript.marks, builder()).forEach(strategy => strategy.execute())\n                if (stage === Stage.Growing) {\n                    return this.fabric.finish_growing()\n                }\n            }\n            return Stage.Growing\n        }\n        if (this.faceIntervals.length > 0) {\n            this.faceIntervals = builder().checkFaceIntervals(this.faceIntervals, interval => this.removeFaceInterval(interval))\n        }\n        return stage\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public getFabricOutput(pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                const holes = jointHolesFromJoint(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    radius: jointRadius,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor, holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const radius = interval.isPush ? pushRadius : pullRadius\n                const currentLength = intervalLength(interval)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: interval.isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    idealLength: idealLengths[interval.index],\n                    isPush: interval.isPush,\n                    length: currentLength - jointRadius * 2,\n                    radius,\n                }\n            }),\n        }\n    }\n\n    private createFaceInterval(alpha: IFace, omega: IFace, pullScale?: IPercent): IFaceInterval {\n        const connector = !pullScale\n        const intervalRole = connector ? IntervalRole.FaceConnector : IntervalRole.FaceDistancer\n        const idealLength = locationFromFace(alpha).distanceTo(locationFromFace(omega))\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const scaleFactor = (factorFromPercent(alpha.scale) + factorFromPercent(omega.scale)) / 2\n        const restLength = !pullScale ? faceConnectorLengthFromScale(scaleFactor) : factorFromPercent(pullScale) * idealLength\n        const linearDensity = 0\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceInterval = {index, alpha, omega, connector, scaleFactor, removed: false}\n        this.faceIntervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.faceIntervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.faceAnchors.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createFaceIntervals(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FabricInstance, FORWARD } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceName } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: FaceName\n    faceName: FaceName\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            const nextStage = embryo.iterate()\n            const life = embryo.life$.getValue()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                embryo.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                embryo.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        instance.fabric.adopt_lengths()\n                        const faceIntervals = [...embryo.faceIntervals]\n                        faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n                        instance.iterate(Stage.Slack)\n                        instance.iterate(Stage.Pretensing)\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Pretensing:\n                    return true\n                case Stage.Pretenst:\n                    extractGotchiFaces(embryo, state.muscles, state.extremities)\n                    embryo.transition = {stage: Stage.Pretenst}\n                    embryo.iterate()\n                    this.embryo = undefined\n                    this.twitcher = new Twitcher(state)\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance} = muscle\n    const oppositeFace = FaceName.NNN\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.faceName === oppositeFace)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\nfunction extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    // tensegrity.brickFaces\n    //     .filter(face => !face.removed && face.brick.parentFace)\n    //     .forEach(face => {\n    //         const gatherAncestors = (f: IBrickFace, faceNames: FaceName[]): Limb => {\n    //             const definition = BRICK_FACE_DEF[f.faceName]\n    //             faceNames.push(definition.negative ? definition.opposite : definition.name)\n    //             const parentFace = f.brick.parentFace\n    //             if (parentFace) {\n    //                 return gatherAncestors(parentFace, faceNames)\n    //             } else {\n    //                 return limbFromFaceName(f.faceName)\n    //             }\n    //         }\n    //         const identities: FaceName[] = []\n    //         const limb = gatherAncestors(face, identities)\n    //         const group = identities.shift()\n    //         const faceName = face.faceName\n    //         if (!group) {\n    //             throw new Error(\"no top!\")\n    //         }\n    //         const distance = identities.length\n    //         const faceIndex = face.index\n    //         if (isExtremity(group)) {\n    //             const name = `[${limb}]`\n    //             extremities.push({faceIndex, name, limb})\n    //         } else {\n    //             const name = `[${limb}]:[${distance}:${FaceName[group]}]:{tri=${FaceName[faceName]}}`\n    //             muscles.push({faceIndex, name, limb, distance, group, faceName})\n    //         }\n    //     })\n}\n\n// function isExtremity(faceName: FaceName): boolean {\n//     const definition = BRICK_FACE_DEF[faceName]\n//     const normalizedFace = definition.negative ? definition.opposite : faceName\n//     return normalizedFace === FaceName.PPP\n// }\n//\n// function limbFromFaceName(face: FaceName): Limb {\n//     switch (face) {\n//         case FaceName.NNN:\n//             return Limb.BackLeft\n//         case FaceName.PNN:\n//             return Limb.BackRight\n//         case FaceName.NPP:\n//             return Limb.FrontLeft\n//         case FaceName.PPP:\n//             return Limb.FrontRight\n//         default:\n//             throw new Error(\"Strange limb\")\n//     }\n// }\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.StiffnessFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/fabric-instance\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Life } from \"../fabric/life\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [life, updateLife] = useState<Life | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateLife(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.life$.subscribe((latestLife) => {\n            if (latestLife.stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateLife(latestLife)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !life ? <h1>no life</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(life.stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { DoubleSide, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { SPACE_RADIUS, SPACE_SCALE } from \"../pretenst\"\nimport { Orbit } from \"../view/orbit\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.01\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const midpoint = new Vector3()\n\n    function developing(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function resting(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 10\n    }\n\n    function running(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function evolving(e: Evolution): number {\n        switch (e.iterate()) {\n            case EvolutionPhase.EvolutionDone:\n                console.log(\"Evolution DONE\")\n                stopEvolution()\n                break\n            case EvolutionPhase.EvolutionHarder:\n                console.log(\"Evolution advance...\")\n                stopEvolution(e.withReducedCyclePattern)\n                break\n        }\n        e.getMidpoint(midpoint)\n        return 15\n    }\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        const approachDistance = (distance: number) => {\n            const position = control.object.position\n            const positionToTarget = new Vector3().subVectors(position, control.target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (gotchi) {\n                    approachDistance(developing(gotchi))\n                }\n                break\n            case Happening.Resting:\n                if (gotchi) {\n                    approachDistance(resting(gotchi))\n                }\n                break\n            case Happening.Running:\n                if (gotchi) {\n                    approachDistance(running(gotchi))\n                }\n                break\n            case Happening.Evolving:\n                if (evolution) {\n                    approachDistance(evolving(evolution))\n                    evolutionPhase(evolution.phase)\n                }\n                break\n        }\n        control.target.add(new Vector3().subVectors(midpoint, control.target).multiplyScalar(TOWARDS_TARGET))\n        control.update()\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useEffect(() => {\n        orbit.current.autoRotate = happening === Happening.Evolving\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.life$.getValue().stage === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.life$.getValue().stage\n        const nextStage = this.tensegrity.iterate()\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    const instance = this.instance\n                    instance.fabric.adopt_lengths()\n                    instance.iterate(Stage.Slack)\n                    instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { jointDistance } from \"../fabric/tensegrity-types\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const push = this.sphere.hubs[0].spokes[0].push\n        const segmentLength = jointDistance(push.alpha, push.omega) * 0.28\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.VisualStrain:\n            return 0\n        default:\n            return defaultValue\n    }\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 0.5\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 1.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaCamera, FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, CylinderGeometry, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { switchToVersion, Version, Y_AXIS } from \"../fabric/eig-util\"\nimport { jointDistance } from \"../fabric/tensegrity-types\"\nimport { PULL_RADIUS } from \"../pretenst\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, TensegritySphere } from \"./tensegrity-sphere\"\n\nextend({Orbit})\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [polygons, setPolygons] = useState(false)\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => setPolygons(!polygons)}><FaCamera/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere} polygons={polygons}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere, polygons}: {\n    sphere: TensegritySphere,\n    polygons: boolean,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 1\n        orb.maxDistance = 10000\n        orb.enableZoom = true\n        orb.update()\n    }, [])\n\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        if (tick === 0) {\n            control.autoRotate = true\n            control.target.copy(sphere.location)\n        }\n        if (!polygons) {\n            sphere.iterate()\n        }\n        const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        control.target.add(toMidpoint)\n        control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: {\n    sphere: TensegritySphere,\n}): JSX.Element {\n    return (\n        <group>\n            {sphere.pulls.map((pull: IPull) => {\n                const unit = sphere.instance.unitVector(pull.index)\n                const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n                const length = jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`P${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.Triangle)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 4, 2.5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { intervalRoleName, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint, jointDistance, jointLocation } from \"../fabric/tensegrity-types\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    private stage = Stage.Growing\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const stiffness = 0.00001\n        const linearDensity = Math.sqrt(stiffness)\n        const idealLength = alphaHub.location.distanceTo(omegaHub.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, IntervalRole.SpherePush,\n            idealLength, idealLength, stiffness, linearDensity, 0)\n        const push: IPush = {index, alpha, omega, alphaHub, omegaHub}\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, restLength: number) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const stiffness = 0.000001\n            const linearDensity = Math.sqrt(stiffness)\n            const idealLength = jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(\n                alpha.index, omega.index, IntervalRole.SpherePull,\n                idealLength, restLength, stiffness, linearDensity, 100)\n            const interval: IPull = {\n                index, alpha, omega,\n                location: () => new Vector3()\n                    .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2)\n        return pulls\n    }\n\n    public iterate(): void {\n        const stage = this.instance.iterate(this.stage)\n        if (stage === undefined) {\n            return\n        }\n        switch (stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.stage = this.fabric.finish_growing()\n                break\n            case Stage.Shaping:\n                if (this.fabric.age > 8000) {\n                    this.fabric.adopt_lengths()\n                    this.stage = Stage.Slack\n                }\n                break\n            case Stage.Slack:\n                this.stage = Stage.Pretensing\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const jointRadius = radius * JOINT_RADIUS / PUSH_RADIUS\n                    const currentLength = jointDistance(push.alpha, push.omega)\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const jointRadius = JOINT_RADIUS\n                    const currentLength = jointDistance(interval.alpha, interval.omega)\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index, instance: this.instance}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (this.twist < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, floatString, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 1000\n\nexport function FrozenTab({tensegrity, worldFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function getFabricOutput(): IFabricOutput {\n        if (!tensegrity) {\n            throw new Error(\"No tensegrity\")\n        }\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={!polygons}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    storedState$.next(transition(storedState$.getValue(), {visibleRoles: [...visibleRoles, intervalRole]}))\n                                } else {\n                                    storedState$.next(transition(storedState$.getValue(), {visibleRoles: visibleRoles.filter(role => role !== intervalRole)}))\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowLeft,\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Pretensing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Pretensing}}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.transition = {stage: Stage.Shaping}}\n                    >\n                        <Symbol stage={Stage.Shaping}/> Shaping <FaArrowLeft/> Slack <Symbol stage={Stage.Slack}/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaCompass,\n    FaDragon,\n    FaHandPointUp,\n    FaLink,\n    FaMagic,\n    FaSlidersH,\n    FaTimesCircle,\n    FaTools,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { MarkAction } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityBuilder } from \"../fabric/tensegrity-builder\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\n\nexport enum ShapeSelection {\n    None,\n    Faces,\n    Intervals,\n}\n\nexport function ShapeTab(\n    {\n        worldFeatures, tensegrity, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        tensegrity.instance.world.set_push_and_pull(pushAndPull)\n    }, [pushAndPull])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updatePolygons(newState.polygons)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            tensegrity.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function connect(): void {\n        const pulls = new TensegrityBuilder(tensegrity).createFaceIntervals(selectedFaces, {action: MarkAction.JoinFaces})\n        tensegrity.faceIntervals.push(...pulls)\n        clearSelection()\n        setShapeSelection(ShapeSelection.None)\n        setFabric(tensegrity)\n    }\n\n    function disabled(): boolean {\n        return polygons || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedFaces.length < faceCount || polygons\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Faces ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None}\n                        onClick={() => {\n                            clearSelection()\n                            setShapeSelection(shapeSelection !== ShapeSelection.Faces ? ShapeSelection.Faces : ShapeSelection.None)\n                        }}\n                    >\n                        <span><FaHandPointUp/> Select faces</span>\n                    </Button>\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None || selectedFaces.length === 0}\n                        onClick={() => {\n                            if (shapeSelection === ShapeSelection.Intervals) {\n                                clearSelection()\n                            }\n                            setShapeSelection(shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals)\n                        }}\n                    >\n                        <span><FaSlidersH/> Make length adjustments</span>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedFaces.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelection()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(1, ShapeSelection.Faces)}\n                        onClick={() => {\n                            new TensegrityBuilder(tensegrity).faceToOrigin(selectedFaces[0])\n                            tensegrity.instance.refreshFloatView()\n                            clearSelection()\n                        }}>\n                        <FaCompass/><span> Upright</span>\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(2, ShapeSelection.Faces)}\n                        onClick={connect}>\n                        <FaLink/><span> Connect</span>\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : \"#919191\"\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaClock, FaCompressArrowsAlt, FaFistRaised, FaHandRock, FaParachuteBox } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {\n        worldFeatures, tensegrity,\n        storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={worldFeatures[WorldFeature.IterationsPerFrame]}/>\n                <FeaturePanel key=\"ic\" feature={worldFeatures[WorldFeature.IntervalCountdown]}/>\n                <FeaturePanel key=\"pc\" feature={worldFeatures[WorldFeature.PretensingCountdown]}/>\n            </Grouping>\n            <Grouping>\n                <FeaturePanel\n                    feature={worldFeatures[WorldFeature.VisualStrain]}\n                    disabled={polygons}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={polygons}\n                            onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({worldFeatures, tensegrity, shapeSelection, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updatePolygons(storedState.polygons)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function disabled(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function changeState(changed: Partial<IStoredState>): void {\n        storedState$.next(transition(storedState$.getValue(), changed))\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => changeState({surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={worldFeatures[WorldFeature.PretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.StiffnessFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={worldFeatures[WorldFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaBug,\n    FaFutbol,\n    FaHeart,\n    FaHiking,\n    FaPlay,\n    FaRegFolder,\n    FaRegFolderOpen,\n    FaRocket,\n    FaSeedling,\n} from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { addRecentCode, getRecentTenscript, IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, tensegrity, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        const state = addRecentCode(storedState$.getValue(), newCode)\n        setRecentPrograms(getRecentTenscript(state))\n        storedState$.next(state)\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/>\n                    </Button>\n                    {/*<Button onClick={() => switchToVersion(Version.Bridge)}>*/}\n                    {/*    <FaDungeon/>*/}\n                    {/*</Button>*/}\n                    {/*<Button onClick={() => switchToVersion(Version.Gotchi)}>*/}\n                    {/*    <FaBug/>*/}\n                    {/*</Button>*/}\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        worldFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedFaces, clearSelection, selectedIntervals,\n        tensegrity, setFabric, runTenscript,\n        toFullScreen, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedFaces: IFace[],\n        clearSelection: () => void,\n        selectedIntervals: IInterval[],\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(tensegrity ? tensegrity.life$.getValue() : undefined)\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelection()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => storedState$.next(transition(storedState$.getValue(), {controlTab: tab}))}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedFaces={selectedFaces}\n                            clearSelection={clearSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !tensegrity ? NO_FABRIC : (\n                        <RealizeTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            worldFeatures={worldFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    CylinderGeometry,\n    Euler,\n    FrontSide,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    Quaternion,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, Y_AXIS } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport {\n    IFace,\n    IInterval,\n    intervalLength,\n    intervalLocation,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n} from \"../fabric/tensegrity-types\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { isIntervalVisible, IStoredState } from \"../storage/stored-state\"\n\nimport { JOINT_MATERIAL, LINE_VERTEX_COLORS, roleMaterial, SELECT_MATERIAL, SUBDUED_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\nconst SPHERE = new SphereGeometry(1, 32, 8)\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst ALTITUDE = 1\n\nexport function FabricView({\n                               tensegrity,\n                               selectedIntervals, toggleSelectedInterval,\n                               selectedFaces, setSelectedFaces, storedState$,\n                               shapeSelection, polygons,\n                           }: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    toggleSelectedInterval: (interval: IInterval) => void,\n    selectedFaces: IFace[],\n    setSelectedFaces: (faces: IFace[]) => void,\n    shapeSelection: ShapeSelection,\n    polygons: boolean,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [whyThis, updateWhyThis] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    if (!perspective) {\n        throw new Error(\"Wheres the camera tenseg?\")\n    }\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        updateInstance(tensegrity.instance)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(orb => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(orbit.current.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        orb.object = perspective\n        orb.minPolarAngle = -0.98 * Math.PI / 2\n        orb.maxPolarAngle = 0.8 * Math.PI\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useFrame(() => {\n        const view = instance.view\n        const target = selectedFaces.length > 0 ? locationFromFaces(selectedFaces) :\n            new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n        orbit.current.target.add(towardsTarget)\n        orbit.current.update()\n        if (!polygons && shapeSelection !== ShapeSelection.Faces) {\n            const nextStage = tensegrity.iterate()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                tensegrity.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                tensegrity.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Pretensing:\n                case Stage.Pretenst:\n                    break\n                default:\n                    updateWhyThis(whyThis + 1)\n            }\n\n        }\n    })\n\n    function toggleFacesSelection(faceToToggle: IFace): void {\n        if (selectedFaces.some(selected => selected.index === faceToToggle.index)) {\n            setSelectedFaces(selectedFaces.filter(b => b.index !== faceToToggle.index))\n        } else {\n            setSelectedFaces([...selectedFaces, faceToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView\n                        tensegrity={tensegrity}\n                        storedState={storedState}\n                    />\n                ) : (\n                    <LineView\n                        tensegrity={tensegrity}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        toggleSelectedInterval={toggleSelectedInterval}\n                    />\n                )}\n                <Faces\n                    key=\"faces\"\n                    tensegrity={tensegrity}\n                    stage={life.stage}\n                    selectFace={toggleFacesSelection}\n                />\n                {selectedFaces.map(face => (\n                    <SelectedFace\n                        key={`Face${face.index}`}\n                        face={face}\n                    />\n                ))}\n                <SurfaceComponent/>\n                {/*{life.stage < Stage.Pretensing ? undefined : <SurfaceComponent/>}*/}\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectedFace({face}: { face: IFace }): JSX.Element {\n    const scale = 1 / 8 // TODO\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={locationFromFace(face)}\n            material={SELECT_MATERIAL}\n            scale={new Vector3(scale, scale, scale)}\n        />\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, storedState, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    storedState: IStoredState,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n\n    const material = isIntervalVisible(interval, storedState) ? roleMaterial(interval.intervalRole) : SUBDUED_MATERIAL\n    const radius = interval.isPush ? PUSH_RADIUS : PULL_RADIUS\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n    const length = intervalLength(interval)\n    const intervalScale = new Vector3(radius, length + (interval.isPush ? -JOINT_RADIUS * 2 : 0), radius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        geometry={CYLINDER}\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={material}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={jointLocation(interval.alpha)}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                    <mesh\n                        geometry={SPHERE}\n                        position={jointLocation(interval.omega)}\n                        material={JOINT_MATERIAL}\n                        scale={jointScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    />\n                </>\n            ) : (\n                <mesh\n                    geometry={CYLINDER}\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    material={material}\n                    matrixWorldNeedsUpdate={true}\n                    onPointerDown={onPointerDown}\n                />\n            )}\n        </>\n    )\n}\n\nfunction PolygonView({tensegrity, storedState}: {\n    tensegrity: Tensegrity,\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            {tensegrity.intervals\n                .map(interval => (\n                    <IntervalMesh\n                        key={`I${interval.index}`}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        storedState={storedState}\n                    />\n                ))}}\n        </group>\n    )\n}\n\nfunction SelectedInterval({interval, tensegrity, storedState, toggleSelectedInterval}: {\n    interval: IInterval,\n    tensegrity: Tensegrity,\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <IntervalMesh\n            tensegrity={tensegrity}\n            interval={interval}\n            storedState={storedState}\n            onPointerDown={() => toggleSelectedInterval(interval)}\n        />\n    )\n}\n\nfunction LineView({tensegrity, selectedIntervals, storedState, toggleSelectedInterval}: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n    toggleSelectedInterval: (interval: IInterval) => void,\n}): JSX.Element {\n    return (\n        <group>\n            <lineSegments\n                key=\"lines\"\n                geometry={tensegrity.instance.floatView.lineGeometry}\n                material={LINE_VERTEX_COLORS}\n            />\n            {selectedIntervals.map(interval => (\n                <SelectedInterval\n                    key={`SI${interval.index}`}\n                    interval={interval}\n                    tensegrity={tensegrity}\n                    storedState={storedState}\n                    toggleSelectedInterval={toggleSelectedInterval}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction Faces({tensegrity, stage, selectFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    selectFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        selectFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial\n                attach=\"material\"\n                transparent={true}\n                side={FrontSide}\n                opacity={0.4}\n                color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaMale, FaPlay, FaRunning, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { switchToVersion, Version, versionFromUrl } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval, intervalsFromFaces, percentOrHundred } from \"../fabric/tensegrity-types\"\nimport { getRecentTenscript, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript {\n    const fromUrl = getCodeFromUrl()\n    if (fromUrl) {\n        return fromUrl\n    }\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    }\n    const recentCode = getRecentTenscript(state)\n    return recentCode.length > 0 ? recentCode[0] : BOOTSTRAP[0]\n}\n\nexport function TensegrityView({createInstance, worldFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selectedFaces, setSelectedFaces] = useState<IFace[]>([])\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n    useEffect(() => setSelectedIntervals(intervalsFromFaces(selectedFaces)), [selectedFaces])\n\n    const [rootTenscript, setRootTenscript] = useState(() => getCodeToRun(storedState$.getValue()))\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            updatePolygons(storedState.polygons)\n            updateRotating(storedState.rotating)\n            if (!tensegrity) {\n                return\n            }\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(worldFeatures).map(k => worldFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe(() => {\n                if (tensegrity) {\n                    tensegrity.instance.applyFeature(feature)\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        worldFeatures[WorldFeature.ShapingPretenstFactor].percent = 100\n        worldFeatures[WorldFeature.ShapingDrag].percent = 100\n        worldFeatures[WorldFeature.ShapingStiffnessFactor].percent = 100\n        storedState$.next(transition(storedState$.getValue(), {polygons: false}))\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!tensegrity) {\n                runTenscript(rootTenscript)\n            }\n        }, 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        storedState$.next(transition(storedState$.getValue(), {fullScreen: value}))\n    }\n\n    return (\n        <>\n            {fullScreen ? (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        worldFeatures={worldFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        tensegrity={tensegrity}\n                        setFabric={setTensegrity}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedFaces={selectedFaces}\n                        clearSelection={() => {\n                            setSelectedFaces([])\n                            setSelectedIntervals([])\n                        }}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        <div id=\"bottom-right\">\n                            <ButtonGroup>\n                                <Button\n                                    color={rotating ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {rotating: !rotating}))}\n                                >\n                                    <FaSyncAlt/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"bottom-left\">\n                            <ButtonGroup>\n                                <Button\n                                    disabled={!polygons}\n                                    color={!polygons ? \"success\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {polygons: false}))}\n                                >\n                                    <FaRunning/>\n                                </Button>\n                                <Button\n                                    disabled={polygons}\n                                    color={polygons ? \"success\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {polygons: true}))}\n                                >\n                                    <FaMale/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: shapeSelection === ShapeSelection.Faces || polygons ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Faces ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    selectedIntervals={selectedIntervals}\n                                    toggleSelectedInterval={interval => setSelectedIntervals(intervals => intervals.filter(i => i.index !== interval.index))}\n                                    selectedFaces={selectedFaces}\n                                    setSelectedFaces={setSelectedFaces}\n                                    shapeSelection={shapeSelection}\n                                    polygons={polygons}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { percentFromFactor, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n            ) => {\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, percentOrHundred(), gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = percentFromFactor(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), scale, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const sphereInstance = createInstance(false)\n            FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => new TensegritySphere(at, 0.7, frequency, 0.52, numeric, sphereInstance)\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   worldFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}