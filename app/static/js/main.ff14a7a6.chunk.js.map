{"version":3,"sources":["fabric/fabric-engine.ts","fabric/tensegrity-types.ts","fabric/tenscript.ts","storage/stored-state.ts","fabric/fabric-features.ts","fabric/fabric-instance.ts","fabric/fabric-kernel.ts","service-worker.ts","fabric/life.ts","fabric/tensegrity-builder.ts","fabric/tensegrity-fabric.ts","view/life-stage-button.tsx","view/shape-tab.tsx","view/materials.ts","view/feature-panel.tsx","view/realize-tab.tsx","view/strain-tab.tsx","view/tenscript-tab.tsx","view/view-tab.tsx","storage/download.ts","view/control-tabs.tsx","view/orbit.ts","view/surface-component.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","index.tsx"],"names":["Stage","FabricFeature","IntervalRole","FEATURE_FLOATS","FABRIC_FEATURES","Object","keys","filter","k","isNaN","parseInt","map","intervalRoleName","intervalRole","NexusPush","ColumnPush","Triangle","Ring","NexusCross","ColumnCross","BowMid","BowEnd","FacePull","FabricDirection","Laterality","SurfaceCharacter","INTERVAL_ROLES","role","length","isPush","fabricFeatureIntervalRole","fabricFeature","firstLengthFeature","NexusPushLength","BowEndLength","intervalRoleFabricFeature","Ray","PushEnd","PHI","DEFAULT_PUSH_LENGTH","Math","sqrt","rayVector","ray","v","Vector3","XP","setX","XN","YP","setY","YN","ZP","setZ","ZN","brickPoint","primaryRay","secondaryRay","multiplyScalar","addScaledVector","PUSH_ARRAY","alpha","omega","TRIANGLE_DEFINITIONS","name","NNN","opposite","PPP","negative","ring","NN","pushEnds","YNA","XNA","ZNA","ringMember","NP","PN","PP","PNN","NPP","YPA","ZNO","NPN","PNP","XNO","ZPA","NNP","PPN","XPA","YNO","XPO","YPO","ZPO","oppositeTriangle","triangle","percentOrHundred","percent","_","percentToFactor","factorToPercent","factor","DIRECTIONS","isDirection","char","indexOf","DIGITS","isDigit","assignSubtree","tree","directionChar","child","A","B","C","D","b","c","d","a","Error","assignMark","faceMark","MA","MB","MC","MD","Ma","Mb","Mc","Md","codeToTenscript","error","fromUrl","code","toNumber","digits","match","_fragmentToTree","codeFragment","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","substring","skip","finalBracket","s","depth","index","matchBracket","codeString","subtree","codeTree","direction","forward","scaleArg","S","markNumber","undefined","replace","purify","JSON","stringify","treeToTenscript","colonSplit","split","join","getNameFromCode","e","message","noParseErrors","addNameToCode","trim","ControlTab","BOOTSTRAP","script","execute","before","markFace","active","forEach","brick","fabric","grow","previous","newTree","treeScale","connectTriangle","base","newBrick","builder","createConnectedBrick","brickToMark","treeWithMarks","maybeMark","mark","brickFace","faces","removed","markBrick","push","maybeGrow","growBrick","subtreeScale","decremented","VERSION","getRecentTenscript","state","recentCode","key","tenscript","console","transition","partial","nonce","STORED_STATE_KEY","loadState","toConfig","item","localStorage","getItem","storedState","parse","version","DEFAULT_FEATURE_VALUES","reduce","record","config","feature","numeric","defaultValue","surfaceCharacter","Frozen","featureValues","controlTab","Grow","fullScreen","ellipsoids","rotating","showPushes","showPulls","initialStoredState","FEATURE_PERCENTS","RT2","RT3","RING","T2","T3","CROSS","T1","featureConfig","Gravity","percents","Drag","PretenstFactor","IterationsPerFrame","IntervalCountdown","PretenstCountdown","FacePullEndZone","FacePullOrientationForce","SlackThreshold","ShapingPretenstFactor","ShapingStiffnessFactor","ShapingDrag","MaxStrain","VisualStrain","PushOverPull","ColumnPushLength","TriangleLength","RingLength","NexusCrossLength","ColumnCrossLength","BowMidLength","PushRadiusFactor","PullRadiusFactor","MaxStiffness","FloatFeature","storedState$","value$","fromConfig","getValue","initialValue","this","BehaviorSubject","subscribe","value","next","expo","toExponential","zero","max","toFixed","createFloatFeatures","features","FabricInstance","buffer","releaseInstance","fabricEngine","_fabricFeatures","_midpoint","_lineColors","_lineLocations","_faceMidpoints","_faceNormals","_faceLocations","_jointLocations","_jointVelocities","_unitVectors","_strains","_strainNuances","_stiffnesses","_linearDensities","engine","offset","_fabricOffset","LazyFloatArray","getIntervalCount","getFaceCount","getJointCount","_intervalUnits","_intervalStrains","_intervalStrainNuances","floats","clear","jointIndex","vectorFromArray","matrix","jointCount","jointLocation","vectorToArray","applyMatrix4","intervalIndex","faceIndex","faceVector","intervalLocation","add","midpoint","setInstance","array","Float32Array","vector","set","x","y","z","FabricKernel","instanceArray","instanceUsed","arrayBuffer","fabricBytes","init","memory","byteLength","getInstanceCount","toFree","freeIndex","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","Life","numericFeature","stage","_stage","prefs","Growing","Shaping","save","Slack","adoptLengths","instance","Realizing","Realized","strainToStiffness","pushOverPull","strains","existingStiffnesses","stiffnesses","getAverageStrain","toAverage","sum","interval","intervals","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffness","linearDensities","stiffnessToLinearDensity","newStiffnesses","newLinearDensities","adjustedStiffness","restore","cloneInstance","slackInstance","setFeatureValue","scaleToFacePullLength","scaleFactor","TensegrityBuilder","faceMarks","scale","points","createBrickPointsAt","createBrick","brickA","faceA","scaleA","scaleB","brickB","createBrickOnFace","faceB","countdown","connectFaces","markedFace","faceMarkLists","find","list","uprightAtOrigin","facePulls","removeFacePull","facePull","faceMidpoint","distanceTo","connectFacePull","pairs","findPush","i","joint","crossPulls","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","addVectors","intervalB","indexB","bAlpha","bOmega","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","forgetDimensions","face","faceToOrigin","apply","centerBrickFacePulls","locations","createBrickAt","averageScaleFactor","renderNumbers","createFacePull","faceLocation","closestTo","negativeFace","trianglePoints","joints","mid","p","midSide","subVectors","normalize","u","proj","dot","sub","crossVectors","xform","Matrix4","makeBasis","setPosition","movedToFace","baseTriangle","crosses","rings","negativeAdjacent","postiveeAdjacent","initialBrick","bricks","jointIndexes","idx","createJointIndex","alphaIndex","omegaIndex","oppositeIndex","arr","tJoints","end","walk","createFace","position","vectors","newBase","reverse","basis","fromBasis","getInverse","ninePairs","jointA","jointB","locationA","locationB","distance","sort","sixPairs","nineJointPairsByProximity","slice","closest","shift","extractPair","predicate","findIndex","splice","closestA","pair","closestB","a0","b0","b1","a1","b2","a2","b3","ringMatchesA","j","jointsA","jointsB","connectorScale","facesToRing","brickIsNexus","from","to","ringInterval","crossInterval","toFace","corner","handleFace","faceToRemove","t","canGrow","removeFace","triangleRing","pushRole","found","faceList","createFacePulls","SPHERE","SphereGeometry","COUNTDOWN_MAX","scaleToStiffness","StageTransition","ShapeSelection","TensegrityFabric","roleDefaultLength","life$","activeTenscript","facesToConnect","maxJointSpeed","faceCount","faceLocations","faceNormals","_facesGeometry","BufferGeometry","intervalCount","lineLocations","lineColors","_linesGeometry","refreshLineGeometry","refreshFaceGeometry","life","withStage","accumulator","jointTag","createJoint","RightSide","linearDensity","restLength","facePullCountdown","existing","coundown","multiplyRestLength","setIntervalRole","changeRestLength","foundPush","endJoint","removeIntervals","release","needsUpdate","computeBoundingSphere","lifePhase","iterate","Busy","activeCode","centralize","afterGrowing","finishGrowing","initialFacePulls","checkFacePulls","joint1","joint2","radiusFactor","visualStrain","Y_AXIS","unit","unitVector","rotation","Quaternion","setFromUnitVectors","alphaLocation","omegaLocation","intervalLength","strain","half","Float32BufferAttribute","addAttribute","numberToString","n","strainString","type","stiffnessString","linearDensityString","RAINBOW_COLORS","colorString","Color","lights","SURFACE","MeshPhongMaterial","color","side","DoubleSide","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","VertexColors","SCALE_LINE","FACE","transparent","opacity","SELECT_MATERIAL","RAINBOW_LAMBERT","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","FeaturePanel","disabled","useState","featurePercent","setFeaturePercent","useEffect","subscription","observable","unsubscribe","className","style","formatted","ButtonGroup","percentChoices","backgroundColor","Button","size","onClick","percentLabel","LifeStageButton","stageTransition","updateLife","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","toStage","Symbol","CurrentLengthsToSlack","SlackToRealizing","SlackToShaping","vertical","CaptureRealizedToSlack","CaptureStrainForStiffness","ShapeTab","floatFeatures","selectedIntervals","setFabric","shapeSelection","setShapeSelection","selectedFaces","clearSelectedFaces","pushAndPull","setPushAndPull","updateEllipsoids","subscriptions","newState","lengthFeature","setLengthFeature","adjustValue","up","changeIntervalScale","disableUnlessFaceCount","mode","disabledLifeStage","None","Grouping","Intervals","selection","Faces","optimize","title","RealizeTab","updateFabricState","changed","SCALE_WIDTH","NEEDLE_WIDTH","SCALE_MAX","FEATURES","scaleGeometry","middleTick","geometry","Geometry","vertices","needleGeometry","values","midValue","maxValue","unboundedHeight","height","StrainTab","camera","useRef","left","right","age","updateAge","maxStrain","updateMaxStrain","maxStiffness","updateMaxStiffness","timer","setInterval","fabricAge","getAge","clearTimeout","Scale","material","ref","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","id","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","borderRadius","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","borderStyle","borderColor","borderWidth","Input","onChange","changeEvent","target","ViewTab","visibleRoles","setVisibleRoles","updateShowPushes","updateShowPulls","ViewButton","children","setAltitude","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","submergedJoints","extractSubmergedFile","generateAsync","mimeType","blob","dateString","Date","toISOString","FileSaver","saveCSVZip","SPLIT_LEFT","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Shape","Realize","View","Strain","Nav","tabs","TabContent","flex","flexFlow","activeTab","top","zIndex","width","padding","margin","STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","object","enabled","enableZoom","zoomSpeed","minDistance","maxDistance","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","PI","LEFT","UP","RIGHT","BOTTOM","ORBIT","ZOOM","MIDDLE","clone","zoom","inverse","event","preventDefault","button","clientX","clientY","document","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","copy","update","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","radius","setFromSpherical","lookAt","distanceToSquared","quaternion","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","fov","panLeft","panUp","dollyScale","pow","angle","updateProjectionMatrix","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SIX","LAND_NORMAL_SPREAD","SurfaceComponent","spots","useMemo","hexPoint","vertexNormals","Face3","addSurfaceGeometry","spotsGeometry","extend","AMBIENT_COLOR","SPACE_RADIUS","SPACE_SCALE","SPACE_GEOMETRY","TOWARDS_TARGET","ALTITUDE","FabricView","fabricError","setSelectedFaces","viewContainer","getElementById","setAge","perspective","useThree","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateStoredState","orbit","current","useUpdate","orb","far","near","useRender","getMidpoint","towardsTarget","nextStage","setTimeout","args","EllipsoidView","LineView","selectFace","faceToToggle","some","selected","SelectedFace","intensity","IntervalMesh","nuance","floor","rainbowMaterial","strainNuances","orientInterval","getIntervalMidpoint","Euler","setFromQuaternion","matrixWorldNeedsUpdate","linesGeometry","raycaster","meshRef","downEvent","setDownEvent","onPointerDown","onPointerUp","mesh","doNotClick","intersectObjects","intersection","pop","facesGeometry","SPLIT_RIGHT","getCodeToRun","urlCode","hash","decodeURIComponent","getCodeFromUrl","TensegrityView","fabricKernel","mainInstance","allocateInstance","setSelectedIntervals","accum","unknown","updateRotating","updateFullScreen","newTenscript","initInstance","applyFeature","roleDefaultFromFeatures","setColoring","setSurfaceCharacter","featureSubscriptions","scaledLength","visibility","TopMiddle","cursor","getFabricEngine","root","setItem","ReactDOM","registerServiceWorker","start"],"mappings":"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","file":"static/js/main.ff14a7a6.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nexport interface IMemory {\n    buffer: ArrayBuffer\n}\n\nexport enum Stage {\n    Busy = 0,\n    Growing = 1,\n    Shaping = 2,\n    Slack = 3,\n    Realizing = 4,\n    Realized = 6,\n}\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport enum FabricFeature {\n\n    Gravity = 0,\n    Drag = 1,\n    PretenstFactor = 2,\n    IterationsPerFrame = 3,\n    IntervalCountdown = 4,\n    PretenstCountdown = 5,\n    FacePullEndZone = 6,\n    FacePullOrientationForce = 7,\n    SlackThreshold = 8,\n    ShapingPretenstFactor = 9,\n    ShapingStiffnessFactor = 10,\n    ShapingDrag = 11,\n    MaxStrain = 12,\n    VisualStrain = 13,\n\n    NexusPushLength = 20,\n    ColumnPushLength = 21,\n    TriangleLength = 22,\n    RingLength = 23,\n    NexusCrossLength = 24,\n    ColumnCrossLength = 25,\n    BowMidLength = 26,\n    BowEndLength = 27,\n\n    PushOverPull = 30,\n    PushRadiusFactor = 31,\n    PullRadiusFactor = 32,\n    MaxStiffness = 33,\n}\n\nexport const FEATURE_FLOATS = 60\n\nexport const FABRIC_FEATURES: FabricFeature[] = Object.keys(FabricFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => FabricFeature[k])\n\nexport enum IntervalRole {\n    NexusPush = 0,\n    ColumnPush = 1,\n    Triangle = 2,\n    Ring = 3,\n    NexusCross = 4,\n    ColumnCross = 5,\n    BowMid = 6,\n    BowEnd = 7,\n    FacePull = 8,\n}\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"Nex Push\"\n        case IntervalRole.ColumnPush:\n            return \"Col Push\"\n        case IntervalRole.Triangle:\n            return \"Tri\"\n        case IntervalRole.Ring:\n            return \"Ring\"\n        case IntervalRole.NexusCross:\n            return \"Nex Cross\"\n        case IntervalRole.ColumnCross:\n            return \"Col Cross\"\n        case IntervalRole.BowMid:\n            return \"Bow Mid\"\n        case IntervalRole.BowEnd:\n            return \"Bow End\"\n        case IntervalRole.FacePull:\n            return \"Face Pull\"\n    }\n}\n\nexport const INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => role.length > 1 && IntervalRole[role] !== IntervalRole.FacePull)\n    .map(role => IntervalRole[role])\n\nexport function isPush(intervalRole: IntervalRole): boolean {\n    return intervalRole === IntervalRole.ColumnPush || intervalRole === IntervalRole.NexusPush\n}\n\nexport function fabricFeatureIntervalRole(fabricFeature: FabricFeature): IntervalRole | undefined {\n    const firstLengthFeature = FabricFeature.NexusPushLength\n    if (fabricFeature < firstLengthFeature || fabricFeature > FabricFeature.BowEndLength) {\n        return undefined\n    }\n    return IntervalRole[IntervalRole[fabricFeature - firstLengthFeature]]\n}\n\nexport function intervalRoleFabricFeature(intervalRole: IntervalRole): FabricFeature {\n    return FabricFeature[FabricFeature[intervalRole + FabricFeature.NexusPushLength]]\n}\n\nexport enum FabricDirection {\n    Rest,\n    Forward,\n    TurnLeft,\n    TurnRight,\n    Reverse,\n}\n\nexport enum Laterality {\n    Middle = 0,\n    RightSide = 1,\n    LeftSide = 2,\n}\n\nexport enum SurfaceCharacter {\n    Frozen = 0,\n    Sticky = 1,\n    Slippery = 2,\n    Bouncy = 3,\n}\n\nexport interface IFabricEngine {\n\n    memory: IMemory\n\n    init(): number\n\n    setSurfaceCharacter(character: SurfaceCharacter): void\n\n    setPushAndPull(value: boolean): void\n\n    setColoring(pushes: boolean, pulls: boolean): void\n\n    setInstance(index: number): void\n\n    cloneInstance(fromIndex: number, index: number): void\n\n    getInstanceCount(): number\n\n    // below methods use instance index\n\n    initInstance(): Stage\n\n    finishGrowing(): Stage\n\n    getAge(): number\n\n    getCurrentState(): FabricDirection\n\n    getNextState(): FabricDirection\n\n    setNextState(state: FabricDirection): void\n\n    iterate(nextStage: Stage): Stage\n\n    adoptLengths(): Stage\n\n    renderNumbers(): number\n\n    centralize(): void\n\n    setAltitude(altitude: number): number\n\n    nextJointTag(): number\n\n    getJointCount(): number\n\n    createJoint(jointTag: number, laterality: Laterality, x: number, y: number, z: number): number\n\n    getJointTag(jointIndex: number): number\n\n    getJointLaterality(jointIndex: number): number\n\n    getIntervalCount(): number\n\n    createInterval(alphaIndex: number, omegaIndex: number, intervalRole: IntervalRole,\n                   restLength: number, stiffness: number, linearDensity: number, countdown: number): number\n\n    setIntervalRole(intervalIndex: number, intervalRole: IntervalRole): void\n\n    changeRestLength(intervalIndex: number, length: number, countdown: number): void\n\n    multiplyRestLength(intervalIndex: number, length: number, countdown: number): void\n\n    removeInterval(intervalIndex: number): void\n\n    findOppositeIntervalIndex(intervalIndex: number): number\n\n    getIntervalStateLength(intervalIndex: number, state: FabricDirection): number\n\n    setIntervalStateLength(intervalIndex: number, state: FabricDirection, length: number): void\n\n    getFaceCount(): number\n\n    createFace(joint0Index: number, joint1Index: number, joint2Index: number): number\n\n    removeFace(faceIndex: number): void\n\n    findOppositeFaceIndex(faceIndex: number): number\n\n    getFaceJointIndex(faceIndex: number, jointNumber: number): number\n\n    // these methods give addresses for buffer access\n\n    _fabricOffset(): number\n\n    _midpoint(): number\n\n    _lineLocations(): number\n\n    _lineColors(): number\n\n    _faceMidpoints(): number\n\n    _faceNormals(): number\n\n    _faceLocations(): number\n\n    _jointLocations(): number\n\n    _jointVelocities(): number\n\n    _intervalUnits(): number\n\n    _intervalStrains(): number\n\n    _intervalStrainNuances(): number\n\n    _stiffnesses(): number\n\n    _linearDensities(): number\n\n    _fabricFeatures(): number\n\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"./fabric-engine\"\n\nexport const PHI = 1.61803398875\nexport const DEFAULT_PUSH_LENGTH = Math.sqrt(2)\n\nexport enum Ray {\n    XP = 0, XN, YP, YN, ZP, ZN,\n}\n\nexport enum PushEnd {\n    XPA = 0, XPO, XNA, XNO, YPA, YPO,\n    YNA, YNO, ZPA, ZPO, ZNA, ZNO,\n}\n\nexport enum Triangle {\n    NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP,\n}\n\nexport enum Ring {\n    NN = 0, // [PushEnd.ZNO, PushEnd.XPA, PushEnd.YNO, PushEnd.ZPA, PushEnd.XNO, PushEnd.YPA],\n    PN = 1, // [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNO, PushEnd.YPO, PushEnd.XPO, PushEnd.ZPA],\n    NP = 2, // [PushEnd.XNA, PushEnd.YPA, PushEnd.ZPO, PushEnd.XPO, PushEnd.YNO, PushEnd.ZNA],\n    PP = 3, // [PushEnd.YNA, PushEnd.ZNA, PushEnd.XPA, PushEnd.YPO, PushEnd.ZPO, PushEnd.XNO],\n}\n\nexport interface IJoint {\n    index: number\n    oppositeIndex: number\n}\n\nexport interface IRing {\n    faceA: IFace\n    faceB: IFace\n    jointsA: IJoint[]\n    jointsB: IJoint[]\n}\n\nexport type JointTag = number\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport interface IFacePull {\n    index: number\n    alpha: IFace\n    omega: IFace\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFace {\n    index: number\n    negative: boolean\n    canGrow: boolean\n    brick: IBrick\n    triangle: Triangle\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    removed: boolean\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + percentToFactor(face.brick.scale), 0) / faces.length\n}\n\nexport function averageLocation(locations: Vector3[]): Vector3 {\n    return locations\n        .reduce((sum, location) => sum.add(location), new Vector3())\n        .multiplyScalar(1 / locations.length)\n}\n\nexport function getOrderedJoints(face: IFace): IJoint[] {\n    const clone = [...face.joints]\n    return [...TRIANGLE_DEFINITIONS[face.triangle].negative ? clone.reverse() : clone]\n}\n\nexport interface IPushDefinition {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction rayVector(ray: Ray): Vector3 {\n    const v = new Vector3()\n    switch (ray) {\n        case Ray.XP:\n            return v.setX(1)\n        case Ray.XN:\n            return v.setX(-1)\n        case Ray.YP:\n            return v.setY(1)\n        case Ray.YN:\n            return v.setY(-1)\n        case Ray.ZP:\n            return v.setZ(1)\n        case Ray.ZN:\n            return v.setZ(-1)\n        default:\n            return v\n    }\n}\n\nfunction brickPoint(primaryRay: Ray, secondaryRay: Ray): Vector3 {\n    return rayVector(primaryRay)\n        .multiplyScalar(DEFAULT_PUSH_LENGTH / 2)\n        .addScaledVector(rayVector(secondaryRay), DEFAULT_PUSH_LENGTH / 2 / PHI)\n}\n\nexport const PUSH_ARRAY: IPushDefinition[] = [\n    {alpha: brickPoint(Ray.ZN, Ray.XP), omega: brickPoint(Ray.ZP, Ray.XP)},\n    {alpha: brickPoint(Ray.ZN, Ray.XN), omega: brickPoint(Ray.ZP, Ray.XN)},\n    {alpha: brickPoint(Ray.XN, Ray.YP), omega: brickPoint(Ray.XP, Ray.YP)},\n    {alpha: brickPoint(Ray.XN, Ray.YN), omega: brickPoint(Ray.XP, Ray.YN)},\n    {alpha: brickPoint(Ray.YN, Ray.ZP), omega: brickPoint(Ray.YP, Ray.ZP)},\n    {alpha: brickPoint(Ray.YN, Ray.ZN), omega: brickPoint(Ray.YP, Ray.ZN)},\n]\n\nexport interface ITriangleDefinition {\n    name: Triangle\n    opposite: Triangle\n    negative: boolean\n    pushEnds: PushEnd[]\n    ringMember: Ring[]\n    ring: Ring\n}\n\nexport const TRIANGLE_DEFINITIONS: ITriangleDefinition[] = [\n    {\n        name: Triangle.NNN, opposite: Triangle.PPP, negative: true, ring: Ring.NN,\n        pushEnds: [PushEnd.YNA, PushEnd.XNA, PushEnd.ZNA], ringMember: [Ring.NP, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.PNN, opposite: Triangle.NPP, negative: false, ring: Ring.PP,\n        pushEnds: [PushEnd.XNA, PushEnd.YPA, PushEnd.ZNO], ringMember: [Ring.PN, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.NPN, opposite: Triangle.PNP, negative: false, ring: Ring.PN,\n        pushEnds: [PushEnd.XNO, PushEnd.YNA, PushEnd.ZPA], ringMember: [Ring.PP, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.NNP, opposite: Triangle.PPN, negative: false, ring: Ring.NP,\n        pushEnds: [PushEnd.XPA, PushEnd.YNO, PushEnd.ZNA], ringMember: [Ring.NN, Ring.PN, Ring.PP],\n    },\n    {\n        name: Triangle.NPP, opposite: Triangle.PNN, negative: true, ring: Ring.PP,\n        pushEnds: [PushEnd.YNO, PushEnd.XPO, PushEnd.ZPA], ringMember: [Ring.PN, Ring.NP, Ring.NN],\n    },\n    {\n        name: Triangle.PNP, opposite: Triangle.NPN, negative: true, ring: Ring.PN,\n        pushEnds: [PushEnd.YPO, PushEnd.XPA, PushEnd.ZNO], ringMember: [Ring.PP, Ring.NN, Ring.NP],\n    },\n    {\n        name: Triangle.PPN, opposite: Triangle.NNP, negative: true, ring: Ring.NP,\n        pushEnds: [PushEnd.YPA, PushEnd.XNO, PushEnd.ZPO], ringMember: [Ring.NN, Ring.PP, Ring.PN],\n    },\n    {\n        name: Triangle.PPP, opposite: Triangle.NNN, negative: false, ring: Ring.NN,\n        pushEnds: [PushEnd.XPO, PushEnd.YPO, PushEnd.ZPO], ringMember: [Ring.NP, Ring.PP, Ring.PN],\n    },\n]\n\nexport function oppositeTriangle(triangle: Triangle): Triangle {\n    return TRIANGLE_DEFINITIONS[triangle].opposite\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function percentToFactor({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function factorToPercent(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IBrick {\n    index: number,\n    base: Triangle\n    scale: IPercent\n    joints: IJoint[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n    crosses: IInterval[]\n    rings: IInterval[][]\n    faces: IFace[]\n    negativeAdjacent: number\n    postiveeAdjacent: number\n}\n\nexport function initialBrick(index: number, base: Triangle, scale: IPercent): IBrick {\n    return {\n        index, base, scale, joints: [],\n        pushes: [], pulls: [], crosses: [],\n        rings: [[], [], [], []], faces: [],\n        negativeAdjacent: 0, postiveeAdjacent: 0,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport { IBrick, IFace, IFaceMark, IPercent, oppositeTriangle, percentOrHundred, Triangle } from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"(0):Zen\",\n    \"(1):One\",\n    \"(6):Six\",\n    \"(16,S90):Axoneme\",\n    \"(b1,a1):Knee\",\n    \"(b3,a3):Leg\",\n    \"(a1,b1,c1,d1):Nexus\",\n    \"(A2,B(3,b(2,S90),S80),C(3,c(2,S90),S80),D(3,d(2,S90),S80)):Tripod with Knees\",\n    \"(A(8, S85, MA1), a(8, S85, MA1)):Bulge Ring\",\n    \"(a1,b(3,S85,MA1),c(3,S85,MA1),d(3,S85,MA1)):Convergence Three\",\n    \"(a1,b(12,S85,MA1),c(12,S85,MA1),d(12,S85,MA1)):Convergence Twelve\",\n    \"(B(7,S80,MA1),C(2,S120,MA0),D(7,S80,MA1)):Halo by Crane\",\n    \"(B(5,S75),C(5,S75),D(5,S75)):Pretenst Lander\",\n    \"(a(1,MA0),c(3,b(3,d(3,c(3,b(3,d(1,MA0))))))):Zig Zag Loop\",\n    \"(B2, C2, D2, A(2, b2, c2, d2)):Crystal Interstitial\",\n    \"(a(2,b(2,c(2,d(1,MA11)),d(2,c(1,MA10))),c(2,d(2,b(1,MA13)),b(2,d(1,MA12))),d(2,b(2,c(1,MA15)),c(2,b(1,MA14)))),b(2,d(2,Mc13),c(2,Md14)),c(2,b(2,Md15),d(2,Mb10)),d(2,c(2,Mb11),b(2,Mc12))): Diamond\",\n    \"(a(3,b(3,c(3,d(2,MA11)),d(3,c(2,MA10))),c(3,d(3,b(2,MA13)),b(3,d(2,MA12))),d(3,b(3,c(2,MA15)),c(3,b(2,MA14)))),b(3,d(3,Mc13),c(3,Md14)),c(3,b(3,Md15),d(3,Mb10)),d(3,c(3,Mb11),b(3,Mc12))):Diamond2\",\n]\n\n/*\n(\n    a(2,\n        b(2, c(2, d(1, MA11)), d(2, c(1, MA10))),\n        c(2, d(2, b(1, MA13)), b(2, d(1, MA12))),\n        d(2, b(2, c(1, MA15)), c(2, b(1, MA14)))\n    ),\n    b(2, d(2, Mc13), c(2, Md14)),\n    c(2, b(2, Md15), d(2, Mb10)),\n    d(2, c(2, Mb11), b(2, Mc12))\n)\n*/\n\nfunction purify(code: string): string {\n    return code.replace(/[\\n\\r\\t ]/g, \"\")\n}\n\nexport interface ITenscript {\n    name: string,\n    code: string\n    tree: ITenscriptTree\n    fromUrl: boolean\n}\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeToTenscript(name: string, tree: ITenscriptTree, fromUrl: boolean): ITenscript {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    const code = JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n    return {name, tree, code, fromUrl}\n}\n\nconst DIRECTIONS = \"ABCDabcd\"\n\nfunction isDirection(char: string): boolean {\n    return DIRECTIONS.indexOf(char) >= 0\n}\n\nconst DIGITS = \"0123456789\"\n\nfunction isDigit(char: string): boolean {\n    return DIGITS.indexOf(char) >= 0\n}\n\nfunction assignSubtree(tree: ITenscriptTree, directionChar: string, child: ITenscriptTree): void {\n    switch (directionChar) {\n        case \"A\":\n            tree.A = child\n            break\n        case \"B\":\n            tree.B = child\n            break\n        case \"C\":\n            tree.C = child\n            break\n        case \"D\":\n            tree.D = child\n            break\n        case \"b\":\n            tree.b = child\n            break\n        case \"c\":\n            tree.c = child\n            break\n        case \"d\":\n            tree.d = child\n            break\n        case \"a\":\n            tree.a = child\n            break\n        default:\n            throw new Error(\"Unexpected direction directionChar: \" + directionChar)\n    }\n}\n\nfunction assignMark(tree: ITenscriptTree, directionChar: string, faceMark: IFaceMark): void {\n    switch (directionChar) {\n        case \"A\":\n            tree.MA = faceMark\n            break\n        case \"B\":\n            tree.MB = faceMark\n            break\n        case \"C\":\n            tree.MC = faceMark\n            break\n        case \"D\":\n            tree.MD = faceMark\n            break\n        case \"a\":\n            tree.Ma = faceMark\n            break\n        case \"b\":\n            tree.Mb = faceMark\n            break\n        case \"c\":\n            tree.Mc = faceMark\n            break\n        case \"d\":\n            tree.Md = faceMark\n            break\n        default:\n            throw new Error(\"Unexpected direction directionChar: \" + directionChar)\n    }\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nexport function codeToTenscript(error: (message: string) => void, fromUrl: boolean, code?: string): ITenscript | undefined {\n\n    function toNumber(digits: string): number {\n        if (!digits.match(/^\\d+$/)) {\n            throw new Error(`Not a number: ${digits}`)\n        }\n        return parseInt(digits, 10)\n    }\n\n    function _fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n\n        function argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n            const commaPos = maybeBracketed.indexOf(\",\")\n            const commaPresent = commaPos >= 0\n            if (maybeBracketed.charAt(0) !== \"(\") {\n                if (commaPresent) {\n                    return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n                }\n                return {content: maybeBracketed, skip: maybeBracketed.length}\n            }\n            const finalBracket = matchBracket(maybeBracketed)\n            const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n            return {content, skip: finalBracket + 1}\n        }\n\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = _fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                assignSubtree(tree, char, direction.codeTree)\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        assignMark(tree, directionChar, {_: toNumber(markNumber.content)})\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const tree = _fragmentToTree(purify(code))\n        if (!tree) {\n            return undefined\n        }\n        return treeToTenscript(getNameFromCode(code), tree, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport function addNameToCode(code: string, name: string): string {\n    const colonSplit = code.split(\":\")\n    if (colonSplit.length === 2) {\n        return `${colonSplit[0]}:${name.trim()}`\n    } else {\n        return `${code}:${name}`\n    }\n}\n\nexport function getNameFromCode(code: string): string {\n    const colonSplit = code.split(\":\")\n    if (colonSplit.length === 2) {\n        return colonSplit[1]\n    }\n    return code.split(\"\").filter(char => isDirection(char) || isDigit(char)).join(\"\")\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IActiveTenscript {\n    tree: ITenscriptTree\n    brick: IBrick\n    fabric: TensegrityFabric\n}\n\nexport function execute(before: IActiveTenscript[], markFace: (mark: number, face: IFace) => void): IActiveTenscript[] {\n    const active: IActiveTenscript[] = []\n\n    before.forEach(({brick, tree, fabric}) => {\n\n        function markBrick(brickToMark: IBrick, treeWithMarks: ITenscriptTree): void {\n            function maybeMark(triangle: Triangle, mark?: IFaceMark): void {\n                if (!mark) {\n                    return\n                }\n                const brickFace = brickToMark.base === Triangle.NNN ? brickToMark.faces[triangle] : brickToMark.faces[oppositeTriangle(triangle)]\n                if (brickFace.removed) {\n                    throw new Error(\"!! trying to use a face that was removed\")\n                }\n                markFace(mark._, brickFace)\n            }\n\n            maybeMark(Triangle.PPP, treeWithMarks.MA)\n            maybeMark(Triangle.NPP, treeWithMarks.Mb)\n            maybeMark(Triangle.PNP, treeWithMarks.Mc)\n            maybeMark(Triangle.PPN, treeWithMarks.Md)\n            maybeMark(Triangle.PNN, treeWithMarks.MB)\n            maybeMark(Triangle.NPN, treeWithMarks.MC)\n            maybeMark(Triangle.NNP, treeWithMarks.MD)\n            maybeMark(Triangle.NNN, treeWithMarks.Ma)\n        }\n\n        function grow(previous: IBrick, newTree: ITenscriptTree, triangle: Triangle, treeScale: IPercent): IActiveTenscript {\n            const connectTriangle = previous.base === Triangle.PPP ? oppositeTriangle(triangle) : triangle\n            const newBrick = fabric.builder.createConnectedBrick(previous, connectTriangle, treeScale)\n            if (newTree._ === 0) {\n                markBrick(newBrick, newTree)\n            }\n            return {tree: newTree, brick: newBrick, fabric}\n        }\n\n        const forward = tree._\n        if (forward) {\n            const _ = forward - 1\n            active.push(grow(brick, {...tree, _}, Triangle.PPP, percentOrHundred(tree.S)))\n            return\n        }\n\n        function maybeGrow(growBrick: IBrick, triangle: Triangle, subtree?: ITenscriptTree): void {\n            if (!subtree) {\n                return\n            }\n            const subtreeScale = percentOrHundred(subtree.S)\n            const _ = subtree._ ? subtree._ - 1 : undefined\n            const decremented = {...subtree, _}\n            active.push(grow(growBrick, decremented, triangle, subtreeScale))\n        }\n\n        maybeGrow(brick, Triangle.PPP, tree.A)\n        maybeGrow(brick, Triangle.NPP, tree.b)\n        maybeGrow(brick, Triangle.PNP, tree.c)\n        maybeGrow(brick, Triangle.PPN, tree.d)\n        maybeGrow(brick, Triangle.PNN, tree.B)\n        maybeGrow(brick, Triangle.NPN, tree.C)\n        maybeGrow(brick, Triangle.NNP, tree.D)\n        maybeGrow(brick, Triangle.NNN, tree.a)\n    })\n    return active\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FABRIC_FEATURES, FabricFeature, IntervalRole, SurfaceCharacter } from \"../fabric/fabric-engine\"\nimport { IFeatureConfig } from \"../fabric/fabric-features\"\nimport { addNameToCode, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    Realize = \"Realize\",\n    View = \"View\",\n    Strain = \"Strain\",\n}\n\nexport function enumValues(e: object): number[] {\n    return Object.keys(e).filter(k => k.length > 1).map(k => e[k])\n}\n\nconst VERSION = \"2019-12-14\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number,\n}\n\nexport interface IStoredState {\n    version: string,\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<FabricFeature, IFeatureValue>\n    recentCode: Record<string, string>,\n    controlTab: ControlTab\n    fullScreen: boolean\n    ellipsoids: boolean\n    rotating: boolean\n    showPushes: boolean\n    showPulls: boolean\n}\n\nexport function addRecentCode(state: IStoredState, {code, name}: ITenscript): IStoredState {\n    const recentCode = {...state.recentCode}\n    recentCode[name] = addNameToCode(code, name)\n    return transition(state, {recentCode})\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return Object.keys(state.recentCode).map(key => {\n        const code = state.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function roleDefaultFromFeatures(featureValues: Record<FabricFeature, IFeatureValue>, intervalRole: IntervalRole): number {\n    if (intervalRole === IntervalRole.FacePull) {\n        throw new Error()\n    }\n    return featureValues[FabricFeature[FabricFeature[intervalRole + FabricFeature.NexusPushLength]]].numeric\n}\n\nexport function transition(state: IStoredState, partial: Partial<IStoredState>): IStoredState {\n    return {...state, nonce: state.nonce + 1, ...partial}\n}\n\nfunction initialStoredState(toConfig: (feature: FabricFeature) => IFeatureConfig): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: config.defaultValue})\n            return record\n        }, {} as Record<FabricFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        fullScreen: true,\n        ellipsoids: false,\n        rotating: false,\n        showPushes: true,\n        showPulls: true,\n    })\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: FabricFeature) => IFeatureConfig): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, FabricFeature } from \"./fabric-engine\"\n\nexport interface IFeatureConfig {\n    feature: FabricFeature\n    name: string\n    defaultValue: number\n    percents: number[]\n}\n\nconst FEATURE_PERCENTS = [50, 75, 90, 100, 125, 150, 200]\nconst PHI = (1 + Math.sqrt(5)) / 2\nconst RT2 = Math.sqrt(2)\nconst RT3 = Math.sqrt(3)\nconst RING = Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\nconst T1 = 1 / 2\nconst T2 = (PHI / 3 - 1 / 6) * RT3\nconst T3 = PHI / 3 * RT3 - 1 + RT2 / RT3\nconst CROSS = Math.sqrt(T1 * T1 + T2 * T2 + T3 * T3)\n\nexport function featureConfig(feature: FabricFeature): IFeatureConfig {\n    switch (feature) {\n        case FabricFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                defaultValue: 0.0000001,\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case FabricFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                defaultValue: 0.0001,\n                percents: [0, 10, 50, 100, 150, 200],\n            }\n        case FabricFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                defaultValue: 0.03,\n                percents: [0, 50, 90, 100, 125, 150, 200],\n            }\n        case FabricFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                defaultValue: 100,\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case FabricFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                defaultValue: 1000,\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case FabricFeature.PretenstCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                defaultValue: 30000,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.FacePullEndZone:\n            return {\n                feature,\n                name: \"Face Pull End Zone\",\n                defaultValue: 4,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.FacePullOrientationForce:\n            return {\n                feature,\n                name: \"Face Pull Orientation Force\",\n                defaultValue: 0.0001,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.SlackThreshold:\n            return {\n                feature,\n                name: \"Slack threshold\",\n                defaultValue: 0.0001,\n                percents: [0.01, 0.1, 1, 10, 100, 1000],\n            }\n        case FabricFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                defaultValue: 0.1,\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case FabricFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness factor\",\n                defaultValue: 10,\n                percents: [100, 150, 200, 250, 300, 400, 500],\n            }\n        case FabricFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Drag\",\n                defaultValue: 0.1,\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case FabricFeature.MaxStrain:\n            return {\n                feature,\n                name: \"Maximum Strain\",\n                defaultValue: 0.1,\n                percents: [1, 2, 3, 5, 8, 13, 21, 34, 55, 100],\n            }\n        case FabricFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                defaultValue: 1,\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 10000, 100000],\n            }\n        case FabricFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                defaultValue: 1,\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        case FabricFeature.NexusPushLength:\n            return {\n                feature,\n                name: \"Nexus Push\",\n                defaultValue: PHI,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.ColumnPushLength:\n            return {\n                feature,\n                name: \"Column Push\",\n                defaultValue: RT2,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.TriangleLength:\n            return {\n                feature,\n                name: \"Triangle\",\n                defaultValue: 1,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.RingLength:\n            return {\n                feature,\n                name: \"Ring\",\n                defaultValue: RING,\n                percents: [10, 80, 90, 100, 110, 120, 130],\n            }\n        case FabricFeature.NexusCrossLength:\n            return {\n                feature,\n                name: \"Nexus Cross\",\n                defaultValue: CROSS,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.ColumnCrossLength:\n            return {\n                feature,\n                name: \"Column Cross\",\n                defaultValue: 1,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.BowMidLength:\n            return {\n                feature,\n                name: \"Bow Mid\",\n                defaultValue: 0.4,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.BowEndLength:\n            return {\n                feature,\n                name: \"Bow End\",\n                defaultValue: 0.6,\n                percents: FEATURE_PERCENTS,\n            }\n        case FabricFeature.PushRadiusFactor:\n            return {\n                feature,\n                name: \"Push Radius\",\n                defaultValue: 4,\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case FabricFeature.PullRadiusFactor:\n            return {\n                feature,\n                name: \"Pull Radius\",\n                defaultValue: 2,\n                percents: [5, 25, 50, 100, 150, 200, 300],\n            }\n        case FabricFeature.MaxStiffness:\n            return {\n                feature,\n                name: \"Maximum Stiffness\",\n                defaultValue: 0.0005,\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const fromConfig = features[config.feature]\n        const initialValue: IFeatureValue = fromConfig !== undefined ? fromConfig : {\n            numeric: config.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<FabricFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            storedState$.next(transition(storedState, {featureValues}))\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        const numeric = this.numeric\n        const expo = numeric.toExponential(5)\n        const zero = expo.indexOf(\"e+0\")\n        if (zero > 0) {\n            return expo.substring(0, zero)\n        }\n        const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n        if (minus > 0) {\n            return numeric.toFixed(5)\n        }\n        const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n        if (plus > 0) {\n            return numeric.toFixed(1)\n        }\n        return expo\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.config.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get fabricFeature(): FabricFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>): Record<FabricFeature, FloatFeature> {\n    const features = {} as Record<FabricFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => features[config.feature] = new FloatFeature(config, storedState$))\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { FabricFeature, FEATURE_FLOATS, IFabricEngine } from \"./fabric-engine\"\nimport { FloatFeature } from \"./fabric-features\"\nimport { faceVector, vectorFromArray, vectorToArray } from \"./fabric-kernel\"\n\nexport class FabricInstance {\n    private _fabricFeatures: LazyFloatArray\n    private _midpoint: LazyFloatArray\n    private _lineColors: LazyFloatArray\n    private _lineLocations: LazyFloatArray\n    private _faceMidpoints: LazyFloatArray\n    private _faceNormals: LazyFloatArray\n    private _faceLocations: LazyFloatArray\n    private _jointLocations: LazyFloatArray\n    private _jointVelocities: LazyFloatArray\n    private _unitVectors: LazyFloatArray\n    private _strains: LazyFloatArray\n    private _strainNuances: LazyFloatArray\n    private _stiffnesses: LazyFloatArray\n    private _linearDensities: LazyFloatArray\n\n    constructor(\n        public readonly index: number,\n        private buffer: ArrayBuffer,\n        private releaseInstance: (index: number) => void,\n        private fabricEngine: IFabricEngine,\n    ) {\n        const e = this.engine\n        const offset = e._fabricOffset()\n        const b = this.buffer\n        this._fabricFeatures = new LazyFloatArray(b, offset + e._fabricFeatures(), () => FEATURE_FLOATS)\n        this._midpoint = new LazyFloatArray(b, offset + e._midpoint(), () => 3)\n        this._lineColors = new LazyFloatArray(b, offset + e._lineColors(), () => e.getIntervalCount() * 3 * 2)\n        this._lineLocations = new LazyFloatArray(b, offset + e._lineLocations(), () => e.getIntervalCount() * 3 * 2)\n        this._faceMidpoints = new LazyFloatArray(b, offset + e._faceMidpoints(), () => e.getFaceCount() * 3)\n        this._faceNormals = new LazyFloatArray(b, offset + e._faceNormals(), () => e.getFaceCount() * 3 * 3)\n        this._faceLocations = new LazyFloatArray(b, offset + e._faceLocations(), () => e.getFaceCount() * 3 * 3)\n        this._jointLocations = new LazyFloatArray(b, offset + e._jointLocations(), () => e.getJointCount() * 3)\n        this._jointVelocities = new LazyFloatArray(b, offset + e._jointVelocities(), () => e.getJointCount() * 3)\n        this._unitVectors = new LazyFloatArray(b, offset + e._intervalUnits(), () => e.getIntervalCount() * 3)\n        this._strains = new LazyFloatArray(b, offset + e._intervalStrains(), () => e.getIntervalCount())\n        this._strainNuances = new LazyFloatArray(b, offset + e._intervalStrainNuances(), () => e.getIntervalCount())\n        this._stiffnesses = new LazyFloatArray(b, offset + e._stiffnesses(), () => e.getIntervalCount())\n        this._linearDensities = new LazyFloatArray(b, offset + e._linearDensities(), () => e.getIntervalCount())\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this._fabricFeatures.floats[feature.fabricFeature] = feature.numeric\n    }\n\n    public setFeatureValue(fabricFeature: FabricFeature, value: number): void {\n        this._fabricFeatures.floats[fabricFeature] = value\n    }\n\n    public release(): void {\n        this.releaseInstance(this.index)\n    }\n\n    public forgetDimensions(): void {\n        this._faceMidpoints.clear()\n        this._faceLocations.clear()\n        this._faceNormals.clear()\n        this._jointLocations.clear()\n        this._lineLocations.clear()\n        this._lineColors.clear()\n        this._unitVectors.clear()\n        this._strains.clear()\n        this._strainNuances.clear()\n        this._stiffnesses.clear()\n        this._linearDensities.clear()\n    }\n\n    public location(jointIndex: number): Vector3 {\n        return vectorFromArray(this._jointLocations.floats, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        const jointCount = this.engine.getJointCount()\n        for (let jointIndex = 0; jointIndex < jointCount; jointIndex++) {\n            const jointLocation = vectorFromArray(this._jointLocations.floats, jointIndex)\n            vectorToArray(jointLocation.applyMatrix4(matrix), this._jointLocations.floats, jointIndex)\n        }\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this._unitVectors.floats, intervalIndex)\n    }\n\n    public velocities(): Float32Array {\n        return this._jointVelocities.floats\n    }\n\n    public get strains(): Float32Array {\n        return this._strains.floats\n    }\n\n    public get strainNuances(): Float32Array {\n        return this._strainNuances.floats\n    }\n\n    public get stiffnesses(): Float32Array {\n        return this._stiffnesses.floats\n    }\n\n    public get linearDensities(): Float32Array {\n        return this._linearDensities.floats\n    }\n\n    public get faceLocations(): Float32Array {\n        return this._faceLocations.floats\n    }\n\n    public faceMidpoint(faceIndex: number): Vector3 {\n        return faceVector(faceIndex, this._faceLocations.floats)\n    }\n\n    public faceNormal(faceIndex: number): Vector3 {\n        return faceVector(faceIndex, this._faceNormals.floats)\n    }\n\n    public intervalLocation(intervalIndex: number): Vector3 {\n        return vectorFromArray(this._lineLocations.floats, intervalIndex)\n    }\n\n    public get faceNormals(): Float32Array {\n        return this._faceNormals.floats\n    }\n\n    public get lineLocations(): Float32Array {\n        return this._lineLocations.floats\n    }\n\n    public get lineColors(): Float32Array {\n        return this._lineColors.floats\n    }\n\n    public getIntervalMidpoint(intervalIndex: number): Vector3 {\n        const a = this.intervalLocation(intervalIndex * 2)\n        const b = this.intervalLocation(intervalIndex * 2 + 1)\n        return new Vector3().add(a).add(b).multiplyScalar(0.5)\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        return vectorFromArray(this._midpoint.floats, 0, midpoint)\n    }\n\n    public get engine(): IFabricEngine {\n        this.fabricEngine.setInstance(this.index)\n        return this.fabricEngine\n    }\n}\n\nclass LazyFloatArray {\n    private array: Float32Array | undefined\n\n    constructor(private buffer: ArrayBuffer, private offset: number, private length: () => number) {\n    }\n\n    public get floats(): Float32Array {\n        if (this.array) {\n            return this.array\n        }\n        return this.array = new Float32Array(this.buffer, this.offset, this.length())\n    }\n\n    public clear(): void {\n        this.array = undefined\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IFabricEngine } from \"./fabric-engine\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport const vectorFromArray = (array: Float32Array, index: number, vector?: Vector3): Vector3 => {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport const vectorToArray = (vector: Vector3, array: Float32Array, index: number): void => {\n    const offset = index * 3\n    array[offset] = vector.x\n    array[offset + 1] = vector.y\n    array[offset + 2] = vector.z\n}\n\nexport function faceVector(faceIndex: number, array: Float32Array): Vector3 {\n    const index = faceIndex * 3\n    const a = vectorFromArray(array, index)\n    const b = vectorFromArray(array, index + 1)\n    const c = vectorFromArray(array, index + 2)\n    return new Vector3().add(a).add(b).add(c).multiplyScalar(1.0 / 3.0)\n}\n\nexport class FabricKernel {\n    private instanceArray: FabricInstance[] = []\n    private instanceUsed: boolean[] = []\n    private arrayBuffer: ArrayBuffer\n\n    constructor(engine: IFabricEngine) {\n        const fabricBytes = engine.init()\n        this.arrayBuffer = engine.memory.buffer\n        const byteLength = this.arrayBuffer.byteLength\n        if (byteLength === 0) {\n            throw new Error(`Zero byte length! ${fabricBytes}`)\n        }\n        for (let index = 0; index < engine.getInstanceCount(); index++) {\n            this.instanceArray.push(new FabricInstance(\n                index,\n                this.arrayBuffer,\n                toFree => this.instanceUsed[toFree] = false,\n                engine,\n            ))\n            this.instanceUsed.push(false)\n        }\n    }\n\n    public allocateInstance(): FabricInstance | undefined {\n        const freeIndex = this.instanceUsed.indexOf(false)\n        if (freeIndex < 0) {\n            return undefined\n        }\n        this.instanceUsed[freeIndex] = true\n        return this.instanceArray[freeIndex]\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FABRIC_FEATURES, FabricFeature, Stage } from \"./fabric-engine\"\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport { IInterval } from \"./tensegrity-types\"\n\nexport interface ITransitionPrefs {\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (fabricFeature: FabricFeature) => number, private fabric: TensegrityFabric, stage: Stage) {\n        this._stage = stage\n    }\n\n    public withStage(stage: Stage, prefs?: ITransitionPrefs): Life {\n        this.transition(stage, prefs)\n        this._stage = stage\n        return new Life(this.numericFeature, this.fabric, stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition(stage: Stage, prefs?: ITransitionPrefs): void {\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        this.save()\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (prefs && prefs.adoptLengths) {\n                            this.fabric.instance.engine.adoptLengths()\n                            this.save()\n                        }\n                        return\n                    case Stage.Realizing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Realizing:\n                        return\n                }\n                break\n            case Stage.Realizing:\n                switch (stage) {\n                    case Stage.Realized:\n                        return\n                }\n                break\n            case Stage.Realized:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (prefs && prefs.strainToStiffness) {\n                            const pushOverPull = this.numericFeature(FabricFeature.PushOverPull)\n                            const {newStiffnesses, newLinearDensities} = adjustedStiffness(this.fabric, pushOverPull)\n                            this.restore()\n                            const instance = this.fabric.instance\n                            newStiffnesses.forEach((value, index) => instance.stiffnesses[index] = value)\n                            newLinearDensities.forEach((value, index) => instance.linearDensities[index] = value)\n                            return\n                        }\n                        if (prefs && prefs.adoptLengths) {\n                            this.fabric.instance.engine.adoptLengths()\n                            this.save()\n                            return\n                        } else {\n                            this.restore()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n\n    private save(): void {\n        this.fabric.instance.engine.cloneInstance(this.fabric.instance.index, this.fabric.slackInstance.index)\n    }\n\n    private restore(): void {\n        this.fabric.instance.engine.cloneInstance(this.fabric.slackInstance.index, this.fabric.instance.index)\n        FABRIC_FEATURES.forEach(fabricFeature => {\n            this.fabric.instance.setFeatureValue(fabricFeature, this.numericFeature(fabricFeature))\n        })\n    }\n}\n\nexport function stiffnessToLinearDensity(stiffness: number): number {\n    return Math.sqrt(stiffness)\n}\n\nfunction adjustedStiffness(fabric: TensegrityFabric, pushOverPull: number): {\n    newStiffnesses: Float32Array,\n    newLinearDensities: Float32Array,\n} {\n    const strains: Float32Array = fabric.instance.strains\n    const existingStiffnesses = fabric.instance.stiffnesses\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const totalStrain = toAverage.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / toAverage.length\n    }\n    const intervals = fabric.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffness = existingStiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = stiffness.map(stiffnessToLinearDensity)\n    return {newStiffnesses: stiffness, newLinearDensities: linearDensities}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { FabricFeature, IntervalRole } from \"./fabric-engine\"\nimport { TensegrityFabric } from \"./tensegrity-fabric\"\nimport {\n    averageLocation,\n    averageScaleFactor,\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFacePull,\n    IInterval,\n    IJoint,\n    initialBrick,\n    IPercent,\n    IPushDefinition,\n    IRing,\n    oppositeTriangle,\n    percentToFactor,\n    PUSH_ARRAY,\n    PushEnd,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport function scaleToFacePullLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport class TensegrityBuilder {\n\n    private faceMarks: Record<number, IFace[]> = {}\n\n    constructor(public readonly fabric: TensegrityFabric, private numericFeature: (fabricFeature: FabricFeature) => number) {\n    }\n\n    public get markFace(): (mark: number, face: IFace) => void {\n        return (mark: number, face: IFace) => {\n            const found = this.faceMarks[mark]\n            if (found) {\n                found.push(face)\n            } else {\n                this.faceMarks[mark] = [face]\n            }\n        }\n    }\n\n    public createBrickAt(midpoint: Vector3, scale: IPercent): IBrick {\n        const points = this.createBrickPointsAt(Triangle.PPP, scale, midpoint)\n        return this.createBrick(points, Triangle.NNN, scale)\n    }\n\n    public createConnectedBrick(brickA: IBrick, triangle: Triangle, scale: IPercent): IBrick {\n        const faceA = brickA.faces[triangle]\n        const scaleA = percentToFactor(brickA.scale)\n        const scaleB = scaleA * percentToFactor(scale)\n        const brickB = this.createBrickOnFace(faceA, factorToPercent(scaleB))\n        const faceB = brickB.faces[brickB.base]\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        const connector = this.connectFaces(faceA, faceB, factorToPercent((scaleA + scaleB) / 2), countdown)\n        if (!connector) {\n            console.error(\"Cannot connect!\")\n        }\n        return brickB\n    }\n\n    public turnUpright(): void {\n        const markedFace = this.faceMarkLists.find(list => list.length === 1)\n        if (!markedFace) {\n            return\n        }\n        this.uprightAtOrigin(markedFace[0])\n    }\n\n    public checkFacePulls(facePulls: IFacePull[], removeFacePull: (facePull: IFacePull) => void): IFacePull[] {\n        if (facePulls.length === 0) {\n            return facePulls\n        }\n        const instance = this.fabric.instance\n        const connectFacePull = ({alpha, omega, scaleFactor} : IFacePull) => {\n            const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n            if (!this.connectFaces(alpha, omega, factorToPercent(scaleFactor), countdown)) {\n                console.error(\"Unable to connect\")\n            }\n        }\n        return facePulls.filter(facePull => {\n            const {alpha, omega, scaleFactor} = facePull\n            const distance = instance.faceMidpoint(alpha.index).distanceTo(instance.faceMidpoint(omega.index))\n            const closeEnough = distance <= scaleToFacePullLength(scaleFactor) * 10\n            if (closeEnough) {\n                connectFacePull(facePull)\n                removeFacePull(facePull)\n                return false\n            }\n            return true\n        })\n    }\n\n    public optimize(): void {\n        const fabric = this.fabric\n        const instance = fabric.instance\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = fabric.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crossPulls = fabric.intervals.filter(interval => (\n            interval.intervalRole === IntervalRole.ColumnCross ||\n            interval.intervalRole === IntervalRole.NexusCross),\n        )\n        crossPulls.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = instance.location(aAlpha)\n            const aOmegaLoc = instance.location(aOmega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crossPulls.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = instance.location(bAlpha)\n                const bOmegaLoc = instance.location(bOmega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            fabric.createInterval(x, y, IntervalRole.BowMid, scale, countdown)\n            const ax = fabric.findInterval(a, x)\n            const ay = fabric.findInterval(a, y)\n            const bx = fabric.findInterval(b, x)\n            const by = fabric.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                throw new Error(\"Cannot find intervals during optimize\")\n            }\n            fabric.removeInterval(ax)\n            fabric.removeInterval(by)\n            this.fabric.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.fabric.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n        instance.forgetDimensions()\n    }\n\n    public uprightAtOrigin(face: IFace): void {\n        const matrix = this.faceToOrigin(face)\n        this.fabric.instance.apply(matrix)\n    }\n\n    public get initialFacePulls(): IFacePull[] {\n        return this.faceMarkLists\n            .filter(list => list.length === 2 || list.length === 3)\n            .reduce((list: IFacePull[], faceList: IFace[]) => [...list, ...this.createFacePulls(faceList)], [])\n    }\n\n    public createFacePulls(faces: IFace[]): IFacePull[] {\n        const instance = this.fabric.instance\n        const centerBrickFacePulls = () => {\n            const brick = this.createBrickAt(\n                averageLocation(faces.map(face => instance.faceMidpoint(face.index))),\n                factorToPercent(averageScaleFactor(faces)),\n            )\n            instance.engine.renderNumbers()\n            const closestTo = (face: IFace) => {\n                const faceLocation = instance.faceMidpoint(face.index)\n                const opposingFaces = brick.faces.filter(({negative}) => negative !== face.negative)\n                return opposingFaces.reduce((a, b) => {\n                    const aa = instance.faceMidpoint(a.index).distanceTo(faceLocation)\n                    const bb = instance.faceMidpoint(b.index).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n            }\n            return faces.map(face => this.fabric.createFacePull(closestTo(face), face))\n        }\n        switch (faces.length) {\n            case 2:\n                if (faces[0].negative === faces[1].negative) {\n                    return centerBrickFacePulls()\n                }\n                return [this.fabric.createFacePull(faces[0], faces[1])]\n            case 3:\n                return centerBrickFacePulls()\n            default:\n                return []\n        }\n    }\n\n    private get faceMarkLists(): IFace[][] {\n        return Object.keys(this.faceMarks).map(key => this.faceMarks[key])\n    }\n\n    private createBrickOnFace(face: IFace, scale: IPercent): IBrick {\n        const negativeFace = TRIANGLE_DEFINITIONS[face.triangle].negative\n        const brick = face.brick\n        const triangle = face.triangle\n        const trianglePoints = brick.faces[triangle].joints.map(joint => this.fabric.instance.location(joint.index))\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const midSide = new Vector3().addVectors(trianglePoints[0], trianglePoints[1]).multiplyScalar(0.5)\n        const x = new Vector3().subVectors(midSide, midpoint).normalize()\n        const u = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const proj = new Vector3().add(x).multiplyScalar(x.dot(u))\n        const z = u.sub(proj).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        const xform = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        const base = negativeFace ? Triangle.NNN : Triangle.PPP\n        const points = this.createBrickPointsAt(base, scale, new Vector3(0, 0, 0)) // todo: maybe raise it\n        const movedToFace = points.map(p => p.applyMatrix4(xform))\n        const baseTriangle = negativeFace ? Triangle.PPP : Triangle.NNN\n        return this.createBrick(movedToFace, baseTriangle, scale)\n    }\n\n    private createBrick(points: Vector3[], base: Triangle, scale: IPercent): IBrick {\n        const countdown = this.numericFeature(FabricFeature.IntervalCountdown)\n        const brick = initialBrick(this.fabric.bricks.length, base, scale)\n        this.fabric.bricks.push(brick)\n        const jointIndexes = points.map((p, idx) => this.fabric.createJointIndex(idx, p))\n        PUSH_ARRAY.forEach(({}: IPushDefinition, idx: number) => {\n            const alphaIndex = jointIndexes[idx * 2]\n            const omegaIndex = jointIndexes[idx * 2 + 1]\n            const alpha: IJoint = {index: alphaIndex, oppositeIndex: omegaIndex}\n            const omega: IJoint = {index: omegaIndex, oppositeIndex: alphaIndex}\n            brick.pushes.push(this.fabric.createInterval(alpha, omega, IntervalRole.NexusPush, scale, countdown))\n        })\n        brick.pushes.forEach(push => brick.joints.push(push.alpha, push.omega))\n        const joints = brick.pushes.reduce((arr: IJoint[], push) => {\n            arr.push(push.alpha, push.omega)\n            return arr\n        }, [])\n        this.fabric.joints.push(...joints)\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const tJoints = triangle.pushEnds.map(end => joints[end])\n            for (let walk = 0; walk < 3; walk++) {\n                const alpha = tJoints[walk]\n                const omega = tJoints[(walk + 1) % 3]\n                const interval = this.fabric.createInterval(alpha, omega, IntervalRole.Triangle, scale, countdown)\n                brick.pulls.push(interval)\n                brick.rings[triangle.ringMember[walk]].push(interval)\n            }\n        })\n        TRIANGLE_DEFINITIONS.forEach(triangle => {\n            const face = this.fabric.createFace(brick, triangle.name)\n            brick.faces.push(face)\n        })\n        this.fabric.instance.forgetDimensions()\n        return brick\n    }\n\n    private createBrickPointsAt(base: Triangle, scale: IPercent, position: Vector3): Vector3 [] {\n        const pushesToPoints = (vectors: Vector3[], push: IPushDefinition): Vector3[] => {\n            vectors.push(new Vector3().add(push.alpha))\n            vectors.push(new Vector3().add(push.omega))\n            return vectors\n        }\n        const points = PUSH_ARRAY.reduce(pushesToPoints, [])\n        const newBase = oppositeTriangle(base)\n        const trianglePoints = TRIANGLE_DEFINITIONS[newBase].pushEnds.map((end: PushEnd) => points[end]).reverse()\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const x = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n        const y = new Vector3().sub(midpoint).normalize()\n        const z = new Vector3().crossVectors(y, x).normalize()\n        const basis = new Matrix4().makeBasis(x, y, z)\n        const scaleFactor = percentToFactor(scale)\n        const fromBasis = new Matrix4()\n            .getInverse(basis)\n            .setPosition(position)\n            .scale(new Vector3(scaleFactor, scaleFactor, scaleFactor))\n        return points.map(p => p.applyMatrix4(fromBasis))\n    }\n\n    private faceToOrigin(face: IFace): Matrix4 {\n        this.fabric.instance.engine.renderNumbers() // todo: necessary?\n        const trianglePoints = face.joints.map(joint => this.fabric.instance.location(joint.index))\n        const midpoint = trianglePoints.reduce((mid: Vector3, p: Vector3) => mid.add(p), new Vector3()).multiplyScalar(1.0 / 3.0)\n        const x = new Vector3().subVectors(trianglePoints[1], midpoint).normalize()\n        const z = new Vector3().subVectors(trianglePoints[0], midpoint).normalize()\n        const y = new Vector3().crossVectors(z, x).normalize()\n        z.crossVectors(x, y).normalize()\n        const basis = new Matrix4().makeBasis(x, y, z).setPosition(midpoint)\n        return new Matrix4().getInverse(basis)\n    }\n\n    private nineJointPairsByProximity(faceA: IFace, faceB: IFace): IJointPair[] {\n        const ninePairs: IJointPair[] = []\n        const instance = this.fabric.instance\n        faceA.joints.forEach(jointA => {\n            faceB.joints.forEach(jointB => {\n                const locationA = instance.location(jointA.index)\n                const locationB = instance.location(jointB.index)\n                const distance = locationA.distanceTo(locationB)\n                ninePairs.push({jointA, jointB, distance})\n            })\n        })\n        return ninePairs.sort((a, b) => a.distance - b.distance)\n    }\n\n    private facesToRing(faceA: IFace, faceB: IFace): IRing | undefined {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Polarity not opposite\")\n        }\n        const ninePairs = this.nineJointPairsByProximity(faceA, faceB)\n        const sixPairs = ninePairs.slice(0, 6)\n        const closest = sixPairs.shift()\n        if (!closest) {\n            throw new Error(\"No closest found\")\n        }\n        const extractPair = (predicate: (jointPair: IJointPair) => boolean) => {\n            const index = sixPairs.findIndex(predicate)\n            return index >= 0 ? sixPairs.splice(index, 1)[0] : undefined\n        }\n        const closestA = (jointB: IJoint) => {\n            const pair = extractPair(p => p.jointB.index === jointB.index)\n            return pair ? pair.jointA : undefined\n        }\n        const closestB = (jointA: IJoint) => {\n            const pair = extractPair(p => p.jointA.index === jointA.index)\n            return pair ? pair.jointB : undefined\n        }\n        const a0 = closest.jointA\n        const b0 = closest.jointB\n        const b1 = closestB(a0)\n        if (!b1) {\n            return undefined\n        }\n        const a1 = closestA(b1)\n        if (!a1) {\n            return undefined\n        }\n        const b2 = closestB(a1)\n        if (!b2) {\n            return undefined\n        }\n        const a2 = closestA(b2)\n        if (!a2) {\n            return undefined\n        }\n        const b3 = closestB(a2)\n        if (!b3 || b3.index !== b0.index) {\n            console.error(\"Cannot complete ring!\")\n            return undefined\n        }\n        const pos0 = faceA.joints.findIndex(j => j.index === a0.index)\n        const pos1 = faceA.joints.findIndex(j => j.index === a1.index)\n        const ringMatchesA = (pos0 + 1) % 3 === pos1\n        const jointsA = ringMatchesA !== faceA.negative ? [a0, a2, a1] : [a0, a1, a2]\n        const jointsB = ringMatchesA !== faceA.negative ? [b1, b0, b2] : [b0, b1, b2]\n        return {faceA, faceB, jointsA, jointsB}\n    }\n\n    private connectFaces(faceA: IFace, faceB: IFace, connectorScale: IPercent, countdown: number): boolean {\n        if (faceA.negative === faceB.negative) {\n            throw new Error(\"Same polarity!\")\n        }\n        const ring = this.facesToRing(faceA, faceB)\n        if (!ring) {\n            return false\n        }\n        const brickIsNexus = (brick: IBrick) => brick.negativeAdjacent > 1 || brick.postiveeAdjacent > 1\n        const createInterval = (from: IJoint, to: IJoint, role: IntervalRole) => this.fabric.createInterval(from, to, role, connectorScale, countdown)\n        const ringInterval = (from: IJoint, to: IJoint) => createInterval(from, to, IntervalRole.Ring)\n        const crossInterval = (from: IJoint, opposite: IJoint, toFace: IFace) => {\n            const to = this.fabric.joints[opposite.oppositeIndex]\n            const role = brickIsNexus(toFace.brick) ? IntervalRole.NexusCross : IntervalRole.ColumnCross\n            return createInterval(from, to, role)\n        }\n        for (let corner = 0; corner < 3; corner++) {\n            const a0 = ring.jointsA[corner]\n            const b0 = ring.jointsB[corner]\n            const b1 = ring.jointsB[(corner + 1) % 3]\n            ringInterval(a0, b0)\n            ringInterval(a0, b1)\n            crossInterval(a0, b1, faceB)\n            crossInterval(b0, a0, faceA)\n        }\n        const handleFace = (faceToRemove: IFace): void => {\n            const scale = faceToRemove.brick.scale\n            const triangle = faceToRemove.triangle\n            const brick = faceToRemove.brick\n            if (faceToRemove.negative) {\n                brick.negativeAdjacent++\n            } else {\n                brick.postiveeAdjacent++\n            }\n            TRIANGLE_DEFINITIONS\n                .filter(t => t.opposite !== triangle && t.negative !== TRIANGLE_DEFINITIONS[triangle].negative)\n                .forEach(t => brick.faces[t.name].canGrow = false)\n            this.fabric.removeFace(faceToRemove, true)\n            const triangleRing = TRIANGLE_DEFINITIONS[triangle].ring\n            if (brickIsNexus(brick)) {\n                brick.pulls\n                    .filter(interval => !interval.removed)\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.Triangle, scale, countdown))\n                brick.crosses\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.NexusCross, scale, countdown))\n\n            } else {\n                brick.rings[triangleRing]\n                    .filter(interval => !interval.removed)\n                    .forEach(interval => this.fabric.changeIntervalRole(interval, IntervalRole.Ring, scale, countdown))\n            }\n            const pushRole = brickIsNexus(brick) ? IntervalRole.NexusPush : IntervalRole.ColumnPush\n            brick.pushes\n                .filter(interval => !interval.removed)\n                .forEach(interval => this.fabric.changeIntervalRole(interval, pushRole, scale, countdown))\n        }\n        handleFace(faceA)\n        handleFace(faceB)\n        this.fabric.instance.forgetDimensions()\n        return true\n    }\n}\n\ninterface IJointPair {\n    jointA: IJoint\n    jointB: IJoint\n    distance: number\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { BufferGeometry, Float32BufferAttribute, Quaternion, SphereGeometry, Vector3 } from \"three\"\n\nimport { IFabricOutput, IOutputInterval } from \"../storage/download\"\n\nimport { FabricFeature, IFabricEngine, IntervalRole, isPush, Laterality, Stage } from \"./fabric-engine\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ITransitionPrefs, Life, stiffnessToLinearDensity } from \"./life\"\nimport { execute, IActiveTenscript, ITenscript } from \"./tenscript\"\nimport { scaleToFacePullLength, TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    factorToPercent,\n    IBrick,\n    IFace,\n    IFacePull,\n    IInterval,\n    IJoint,\n    IPercent,\n    JointTag,\n    percentOrHundred,\n    percentToFactor,\n    Triangle,\n    TRIANGLE_DEFINITIONS,\n} from \"./tensegrity-types\"\n\nexport const SPHERE = new SphereGeometry(1, 32, 8)\n\nconst COUNTDOWN_MAX = 65535\n\nfunction facePullCountdown(distance: number): number {\n    const countdown = distance * 4000\n    return countdown > COUNTDOWN_MAX ? COUNTDOWN_MAX : countdown\n}\n\nfunction scaleToStiffness(scale: IPercent): number {\n    return percentToFactor(scale) / 10000\n}\n\nexport class TensegrityFabric {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public facePulls: IFacePull[] = []\n    public faces: IFace[] = []\n    public bricks: IBrick[] = []\n    public activeTenscript?: IActiveTenscript[]\n    public facesToConnect: IFace[] | undefined\n    public maxJointSpeed = 0\n    public readonly builder: TensegrityBuilder\n\n    private faceCount: number\n    private faceLocations: Float32BufferAttribute\n    private faceNormals: Float32BufferAttribute\n    private _facesGeometry = new BufferGeometry()\n\n    private intervalCount: number\n    private lineLocations: Float32BufferAttribute\n    private lineColors: Float32BufferAttribute\n    private _linesGeometry = new BufferGeometry()\n\n    constructor(\n        public readonly roleDefaultLength: (intervalRole: IntervalRole) => number,\n        public readonly numericFeature: (fabricFeature: FabricFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly slackInstance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        this.builder = new TensegrityBuilder(this, numericFeature)\n        this.refreshLineGeometry()\n        this.refreshFaceGeometry()\n        const brick = this.builder.createBrickAt(new Vector3(), percentOrHundred())\n        this.bricks = [brick]\n        this.activeTenscript = [{tree: this.tenscript.tree, brick, fabric: this}]\n    }\n\n    public get life(): Life {\n        return this.life$.getValue()\n    }\n\n    public toStage(stage: Stage, prefs?: ITransitionPrefs): void {\n        if (stage === this.life.stage) {\n            return\n        }\n        this.life$.next(this.life.withStage(stage, prefs))\n    }\n\n    public connectFaces(faces: IFace[]): void {\n        this.facesToConnect = faces\n    }\n\n    public brickMidpoint({joints}: IBrick, midpoint?: Vector3): Vector3 {\n        const accumulator = midpoint ? midpoint : new Vector3()\n        return joints\n            .reduce((sum, joint) => sum.add(this.instance.location(joint.index)), accumulator)\n            .multiplyScalar(1.0 / joints.length)\n    }\n\n    public createJointIndex(jointTag: JointTag, location: Vector3): number {\n        return this.engine.createJoint(jointTag, Laterality.RightSide, location.x, location.y, location.z)\n    }\n\n    public createFacePull(alpha: IFace, omega: IFace): IFacePull {\n        const instance = this.instance\n        const distance = instance.faceMidpoint(alpha.index).distanceTo(instance.faceMidpoint(omega.index))\n        const stiffness = scaleToStiffness(percentOrHundred())\n        const linearDensity = stiffnessToLinearDensity(stiffness)\n        const scaleFactor = (percentToFactor(alpha.brick.scale) + percentToFactor(omega.brick.scale)) / 2\n        const restLength = scaleToFacePullLength(scaleFactor)\n        const index = this.engine.createInterval(\n            alpha.index, omega.index, IntervalRole.FacePull,\n            restLength, stiffness, linearDensity, facePullCountdown(distance),\n        )\n        const facePull = {index, alpha, omega, distance, scaleFactor, removed: false}\n        this.facePulls.push(facePull)\n        this.instance.forgetDimensions()\n        return facePull\n    }\n\n    public removeFacePull(facePull: IFacePull): void {\n        this.facePulls = this.facePulls.filter(existing => existing.index !== facePull.index)\n        this.engine.removeInterval(facePull.index)\n        this.facePulls.forEach(existing => {\n            if (existing.index > facePull.index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > facePull.index) {\n                existing.index--\n            }\n        })\n        facePull.removed = true\n        this.instance.forgetDimensions()\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, coundown: number): IInterval {\n        const scaleFactor = percentToFactor(scale)\n        const defaultLength = this.roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const stiffness = scaleToStiffness(scale)\n        const linearDensity = stiffnessToLinearDensity(stiffness)\n        const index = this.engine.createInterval(alpha.index, omega.index, intervalRole, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPush(intervalRole),\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = factorToPercent(percentToFactor(interval.scale) * factor)\n        this.instance.engine.multiplyRestLength(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        const engine = this.instance.engine\n        engine.setIntervalRole(interval.index, intervalRole)\n        engine.changeRestLength(interval.index, percentToFactor(scaleFactor) * this.roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.engine.removeInterval(interval.index)\n        this.intervals.forEach(existing => {\n            if (existing.index > interval.index) {\n                existing.index--\n            }\n        })\n        this.facePulls.forEach(existing => {\n            if (existing.index > interval.index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n        this.instance.forgetDimensions()\n    }\n\n    public createFace(brick: IBrick, triangle: Triangle): IFace {\n        const {negative, pushEnds} = TRIANGLE_DEFINITIONS[triangle]\n        const joints = pushEnds.map(end => brick.joints[end])\n        const pushes = pushEnds.map(end => {\n            const foundPush = brick.pushes.find(push => {\n                const endJoint = brick.joints[end]\n                return endJoint.index === push.alpha.index || endJoint.index === push.omega.index\n            })\n            if (foundPush === undefined) {\n                throw new Error()\n            }\n            return foundPush\n        })\n        const pulls = [0, 1, 2].map(offset => brick.pulls[triangle * 3 + offset])\n        const face: IFace = {\n            index: this.engine.createFace(joints[0].index, joints[1].index, joints[2].index),\n            canGrow: true, negative, removed: false,\n            brick, triangle, joints, pushes, pulls,\n        }\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace, removeIntervals: boolean): void {\n        this.engine.removeFace(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        face.removed = true\n        if (removeIntervals) {\n            face.pulls.forEach(interval => this.removeInterval(interval))\n        }\n    }\n\n    public release(): void {\n        this.instance.release()\n    }\n\n    public needsUpdate(): void {\n        const instance = this.instance\n        this.faceLocations.array = instance.faceLocations\n        this.faceLocations.needsUpdate = true\n        this.faceNormals.array = instance.faceNormals\n        this.faceNormals.needsUpdate = true\n        this.lineLocations.array = instance.lineLocations\n        this.lineLocations.needsUpdate = true\n        this.lineColors.array = instance.lineColors\n        this.lineColors.needsUpdate = true\n        this._linesGeometry.computeBoundingSphere()\n        this._facesGeometry.computeBoundingSphere()\n    }\n\n    public get submergedJoints(): IJoint[] {\n        return this.joints.filter(joint => this.instance.location(joint.index).y < 0)\n    }\n\n    public get facesGeometry(): BufferGeometry {\n        if (this.faceCount !== this.instance.engine.getFaceCount()) {\n            this.refreshFaceGeometry()\n        }\n        return this._facesGeometry\n    }\n\n    public get linesGeometry(): BufferGeometry {\n        if (this.intervalCount !== this.instance.engine.getIntervalCount()) {\n            this.refreshLineGeometry()\n        }\n        return this._linesGeometry\n    }\n\n    public startTightening(facePulls: IFacePull[]): void {\n        this.facePulls = facePulls\n    }\n\n    public iterate(): Stage {\n        const engine = this.engine\n        const lifePhase = engine.iterate(this.life$.getValue().stage)\n        this.maxJointSpeed = Math.sqrt(engine.renderNumbers())\n        if (lifePhase === Stage.Busy) {\n            return lifePhase\n        }\n        const activeCode = this.activeTenscript\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.activeTenscript = execute(activeCode, this.builder.markFace)\n                engine.centralize()\n            }\n            if (activeCode.length === 0) {\n                this.activeTenscript = undefined\n                if (lifePhase === Stage.Growing) {\n                    const afterGrowing = engine.finishGrowing()\n                    this.facePulls = this.builder.initialFacePulls\n                    return afterGrowing\n                }\n            }\n        } else {\n            const faces = this.facesToConnect\n            if (faces) {\n                this.facesToConnect = undefined\n                this.builder.createFacePulls(faces)\n            }\n            this.facePulls = this.builder.checkFacePulls(this.facePulls, facePull => this.removeFacePull(facePull))\n        }\n        return lifePhase\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public orientInterval(interval: IInterval, radiusFactor: number, visualStrain: number): { scale: Vector3, rotation: Quaternion } {\n        const Y_AXIS = new Vector3(0, 1, 0)\n        const unit = this.instance.unitVector(interval.index)\n        const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n        const alphaLocation = this.instance.location(interval.alpha.index)\n        const omegaLocation = this.instance.location(interval.omega.index)\n        const intervalLength = alphaLocation.distanceTo(omegaLocation)\n        const strain = this.instance.strains[interval.index]\n        const half = intervalLength / 2\n        const scale = new Vector3(radiusFactor, half + half * (-strain) * visualStrain, radiusFactor)\n        return {scale, rotation}\n    }\n\n    // public orientVectorPair(a: Vector3, b: Vector3, radiusFactor: number): { scale: Vector3, rotation: Quaternion } {\n    //     const Y_AXIS = new Vector3(0, 1, 0)\n    //     const unit = new Vector3().subVectors(b, a).normalize()\n    //     const rotation = new Quaternion().setFromUnitVectors(Y_AXIS, unit)\n    //     const distance = a.distanceTo(b)\n    //     const scale = new Vector3(radiusFactor, distance, radiusFactor)\n    //     return {scale, rotation}\n    // }\n\n    public get output(): IFabricOutput {\n        const numberToString = (n: number) => n.toFixed(5).replace(/[.]/, \",\")\n        const strains = this.instance.strains\n        const stiffnesses = this.instance.stiffnesses\n        const linearDensities = this.instance.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = this.instance.location(joint.index)\n                return {\n                    index: (joint.index + 1).toString(),\n                    x: numberToString(vector.x),\n                    y: numberToString(vector.z),\n                    z: numberToString(vector.y),\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const alpha = this.instance.location(interval.alpha.index)\n                const omega = this.instance.location(interval.omega.index)\n                const length = alpha.distanceTo(omega)\n                const joints = `${interval.alpha.index + 1},${interval.omega.index + 1}`\n                const strainString = numberToString(strains[interval.index])\n                const type = interval.isPush ? \"Push\" : \"Pull\"\n                const stiffness = stiffnesses[interval.index]\n                const stiffnessString = numberToString(stiffness)\n                const linearDensity = linearDensities[interval.index]\n                const linearDensityString = numberToString(linearDensity)\n                const role = IntervalRole[interval.intervalRole]\n                return <IOutputInterval>{\n                    joints,\n                    type,\n                    strainString,\n                    stiffness,\n                    stiffnessString,\n                    linearDensity,\n                    linearDensityString,\n                    isPush: isPush(interval.intervalRole),\n                    role,\n                    length,\n                }\n            }).sort((a, b) => {\n                if (a.isPush && !b.isPush) {\n                    return -1\n                }\n                if (!a.isPush && b.isPush) {\n                    return 1\n                }\n                return a.stiffness - b.stiffness\n            }),\n        }\n    }\n\n    private refreshLineGeometry(): void {\n        this.engine.renderNumbers()\n        this.intervalCount = this.instance.engine.getIntervalCount()\n        this.lineLocations = new Float32BufferAttribute(this.instance.lineLocations, 3)\n        this.lineColors = new Float32BufferAttribute(this.instance.lineColors, 3)\n        this._linesGeometry.addAttribute(\"position\", this.lineLocations)\n        this._linesGeometry.addAttribute(\"color\", this.lineColors)\n        this._linesGeometry.computeBoundingSphere()\n    }\n\n    private refreshFaceGeometry(): void {\n        this.engine.renderNumbers()\n        this.faceCount = this.instance.engine.getFaceCount()\n        this.faceLocations = new Float32BufferAttribute(this.instance.faceLocations, 3)\n        this.faceNormals = new Float32BufferAttribute(this.instance.faceNormals, 3)\n        this._facesGeometry.addAttribute(\"position\", this.faceLocations)\n        this._facesGeometry.addAttribute(\"normal\", this.faceNormals)\n        this._facesGeometry.computeBoundingSphere()\n    }\n\n    private get engine(): IFabricEngine {\n        return this.instance.engine\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaTools,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Stage } from \"../fabric/fabric-engine\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    CurrentLengthsToSlack,\n    SlackToRealizing,\n    SlackToShaping,\n    CaptureRealizedToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({fabric, stageTransition, disabled}: {\n    fabric: TensegrityFabric,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Busy || life.stage === Stage.Realizing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => fabric.toStage(Stage.Slack, {adoptLengths: true})}\n                >\n                    Capture Lengths <FaCamera/> (\n                    <Symbol stage={Stage.Shaping}/> ) <FaArrowRight/> ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.CurrentLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => fabric.toStage(Stage.Slack)}\n                >\n                    Current Lengths <Symbol stage={Stage.Shaping}/> <FaArrowRight/>\n                    <Symbol stage={Stage.Slack}/> Slack\n                </Button>\n            )\n        case StageTransition.SlackToRealizing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => fabric.toStage(Stage.Realizing)}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Realized}/> Realized\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => fabric.toStage(Stage.Shaping)}\n                    >\n                        Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Shaping}/> Shaping\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CaptureRealizedToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Realized)}\n                    onClick={() => fabric.toStage(Stage.Slack, {adoptLengths: true})}\n                >\n                    Capture realized <FaCamera/> ( <Symbol stage={Stage.Realized}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Realized)}\n                    onClick={() => fabric.toStage(Stage.Slack, {strainToStiffness: true})}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Realized}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Busy:\n            return <FaClock/>\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaTools/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Realizing:\n            return <FaClock/>\n        case Stage.Realized:\n            return <FaHandSpock/>\n    }\n}\n\n// function stageName(stage: Stage): string {\n//     switch (stage) {\n//         case Stage.Busy:\n//             return \"Busy\"\n//         case Stage.Growing:\n//             return \"Growing\"\n//         case Stage.Shaping:\n//             return \"Shaping\"\n//         case Stage.Slack:\n//             return \"Slack\"\n//         case Stage.Realizing:\n//             return \"Realizing\"\n//         case Stage.Realized:\n//             return \"Realized\"\n//     }\n// }\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaCompass,\n    FaDragon,\n    FaHandPointUp,\n    FaLink,\n    FaList,\n    FaMagic,\n    FaTimesCircle,\n    FaTools,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport {\n    FabricFeature,\n    INTERVAL_ROLES,\n    IntervalRole,\n    intervalRoleFabricFeature,\n    intervalRoleName,\n    Stage,\n} from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\n\nexport enum ShapeSelection {\n    None,\n    Faces,\n    Intervals,\n}\n\nexport function ShapeTab(\n    {\n        floatFeatures, fabric, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedFaces, clearSelectedFaces, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        fabric: TensegrityFabric,\n        setFabric: (fabric: TensegrityFabric) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedFaces: IFace[],\n        clearSelectedFaces: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        fabric.instance.engine.setPushAndPull(pushAndPull)\n    }, [pushAndPull])\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updateEllipsoids(newState.ellipsoids)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    const [lengthFeature, setLengthFeature] = useState(floatFeatures[FabricFeature.NexusPushLength])\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            fabric.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function connect(): void {\n        fabric.connectFaces(selectedFaces)\n        clearSelectedFaces()\n        setShapeSelection(ShapeSelection.None)\n        setFabric(fabric)\n    }\n\n    function disabled(): boolean {\n        return ellipsoids || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedFaces.length < faceCount || ellipsoids\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CurrentLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={ellipsoids && shapeSelection === ShapeSelection.None || selectedFaces.length === 0}\n                        onClick={() => {\n                            const selection = shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals\n                            setShapeSelection(selection)\n                        }}\n                    >\n                        <span><FaArrowDown/> Adjust <FaArrowUp/></span>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedFaces.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelectedFaces()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(1, ShapeSelection.Faces)}\n                        onClick={() => {\n                            fabric.builder.uprightAtOrigin(selectedFaces[0])\n                            clearSelectedFaces()\n                        }}>\n                        <FaCompass/><span> Upright</span>\n                    </Button>\n                    <Button\n                        disabled={disableUnlessFaceCount(2, ShapeSelection.Faces)}\n                        onClick={connect}>\n                        <FaLink/><span> Connect</span>\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => fabric.builder.optimize()}>\n                        <FaMagic/><span> Bows</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Default Lengths</h6>\n                <FeaturePanel key={lengthFeature.title} feature={lengthFeature} disabled={disabled()}/>\n                <ButtonGroup className=\"my-2\">{\n                    INTERVAL_ROLES\n                        .map(intervalRole => ({\n                            intervalRole,\n                            feature: floatFeatures[intervalRoleFabricFeature(intervalRole)],\n                        }))\n                        .map(({intervalRole, feature}) => (\n                            <Button size=\"sm\" key={IntervalRole[intervalRole]}\n                                    onClick={() => setLengthFeature(feature)}\n                                    color={lengthFeature.fabricFeature === feature.fabricFeature ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport {\n    Color,\n    DoubleSide,\n    LineBasicMaterial,\n    Material,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    VertexColors,\n} from \"three\"\n\nimport { IntervalRole } from \"../fabric/fabric-engine\"\n\nexport const SELECTION_COLOR = \"#91934f\"\nexport const SCALE_LINE_COLOR = \"#cace02\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fc4d4d\",\n    \"#fb712a\",\n    \"#ed9400\",\n    \"#d4b500\",\n    \"#afd200\",\n    \"#80da52\",\n    \"#4edd83\",\n    \"#00ddad\",\n    \"#00c4d7\",\n    \"#00a5ff\",\n    \"#007bff\",\n    \"#2329f7\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(colorString => new Color(colorString))\n\n// console.log(\"RAINBOW\\n\",`const RAINBOW: f32[] = [\\n${RAINBOW_COLORS.map(color => (\n//     `${(color.r).toFixed(4)}, ${(color.g).toFixed(4)}, ${(color.b).toFixed(4)}`\n// )).join(\",\\n\")}\\n]`)\n\nconst lights = true\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#1c1608\"),\n    side: DoubleSide,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: VertexColors,\n})\n\nexport const SCALE_LINE = new LineBasicMaterial({\n    color: new Color(SCALE_LINE_COLOR),\n})\n\nexport const FACE = new MeshPhongMaterial({\n    lights,\n    color: new Color(\"white\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.2,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n    lights: true,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color, lights}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.NexusPush:\n            return \"#6541b4\"\n        case IntervalRole.ColumnPush:\n            return \"#2f3aca\"\n        case IntervalRole.Triangle:\n            return \"#f9c9bf\"\n        case IntervalRole.Ring:\n            return \"#cc3200\"\n        case IntervalRole.NexusCross:\n            return \"#59ebcb\"\n        case IntervalRole.ColumnCross:\n            return \"#73c84a\"\n        case IntervalRole.BowMid:\n            return \"#f101e9\"\n        case IntervalRole.BowEnd:\n            return \"#cb01c3\"\n        case IntervalRole.FacePull:\n            return \"#bf0105\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color, lights})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { fabricFeatureIntervalRole } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const roleColor = roleColorString(fabricFeatureIntervalRole(feature.fabricFeature))\n    const color = roleColor ? roleColor : \"#919191\"\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{\n                color: disabled ? \"gray\" : \"white\",\n            }}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : color\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, Stage, SurfaceCharacter } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { enumValues, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({floatFeatures, fabric, shapeSelection, storedState$}: {\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    fabric: TensegrityFabric,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updateEllipsoids(storedState.ellipsoids)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function disabled(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function changeState(changed: Partial<IStoredState>): void {\n        storedState$.next(transition(storedState$.getValue(), changed))\n    }\n\n    function disabledLifeStage(): boolean {\n        return ellipsoids || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.SlackToRealizing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureRealizedToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <FeaturePanel feature={floatFeatures[FabricFeature.PretenstFactor]} disabled={disabled()}/>\n                <div className=\"float-right\" style={{\n                    color: disabled() ? \"gray\" : \"white\",\n                }}>\n                    {SurfaceCharacter[storedState.surfaceCharacter]}\n                </div>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {enumValues(SurfaceCharacter).map(value => (\n                        <Button\n                            key={SurfaceCharacter[value]}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === value}\n                            onClick={() => changeState({surfaceCharacter: value})}\n                        >{SurfaceCharacter[value]}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={floatFeatures[FabricFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={floatFeatures[FabricFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    fabric={fabric}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={floatFeatures[FabricFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaSlidersH } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { BufferGeometry, Float32BufferAttribute, Geometry, Vector3 } from \"three\"\n\nimport { FabricFeature } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LINE_VERTEX_COLORS, SCALE_LINE } from \"./materials\"\n\nconst SCALE_WIDTH = 0.7\nconst NEEDLE_WIDTH = 1.4\nconst SCALE_MAX = 3.5\n\nconst FEATURES = [\n    FabricFeature.MaxStrain,\n    FabricFeature.MaxStiffness,\n    FabricFeature.VisualStrain,\n    FabricFeature.SlackThreshold,\n]\n\nfunction scaleGeometry(middleTick: boolean): Geometry {\n    const geometry = new Geometry()\n    const v = (x: number, y: number) => new Vector3(x, y, 0)\n    geometry.vertices = [\n        v(0, -SCALE_MAX), v(0, SCALE_MAX),\n        v(-SCALE_WIDTH, SCALE_MAX), v(SCALE_WIDTH, SCALE_MAX),\n        v(-SCALE_WIDTH, -SCALE_MAX), v(SCALE_WIDTH, -SCALE_MAX),\n    ]\n    if (middleTick) {\n        geometry.vertices.push(v(-SCALE_WIDTH, 0), v(SCALE_WIDTH, 0))\n    }\n    return geometry\n}\n\nfunction needleGeometry(\n    intervals: IInterval[], lineColors: Float32Array,\n    values: Float32Array, midValue: number, maxValue: number,\n): BufferGeometry {\n    const position = new Float32Array(values.length * 2 * 3)\n    let offset = 0\n    intervals.forEach(interval => {\n        const value = values[interval.index]\n        const unboundedHeight = (value - midValue) / (maxValue - midValue)\n        const height = unboundedHeight < -1 ? -1 : unboundedHeight > 1 ? 1 : unboundedHeight\n        position[offset++] = -SCALE_WIDTH * NEEDLE_WIDTH\n        position[offset++] = height * SCALE_MAX\n        position[offset++] = 0\n        position[offset++] = SCALE_WIDTH * NEEDLE_WIDTH\n        position[offset++] = height * SCALE_MAX\n        position[offset++] = 0\n    })\n    const geometry = new BufferGeometry()\n    geometry.addAttribute(\"position\", new Float32BufferAttribute(position, 3))\n    geometry.addAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n    return geometry\n}\n\nexport function StrainTab({floatFeatures, fabric, storedState$}: {\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    fabric: TensegrityFabric,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const camera = useRef()\n\n    function ScaleView(): JSX.Element {\n        const [age, updateAge] = useState(0)\n        const [maxStrain, updateMaxStrain] = useState(storedState$.getValue().featureValues[FabricFeature.MaxStrain].numeric)\n        const [maxStiffness, updateMaxStiffness] = useState(storedState$.getValue().featureValues[FabricFeature.MaxStiffness].numeric)\n\n        useEffect(() => {\n            const sub = storedState$.subscribe(storedState => {\n                updateMaxStrain(storedState.featureValues[FabricFeature.MaxStrain].numeric)\n                updateMaxStiffness(storedState.featureValues[FabricFeature.MaxStiffness].numeric)\n            })\n            return () => sub.unsubscribe()\n        }, [fabric])\n\n        useEffect(() => {\n            const timer = setInterval(() => {\n                const fabricAge = fabric.instance.engine.getAge()\n                if (age < fabricAge) {\n                    updateAge(fabricAge) // to trigger repaint. better way?\n                }\n            }, 1000)\n            return () => clearTimeout(timer)\n        }, [])\n\n        const instance = fabric.instance\n\n        function Scale({position, intervals, floats, mid, max, middleTick}: {\n            position: number,\n            intervals: IInterval[],\n            floats: Float32Array,\n            mid: number,\n            max: number,\n            middleTick: boolean,\n        }): JSX.Element {\n            return (\n                <group position={new Vector3(position, -0.15, 0)}>\n                    <lineSegments\n                        geometry={needleGeometry(intervals, instance.lineColors, floats, mid, max)}\n                        material={LINE_VERTEX_COLORS}/>\n                    <lineSegments geometry={scaleGeometry(middleTick)} material={SCALE_LINE}/>\n                </group>\n            )\n        }\n\n        return (\n            <Canvas>\n                <orthographicCamera position={new Vector3(0, 0, -1)} ref={camera}/>\n                <scene>\n                    <Scale\n                        position={-1.5}\n                        intervals={fabric.intervals}\n                        floats={instance.strains}\n                        mid={0}\n                        max={maxStrain}\n                        middleTick={true}\n                    />\n                    <Scale\n                        position={1.5}\n                        intervals={fabric.intervals}\n                        floats={instance.stiffnesses}\n                        mid={0}\n                        max={maxStiffness}\n                        middleTick={false}\n                    />\n                </scene>\n            </Canvas>\n        )\n    }\n\n    return <>\n        <Grouping height=\"50%\">\n            <div style={{\n                position: \"absolute\",\n                left: \"6em\",\n            }}>\n                Strain\n            </div>\n            <div style={{\n                position: \"absolute\",\n                right: \"5em\",\n            }}>\n                Stiffness\n            </div>\n            <ScaleView/>\n        </Grouping>\n        <Grouping>\n            <h6 className=\"w-100 text-center\"><FaSlidersH/> Adjustments</h6>\n            {FEATURES.map(feature => (\n                <FeaturePanel\n                    key={FabricFeature[feature]}\n                    feature={floatFeatures[feature]}\n                    disabled={false}\n                />))}\n        </Grouping>\n    </>\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBox, FaBug, FaHeart, FaHiking, FaPlay, FaRegFolder, FaRegFolderOpen, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { addRecentCode, getRecentTenscript, IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, fabric, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    fabric?: TensegrityFabric,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(fabric && !fabric.tenscript.fromUrl ? fabric.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        const state = addRecentCode(storedState$.getValue(), newCode)\n        setRecentPrograms(getRecentTenscript(state))\n        storedState$.next(state)\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBox/> Storage</h6>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"20em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCamera,\n    FaCircle,\n    FaClock,\n    FaCompressArrowsAlt,\n    FaDownload,\n    FaExpandArrowsAlt, FaEye,\n    FaFileCsv,\n    FaFistRaised,\n    FaFutbol,\n    FaHandRock,\n    FaParachuteBox, FaRunning,\n    FaVolleyballBall,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, INTERVAL_ROLES, IntervalRole, intervalRoleName, Stage } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { saveCSVZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function ViewTab(\n    {\n        floatFeatures, fabric,\n        visibleRoles, setVisibleRoles, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        fabric: TensegrityFabric,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    const [showPushes, updateShowPushes] = useState(storedState$.getValue().showPushes)\n    const [showPulls, updateShowPulls] = useState(storedState$.getValue().showPulls)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updateEllipsoids(newState.ellipsoids)\n            updateShowPushes(newState.showPushes)\n            updateShowPulls(newState.showPulls)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    function ViewButton({pushes, pulls, children}: { pushes: boolean, pulls: boolean, children: JSX.Element }): JSX.Element {\n        return (\n            <Button\n                style={{color: \"white\"}}\n                color={pushes === showPushes && pulls === showPulls ? \"success\" : \"secondary\"}\n                onClick={() => {\n                    storedState$.next(transition(storedState$.getValue(), {showPulls: pulls, showPushes: pushes}))\n                }}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Coloring</h6>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <ViewButton pushes={true} pulls={true}>\n                        <span><FaFutbol/> All</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={true}>\n                        <span><FaVolleyballBall/> Pulls</span>\n                    </ViewButton>\n                    <ViewButton pushes={true} pulls={false}>\n                        <span><FaExpandArrowsAlt/> Pushes</span>\n                    </ViewButton>\n                    <ViewButton pushes={false} pulls={false}>\n                        <span><FaCircle/> Roles</span>\n                    </ViewButton>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaCamera/> Snapshot</h6>\n                <ButtonGroup size=\"sm\">\n                    {INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            color={visibleRoles.indexOf(intervalRole) < 0 ? \"secondary\" : \"success\"}\n                            key={`viz${intervalRole}`}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    setVisibleRoles([...visibleRoles, intervalRole])\n                                } else {\n                                    setVisibleRoles(visibleRoles.filter(role => role !== intervalRole))\n                                }\n                            }}\n                            disabled={!ellipsoids}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel key=\"pushrad\" feature={floatFeatures[FabricFeature.PushRadiusFactor]}\n                              disabled={!ellipsoids}/>\n                <FeaturePanel key=\"pullrad\" feature={floatFeatures[FabricFeature.PullRadiusFactor]}\n                              disabled={!ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={floatFeatures[FabricFeature.IterationsPerFrame]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"ic\" feature={floatFeatures[FabricFeature.IntervalCountdown]} disabled={ellipsoids}/>\n                <FeaturePanel key=\"pc\" feature={floatFeatures[FabricFeature.PretenstCountdown]} disabled={ellipsoids}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Realized}\n                            onClick={() => fabric.instance.engine.setAltitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Realized}\n                            onClick={() => fabric.instance.engine.setAltitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={ellipsoids}\n                            onClick={() => fabric.instance.engine.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                <ButtonGroup vertical={true} className=\"w-100\">\n                    <Button onClick={() => saveCSVZip(fabric)}>\n                        <FaDownload/> Download CSV <FaFileCsv/>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\nimport { Mesh, Object3D } from \"three\"\nimport { OBJExporter } from \"three/examples/jsm/exporters/OBJExporter\"\n\nimport { SPHERE, TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { FACE, roleMaterial } from \"../view/materials\"\n\nexport interface IOutputInterval {\n    joints: string,\n    type: string,\n    strainString: string,\n    stiffness: number,\n    stiffnessString: string,\n    linearDensity: number,\n    linearDensityString: string,\n    isPush: boolean,\n    role: string,\n    length: number,\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: {\n        index: string,\n        x: string,\n        y: string,\n        z: string,\n    }[]\n    intervals: IOutputInterval[]\n}\n\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([joint.index, joint.x, joint.y, joint.z]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"elasticity\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints}\"\"\"`,\n            interval.type,\n            interval.strainString,\n            interval.stiffnessString,\n            interval.linearDensityString,\n            interval.role,\n            interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(fabric: TensegrityFabric): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${fabric.submergedJoints.map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(fabric: TensegrityFabric): void {\n    const output = fabric.output\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(fabric))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        const dateString = new Date().toISOString()\n            .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n        FileSaver.saveAs(blob, `pretenst-${dateString}.zip`)\n    })\n}\n\nfunction extractOBJBlob(fabric: TensegrityFabric, faces: boolean): Blob {\n    const object3d = new Object3D()\n    if (faces) {\n        object3d.add(new Mesh(fabric.facesGeometry, FACE))\n    } else {\n        object3d.add(...fabric.intervals.map((interval: IInterval) => {\n            const {scale, rotation} = fabric.orientInterval(interval, interval.isPush ? 1 : 0.1, 1)\n            const mesh = new Mesh(SPHERE, roleMaterial(interval.intervalRole))\n            mesh.position.copy(fabric.instance.getIntervalMidpoint(interval.index))\n            mesh.scale.copy(scale)\n            mesh.rotation.setFromQuaternion(rotation)\n            return mesh\n        }))\n        object3d.updateMatrixWorld(true)\n    }\n    return new Blob([new OBJExporter().parse(object3d)], {type: \"text/plain\"})\n}\n\nexport function saveOBJFile(fabric: TensegrityFabric): void {\n    FileSaver.saveAs(extractOBJBlob(fabric, false), \"pretenst.obj\")\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, IntervalRole } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { StrainTab } from \"./strain-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\nimport { ViewTab } from \"./view-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        floatFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedFaces, clearSelectedFaces, selectedIntervals,\n        fabric, setFabric, runTenscript,\n        visibleRoles, setVisibleRoles,\n        toFullScreen, storedState$,\n    }: {\n        floatFeatures: Record<FabricFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedFaces: IFace[],\n        clearSelectedFaces: () => void,\n        selectedIntervals: IInterval[],\n        runTenscript: (tenscript: ITenscript) => void,\n        fabric?: TensegrityFabric,\n        setFabric: (fabric: TensegrityFabric) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        visibleRoles: IntervalRole[],\n        setVisibleRoles: (roles: IntervalRole[]) => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(fabric ? fabric.life : undefined)\n    useEffect(() => {\n        const sub = fabric ? fabric.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [fabric])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelectedFaces()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => storedState$.next(transition(storedState$.getValue(), {controlTab: tab}))}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            fabric={fabric}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !fabric ? NO_FABRIC : (\n                        <ShapeTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedFaces={selectedFaces}\n                            clearSelectedFaces={clearSelectedFaces}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !fabric ? NO_FABRIC : (\n                        <RealizeTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.View:\n                    return !fabric ? NO_FABRIC : (\n                        <ViewTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            visibleRoles={visibleRoles}\n                            setVisibleRoles={setVisibleRoles}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Strain:\n                    return !fabric ? NO_FABRIC : (\n                        <StrainTab\n                            floatFeatures={floatFeatures}\n                            fabric={fabric}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 1.0\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 2.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const spots = useMemo(() => spotsGeometry(), [])\n    return (\n        <mesh name=\"Spots\" geometry={spots} material={SURFACE}/>\n    )\n}\n\nfunction spotsGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    geometry.computeBoundingSphere()\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useRender, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    Euler,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, FabricFeature, IntervalRole, Stage } from \"../fabric/fabric-engine\"\nimport { SPHERE, TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval, percentToFactor } from \"../fabric/tensegrity-types\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { FACE, LINE_VERTEX_COLORS, rainbowMaterial, roleMaterial, SELECT_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst ALTITUDE = 4\n\nexport function FabricView({\n                               fabric, fabricError, selectedIntervals, selectedFaces, setSelectedFaces, storedState$,\n                               shapeSelection, ellipsoids, visibleRoles,\n                           }: {\n    fabric: TensegrityFabric,\n    fabricError: (error: string) => void,\n    selectedIntervals: IInterval[],\n    selectedFaces: IFace[],\n    setSelectedFaces: (faces: IFace[]) => void,\n    shapeSelection: ShapeSelection,\n    ellipsoids: boolean,\n    visibleRoles: IntervalRole[],\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [age, setAge] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(orb => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(orbit.current.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        orb.object = perspective\n        orb.minPolarAngle = -0.98 * Math.PI / 2\n        orb.maxPolarAngle = 0.8 * Math.PI\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useRender(() => {\n        try {\n            const instance = fabric.instance\n            const target = instance.getMidpoint()\n            const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n            orbit.current.target.add(towardsTarget)\n            orbit.current.update()\n            if (!ellipsoids && shapeSelection !== ShapeSelection.Faces) {\n                const nextStage = fabric.iterate()\n                if (life.stage === Stage.Realizing && nextStage === Stage.Realized) {\n                    setTimeout(() => fabric.toStage(Stage.Realized, {}))\n                } else if (nextStage !== life.stage && life.stage !== Stage.Realizing && nextStage !== Stage.Busy) {\n                    setTimeout(() => fabric.toStage(nextStage, {}))\n                }\n            }\n            instance.engine.renderNumbers()\n            fabric.needsUpdate()\n            setAge(instance.engine.getAge())\n        } catch (e) {\n            fabricError(e)\n        }\n    }, true, [\n        fabric, fabric, age, life, shapeSelection, ellipsoids,\n    ])\n\n    function toggleFacesSelection(faceToToggle: IFace): void {\n        if (selectedFaces.some(selected => selected.index === faceToToggle.index)) {\n            setSelectedFaces(selectedFaces.filter(b => b.index !== faceToToggle.index))\n        } else {\n            setSelectedFaces([...selectedFaces, faceToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {ellipsoids ? (\n                    <EllipsoidView\n                        key=\"ellipsoid\"\n                        fabric={fabric}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                        visibleRoles={visibleRoles}\n                    />\n                ) : (\n                    <LineView\n                        key=\"lines\"\n                        fabric={fabric}\n                        selectedIntervals={selectedIntervals}\n                        storedState={storedState}\n                    />\n                )}\n                {shapeSelection !== ShapeSelection.Faces ? undefined : (\n                    <Faces\n                        key=\"faces\"\n                        fabric={fabric}\n                        stage={life.stage}\n                        selectFace={toggleFacesSelection}\n                    />\n                )}\n                {selectedFaces.map(face => <SelectedFace key={`Face${face.index}`} fabric={fabric} face={face}/>)}\n                {life.stage <= Stage.Slack ? undefined : <SurfaceComponent/>}\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectedFace({fabric, face}: { fabric: TensegrityFabric, face: IFace }): JSX.Element {\n    const scale = percentToFactor(face.brick.scale) / 8\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={fabric.instance.faceMidpoint(face.index)}\n            material={SELECT_MATERIAL}\n            scale={new Vector3(scale, scale, scale)}\n        />\n    )\n}\n\nfunction IntervalMesh({fabric, interval, storedState}: {\n    fabric: TensegrityFabric,\n    interval: IInterval,\n    storedState: IStoredState,\n}): JSX.Element | null {\n\n    let material = roleMaterial(interval.intervalRole)\n    if (storedState.showPushes || storedState.showPulls) {\n        material = rainbowMaterial(fabric.instance.strainNuances[interval.index])\n        if (!(storedState.showPushes && storedState.showPulls) && (storedState.showPushes && !interval.isPush || storedState.showPulls && interval.isPush)) {\n            return <group/>\n        }\n    }\n    const linearDensity = fabric.instance.linearDensities[interval.index]\n    const radiusFactor = storedState.featureValues[interval.isPush ? FabricFeature.PushRadiusFactor : FabricFeature.PullRadiusFactor]\n    const visualStrain = storedState.featureValues[FabricFeature.VisualStrain]\n    const {scale, rotation} = fabric.orientInterval(interval, radiusFactor.numeric * linearDensity, visualStrain.numeric)\n    return (\n        <mesh\n            geometry={SPHERE}\n            position={fabric.instance.getIntervalMidpoint(interval.index)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={scale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n        />\n    )\n}\n\nfunction EllipsoidView({fabric, visibleRoles, selectedIntervals, storedState}: {\n    fabric: TensegrityFabric,\n    visibleRoles: IntervalRole[],\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            {selectedIntervals.length > 0 ? selectedIntervals.map(interval => (\n                <IntervalMesh\n                    key={`SI${interval.index}`}\n                    fabric={fabric}\n                    interval={interval}\n                    storedState={storedState}\n                />\n            )) : fabric.intervals.map(interval => (visibleRoles.indexOf(interval.intervalRole) < 0 ? undefined :\n                    <IntervalMesh\n                        key={`I${interval.index}`}\n                        fabric={fabric}\n                        interval={interval}\n                        storedState={storedState}\n                    />\n            ))}}\n        </group>\n    )\n}\n\nfunction LineView({fabric, selectedIntervals, storedState}: {\n    fabric: TensegrityFabric,\n    selectedIntervals: IInterval[],\n    storedState: IStoredState,\n}): JSX.Element {\n    return (\n        <group>\n            <lineSegments\n                key=\"lines\"\n                geometry={fabric.linesGeometry}\n                material={LINE_VERTEX_COLORS}\n            />\n            {selectedIntervals.map(interval => (\n                <IntervalMesh\n                    key={`SI${interval.index}`}\n                    fabric={fabric}\n                    interval={interval}\n                    storedState={storedState}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction Faces({fabric, stage, selectFace}: {\n    fabric: TensegrityFabric,\n    stage: Stage,\n    selectFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return fabric.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        selectFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={fabric.facesGeometry}\n            material={FACE}\n        />\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaCamera, FaHandPointUp, FaPlay, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FabricFeature, fabricFeatureIntervalRole, INTERVAL_ROLES, IntervalRole, Stage } from \"../fabric/fabric-engine\"\nimport { FloatFeature } from \"../fabric/fabric-features\"\nimport { FabricKernel } from \"../fabric/fabric-kernel\"\nimport { addNameToCode, BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { TensegrityFabric } from \"../fabric/tensegrity-fabric\"\nimport { IFace, IInterval, percentToFactor } from \"../fabric/tensegrity-types\"\nimport {\n    getRecentTenscript,\n    IFeatureValue,\n    IStoredState,\n    roleDefaultFromFeatures,\n    transition,\n} from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript {\n    const fromUrl = getCodeFromUrl()\n    if (fromUrl) {\n        return fromUrl\n    }\n    const recentCode = getRecentTenscript(state)\n    return recentCode.length > 0 ? recentCode[0] : BOOTSTRAP[0]\n}\n\nfunction selectIntervals(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        const pushes = face.pushes.filter(unknown)\n        return [...accum, ...pushes, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function TensegrityView({fabricKernel, floatFeatures, storedState$}: {\n    fabricKernel: FabricKernel,\n    floatFeatures: Record<FabricFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => fabricKernel.allocateInstance(), [])\n    const slackInstance = useMemo(() => fabricKernel.allocateInstance(), [])\n\n    const [fabric, setFabric] = useState<TensegrityFabric | undefined>()\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n    const [selectedFaces, setSelectedFaces] = useState<IFace[]>([])\n    useEffect(() => setSelectedIntervals(selectIntervals(selectedFaces)), [selectedFaces])\n\n    const [rootTenscript, setRootTenscript] = useState(() => getCodeToRun(storedState$.getValue()))\n    useEffect(() => {\n        if (location.hash.length === 0) {\n            location.hash = addNameToCode(rootTenscript.code, rootTenscript.name)\n        }\n    }, [rootTenscript])\n\n    const [visibleRoles, setVisibleRoles] = useState(INTERVAL_ROLES)\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [ellipsoids, updateEllipsoids] = useState(storedState$.getValue().ellipsoids)\n    useEffect(() => setVisibleRoles(INTERVAL_ROLES), [ellipsoids])\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            updateEllipsoids(storedState.ellipsoids)\n            updateRotating(storedState.rotating)\n            if (!fabric) {\n                return\n            }\n            const engine = fabric.instance.engine\n            engine.setColoring(storedState.showPushes, storedState.showPulls)\n            engine.setSurfaceCharacter(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [fabric])\n\n    useEffect(() => { // todo: look when this happens\n        const featureSubscriptions = Object.keys(floatFeatures).map(k => floatFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe((value: IFeatureValue) => {\n                if (!fabric) {\n                    return\n                }\n                fabric.instance.applyFeature(feature)\n                const intervalRole = fabricFeatureIntervalRole(feature.config.feature)\n                if (intervalRole !== undefined) {\n                    const engine = fabric.instance.engine\n                    fabric.intervals\n                        .filter(interval => interval.intervalRole === intervalRole)\n                        .forEach(interval => {\n                            const scaledLength = feature.numeric * percentToFactor(interval.scale)\n                            engine.changeRestLength(interval.index, scaledLength, 500)\n                        })\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [fabric])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance || !slackInstance) {\n            return\n        }\n        location.hash = addNameToCode(newTenscript.code, newTenscript.name)\n        mainInstance.engine.initInstance()\n        mainInstance.forgetDimensions()\n        floatFeatures[FabricFeature.ShapingPretenstFactor].percent = 100\n        floatFeatures[FabricFeature.ShapingDrag].percent = 100\n        floatFeatures[FabricFeature.ShapingStiffnessFactor].percent = 100\n        storedState$.next(transition(storedState$.getValue(), {ellipsoids: false}))\n        Object.keys(floatFeatures).map(k => floatFeatures[k]).forEach((feature: FloatFeature) => mainInstance.applyFeature(feature))\n        const roleLength = (role: IntervalRole) => roleDefaultFromFeatures(floatFeatures, role)\n        const numericFeature = (feature: FabricFeature) => storedState$.getValue().featureValues[feature].numeric\n        setFabric(new TensegrityFabric(roleLength, numericFeature, mainInstance, slackInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (!fabric) {\n                runTenscript(rootTenscript)\n            }\n        }, 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        storedState$.next(transition(storedState$.getValue(), {fullScreen: value}))\n    }\n\n    return (\n        <>\n            {fullScreen ? (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        floatFeatures={floatFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        fabric={fabric}\n                        setFabric={setFabric}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedFaces={selectedFaces}\n                        clearSelectedFaces={() => setSelectedFaces([])}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        visibleRoles={visibleRoles}\n                        setVisibleRoles={setVisibleRoles}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!fabric ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle fabric={fabric}/>\n                        <div id=\"bottom-middle\">\n                            <ButtonGroup>\n                                <Button\n                                    color={ellipsoids ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {ellipsoids: !ellipsoids}))}\n                                >\n                                    <FaCamera/>\n                                </Button>\n                                <Button\n                                    color={shapeSelection === ShapeSelection.Faces ? \"warning\" : \"secondary\"}\n                                    disabled={ellipsoids && shapeSelection === ShapeSelection.None}\n                                    onClick={() => setShapeSelection(shapeSelection !== ShapeSelection.Faces ? ShapeSelection.Faces : ShapeSelection.None)}\n                                >\n                                    <span><FaHandPointUp/></span>\n                                </Button>\n                                <Button\n                                    color={rotating ? \"warning\" : \"secondary\"}\n                                    onClick={() => storedState$.next(transition(storedState$.getValue(), {rotating: !rotating}))}\n                                >\n                                    <FaSyncAlt/>\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: shapeSelection === ShapeSelection.Faces || ellipsoids ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Faces ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    fabric={fabric}\n                                    fabricError={error => {\n                                        console.error(error)\n                                        const tenscript = fabric.tenscript\n                                        setFabric(undefined)\n                                        setTimeout(() => runTenscript(tenscript), 1000)\n                                    }}\n                                    selectedIntervals={selectedIntervals}\n                                    selectedFaces={selectedFaces}\n                                    setSelectedFaces={setSelectedFaces}\n                                    shapeSelection={shapeSelection}\n                                    ellipsoids={ellipsoids}\n                                    visibleRoles={visibleRoles}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({fabric}: { fabric: TensegrityFabric }): JSX.Element {\n    const [life, updateLife] = useState(fabric.life)\n    useEffect(() => {\n        const sub = fabric.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [fabric])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{fabric.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFabricEngine } from \"./fabric/fabric-engine\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/fabric-features\"\nimport { FabricKernel } from \"./fabric/fabric-kernel\"\nimport registerServiceWorker from \"./service-worker\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n// eslint-disable-next-line @typescript-eslint/tslint/config\nimport \"./vendor/bootstrap.min.css\"\n// eslint-disable-next-line @typescript-eslint/tslint/config\nimport \"./index.css\"\n\ndeclare const getFabricEngine: () => Promise<IFabricEngine> // implementation: index.html\n\nasync function start(): Promise<void> {\n    const engine = await getFabricEngine()\n    const fabricKernel = new FabricKernel(engine)\n    const root = document.getElementById(\"root\") as HTMLElement\n    const storedState$ = new BehaviorSubject(loadState(featureConfig))\n    storedState$.subscribe(newState => saveState(newState))\n    ReactDOM.render(\n        <TensegrityView\n            fabricKernel={fabricKernel}\n            floatFeatures={createFloatFeatures(storedState$)}\n            storedState$={storedState$}\n        />,\n        root,\n    )\n    registerServiceWorker()\n}\n\nstart()\n"],"sourceRoot":""}