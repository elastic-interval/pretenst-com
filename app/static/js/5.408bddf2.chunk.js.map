{"version":3,"sources":["fabric/eig-util.ts","fabric/fabric-instance.ts","service-worker.ts","fabric/tensegrity-types.ts","fabric/tenscript-node.ts","fabric/tenscript.ts","fabric/tensegrity-logic.ts","fabric/twist.ts","fabric/tensegrity.ts","view/feature-mapping.ts","fabric/bootstrap.ts","storage/recoil.ts","view/bottom-left.tsx","storage/download.ts","view/bottom-right.tsx","view/events.ts","view/interval-details.tsx","view/materials.ts","view/surface-component.tsx","construction/object-view.tsx","construction/construction-view.tsx","evo/island-geometry.ts","evo/genome.ts","evo/patch.ts","evo/island.ts","evo/runner-logic.ts","evo/evo-state.ts","evo/population.ts","evo/runner-view.tsx","evo/population-view.tsx","evo/island-view.tsx","evo/evo-view.tsx","evo/twitcher.ts","evo/runner.ts","evo/stats-view.tsx","sphere/sphere-view.tsx","sphere/sphere-builder.ts","sphere/tensegrity-sphere.ts","view/feature-slider.tsx","view/bottom-middle.tsx","view/fabric-view.tsx","view/stage-button.tsx","view/script-panel.tsx","view/top-left.tsx","view/top-middle.tsx","view/top-right.tsx","view/design-view.tsx","view/main-view.tsx","start.tsx"],"names":["IntervalRole","FORWARD","Vector3","RIGHT","UP","DOWN","Object","keys","filter","k","isNaN","parseInt","map","roleDefaultLength","intervalRole","PushA","PushB","PHI","PullA","PullB","PullAA","PullBB","Conflict","Error","WORLD_FEATURES","WorldFeature","intervalRoleName","GlobalMode","ADJUSTABLE_INTERVAL_ROLES","role","isPushRole","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","GLOBAL_MODES","globalModeFromUrl","hash","location","substring","mode","find","m","reloadGlobalMode","Demo","reload","floatString","numeric","expo","toExponential","zero","indexOf","Math","max","toFixed","sub","a","b","subVectors","normalize","midpoint","points","mid","forEach","point","add","multiplyScalar","length","pointsToNormal","radials","copy","norm","index","current","next","crossVectors","vectorFromArray","array","vector","offset","set","FabricInstance","eig","jointCount","worldObject","fabricObject","fabric","world","view","floatView","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","valuesToApply","fabricBackup","this","free","View","on_fabric","Fabric","new","busy","iterate","refreshFloatView","shift","set_float_value","feature","value","get_stage","requested","request_stage","console","error","satisfied","updateFloatView","clone","log","fabricClone","backup","render","midpoint_x","midpoint_y","midpoint_z","clear","percent","push","joint","joints","reduce","accum","jointLocation","distanceTo","alpha","omega","jointDistance","face","ends","end","faces","faceLocation","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","position","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","isLocalhost","Boolean","window","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","Spin","FaceName","Left","Right","LeftRight","RightLeft","spinChange","spin","opposite","toOmni","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","jointPulls","pulls","twoJointKey","pairKey","intervalRotation","unit","dot","Quaternion","setFromUnitVectors","intervalsAdjacent","filterRole","intervalJoins","acrossPush","otherJoint","interval","percentOrHundred","_","factorFromPercent","percentFromFactor","factor","FaceAction","TenscriptNode","forward","scale","subtrees","markNumbers","root","undefined","subtreeCode","markCode","action","afterNode","faceName","omniFaceNames","some","hasScale","parts","join","entries","v","code","mark","flat","compileTenscript","tenscript","codeToNode","e","message","createBud","tensegrity","tree","reorient","markDefStrings","twist","createTwist","markActions","markDefStringsToActions","markStrings","key","startsWith","subtree","Subtree","Join","split","Distance","codeFragment","codeString","argument","content","faceMarks","skip","codeTree","addMark","found","markNumber","charAt","direction","isDigit","forwardArg","forwardCount","toNumber","repeat","scaleArg","faceNameChar","nonEmpty","grow","afterTree","scaleChange","twistToMark","treeWithMarks","baseFace","getSpin","newTwist","createTwistOn","thisFace","marks","execute","before","activeBuds","bud","decremented","omni","needsOmniTwist","f","instance","apply","rotation","x","y","z","middle","sum","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationZ","PI","rotate","makeRotationY","multiply","invert","reorientMatrix","treeMarks","twistMark","markTree","deleteMark","digits","maybeBracketed","stripBrackets","commaPos","commaPresent","finalBracket","s","depth","matchBracket","contentOption","bowtiePairs","pairs","onlyA","onlyB","common","aj","bj","intersection","pullA","withPulls","pairMap","addPair","pair","addPairFor","near","pullB","far","otherFar","otherNear","commonNear","commonFar","acrossFar","acrossNear","nextPair","intervals","joint3APush","faceJoint","a3A","outwards","fjA","sort","f1","f2","namedJob","name","age","job","todo","n","up","xy","yz","zx","b1","b2","basisFromVector","set_altitude","conflicts","betweenDot","toAlpha","toOmega","jointA","pushA","jointB","pushB","otherA","otherB","findConflicts","createInterval","t","isAdjacent","targetInterval","PostGrowthOp","PairSelection","Twist","baseKnown","pushes","base","createBase","createSingle","createDouble","leftSpin","pointPairs","createJoint","alphaJoint","omegaJoint","makeFace","midJoint","j","createFace","reverse","botPairs","topPairs","bot","top","faceJoints","midJoints","midVector","fromMid","between","idx1","idx2","addVectors","addScaledVector","pushesPerTwist","angle","cos","sin","AGE_POST_GROWTH","Tensegrity","countdown","stage$","loops","connectors","distancers","pretenstAge","jobs","buds","BehaviorSubject","toDo","postGrowthOp","Faces","triangleFaces","Snelson","createPulls","Bowtie","BowtieFaces","postGrowthJob","set_surface_character","surfaceCharacter","newJoint","create_joint","remove_joint","pullScale","axis","creatAxis","alphaRestLength","omegaRestLength","alphaRays","createRay","omegaRays","radialPull","Connector","Distancer","patience","targetLength","stiffness","roleDefaultStiffness","currentLength","patienceFactor","abs","attack","create_interval","removed","multiply_rest_length","existing","remove_interval","f0","create_face","pull","removeInterval","removeJoint","remove_face","endA","endB","faceToTriangle","work","addPull","pairSelection","snelsonPair","acrossA","acrossB","snelsonPairs","selectPairs","pullC","createLoop","getValue","ray","snapshot","jobsBefore","ageNow","collated","possibleMark","None","FaceStrategy","faceStrategies","strategy","checkConnectors","Pretenst","averagePullStrain","strainFactor","restoreSnapshot","copy_stiffnesses","actionScale","locationFromFace","centerBrickFaceIntervals","omniTwist","averageScaleFactor","averageFaceLocation","opposing","closestFace","createRadialPull","faceA","indexA","faceB","indexB","connectFaces","alphaEnds","omegaEnds","ringLengths","ringLength","walk","rotatedWalk","bestRotation","minLength","rotateForBestRing","i","pushOverPull","get_float_value","PushOverPull","pretenstFactor","PretenstFactor","strain","intervalLength","idealLength","linearDensity","height","intervalLocation","reverseA","forwardB","loop","a0","a1","removeFace","restLength","CONNECTOR_LENGTH","Radial","FeatureStage","markAction","createRadialPulls","BOOTSTRAP","NoOp","SurfaceCharacter","Frozen","Bouncy","1","featureValues","2","3","4","5","6","0","linearMapping","featureStage","low","high","nuanceToPercent","nuance","percentToNuance","percentToValue","default_world_feature","valueToPercent","featureMapping","Gravity","Postslack","Antigravity","All","ShapingDrag","Preslack","ShapingStiffnessFactor","Drag","ShapingPretenstFactor","StiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","VisualStrain","effects_UNSTABLE","recoilPersist","storage","localStorage","persistAtom","postGrowthAtom","atom","default","bootstrapIndexAtom","tenscriptAtom","currentFeature","ViewMode","rotatingAtom","globalModeAtom","viewModeAtom","Lines","visibleRolesAtom","FEATURE_VALUES","mapping","percentAtom","BottomLeft","useRecoilState","globalMode","viewMode","setViewMode","ViewModeButton","item","children","Button","disabled","onClick","ButtonGroup","Selecting","csvNumber","replace","dateString","Date","toISOString","getFabricOutput","pushRadius","pullRadius","jointRadius","radius","anchor","isPush","alphaIndex","omegaIndex","type","saveCSVZip","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","blob","FileSaver","BottomRight","useState","updateStage","useEffect","subscribe","unsubscribe","rotating","setRotating","Design","className","JSON","stringify","saveJSONZip","removeSlackPulls","centralize","Sphere","Evolution","isIntervalClick","event","shiftKey","altKey","metaKey","ctrlKey","IntervalDetails","details","selectDetails","Html","style","width","userSelect","onMouseDown","left","Table","colSpan","RAINBOW_COLORS","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","MeshBasicMaterial","side","DoubleSide","transparent","opacity","depthTest","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","MATERIAL","MeshPhongMaterial","specular","FrontSide","HEXAGON_POINTS","SURFACE_SCALE","KINDA","TRIANGLE_POSITION","SurfaceComponent","geometry","useMemo","positionF32","normalF32","faceOffset","BufferAttribute","patchesGeometry","material","ObjectView","selected","setSelected","target","setTarget","useFrame","toMidpoint","lengthSq","Rendering","onUpdate","self","computeBoundingSphere","SelectingView","unitVector","cylinderRadius","intervalScale","CYLINDER","Euler","setFromQuaternion","matrixWorldNeedsUpdate","OrbitControls","onPointerMissed","autoRotate","zoomSpeed","Stars","intensity","onPointerDown","stopPropagation","clickInterval","CylinderGeometry","ConstructionView","createInstance","mainInstance","tenscriptFor","setTensegrity","setDetails","setPostGrowth","useSetRecoilState","emergency","setDetailsForSelected","getIntervalDetails","ts","applyFeature","localValue","createTensegrity","RecoilBridge","useRecoilBridgeAcrossReactRoots_UNSTABLE","right","backgroundColor","borderStyle","borderColor","cursor","borderWidth","ObjectCamera","id","props","ref","useRef","setDefaultCamera","useThree","camera","fov","updateMatrixWorld","grab","Halo","Convergence","HeadlessHug","Triped","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","GeneName","ARROW_GEOMETRY","geom","Geometry","vertices","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","ARROW_LENGTH","arrowVertices","arrowGeometry","Genome","roll","genes","GeneReader","getGene","directionGeneNames","mutateTwitchConfig","genesCopy","gene","geneName","tosses","dice","slice","directionName","mutateGene","twitchConfig","TwitchConfig","geneString","die","symbol","serializeGene","total","floor","diceToNuance","nextDie","config","attackPeriod","decayPeriod","twitchNuance","muscle","when","diceToInteger","diceToFloat","decay","DICE","numeral","DICE_MAP","woops","random","currentRoll","rollTheDice","base6","pow","emptyGenome","fromGeneData","geneData","search","fresh","PatchCharacter","Patch","island","coords","patchCharacter","runner","flora","center","adjacent","getItem","parse","setItem","SIX","Direction","Island","seed","patches","_seed","patch","p","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","RUNNER_CODE","islandAtom","homePatchSelector","selector","destinationAtom","showDetailsAtom","DIRECTIONS","directionGene","ToA","ToB","ToC","calculateDirections","toA","toB","toC","locations","fromTo","fromJoint","toJoint","from","to","EvolutionPhase","EVO_PARAMETERS","Population","ancestor","useTwitches","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","SurvivorsAdvance","cyclePatternIndex","currentCycle","currentMaxCycles","embryo","storedGenes","createAutoRunner","letter","proximityHistory","persisted","pop","winnerMinCycles","winnerMoved","cycleCount","getCycleCount","rankEvolvers","reachedTarget","EvolutionDone","winner","showFrozen","ChallengersBorn","ChallengersReborn","genome","withMutations","challenger","autopilot","ChallengersOvertake","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","SurvivorsStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","distanceFromTarget","proximityForCycle","proximity","String","fromCharCode","RunnerView","topFaceLocation","showDirection","attach","attachObject","count","itemSize","quaternion","directionQuaternion","PopulationView","population","IslandView","happening","evolutionPhase","countdownToEvo","stopEvo","destination","setDestination","now","happeningChanged","updateHappeningChanged","updateNow","updateTarget","updatePosition","adjustTarget","approachDistance","distance","positionToTarget","deltaDistance","Happening","Developing","Resting","Running","Evolving","withReducedCyclePattern","wasSeconds","time","isSeconds","enableKeys","enablePan","autoRotateSpeed","enableDamping","minPolarAngle","maxPolarAngle","positionArray","normalArray","removeRandomInterval","Rest","clickPatch","Sky","rayleigh","inclination","mieCoefficient","mieDirectionalG","turbidity","Twitcher","twitchCount","twitchCycles","reader","createReader","musclePeriod","readFeatureValue","readTwitchConfig","totalTwitches","TwitchCycle","loopMuscles","cycles","twitch","timeSlice","twitchCycle","activate","slices","chosen","chooseFrom","readMuscleTwitch","splice","addTwitch","twitches","twitchArray","Runner","shapingTime","twitcher","topFace","currentTwitchAge","twitchAge","directionHistory","twitchesPerCycle","auto","geneNames","dir","newTwitchAge","tick","twitchInterval","twitch_interval","alphaInterval","omegaInterval","checkDirection","sortedFaces","aa","bb","locA","locB","findTopFace","alphaPulls","omegaPulls","onlyMuscles","extractLoopMuscles","targetPatch","quaternionForDirection","directionToTarget","towards","toTarget","matchA","matchB","matchC","StatsView","setShowStats","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","EvoView","createBodyInstance","homePatch","useRecoilValue","showStats","newRunner","setRunner","setHappening","setSnapshots","evolutionCountdown","setEvolutionCountdown","setPopulation","setPhase","storedGenome","Sticky","err","newStage","evolveWithPattern","toEvolve","pattern","Camera","nextEvolution","ControlButtons","evoCountdown","toRunning","toEvolving","toRebirth","toRest","EvolutionStatsView","vertical","createContent","colorString","PUSH_MATERIAL","PULL_MATERIAL","FREQUENCY_CHOICES","showPushAtom","showPullAtom","frozenAtom","useGravityAtom","SphereView","createSphere","setFrozen","showPush","setShowPush","showPull","setShowPull","useGravity","setUseGravity","frequencyChoice","setFrequencyChoice","sphere","setSphere","fabricOutput","freq","choice","SphereCamera","SphereScene","setTimeout","PolygonView","SPHERE_RADIUS","SphereBuilder","VERTEX","loc","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","averagePushLength","segmentLength","segmentSize","hubs","hub","spokes","spoke","pullsForSpoke","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","length0","segment","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","TWIST_ANGLE","otherSpokes","closest","distanceA","distanceToSquared","domain","FeatureSlider","sliderValue","setPercent","values","setValues","round","percentString","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","handles","getHandleProps","handle","Handle","tracks","getTrackProps","source","Track","min","aria-valuemin","aria-valuemax","aria-valuenow","BottomMiddle","open","setOpen","worldFeature","setWorldFeature","featureValue","setFeatureValue","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","AMBIENT_COLOR","FabricView","runTenscript","visibleRoles","visualStrainPercent","bootstrapIndex","setBootstrapIndex","nonBusyCount","updateNonBusyCount","bullseye","updateBullseye","eye","distanceChange","towardsDistance","nextIndex","PerspectiveCamera","makeDefault","IntervalMesh","visualStrain","intervalMaterial","SELECTED_MATERIAL","sqrt","StageTransition","ScriptPanel","setTenscript","postGrowth","json","setJson","setError","toJson","flexDirection","Input","changeEvent","newTenscript","STAGE_TRANSITIONS","StageButton","stageTransition","allDisabledExcept","stageAccepted","doNow","CaptureLengthsToSlack","Symbol","SlackToPretensing","CapturePretenstToSlack","CaptureStrainForStiffness","strainToStiffness","TopLeft","showScriptPanel","setShowScriptPanel","bootstrapOpen","setBootstrapOpen","run","pgo","opChanged","opColor","bootstrapProgram","TopMiddle","TopRight","updateVisibleRoles","currentRole","updateCurrentRole","adjustSelection","changeIntervalScale","RoleLengthAdjuster","nextRoles","adjustValue","fine","adjustment","DesignView","worldFeatures","removeItem","MainView","urlMode","sphereInstance","element","document","getElementById","ReactDOM","startReact","registerServiceWorker"],"mappings":"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","file":"static/js/5.408bddf2.chunk.js","sourcesContent":["/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\nexport const DOWN = new Vector3(0, -1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport enum IntervalRole {\n    PushA,\n    PushB,\n    PullA,\n    PullB,\n    PullAA,\n    PullBB,\n    Conflict,\n    Radial,\n    Connector,\n    Distancer,\n}\n\nexport const INTERVAL_ROLES = Object.keys(IntervalRole)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => IntervalRole[k])\n\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst ROOT6 = 2.44948974278\nconst SHORTENING = 0.5\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return ROOT6\n        case IntervalRole.PushB:\n            return PHI * ROOT3\n        case IntervalRole.PullA:\n            return 1\n        case IntervalRole.PullB:\n            return ROOT3\n        case IntervalRole.PullAA:\n            return roleDefaultLength(IntervalRole.PullA) * SHORTENING\n        case IntervalRole.PullBB:\n            return roleDefaultLength(IntervalRole.PullB) * SHORTENING\n        case IntervalRole.Conflict:\n            return 0.01\n        default:\n            throw new Error(`Length for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport function roleDefaultStiffness(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n        case IntervalRole.PullA:\n        case IntervalRole.PullB:\n        case IntervalRole.Conflict:\n            return 1\n        case IntervalRole.PullAA:\n        case IntervalRole.PullBB:\n            return 0.4\n        default:\n            throw new Error(`Stiffness for Role ${IntervalRole[intervalRole]}?`)\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const WORLD_FEATURES: string[] = Object.keys(WorldFeature)\n\nexport function intervalRoleName(intervalRole: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"[A]\"\n        case IntervalRole.PushB:\n            return \"[B]\"\n        case IntervalRole.PullA:\n            return \"(a)\"\n        case IntervalRole.PullB:\n            return \"(b)\"\n        case IntervalRole.PullAA:\n            return \"(aa)\"\n        case IntervalRole.PullBB:\n            return \"(bb)\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PushA:\n            case IntervalRole.PushB:\n            case IntervalRole.PullA:\n            case IntervalRole.PullB:\n            case IntervalRole.PullAA:\n            case IntervalRole.PullBB:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushRole(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n        case IntervalRole.PushB:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum GlobalMode {\n    Design = \"design\",\n    Demo = \"demo\",\n    Sphere = \"sphere\",\n    Evolution = \"evolution\",\n    Halo = \"halo\",\n    Convergence = \"convergence\",\n    HeadlessHug = \"headlesshug\",\n    Triped = \"triped\",\n}\n\nexport const GLOBAL_MODES: GlobalMode[] = Object.keys(GlobalMode).map(k => GlobalMode[k])\n\nexport function globalModeFromUrl(): GlobalMode {\n    const hash = location.hash.substring(1)\n    const mode = GLOBAL_MODES.find(m => m === hash)\n    if (mode) {\n        return mode\n    }\n    return reloadGlobalMode(GlobalMode.Demo)\n}\n\nexport function reloadGlobalMode(mode: GlobalMode): GlobalMode {\n    location.hash = mode\n    location.reload()\n    return mode\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(3)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(3)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"), expo.indexOf(\"e+3\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function percentString(percent: number): string {\n    if (percent <= 100) {\n        return `${percent.toFixed(0)}%`\n    } else {\n        return `${(percent / 100).toFixed(1)}x`\n    }\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function pointsToNormal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport function basisFromVector(up: Vector3): {b1:Vector3, up:Vector3, b2: Vector3} {\n    const {x, y, z} = up\n    const xy = x * x + y * y\n    const yz = y * y + z * z\n    const zx = z * z + x * x\n    const b1 = new Vector3()\n    if (xy > yz && xy > zx) {\n        b1.set(-y, x, 0).normalize()\n    } else if (yz > xy && yz > zx) {\n        b1.set(0, -z, y).normalize()\n    } else {\n        b1.set(-z, 0, x).normalize()\n    }\n    const b2 = new Vector3().crossVectors(up, b1).normalize()\n    return {b1, up, b2}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World, WorldFeature } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { midpoint, vectorFromArray } from \"./eig-util\"\nimport { IFace, IInterval, IJoint } from \"./tensegrity-types\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (featureValues?: Record<WorldFeature, number>, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n\n    private valuesToApply: ICurrentValue[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const current = this.valuesToApply.shift()\n        if (current) {\n            this.world.set_float_value(current.feature, current.value)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: WorldFeature, percent: number, value: number): void {\n        this.valuesToApply.push({feature, percent, value})\n    }\n\n    public jointLocation(joint: IJoint): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, joint.index)\n    }\n\n    public averageJointLocation(joints: IJoint[]): Vector3 {\n        return joints\n            .reduce((accum, joint) => accum.add(this.jointLocation(joint)), new Vector3())\n            .multiplyScalar(1 / joints.length)\n    }\n\n    public jointDistance(a: IJoint, b: IJoint): number {\n        return this.jointLocation(a).distanceTo(this.jointLocation(b))\n    }\n\n    public intervalLocation({alpha, omega}: IInterval): Vector3 {\n        return this.jointLocation(alpha).add(this.jointLocation(omega)).multiplyScalar(0.5)\n    }\n\n    public intervalLength({alpha, omega}: IInterval): number {\n        return this.jointDistance(alpha, omega)\n    }\n\n    public faceLocation(face: IFace): Vector3 {\n        return midpoint(face.ends.map(end => this.jointLocation(end)))\n    }\n\n    public averageFaceLocation(faces: IFace[]): Vector3 {\n        return faces\n            .reduce((accum, face) => accum.add(this.faceLocation(face)), new Vector3())\n            .multiplyScalar(1 / faces.length)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n\ninterface ICurrentValue {\n    feature: WorldFeature\n    percent: number\n    value: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Quaternion, Vector3 } from \"three\"\n\nimport { DOWN, IntervalRole, intervalRoleName, sub, UP } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { Twist } from \"./twist\"\n\nexport enum Spin {\n    Left = \"Left\",\n    Right = \"Right\",\n    LeftRight = \"Left-Right\",\n    RightLeft = \"Right-Left\",\n}\n\nexport const SPINS = [Spin.Left, Spin.Right, Spin.LeftRight, Spin.RightLeft]\n\nexport function spinChange(spin: Spin, opposite: boolean, toOmni: boolean): Spin {\n    if (opposite) {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.RightLeft : Spin.Right\n            case Spin.Right:\n                return toOmni ? Spin.LeftRight : Spin.Left\n            case Spin.LeftRight:\n                return Spin.RightLeft\n            case Spin.RightLeft:\n                return Spin.LeftRight\n        }\n    } else {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.LeftRight : spin\n            case Spin.Right:\n                return toOmni ? Spin.RightLeft : spin\n            case Spin.LeftRight:\n            case Spin.RightLeft:\n                return spin\n        }\n    }\n    throw new Error(\"Spin?\")\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    pulls?: IInterval[]\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointPulls({pulls}: IJoint): IInterval[] {\n    if (!pulls) {\n        throw new Error(\"no pulls\")\n    }\n    return pulls\n}\n\nexport interface IIntervalDetails {\n    interval: IInterval\n    stiffness: number\n    strain: number\n    length: number\n    idealLength: number\n    linearDensity: number\n    height: number\n}\n\nfunction indexKey(a: number, b: number): string {\n    return a < b ? `(${a},${b})` : `(${b},${a})`\n}\n\nexport function twoJointKey(alpha: IJoint, omega: IJoint): string {\n    return indexKey(alpha.index, omega.index)\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function pairKey({alpha, omega}: IPair): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalRotation(unit: Vector3): Quaternion {\n    const dot = UP.dot(unit)\n    return new Quaternion().setFromUnitVectors(dot > 0 ? UP : DOWN, unit)\n}\n\nexport function intervalsAdjacent(a: IInterval, b: IInterval): boolean {\n    return a.alpha.index === b.alpha.index\n        || a.omega.index === b.omega.index\n        || a.alpha.index === b.omega.index\n        || a.omega.index === b.alpha.index\n}\n\nexport function filterRole(role: IntervalRole): (interval: IInterval) => boolean {\n    return ({intervalRole}) => intervalRole === role\n}\n\nexport function intervalToPair({alpha, omega, scale, intervalRole}: IInterval): IPair {\n    return {alpha, omega, scale, intervalRole}\n}\n\nexport function intervalKey({alpha, omega}: IInterval): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({intervalRole, alpha, omega}: IInterval): string {\n    return `${intervalRoleName(intervalRole)}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IMarkNumber {\n    _: number\n}\n\nexport interface IFace {\n    twist: Twist,\n    index: number\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    markNumbers: IMarkNumber[]\n    joint?: IJoint\n}\n\nexport interface IRadialPull {\n    alpha: IFace\n    omega: IFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(instance: FabricInstance, alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += instance.jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += instance.jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * -0.24)\n    const rotate = new Matrix4().makeRotationY(-Math.PI / 2 - rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FACE_NAME_CHARS, FACE_NAMES, FaceName, IMarkNumber, IPercent } from \"./tensegrity-types\"\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: string | undefined,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly markNumbers: Record<FaceName, IMarkNumber[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === undefined && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): { afterNode: TenscriptNode, action: string } {\n        if (this.forward && this.forward.length > 0) {\n            const action = this.forward.substring(0, 1)\n            return {\n                afterNode: new TenscriptNode(this.forward.substring(1), this.scale, this.subtrees, this.markNumbers),\n                action,\n            }\n        }\n        return {afterNode: this, action: \"\"}\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IMarkNumber [] | undefined {\n        return this.markNumbers[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.markNumbers[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.markNumbers[faceName])\n    }\n\n    public get code(): string {\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && this.forward && this.forward.length > 0 && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (this.forward && this.forward.length > 0) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.markNumbers)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { PostGrowthOp, Tensegrity } from \"./tensegrity\"\nimport {\n    FACE_NAMES,\n    FaceName,\n    faceNameFromChar,\n    factorFromPercent,\n    IMarkNumber,\n    IPercent,\n    isFaceNameChar,\n    percentFromFactor,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChange,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport interface INamedJob {\n    todo: string\n    age: number\n}\n\nexport interface ITenscript {\n    name: string\n    spin: Spin\n    postGrowthOp: PostGrowthOp\n    surfaceCharacter: SurfaceCharacter\n    code: string[]\n    scale?: number\n    jobs?: INamedJob[]\n    markDefStrings?: Record<number, string>\n    featureValues?: Record<string, number>\n}\n\nexport enum FaceAction {\n    Subtree,\n    Join,\n    Distance,\n    None,\n}\n\nexport interface IMarkAction {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport function compileTenscript(tenscript: ITenscript, error: (message: string) => void): TenscriptNode | undefined {\n    try {\n        const code = tenscript.code.join()\n        const root = codeToNode(code)\n        if (!root) {\n            error(\"Nothing to compile\")\n            return undefined\n        }\n        root.root = true\n        return root\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nexport type RunTenscript = (tenscript: ITenscript, error: (message: string) => void) => boolean\n\nexport interface IBud {\n    tree: TenscriptNode\n    twist: Twist\n    markActions: Record<number, IMarkAction>\n    reorient: boolean\n}\n\nexport function createBud(tensegrity: Tensegrity, location: Vector3, tenscript: ITenscript, tree: TenscriptNode): IBud {\n    const reorient = tree.forward === undefined\n    const {spin, markDefStrings} = tenscript\n    const twist = tensegrity.createTwist(spin, percentOrHundred(), [location])\n    return {tree, twist, markActions: markDefStringsToActions(markDefStrings), reorient}\n}\n\nexport function markDefStringsToActions(markStrings?: Record<number, string>): Record<number, IMarkAction> {\n    const markActions: Record<number, IMarkAction> = {}\n    if (markStrings) {\n        Object.keys(markStrings).forEach(key => {\n            const c: string = markStrings[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = codeToNode(c.substring(\"subtree\".length))\n                markActions[key] = <IMarkAction>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"join\")) {\n                markActions[key] = <IMarkAction>{action: FaceAction.Join}\n            } else if (c.startsWith(\"distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[1], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.Distance, scale}\n            }\n        })\n    }\n    return markActions\n}\n\nfunction codeToNode(codeFragment: string): TenscriptNode | undefined {\n    const initialCode = argument(codeFragment, true)\n    const codeString = initialCode.content\n    let forward: string | undefined\n    let scale = percentOrHundred()\n    const subtrees = {} as Record<FaceName, TenscriptNode>\n    const faceMarks = {} as Record<FaceName, IMarkNumber[]>\n\n    function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n        const {content, skip} = argument(codeString.substring(index), false)\n        const codeTree = codeToNode(content)\n        return {codeTree, skip}\n    }\n\n    function addMark(faceName: FaceName, mark: number): void {\n        const found = faceMarks[faceName]\n        const markNumber: IMarkNumber = {_: mark}\n        if (found) {\n            found.push(markNumber)\n        } else {\n            faceMarks[faceName] = [markNumber]\n        }\n    }\n\n    for (let index = 0; index < codeString.length; index++) {\n        const char = codeString.charAt(index)\n        if (isFaceNameChar(char)) {\n            const direction = subtree(index + 1)\n            const codeTree = direction.codeTree\n            if (!codeTree) {\n                throw new Error(`No subtree: ${codeString.substring(index)}`)\n            }\n            subtrees[faceNameFromChar(char)] = codeTree\n            index += direction.skip\n        } else if (isDigit(char)) {\n            const forwardArg = argument(codeString, false)\n            const forwardCount = toNumber(forwardArg.content)\n            forward = \"X\".repeat(forwardCount)\n            index += forwardArg.skip\n        } else if (char === \"X\" || char === \"O\") {\n            const forwardArg = argument(codeString, false)\n            forward = forwardArg.content\n            index += forwardArg.skip\n        } else {\n            switch (char) {\n                case \"S\":\n                    const scaleArg = argument(codeString.substring(index + 1), true)\n                    scale = {_: toNumber(scaleArg.content)}\n                    index += scaleArg.skip\n                    break\n                case \"M\":\n                    const faceNameChar = codeString.charAt(index + 1)\n                    const markNumber = argument(codeString.substring(index + 2), true)\n                    addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                    index += markNumber.skip + 1\n                    break\n                case \",\":\n                case \" \":\n                case \"\\n\":\n                    break\n                default:\n                    throw new Error(`Unexpected character: ${char}`)\n            }\n        }\n    }\n    return new TenscriptNode(forward, scale, subtrees, faceMarks).nonEmpty\n}\n\nfunction markTwist(twistToMark: Twist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        twistToMark.face(thisFace).markNumbers.push(...marks)\n    })\n}\n\nfunction grow(\n    {twist, markActions}: IBud,\n    action: string,\n    afterTree: TenscriptNode,\n    faceName: FaceName,\n    toOmni: boolean,\n    scaleChange: IPercent,\n): IBud {\n    const baseFace = twist.face(faceName)\n    const getSpin = () => {\n        switch (action) {\n            case \"X\":\n                return spinChange(baseFace.spin, true, toOmni)\n            case \"O\":\n                return spinChange(baseFace.spin, false, toOmni)\n            default:\n                throw new Error(`Action can only be X or O but it was [${action}]`)\n        }\n    }\n    const spin = getSpin()\n    const scale = percentFromFactor(factorFromPercent(baseFace.scale) * factorFromPercent(scaleChange))\n    const newTwist = twist.tensegrity.createTwistOn(baseFace, spin, scale)\n    if (afterTree.forward === \"\") {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, markActions, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, markActions, reorient, twist} = bud\n        if (tree.forward !== undefined && tree.forward.length > 0) {\n            const {afterNode, action} = tree.decremented\n            const omni = tree.needsOmniTwist && afterNode.forward !== undefined && afterNode.forward.length === 0\n            activeBuds.push(grow(bud, action, afterNode, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = twist.tensegrity.joints.map(joint => twist.tensegrity.instance.jointLocation(joint))\n                twist.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const {afterNode, action} = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === \"\"\n                activeBuds.push(grow(bud, action, afterNode, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const mark = markActions[twistMark._]\n                        if (mark && mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, \"\", markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\n","import { Stage } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { basisFromVector, IntervalRole, midpoint, pointsToNormal } from \"./eig-util\"\nimport { AGE_POST_GROWTH, IJob, PairSelection, PostGrowthOp, Tensegrity, ToDo } from \"./tensegrity\"\nimport {\n    acrossPush,\n    filterRole,\n    IInterval,\n    IJoint,\n    intervalJoins, intervalsAdjacent,\n    IPercent,\n    jointPulls,\n    otherJoint,\n    pairKey,\n    percentOrHundred,\n} from \"./tensegrity-types\"\n\nexport interface IConflict {\n    jointA: IJoint\n    jointB: IJoint\n}\n\nconst CONFLICT_MULTIPLE = 6\n\nexport function findConflicts(tensegrity: Tensegrity): IConflict[] {\n    const conflicts: IConflict[] = []\n    const instance = tensegrity.instance\n    const betweenDot = (joint: IJoint, interval: IInterval) => {\n        const toAlpha = instance.jointLocation(joint).sub(instance.jointLocation(interval.alpha)).normalize()\n        const toOmega = instance.jointLocation(joint).sub(instance.jointLocation(interval.omega)).normalize()\n        return toAlpha.dot(toOmega) < 0\n    }\n    tensegrity.joints.forEach((jointA, a) => {\n        const pushA = jointA.push\n        if (pushA) {\n            tensegrity.joints.forEach((jointB, b) => {\n                if (b <= a) {\n                    return\n                }\n                const pushB = jointB.push\n                if (pushB) {\n                    const otherA = otherJoint(jointA, pushA)\n                    const otherB = otherJoint(jointB, pushB)\n                    const distanceNear = instance.jointDistance(jointA, jointB)\n                    const distanceFar = instance.jointDistance(otherA, otherB)\n                    if (distanceNear * CONFLICT_MULTIPLE > distanceFar) {\n                        return\n                    }\n                    if (betweenDot(jointA, pushB) && betweenDot(jointB, pushA)) {\n                        conflicts.push({jointA, jointB})\n                    }\n                }\n            })\n        }\n    })\n    return conflicts\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    intervalRole: IntervalRole\n}\n\nexport function snelsonPairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const snelsonPair = (alpha: IJoint, pullB: IInterval): IPair | undefined => {\n        const a = acrossPush(alpha)\n        const b = otherJoint(alpha, pullB)\n        if (!a.push || !b.push) {\n            return undefined\n        }\n        const acrossA = jointPulls(a).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(a, pullA))\n        const acrossB = jointPulls(b).filter(filterRole(IntervalRole.PullA)).map(pullA => otherJoint(b, pullA))\n        const omega = acrossA.find(jointA => !!acrossB.find(jointB => jointA.index === jointB.index))\n        if (!omega || !omega.push) {\n            return undefined\n        }\n        const intervalRole = IntervalRole.PullB\n        const scale = pullB.scale\n        return {alpha, omega, intervalRole, scale}\n    }\n    tensegrity.withPulls(pairMap => {\n        const pullBs = tensegrity.intervals.filter(filterRole(IntervalRole.PullB))\n        pullBs.forEach(pullB => {\n            const alpha = snelsonPair(pullB.alpha, pullB)\n            if (alpha) {\n                const existingAlpha = pairMap[pairKey(alpha)]\n                if (!existingAlpha) {\n                    pairs.push(alpha)\n                }\n            }\n            const omega = snelsonPair(pullB.omega, pullB)\n            if (omega) {\n                const existingOmega = pairMap[pairKey(omega)]\n                if (!existingOmega) {\n                    pairs.push(omega)\n                }\n            }\n        })\n    })\n    return pairs\n}\n\nexport function bowtiePairs(tensegrity: Tensegrity): IPair[] {\n    const pairs: IPair[] = []\n    const onlyA = filterRole(IntervalRole.PullA)\n    const onlyB = filterRole(IntervalRole.PullB)\n    const intersection = (a: IJoint[], b: IJoint[]) => a.find(aj => b.find(bj => aj.index === bj.index))\n    const common = (a: IJoint, b: IJoint) => intersection(\n        jointPulls(a).filter(onlyA).map(pullA => otherJoint(a, pullA)),\n        jointPulls(b).filter(onlyA).map(pullA => otherJoint(b, pullA)),\n    )\n    const nextPair = (near: IJoint): IPair | undefined => {\n        const pullB = jointPulls(near).filter(onlyB)[0]\n        const far = otherJoint(near, pullB)\n        const otherFar = acrossPush(near)\n        const otherB = jointPulls(otherFar).filter(onlyB)[0]\n        const otherNear = otherJoint(otherFar, otherB)\n        const commonNear = common(near, otherNear)\n        const commonFar = common(far, otherFar)\n        if (!commonNear || !commonFar) {\n            return undefined\n        }\n        if (commonNear.push && !commonFar.push) {\n            const acrossFar = acrossPush(far)\n            if (!jointPulls(acrossFar).some(intervalJoins(commonNear, acrossFar))) {\n                return undefined\n            }\n        } else if (commonFar.push && !commonNear.push) {\n            const acrossNear = acrossPush(near)\n            if (!jointPulls(acrossNear).some(intervalJoins(commonFar, acrossNear))) {\n                return undefined\n            }\n        }\n        const alpha = commonNear.push ? commonNear : near\n        const omega = commonFar.push ? commonFar : far\n        const scale = pullB.scale\n        const intervalRole = !commonNear.push || !commonFar.push ? IntervalRole.PullB : IntervalRole.PullBB\n        return {alpha, omega, scale, intervalRole}\n    }\n    const instance = tensegrity.instance\n    tensegrity.withPulls(pairMap => {\n        const addPair = (pair: IPair) => {\n            const key = pairKey(pair)\n            const exists = pairMap[key]\n            if (!exists) {\n                pairs.push(pair)\n                pairMap[key] = pair\n            }\n        }\n        const addPairFor = (joint: IJoint) => {\n            const pair = nextPair(joint)\n            if (pair) {\n                addPair(pair)\n            }\n        }\n        tensegrity.intervals\n            .filter(filterRole(IntervalRole.PullB))\n            .forEach(({alpha, omega}) => {\n                addPairFor(alpha)\n                addPairFor(omega)\n            })\n        tensegrity.joints\n            .filter(joint => joint.push && jointPulls(joint).filter(onlyA).length === 3)\n            .forEach(joint3APush => {\n                const noPushAcross = (interval: IInterval) => !otherJoint(joint3APush, interval).push\n                const found = jointPulls(joint3APush).filter(onlyA).find(noPushAcross)\n                if (!found) {\n                    throw new Error(\"no-push not found\")\n                }\n                const faceJoint = otherJoint(joint3APush, found)\n                const a3A = jointPulls(joint3APush).filter(onlyA).map(pullA => otherJoint(joint3APush, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                const fjA = jointPulls(faceJoint).filter(onlyA).map(pullA => otherJoint(faceJoint, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                a3A.map(a => {\n                    const b = fjA.sort((f1, f2) =>\n                        a.outwards.dot(f2.outwards) - a.outwards.dot(f1.outwards))[0]\n                    const intervalRole = IntervalRole.PullAA\n                    const scale = found.scale\n                    const pair: IPair = {alpha: a.end, omega: b.end, scale, intervalRole}\n                    addPair(pair)\n                })\n            })\n    })\n    return pairs\n}\n\nexport function namedJob(name: string, age: number): IJob {\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (name) {\n        case \"orient\":\n            return job(tensegrity => {\n                const faces = tensegrity.faces.filter(({markNumbers}) => markNumbers.find((n) => n._ === 0))\n                if (faces.length === 0) {\n                    throw new Error(\"No faces marked zero\")\n                }\n                const instance = tensegrity.instance\n                const position = faces\n                    .reduce((v, {ends}) =>\n                        v.add(midpoint(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .multiplyScalar(1 / faces.length)\n                const upwards = faces\n                    .reduce((v, {ends}) =>\n                        v.sub(pointsToNormal(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .normalize()\n                const {b1, up, b2} = basisFromVector(upwards)\n                tensegrity.instance.apply(new Matrix4().makeBasis(b1, up, b2).setPosition(position).invert())\n                tensegrity.fabric.set_altitude(5)\n            })\n        case \"conflict\":\n            return job(tensegrity => {\n                findConflicts(tensegrity).forEach(({jointA, jointB}) => {\n                    tensegrity.createInterval(jointA, jointB, IntervalRole.Conflict, percentOrHundred())\n                })\n            })\n        case \"pretensing\":\n            return job(tensegrity => {\n                tensegrity.stage = Stage.Slack\n                tensegrity.stage = Stage.Pretensing\n            })\n        case \"age\":\n            return job(t => {\n                console.log(`age exceeds ${t.name} @ ${age}`, t.fabric.age)\n            })\n        default:\n            throw new Error(`No job named ${name}`)\n    }\n}\n\nexport function postGrowthJob(postGrowthOp: PostGrowthOp): IJob {\n    const age = AGE_POST_GROWTH\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (postGrowthOp) {\n        case PostGrowthOp.Faces:\n            return job(tensegrity => {\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Snelson:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Snelson)\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Bowtie:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n            })\n        case PostGrowthOp.BowtieFaces:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n                tensegrity.triangleFaces()\n            })\n        default:\n            return job(() => {\n            })\n    }\n}\n\nexport function isAdjacent(targetInterval: IInterval): (interval: IInterval) => boolean {\n    return (interval: IInterval) => intervalsAdjacent(targetInterval, interval)\n}\n","import { Vector3 } from \"three\"\n\nimport { avg, IntervalRole, midpoint, pointsToNormal, sub } from \"./eig-util\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval,\n    IJoint,\n    IPercent,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class Twist {\n\n    public readonly faces: IFace[] = []\n    public readonly pushes: IInterval[] = []\n    public readonly pulls: IInterval[] = []\n\n    constructor(\n        public readonly tensegrity: Tensegrity,\n        public readonly spin: Spin,\n        public readonly scale: IPercent,\n        baseKnown?: Vector3[],\n    ) {\n        const base = !baseKnown ? createBase(new Vector3(), 3) :\n            baseKnown.length === 3 ? baseKnown : createBase(baseKnown[0], 3)\n        switch (this.spin) {\n            case Spin.Left:\n                this.createSingle(base, true)\n                break\n            case Spin.Right:\n                this.createSingle(base, false)\n                break\n            case Spin.LeftRight:\n                this.createDouble(base, true)\n                break\n            case Spin.RightLeft:\n                this.createDouble(base, false)\n                break\n            default:\n                throw new Error(\"Spin?\")\n        }\n    }\n\n    public face(faceName: FaceName): IFace {\n        switch (this.faces.length) {\n            case 2:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.A:\n                        return this.faces[1]\n                }\n                break\n            case 8:\n                switch (faceName) {\n                    case FaceName.a:\n                        return this.faces[0]\n                    case FaceName.B:\n                        return this.faces[2]\n                    case FaceName.C:\n                        return this.faces[1]\n                    case FaceName.D:\n                        return this.faces[3]\n                    case FaceName.b:\n                        return this.faces[4]\n                    case FaceName.c:\n                        return this.faces[5]\n                    case FaceName.d:\n                        return this.faces[6]\n                    case FaceName.A:\n                        return this.faces[7]\n                }\n                break\n        }\n        throw new Error(`Face ${FaceName[faceName]} not found in twist with ${this.faces.length} faces`)\n    }\n\n    private createSingle(base: Vector3[], leftSpin: boolean): void {\n        const pairs = pointPairs(base, this.scale, leftSpin)\n        const ends = pairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const alphaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({alpha}) => alpha)))\n        const omegaJoint = this.tensegrity.createJoint(midpoint(pairs.map(({omega}) => omega)))\n        this.tensegrity.instance.refreshFloatView()\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushA, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const makeFace = (joints: IJoint[], midJoint: IJoint) => {\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, this.spin, this.scale, midJoint))\n        }\n        makeFace(ends.map(({alpha}) => alpha), alphaJoint)\n        makeFace(ends.map(({omega}) => omega).reverse(), omegaJoint)\n        ends.forEach(({alpha}, index) => {\n            const omega = ends[(ends.length + index + (leftSpin ? -1 : 1)) % ends.length].omega\n            this.pulls.push(this.tensegrity.createInterval(alpha, omega, IntervalRole.PullB, this.scale))\n        })\n    }\n\n    private createDouble(base: Vector3[], leftSpin: boolean): void {\n        const botPairs = pointPairs(base, this.scale, leftSpin)\n        const topPairs = pointPairs(botPairs.map(({omega}) => omega), this.scale, !leftSpin)\n        const bot = botPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        const top = topPairs.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createJoint(alpha),\n            omega: this.tensegrity.createJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const ends = [...bot, ...top]\n        ends.forEach(({alpha, omega}) => {\n            const push = this.tensegrity.createInterval(alpha, omega, IntervalRole.PushB, this.scale)\n            this.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        const faceJoints = leftSpin ?\n            [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[1].omega, top[1].alpha], // B\n                [bot[0].alpha, bot[2].omega, top[2].alpha], // C\n                [bot[1].alpha, bot[0].omega, top[0].alpha], // D\n                [top[1].omega, top[0].alpha, bot[1].omega].reverse(), // b\n                [top[0].omega, top[2].alpha, bot[0].omega].reverse(), // d\n                [top[2].omega, top[1].alpha, bot[2].omega].reverse(), // c\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ] : [\n                [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n                [bot[2].alpha, bot[0].omega, top[2].alpha].reverse(), // D\n                [bot[0].alpha, bot[1].omega, top[0].alpha].reverse(), // B\n                [bot[1].alpha, bot[2].omega, top[1].alpha].reverse(), // C\n                [top[1].omega, top[2].alpha, bot[2].omega], // b\n                [top[2].omega, top[0].alpha, bot[0].omega], // c\n                [top[0].omega, top[1].alpha, bot[1].omega], // d\n                [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n            ]\n        const jointLocation = (joint: IJoint) => this.tensegrity.instance.jointLocation(joint)\n        const midJoints = faceJoints.map(joints => this.tensegrity.createJoint(midpoint(joints.map(jointLocation))))\n        this.tensegrity.instance.refreshFloatView()\n        faceJoints.forEach((joints, index) => {\n            const midJoint = midJoints[index]\n            const pulls = joints.map(j => this.tensegrity.createInterval(j, midJoint, IntervalRole.PullA, this.scale))\n            this.pulls.push(...pulls)\n            const spin = leftSpin === ([0, 4, 5, 6].some(n => n === index)) ? Spin.Left : Spin.Right\n            this.faces.push(this.tensegrity.createFace(this, joints, pulls, spin, this.scale, midJoint))\n        })\n    }\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction pointPairs(base: Vector3[], scale: IPercent, leftSpin: boolean): IPointPair[] {\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const midVector = () => new Vector3().copy(mid)\n    const factor = factorFromPercent(scale)\n    const up = pointsToNormal(base).multiplyScalar(-factor)\n    for (let index = 0; index < base.length; index++) {\n        const fromMid = (offset: number) => sub(base[(index + base.length + offset) % base.length], mid)\n        const between = (idx1: number, idx2: number) => avg(fromMid(idx1), fromMid(idx2))\n        const alpha = midVector().addScaledVector(between(0, 1), factor)\n        const omega = midVector().add(up).addScaledVector(leftSpin ? between(1, 2) : between(-1, 0), factor)\n        points.push({alpha, omega})\n    }\n    return points\n}\n\nfunction createBase(location: Vector3, pushesPerTwist: number): Vector3[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return base\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport {\n    CONNECTOR_LENGTH,\n    IntervalRole,\n    isPushRole,\n    roleDefaultLength,\n    roleDefaultStiffness,\n} from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { createBud, execute, FaceAction, IBud, IMarkAction, ITenscript, markDefStringsToActions } from \"./tenscript\"\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { bowtiePairs, IPair, namedJob, postGrowthJob, snelsonPairs } from \"./tensegrity-logic\"\nimport {\n    averageScaleFactor,\n    expectPush,\n    FaceName,\n    factorFromPercent,\n    IFace,\n    IInterval, IIntervalDetails,\n    IJoint,\n    intervalJoins,\n    intervalKey,\n    intervalToPair,\n    IPercent,\n    IRadialPull,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\nimport { Twist } from \"./twist\"\n\nexport enum PostGrowthOp {\n    NoOp,\n    Faces,\n    Snelson,\n    Bowtie,\n    BowtieFaces,\n}\n\nexport enum PairSelection {\n    Bowtie,\n    Snelson,\n}\n\nexport type ToDo = (tensegrity: Tensegrity) => void\n\nexport const AGE_POST_GROWTH = -1\n\nexport interface IJob {\n    todo: ToDo,\n    age?: number\n}\n\nexport class Tensegrity {\n    public name: string\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public loops: IInterval[][] = []\n    public faces: IFace[] = []\n\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n    public pretenstAge = -1\n\n    private jobs: IJob[] = []\n    private buds: IBud[]\n    private markDefStrings: Record<number, string> = {}\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly instance: FabricInstance,\n        public readonly countdown: number,\n        public readonly tenscript: ITenscript,\n        tree: TenscriptNode,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.markDefStrings = tenscript.markDefStrings ? tenscript.markDefStrings : {}\n        if (tenscript.jobs) {\n            tenscript.jobs.forEach(({todo, age}) => {\n                this.toDo = namedJob(todo, age)\n            })\n        }\n        this.name = tenscript.name\n        this.toDo = postGrowthJob(tenscript.postGrowthOp)\n        this.buds = [createBud(this, location, tenscript, tree)]\n        this.instance.world.set_surface_character(this.tenscript.surfaceCharacter)\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public removeJoint(joint: IJoint): void {\n        const index = joint.index\n        this.fabric.remove_joint(index)\n        this.joints = this.joints.filter(j => j.index !== index)\n        joint.index = -index // mark it\n        this.joints.forEach(j => j.index = j.index > index ? j.index - 1 : j.index)\n        this.instance.refreshFloatView()\n    }\n\n    public createRadialPull(alpha: IFace, omega: IFace, pullScale?: IPercent): IRadialPull {\n        const instance = this.instance\n        const alphaJoint = this.createJoint(instance.faceLocation(alpha))\n        const omegaJoint = this.createJoint(instance.faceLocation(omega))\n        instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + instance.jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + instance.jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.intervalRole) {\n            case IntervalRole.Connector:\n                this.connectors.push(radialPull)\n                break\n            case IntervalRole.Distancer:\n                this.distancers.push(radialPull)\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent, patience?: number): IInterval {\n        const push = isPushRole(intervalRole)\n        const targetLength = roleDefaultLength(intervalRole) * factorFromPercent(scale)\n        const stiffness = roleDefaultStiffness(intervalRole)\n        const currentLength = targetLength === 0 ? 0 : this.instance.jointDistance(alpha, omega)\n        const patienceFactor = patience === undefined ? 1 : patience\n        const countdown = this.countdown * Math.abs(targetLength - currentLength) * patienceFactor\n        const attack = countdown <= 0 ? 0 : 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, push, currentLength, targetLength, stiffness, attack)\n        const interval: IInterval = {index, intervalRole, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        const index = interval.index\n        this.intervals = this.intervals.filter(existing => existing.index !== index)\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n    }\n\n    public createFace(twist: Twist, ends: IJoint[], pulls: IInterval[], spin: Spin, scale: IPercent, joint?: IJoint): IFace {\n        const f0 = ends[0]\n        const f1 = ends[2]\n        const f2 = ends[1]\n        const index = this.fabric.create_face(f0.index, f2.index, f1.index)\n        const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n        const face: IFace = {twist, index, spin, scale, ends, pushes, pulls, markNumbers: [], joint}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n        face.index = -1\n    }\n\n    public faceToTriangle(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        for (let index = 0; index < face.ends.length; index++) {\n            const endA = face.ends[index]\n            const endB = face.ends[(index + 1) % face.ends.length]\n            face.pulls.push(this.createInterval(endA, endB, IntervalRole.PullB, face.scale))\n        }\n    }\n\n    public triangleFaces(): void {\n        this.faces.forEach(face => this.faceToTriangle(face))\n    }\n\n    public withPulls(work: (pairMap: Record<string, IPair>) => void): void {\n        const addPull = (end: IJoint, pull: IInterval) => {\n            if (end.pulls) {\n                end.pulls.push(pull)\n            } else {\n                end.pulls = [pull]\n            }\n        }\n        this.intervals\n            .filter(({intervalRole}) => !isPushRole(intervalRole))\n            .forEach(pull => {\n                addPull(pull.alpha, pull)\n                addPull(pull.omega, pull)\n            })\n        const pairMap: Record<string, IPair> = {}\n        this.intervals.forEach(interval => pairMap[intervalKey(interval)] = intervalToPair(interval))\n        work(pairMap)\n        this.joints.forEach(joint => joint.pulls = undefined)\n    }\n\n    public createPulls(pairSelection: PairSelection): void {\n        const selectPairs = () => {\n            switch (pairSelection) {\n                case PairSelection.Bowtie:\n                    return bowtiePairs(this)\n                case PairSelection.Snelson:\n                    return snelsonPairs(this)\n                default:\n                    throw new Error()\n            }\n        }\n        // selectPairs().forEach(pair=> console.log(pairKey(pair)))\n        selectPairs().forEach(({alpha, omega, intervalRole, scale}) => {\n            this.createInterval(alpha, omega, intervalRole, scale, 5)\n        })\n    }\n\n    public removeSlackPulls(): void {\n        const slack = this.intervals\n            .filter(({intervalRole}) => intervalRole === IntervalRole.PullAA)\n            .filter(pullC => this.instance.floatView.strains[pullC.index] === 0)\n        slack.forEach(interval => this.removeInterval(interval))\n    }\n\n    public createTwist(spin: Spin, scale: IPercent, baseKnown?: Vector3[]): Twist {\n        return new Twist(this, spin, scale, baseKnown)\n    }\n\n    public createTwistOn(baseFace: IFace, spin: Spin, scale: IPercent): Twist {\n        const jointLocation = (joint: IJoint) => this.instance.jointLocation(joint)\n        const twist = this.createTwist(spin, scale, baseFace.ends.map(jointLocation).reverse())\n        this.createLoop(baseFace, twist.face(FaceName.a))\n        return twist\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public set toDo(job: IJob) {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const jobsBefore = this.jobs.length\n        if (jobsBefore) {\n            const ageNow = this.instance.fabric.age\n            this.jobs = this.jobs.filter(({todo, age}) => {\n                if (age !== undefined && (age < 0 || age > ageNow)) {\n                    return true // keep\n                }\n                todo(this)\n                return false\n            })\n            if (this.jobs.length < jobsBefore) {\n                return true\n            }\n        }\n        if (this.stage === Stage.Growing) {\n            if (this.buds.length > 0) {\n                this.buds = execute(this.buds)\n                if (this.buds.length === 0) { // last one executed\n                    faceStrategies(this, this.faces, this.markDefStrings).forEach(strategy => strategy.execute())\n                }\n                return false\n            } else if (this.connectors.length > 0) {\n                this.connectors = this.checkConnectors()\n                return false\n            }\n            this.stage = Stage.Shaping\n            this.jobs = this.jobs.filter(({todo, age}) => {\n                if (age === AGE_POST_GROWTH) {\n                    todo(this)\n                    return false\n                }\n                return true\n            })\n        } else if (this.stage === Stage.Pretenst) {\n            if (this.pretenstAge < 0) {\n                this.pretenstAge = this.fabric.age\n            }\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const instance = this.instance\n        const floatView = instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (isPushRole(interval.intervalRole)) {\n                return false\n            }\n            return instance.jointLocation(interval.alpha).y >= 0 || instance.jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public findInterval(a: IJoint, b: IJoint): IInterval | undefined {\n        return this.intervals.find(intervalJoins(a, b))\n    }\n\n    public createRadialPulls(faces: IFace[], action: FaceAction, actionScale?: IPercent): void {\n        const locationFromFace = (face: IFace) => this.instance.faceLocation(face)\n        const centerBrickFaceIntervals = () => {\n            const omniTwist = this.createTwist(Spin.LeftRight, percentFromFactor(averageScaleFactor(faces)), [this.instance.averageFaceLocation(faces)])\n            this.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.createRadialPull(closestFace, face)\n            })\n        }\n        switch (action) {\n            case FaceAction.Distance:\n                const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        this.createRadialPull(faceA, faceB, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.createRadialPull(faces[0], faces[1])\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n    }\n\n    public checkConnectors(): IRadialPull[] {\n        if (this.connectors.length === 0) {\n            return this.connectors\n        }\n        const connectFaces = (alpha: IFace, omega: IFace) => {\n            rotateForBestRing(this.instance, alpha, omega)\n            this.createLoop(alpha, omega)\n        }\n        return this.connectors.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.intervalRole === IntervalRole.Connector) {\n                const distance = this.instance.jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    this.removeInterval(axis)\n                    alphaRays.forEach(i => this.removeInterval(i))\n                    omegaRays.forEach(i => this.removeInterval(i))\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public getIntervalDetails(interval: IInterval): IIntervalDetails {\n        const instance = this.instance\n        const {floatView} = instance\n        const pushOverPull = instance.world.get_float_value(WorldFeature.PushOverPull)\n        const pretenstFactor = instance.world.get_float_value(WorldFeature.PretenstFactor)\n        const stiffness = floatView.stiffnesses[interval.index] * (isPushRole(interval.intervalRole) ? pushOverPull : 1.0)\n        const strain = floatView.strains[interval.index]\n        const scale = this.tenscript.scale ? this.tenscript.scale : 1\n        const length = instance.intervalLength(interval) * scale\n        const idealLength = floatView.idealLengths[interval.index] * (isPushRole(interval.intervalRole) ? 1 + pretenstFactor : 1.0) * scale\n        const linearDensity = floatView.linearDensities[interval.index]\n        const height = instance.intervalLocation(interval).y * scale\n        return {interval, stiffness, strain, length, idealLength, linearDensity, height}\n    }\n\n    private createLoop(faceA: IFace, faceB: IFace): void {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const loop: IInterval[] = []\n        for (let index = 0; index < reverseA.length; index++) {\n            const a0 = reverseA[index]\n            const a1 = reverseA[(index + 1) % reverseA.length]\n            const b = forwardB[index]\n            loop.push(this.createInterval(a0, b, IntervalRole.PullA, scale))\n            loop.push(this.createInterval(b, a1, IntervalRole.PullA, scale))\n        }\n        this.removeFace(faceB)\n        this.removeFace(faceA)\n        this.loops.push(loop)\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, pullScale?: IPercent): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const intervalRole = pullScale ? IntervalRole.Distancer : IntervalRole.Connector\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const stiffness = 1\n        const scale = percentOrHundred()\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const intervalRole = IntervalRole.Radial\n        const stiffness = 1\n        const scale = percentFromFactor(restLength)\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, intervalRole, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n}\n\nfunction faceStrategies(tensegrity: Tensegrity, faces: IFace[], markStrings?: Record<number, string>): FaceStrategy[] {\n    const marks = markDefStringsToActions(markStrings)\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        face.markNumbers.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(tensegrity, collated[key], mark)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private tensegrity: Tensegrity, private faces: IFace[], private markAction: IMarkAction) {\n    }\n\n    public execute(): void {\n        switch (this.markAction.action) {\n            case FaceAction.Join:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n            case FaceAction.Distance:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n        }\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\n\nexport enum FeatureStage {\n    Preslack,\n    Postslack,\n    All,\n}\n\nexport interface IFeatureMapping {\n    feature: WorldFeature\n    name: string\n    featureStage: FeatureStage\n    nuanceToPercent: (nuance: number) => number\n    percentToNuance: (percent: number) => number\n    percentToValue: (percent: number) => number\n    valueToPercent: (value: number) => number\n}\n\nfunction linearMapping(feature: WorldFeature, name: string, featureStage: FeatureStage, low: number, high: number): IFeatureMapping {\n    const nuanceToPercent = (nuance: number) => (low * (1 - nuance) + high * nuance)\n    const percentToNuance = (percent: number) => (percent - low) / (high - low)\n    const percentToValue = (percent: number) => default_world_feature(feature) * percent / 100\n    const valueToPercent = (value: number) => value / default_world_feature(feature) * 100\n    return {feature, name, featureStage, nuanceToPercent, percentToNuance, percentToValue, valueToPercent}\n}\n\nexport function featureMapping(feature: WorldFeature): IFeatureMapping {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            // percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Gravity\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.Antigravity:\n            // percents: [5, 25, 50, 100, 150, 200, 500],\n            return linearMapping(feature, \"-Antigravity\", FeatureStage.All, 5, 500)\n        case WorldFeature.ShapingDrag:\n            // percents: [0, 10, 50, 100, 200, 500],\n            return linearMapping(feature, \"Shaping Drag\", FeatureStage.Preslack, 0, 500)\n        case WorldFeature.ShapingStiffnessFactor:\n            // percents: [10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Shaping Stiffness\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.Drag:\n            // percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            return linearMapping(feature, \"Drag\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.ShapingPretenstFactor:\n            // percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Shaping Pretenst\", FeatureStage.Preslack, 0, 1000)\n        case WorldFeature.PretenstFactor:\n            // percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            return linearMapping(feature, \"Pretenst Factor\", FeatureStage.Postslack, 0, 500)\n        case WorldFeature.StiffnessFactor:\n            // percents: [1, 10, 50, 100, 150, 200, 300],\n            return linearMapping(feature, \"Stiffness\", FeatureStage.Postslack, 1, 300)\n        case WorldFeature.IterationsPerFrame:\n            // percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            return linearMapping(feature, \"Iterations/frame\", FeatureStage.All, 2, 500)\n        case WorldFeature.IntervalCountdown:\n            // percents: [10, 20, 30, 100, 150, 400, 1000],\n            return linearMapping(feature, \"-Interval Countdown\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.PretensingCountdown:\n            // percents: [50, 75, 90, 100, 125, 150, 200],\n            return linearMapping(feature, \"-Pretenst countdown\", FeatureStage.All, 50, 200)\n        case WorldFeature.VisualStrain:\n            // percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Visual strain\", FeatureStage.All, 0, 300)\n        case WorldFeature.PushOverPull:\n            // percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            return linearMapping(feature, \"Push/Pull\", FeatureStage.All, 10, 700)\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n","import { SurfaceCharacter } from \"eig\"\n\nimport { compileTenscript, ITenscript } from \"./tenscript\"\nimport { PostGrowthOp } from \"./tensegrity\"\nimport { Spin } from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS: ITenscript[] = [\n    {\n        name: \"Phi\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"()\"],\n    },\n    {\n        name: \"One\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Snelson,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(1)\"],\n    },\n    {\n        name: \"Axoneme\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        code: [\"(30,S95)\"],\n    },\n    {\n        name: \"Knee\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(3,b3)\"],\n    },\n    {\n        name: \"Jack\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b2,c2,d2)\"],\n    },\n    {\n        name: \"Star\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\"],\n    },\n    {\n        name: \"Tripod with Knees\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\"],\n    },\n    {\n        name: \"Triped\",\n        spin: Spin.LeftRight,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(B(9,S90,MA1),C(9,S90,MA1),D(9,S90,MA1))\"],\n        markDefStrings: {\n            1: \"distance-25\",\n        },\n        featureValues: {\n            \"IterationsPerFrame\": 1000,\n            \"PushOverPull\": 1000,\n        },\n        jobs: [\n            {\n                age: 80000,\n                todo: \"pretensing\",\n            },\n        ],\n    },\n    {\n        name: \"Zigzag\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(c(3,MA1),d(7,b(7,c(7,d(7,c(7,d(3,MA1)))))))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n    },\n    {\n        name: \"Magnet\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A(9,S80,MA1), a(9,S80,MA1))\"],\n        markDefStrings: {\n            1: \"distance-5\",\n        },\n        featureValues: {\n            \"Gravity\": 0,\n            \"StiffnessFactor\": 25,\n            \"Drag\": 1000,\n        },\n    },\n    {\n        name: \"Diamond\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"   a(5,\",\n            \"      b(5,b(5,b(2,MA3)),c(5,c(2,MA4))),\",\n            \"      c(5,b(5,b(2,MA1)),c(5,c(2,MA5))),\",\n            \"      d(5,b(5,b(2,MA6)),c(5,c(2,MA2)))\",\n            \"   )\",\n            \"   b(5,b(5,b(2,MA5)),c(5,c(2,MA3))),\",\n            \"   c(5,b(5,b(2,MA2)),c(5,c(2,MA1))),\",\n            \"   d(5,b(5,b(2,MA4)),c(5,c(2,MA6)))\",\n            \")\",\n        ],\n        markDefStrings: {\n            1: \"join\",\n            2: \"join\",\n            3: \"join\",\n            4: \"join\",\n            5: \"join\",\n            6: \"join\",\n        },\n    },\n    {\n        name: \"Composed Tree\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(6,b(4,MA1),c(4,MA1),d(4,MA1))\"],\n        markDefStrings: {\n            1: \"subtree(b5,c5,d5)\",\n        },\n    },\n    {\n        name: \"Equus Lunae\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"  A(16,S95,Md0),\",\n            \"  b(16,S95,Md0),\",\n            \"  a(16,S95,Md0),\",\n            \"  B(16,S95,Md0)\",\n            \")\",\n        ],\n        markDefStrings: {\n            0: \"distance-60\",\n        },\n    },\n    {\n        name: \"Runner\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A1,B(5,S90),C(5,S90),D(5,S90))\"],\n    },\n    {\n        name: \"Infinity\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"A(11,S88,MA1),b(11,S88,MA1),\",\n            \"a(11,S88,MA2),B(11,S88,MA2)\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n        },\n    },\n    {\n        name: \"Propellor Tree\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"  a(5,S110),\",\n            \"  B(11,S90,MA3),\",\n            \"  b(11,S90,MA1),\",\n            \"  C(11,S90,MA2),\",\n            \"  c(11,S90,MA3),\",\n            \"  D(11,S90,MA1),\",\n            \"  d(11,S90,MA2),\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n            \"3\": \"join\",\n            \"4\": \"join\",\n        },\n    },\n    {\n        name: \"Halo by Crane\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(5,S92,b(12,S92,MA1),d(11,S92,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            \"Gravity\": 50,\n            \"IterationsPerFrame\": 1000,\n        },\n    },\n    {\n        name: \"Convergence\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b(10,S90,MA1),c(10,S90,MA1),d(10,S90,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            \"IterationsPerFrame\": 1000,\n        },\n    },\n    {\n        name: \"Headless Hug\",\n        spin: Spin.LeftRight,\n        scale: 105,\n        postGrowthOp: PostGrowthOp.BowtieFaces,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"A(OOOOXOO,S95,MA0),\",\n            \"b(OOOOXOO,S95,MA0),\",\n            \"a(3,C(XOOOXOO,S93,MA3),S90,MA2),\",\n            \"B(3,C(XOOOXOO,S93,MA3),S90,MA2)\",\n            \")\",\n        ],\n        markDefStrings: {\n            \"0\": \"distance-5\",\n            \"2\": \"distance-7\",\n            \"3\": \"distance-5\",\n        },\n        featureValues: {\n            \"IterationsPerFrame\": 1000,\n            \"PushOverPull\": 400,\n        },\n        jobs: [\n            {\n                age: 100000,\n                todo: \"pretensing\",\n            },\n            {\n                age: 110000,\n                todo: \"conflict\",\n            },\n            {\n                age: 120000,\n                todo: \"orient\",\n            },\n        ],\n    },\n]\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(tenscript => {\n    compileTenscript(tenscript, (message: string) => {\n        throw new Error(`Bootstrap compile error in \"${tenscript}\"! ${message}`)\n    })\n    return tenscript\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, RecoilState } from \"recoil\"\nimport { recoilPersist } from \"recoil-persist\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, globalModeFromUrl, IntervalRole, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { featureMapping, IFeatureMapping } from \"../view/feature-mapping\"\n\nexport const STORAGE_KEY = \"pretenst-2021-07-29a\"\nconst DEFAULT_BOOTSTRAP = 0\n\nconst {persistAtom} = recoilPersist({\n    key: STORAGE_KEY,\n    storage: localStorage,\n})\n\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst effects_UNSTABLE = [persistAtom]\n\nexport const postGrowthAtom = atom({\n    key: \"postGrowth\",\n    default: PostGrowthOp.NoOp,\n    effects_UNSTABLE,\n})\n\nexport const bootstrapIndexAtom = atom({\n    key: \"bootstrapIndex\",\n    default: DEFAULT_BOOTSTRAP,\n    effects_UNSTABLE,\n})\n\nexport const tenscriptAtom = atom<ITenscript | undefined>({\n    key: \"tenscript\",\n    default: undefined,\n    effects_UNSTABLE,\n})\n\nexport const currentFeature = atom<WorldFeature>({\n    key: \"currentFeature\",\n    default: WorldFeature.VisualStrain,\n    effects_UNSTABLE,\n})\n\nfunction createWorldFeatureValues(): IWorldFeatureValue[] {\n    return WORLD_FEATURES.map(feature => {\n        const mapping = featureMapping(WorldFeature[feature])\n        const percentAtom = atom({\n            key: mapping.name,\n            default: 100,\n            effects_UNSTABLE,\n        })\n        return <IWorldFeatureValue>{mapping, percentAtom}\n    })\n}\n\nexport const rotatingAtom = atom({\n    key: \"rotating\",\n    default: false,\n})\n\nexport const globalModeAtom = atom({\n    key: \"globalMode\",\n    default: globalModeFromUrl(),\n})\n\nexport enum ViewMode {\n    Lines = \"Lines\",\n    Selecting = \"Selecting\",\n    Frozen = \"Frozen\",\n}\n\nexport const viewModeAtom = atom<ViewMode>({\n    key: \"viewMode\",\n    default: ViewMode.Lines,\n})\n\nexport const surfaceCharacterAtom = atom({\n    key: \"surfaceCharacter\",\n    default: SurfaceCharacter.Frozen,\n})\n\nexport const visibleRolesAtom = atom<IntervalRole[]>({\n    key: \"visibleRoles\",\n    default: ADJUSTABLE_INTERVAL_ROLES,\n})\n\nexport interface IWorldFeatureValue {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n}\n\nexport const FEATURE_VALUES = createWorldFeatureValues()\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaHandPointUp, FaPlay, FaSnowflake } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { GlobalMode } from \"../fabric/eig-util\"\nimport { globalModeAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomLeft(): JSX.Element {\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    function ViewModeButton({item, children}: {\n        item: ViewMode,\n        children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    }): JSX.Element {\n        return globalMode === GlobalMode.Demo ? <div/> : (\n            <Button\n                disabled={item === viewMode}\n                color={item === viewMode ? \"success\" : \"secondary\"}\n                onClick={() => setViewMode(item)}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <ButtonGroup>\n            <ViewModeButton item={ViewMode.Lines}>\n                <FaPlay/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Selecting}>\n                <FaHandPointUp/>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Frozen}>\n                <FaSnowflake/>\n            </ViewModeButton>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { intervalRoleName, isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nexport function getFabricOutput({name, instance, joints, intervals}: Tensegrity, pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n    instance.refreshFloatView()\n    const idealLengths = instance.floatView.idealLengths\n    const strains = instance.floatView.strains\n    const stiffnesses = instance.floatView.stiffnesses\n    const linearDensities = instance.floatView.linearDensities\n    return {\n        name,\n        joints: joints.map(joint => {\n            const vector = instance.jointLocation(joint)\n            return <IOutputJoint>{\n                index: joint.index,\n                radius: jointRadius,\n                x: vector.x, y: vector.z, z: vector.y,\n                anchor: false, // TODO: can this be determined?\n            }\n        }),\n        intervals: intervals.map(interval => {\n            const isPush = isPushRole(interval.intervalRole)\n            const radius = isPush ? pushRadius : pullRadius\n            const currentLength = instance.intervalLength(interval)\n            const alphaIndex = interval.alpha.index\n            const omegaIndex = interval.omega.index\n            if (alphaIndex >= joints.length || omegaIndex >= joints.length) {\n                throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${joints.length}`)\n            }\n            return <IOutputInterval>{\n                index: interval.index,\n                joints: [alphaIndex, omegaIndex],\n                type: isPush ? \"Push\" : \"Pull\",\n                strain: strains[interval.index],\n                stiffness: stiffnesses[interval.index],\n                linearDensity: linearDensities[interval.index],\n                role: intervalRoleName(interval.intervalRole),\n                scale: interval.scale._,\n                idealLength: idealLengths[interval.index],\n                isPush,\n                length: currentLength,\n                radius,\n            }\n        }),\n    }\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\", \"ideal length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, csvNumber(interval.length), csvNumber(interval.idealLength),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCompressArrowsAlt,\n    FaDna,\n    FaDownload,\n    FaFile,\n    FaFileCsv,\n    FaFutbol,\n    FaParachuteBox,\n    FaPlay,\n    FaSignOutAlt,\n    FaSyncAlt,\n    FaXbox,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    GlobalMode,\n    globalModeFromUrl,\n    JOINT_RADIUS,\n    PULL_RADIUS,\n    PUSH_RADIUS,\n    reloadGlobalMode,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { getFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { globalModeAtom, rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomRight({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    return globalMode === GlobalMode.Demo ? (\n        <ButtonGroup>\n            <Button\n                color=\"success\"\n                onClick={() => reloadGlobalMode(GlobalMode.Design)}\n            >\n                <FaSignOutAlt/> Exit demo\n            </Button>\n        </ButtonGroup>\n    ) : (\n        <div className=\"text-right\">\n            <ButtonGroup>\n                {viewMode === ViewMode.Frozen ? (\n                    <>\n                        <Button\n                            onClick={() => saveCSVZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFileCsv/>\n                        </Button>\n                        <Button\n                            onClick={() => saveJSONZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFile/>\n                        </Button>\n                    </>\n                ) : stage > Stage.Slack ? (\n                    <>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.removeSlackPulls()}>\n                            <FaXbox/>\n                        </Button>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/>\n                        </Button>\n                    </>\n                ) : undefined}\n                <Button onClick={() => tensegrity.fabric.centralize()}><FaCompressArrowsAlt/></Button>\n                <Button\n                    color={rotating ? \"warning\" : \"secondary\"}\n                    onClick={() => setRotating(!rotating)}\n                >\n                    <FaSyncAlt/>\n                </Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => {\n                    if (globalModeFromUrl() !== GlobalMode.Design) {\n                        reloadGlobalMode(GlobalMode.Design)\n                    } else {\n                        reloadGlobalMode(GlobalMode.Demo)\n                    }\n                }}><FaPlay/></Button>\n                <Button onClick={() => {reloadGlobalMode(GlobalMode.Sphere)}}><FaFutbol/></Button>\n                <Button onClick={() => {reloadGlobalMode(GlobalMode.Evolution)}}><FaDna/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nexport function isIntervalClick(event: React.MouseEvent<Element, MouseEvent>): boolean {\n    return event.shiftKey || event.altKey || event.metaKey || event.ctrlKey\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { FaArrowsAltH, FaMousePointer } from \"react-icons/all\"\nimport { Table } from \"reactstrap\"\n\nimport { intervalRoleName } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\n\nconst DIGITS = 1\n\nexport function IntervalDetails({instance, details, selectDetails}: {\n    instance: FabricInstance,\n    details: IIntervalDetails,\n    selectDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const {alpha, omega, intervalRole} = details.interval\n    return (\n        <Html\n            className=\"interval-details\"\n            style={{width: \"10em\", userSelect: \"none\"}}\n            position={instance.intervalLocation(details.interval)}\n        >\n            <div onMouseDown={(e) => selectDetails(details)}>\n                <div style={{position: \"absolute\", top: \"0\", left: \"0\", color: \"red\"}}>\n                    <FaMousePointer/>\n                </div>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th colSpan={2}>\n                            ({alpha.index + 1} <FaArrowsAltH/> {omega.index + 1}): {intervalRoleName(intervalRole)}\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {/*<tr>*/}\n                    {/*    <td className=\"text-right\">Stiffness:</td>*/}\n                    {/*    <td>{stats.stiffness.toFixed(DIGITS)}</td>*/}\n                    {/*</tr>*/}\n                    {/*<tr>*/}\n                    {/*    <td className=\"text-right\">Strain:</td>*/}\n                    {/*    <td>{stats.strain.toFixed(DIGITS)}</td>*/}\n                    {/*</tr>*/}\n                    <tr>\n                        <td className=\"text-right\">Length:</td>\n                        <td className=\"text-center\">{details.length.toFixed(DIGITS)}</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-right\">Ideal Length:</td>\n                        <td className=\"text-center\">{details.idealLength.toFixed(DIGITS)}</td>\n                    </tr>\n                    {/*<tr>*/}\n                    {/*    <td className=\"text-right\">Linear Density:</td>*/}\n                    {/*    <td>{stats.linearDensity.toFixed(DIGITS)}</td>*/}\n                    {/*</tr>*/}\n                    <tr>\n                        <td className=\"text-right\">Height:</td>\n                        <td className=\"text-center\">{details.height.toFixed(DIGITS)}</td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, DoubleSide, LineBasicMaterial, Material, MeshBasicMaterial, MeshLambertMaterial } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECTED_MATERIAL = new MeshBasicMaterial({\n    color: new Color(\"#ffdf00\"),\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.25,\n    depthTest: false,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string {\n    switch (intervalRole) {\n        case IntervalRole.PushA:\n            return \"#191f86\"\n        case IntervalRole.PushB:\n            return \"#5739a0\"\n        case IntervalRole.PullA:\n            return \"#ce1d1d\"\n        case IntervalRole.PullB:\n            return \"#d44e4e\"\n        case IntervalRole.PullAA:\n            return \"#13f3f3\"\n        case IntervalRole.PullBB:\n            return \"#59ee37\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { BufferAttribute, BufferGeometry, Color, FrontSide, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst MATERIAL = new MeshPhongMaterial({\n    color: new Color(\"#070707\"),\n    specular: new Color(\"#110404\"),\n    side: FrontSide,\n})\nconst KINDA = 0.866\nconst SURFACE_SCALE = 20\nconst HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(),\n]\nconst TRIANGLES = [\n    6, 0, 1,\n    6, 1, 2,\n    6, 2, 3,\n    6, 3, 4,\n    6, 4, 5,\n    6, 5, 0,\n]\nconst TRIANGLE_POSITION = TRIANGLES.map(t => HEXAGON_POINTS[t])\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return <mesh name=\"Patches\" geometry={geometry} material={MATERIAL}/>\n}\n\nfunction patchesGeometry(): BufferGeometry {\n    const geometry = new BufferGeometry()\n    const positionF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    const normalF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    TRIANGLE_POSITION.forEach((position, index) => {\n        const faceOffset = index * 3\n        positionF32[faceOffset] = position.x\n        positionF32[faceOffset + 1] = position.y - 0.01\n        positionF32[faceOffset + 2] = position.z\n        const normal = new Vector3(0,300,0).add(position).normalize()\n        normalF32[faceOffset] = normal.x\n        normalF32[faceOffset + 1] = normal.y\n        normalF32[faceOffset + 2] = normal.z\n    })\n    geometry.setAttribute(\"position\", new BufferAttribute(positionF32, 3))\n    geometry.setAttribute(\"normal\", new BufferAttribute(normalF32, 3))\n    return geometry\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Vector3 } from \"three\"\n\nimport { isPushRole } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails, intervalRotation, intervalsAdjacent } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { isIntervalClick } from \"../view/events\"\nimport { IntervalDetails } from \"../view/interval-details\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nexport function ObjectView({tensegrity, selected, setSelected, details, selectDetails}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (selection: IInterval | undefined) => void,\n    details: IIntervalDetails[],\n    selectDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [target, setTarget] = useState(new Vector3())\n    const [rotating] = useRecoilState(rotatingAtom)\n    useFrame(() => {\n        if (viewMode === ViewMode.Lines) {\n            const busy = tensegrity.iterate()\n            if (!busy && tensegrity.stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n        const midpoint = selected ? tensegrity.instance.intervalLocation(selected) : tensegrity.instance.midpoint\n        const toMidpoint = new Vector3().subVectors(midpoint, target).multiplyScalar(0.1)\n        if (viewMode === ViewMode.Lines || toMidpoint.lengthSq() > 0.001) {\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    const instance = tensegrity.instance\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Lines:\n                return (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )\n            case ViewMode.Selecting:\n                return (\n                    <SelectingView\n                        tensegrity={tensegrity}\n                        selected={selected}\n                        setSelected={setSelected}\n                        details={details}\n                        selectDetails={selectDetails}\n                    />\n                )\n            case ViewMode.Frozen:\n                return (\n                    <group>\n                        {tensegrity.intervals.map((interval: IInterval) => {\n                            const rotation = intervalRotation(instance.unitVector(interval.index))\n                            const length = instance.jointDistance(interval.alpha, interval.omega)\n                            const radius = cylinderRadius(interval)\n                            const intervalScale = new Vector3(radius, length, radius)\n                            return (\n                                <mesh\n                                    key={`T${interval.index}`}\n                                    geometry={CYLINDER}\n                                    position={instance.intervalLocation(interval)}\n                                    rotation={new Euler().setFromQuaternion(rotation)}\n                                    scale={intervalScale}\n                                    material={roleMaterial(interval.intervalRole)}\n                                    matrixWorldNeedsUpdate={true}\n                                    onClick={(event) => {\n                                        if (isIntervalClick(event)) {\n                                            setSelected(interval)\n                                            setViewMode(ViewMode.Selecting)\n                                        }\n                                    }}\n                                />\n                            )\n                        })}}\n                    </group>\n                )\n        }\n    }\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined} autoRotate={rotating} target={target} zoomSpeed={0.5}/>\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction SelectingView({tensegrity, selected, setSelected, details, selectDetails}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (interval?: IInterval) => void,\n    details: IIntervalDetails[],\n    selectDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const instance = tensegrity.instance\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n    }\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = isPushRole(interval.intervalRole)\n                if (!isPush) {\n                    if (selected) {\n                        if (isPushRole(selected.intervalRole)) {\n                            if (!intervalsAdjacent(selected, interval)) {\n                                return undefined\n                            }\n                        } else {\n                            if (selected.index !== interval.index) {\n                                return undefined\n                            }\n                        }\n                        if (!intervalsAdjacent(selected, interval)) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = cylinderRadius(interval)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(interval.intervalRole)}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            if (isIntervalClick(event) && isPushRole(interval.intervalRole)) {\n                                clickInterval(interval)\n                            }\n                        }}\n                    />\n                )\n            })}}\n            {details.map(d => (\n                <IntervalDetails key={`deets-${d.interval.index}`} instance={tensegrity.instance}\n                                 details={d} selectDetails={selectDetails}\n                />\n            ))}\n        </group>\n    )\n}\n\nfunction cylinderRadius(interval: IInterval): number {\n    return 8 * (isPushRole(interval.intervalRole) ? 0.003 : 0.0015)\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { PerspectiveCamera, Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { GlobalMode, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { isAdjacent } from \"../fabric/tensegrity-logic\"\nimport { IInterval, IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { postGrowthAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { BottomLeft } from \"../view/bottom-left\"\nimport { BottomRight } from \"../view/bottom-right\"\nimport { featureMapping } from \"../view/feature-mapping\"\n\nimport { ObjectView } from \"./object-view\"\n\n\nexport function ConstructionView({globalMode, createInstance}: {\n    globalMode: GlobalMode,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    const mainInstance = useMemo(() => createInstance(tenscriptFor(globalMode).featureValues), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [selected, setSelected] = useState<IInterval | undefined>()\n    const [details, setDetails] = useState<IIntervalDetails[]>([])\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const emergency = (message: string) => console.error(\"build view\", message)\n\n    const createTensegrity: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Lines)\n            setPostGrowth(ts.postGrowthOp)\n            const featureValues = ts.featureValues\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTensegrity(new Tensegrity(new Vector3(), mainInstance, countdown, ts, tree))\n        } catch (e) {\n            throw new Error(\"Problem running\")\n        }\n        return true\n    }\n    const setDetailsForSelected = (s: IInterval, t: Tensegrity) =>\n        setDetails(t.intervals.filter(isAdjacent(s))\n            .map(interval => t.getIntervalDetails(interval)))\n    useEffect(() => {\n        createTensegrity(tenscriptFor(globalMode), emergency)\n    }, [])\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetailsForSelected(selected, tensegrity)\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            {!tensegrity ? (\n                <div className=\"h-100\">\n                    <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                        <h1><FaPlay/></h1>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"h-100\">\n                    <Canvas\n                        style={{\n                            backgroundColor: \"black\",\n                            borderStyle: \"solid\",\n                            borderColor: viewMode !== ViewMode.Lines ? \"#f0ad4e\" : \"black\",\n                            cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                            borderWidth: \"2px\",\n                        }}\n                    >\n                        <ObjectCamera/>\n                        <RecoilBridge>\n                            <ObjectView\n                                tensegrity={tensegrity}\n                                selected={selected}\n                                setSelected={setSelected}\n                                details={details}\n                                selectDetails={({interval}) => {\n                                    if (details.length === 1 && selected && tensegrity) {\n                                        setDetailsForSelected(selected, tensegrity)\n                                    } else {\n                                        setDetails(details.filter(d => d.interval.index === interval.index))\n                                    }\n                                }}\n                            />\n                        </RecoilBridge>\n                    </Canvas>\n                    <div id=\"bottom-left\">\n                        <BottomLeft/>\n                    </div>\n                    <div id=\"bottom-right\">\n                        <BottomRight tensegrity={tensegrity}/>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nfunction ObjectCamera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 6, 18)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\nexport function tenscriptFor(globalMode: GlobalMode): ITenscript {\n    const grab = (name: string) => {\n        const found = BOOTSTRAP.find(ts => ts.name === name)\n        if (!found) {\n            throw new Error(`No bootstrap for ${name}`)\n        }\n        return found\n    }\n    switch (globalMode) {\n        case GlobalMode.Halo:\n            return grab(\"Halo by Crane\")\n        case GlobalMode.Convergence:\n            return grab(\"Convergence\")\n        case GlobalMode.HeadlessHug:\n            return grab(\"Headless Hug\")\n        case GlobalMode.Triped:\n            return grab(\"Triped\")\n        default:\n            throw new Error(\"tenscript?\")\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 35\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#091009\")\nexport const FLORA_PATCH_COLOR = new Color(\"#100902\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 5\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./runner-logic\"\nimport { ITwitchConfig } from \"./twitcher\"\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        return 16\n    }\n\n    public withMutations(directionGeneNames: GeneName[], mutateTwitchConfig: boolean): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionGeneNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (mutateTwitchConfig) {\n            const twitchConfig = getGene(GeneName.TwitchConfig, genesCopy)\n            mutateGene(() => this.roll(), twitchConfig)\n            twitchConfig.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}: IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public chooseFrom(total: number): number {\n        return Math.floor(total * diceToNuance(this.nextDie(), this.nextDie()))\n    }\n\n    public readMuscleTwitch(loop: IMuscle[], config: ITwitchConfig): ITwitch {\n        const {attackPeriod, decayPeriod, twitchNuance} = config\n        const muscle = loop[this.nextDie().index]\n        return {\n            muscle, twitchNuance,\n            when: diceToInteger(36, this.nextDie(), this.nextDie()),\n            attack: (2 + diceToFloat(6, this.nextDie())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.nextDie())) * decayPeriod,\n        }\n    }\n\n    public readFeatureValue(low: number, high: number): number {\n        const nuance = diceToNuance(this.nextDie(), this.nextDie(), this.nextDie())\n        return low * nuance + high * (1 - nuance)\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    public nextDie(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n}\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\"},\n    {index: 1, numeral: \"2\", symbol: \"⚁\"},\n    {index: 2, numeral: \"3\", symbol: \"⚂\"},\n    {index: 3, numeral: \"4\", symbol: \"⚃\"},\n    {index: 4, numeral: \"5\", symbol: \"⚄\"},\n    {index: 5, numeral: \"6\", symbol: \"⚅\"},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(...dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(...dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(...dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n\nexport enum GeneName {\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n    TwitchConfig = \"TwitchConfig\",\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Flora } from \"./flora\"\nimport { emptyGenome, IGeneData } from \"./genome\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport class Patch {\n    public runner?: Runner\n    public flora?: Flora\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IntervalRole } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval, IJoint } from \"../fabric/tensegrity-types\"\n\nimport { GeneName, Genome } from \"./genome\"\nimport { Patch } from \"./patch\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.ToA:\n            return GeneName.ToA\n        case Direction.ToB:\n            return GeneName.ToB\n        case Direction.ToC:\n            return GeneName.ToC\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IMuscle {\n    interval: IInterval\n    alphaInterval?: IInterval\n    omegaInterval?: IInterval\n}\n\nexport interface IRunnerState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    midpoint: Vector3,\n    genome: Genome\n    loopMuscles: IMuscle[][]\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function findTopFace(tensegrity: Tensegrity): IFace {\n    const sortedFaces = tensegrity.faces.sort((a, b) => {\n        const aa = a.joint\n        const bb = b.joint\n        if (!aa || !bb) {\n            throw new Error(\"faces without joints\")\n        }\n        const locA = tensegrity.instance.jointLocation(aa)\n        const locB = tensegrity.instance.jointLocation(bb)\n        return locA.y - locB.y\n    })\n    const top = sortedFaces.pop()\n    sortedFaces.forEach(face => tensegrity.faceToTriangle(face))\n    if (!top) {\n        throw new Error(\"no top face\")\n    }\n    return top\n}\n\nexport function calculateDirections(instance: FabricInstance, toA: Vector3, toB: Vector3, toC: Vector3, face?: IFace): void {\n    if (!face) {\n        return\n    }\n    const joint = face.joint\n    if (!joint) {\n        return undefined\n    }\n    const locations = instance.floatView.jointLocations\n    const fromTo = (fromJoint: IJoint, toJoint: IJoint, vector: Vector3) => {\n        const from = fromJoint.index * 3\n        const to = toJoint.index * 3\n        vector.set(locations[to] - locations[from], 0, locations[to + 2] - locations[from + 2])\n        vector.normalize()\n    }\n    fromTo(joint, face.ends[0], toA)\n    fromTo(joint, face.ends[1], toB)\n    fromTo(joint, face.ends[2], toC)\n}\n\nexport function extractLoopMuscles(tensegrity: Tensegrity): IMuscle[][]{\n    const loopMuscles: IMuscle[][] = []\n    tensegrity.withPulls(() => {\n        tensegrity.loops.forEach(loop => loopMuscles.push(loop.map(interval => {\n            const alphaPulls = interval.alpha.pulls\n            const omegaPulls = interval.omega.pulls\n            if (!alphaPulls || !omegaPulls) {\n                throw new Error(\"missing pulls\")\n            }\n            const onlyMuscles = ({intervalRole}: IInterval) =>\n                intervalRole === IntervalRole.PullAA ||\n                intervalRole === IntervalRole.PullBB\n            const alphaInterval = alphaPulls.find(onlyMuscles)\n            const omegaInterval = omegaPulls.find(onlyMuscles)\n            if (!alphaInterval && !omegaInterval) {\n                throw new Error(\"cannot find any intervals\")\n            }\n            return <IMuscle>{interval, alphaInterval, omegaInterval}\n        })))\n    })\n    return loopMuscles\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, selector } from \"recoil\"\n\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { Spin } from \"../fabric/tensegrity-types\"\n\nimport { Island } from \"./island\"\nimport { Patch } from \"./patch\"\n\nconst LEG = 5\nconst SCALE = 90\n\nexport const RUNNER_CODE: ITenscript = {\n    name: \"Runner\",\n    spin: Spin.LeftRight,\n    code: [\n        `(A1,B(${LEG},S${SCALE}),C(${LEG},S${SCALE}),D(${LEG},S${SCALE}))`,\n    ],\n    postGrowthOp: PostGrowthOp.Bowtie,\n    markDefStrings: {},\n    surfaceCharacter: SurfaceCharacter.Bouncy,\n    featureValues: {\n        [WorldFeature.IterationsPerFrame]: 300,\n        [WorldFeature.Drag]: 200,\n        [WorldFeature.StiffnessFactor]: 150,\n        [WorldFeature.Gravity]: 500,\n    },\n}\n\nexport const FLORA_CODE: ITenscript = {\n    name: \"Flora\",\n    postGrowthOp: PostGrowthOp.Bowtie,\n    code: [\"(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0))\"],\n    spin: Spin.Left,\n    markDefStrings: {\n        0: \"subtree(b(3, S85),c(3, S85),d(3, S85))\",\n    },\n    surfaceCharacter: SurfaceCharacter.Frozen,\n    featureValues: {},\n}\n\nexport const islandAtom = atom<Island>({\n    key: \"island\",\n    default: new Island(\"galapagos\", 383),\n})\n\nexport const homePatchSelector = selector<Patch>({\n    key: \"MySelector\",\n    get: ({get}) => get(islandAtom).patches[0], // todo: for now\n})\n\nexport const destinationAtom = atom<number>({\n    key: \"destination\",\n    default: 0,\n})\n\nexport const showDetailsAtom = atom<boolean>({\n    key: \"showDetails\",\n    default: false,\n})\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { RUNNER_CODE } from \"./evo-state\"\nimport { fromGeneData, Genome } from \"./genome\"\nimport { Runner } from \"./runner\"\nimport { directionGene } from \"./runner-logic\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [4, 5, 6, 7, 8, 9],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    SurvivorsAdvance = \"Survivors advance\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersOvertake = \"Challengers try to overtake\",\n    SurvivorsStored = \"Survivors stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    runner: Runner\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Population {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public midpoint: Vector3\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.SurvivorsAdvance\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n\n    constructor(\n        private ancestor: Runner,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (ancestor.embryo) {\n            throw new Error(\"Cannot create evolution from runner which is not pretenst\")\n        }\n        this.midpoint = ancestor.state.midpoint\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Runner[] = []\n        const storedGenes = ancestor.state.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoRunner(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((runner, index) => ({\n            runner,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Population | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Population(this.ancestor, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.SurvivorsAdvance:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({runner}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.runner.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Runner[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].runner.state.genome.geneData)\n                    challengers.push(this.createAutoRunner(genome.withMutations([directionGene(this.ancestor.direction)], false)))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{runner: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.runner.adoptFabric(this.ancestor.state.instance.fabricClone)\n                    const runner = challenger.runner.recycled(instance, parent.runner.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    runner.autopilot = true\n                    return {runner, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersOvertake:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({runner, name}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.SurvivorsStored\n                }\n                break\n            case EvolutionPhase.SurvivorsStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.ancestor.state.patch.storedGenes = winners.map(({runner}) => runner.state.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.SurvivorsAdvance\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        this.midpoint.set(0, 0, 0)\n        this.winners.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.challengers.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.midpoint.multiplyScalar(1.0 / (this.winners.length + this.challengers.length))\n        return this.phase\n    }\n\n    public get target(): Vector3 {\n        return this.ancestor.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoRunner(genome: Genome): Runner {\n        const instance = this.createInstance(RUNNER_CODE.featureValues, this.ancestor.state.instance.fabricClone)\n        const runner = this.ancestor.recycled(instance, genome.geneData)\n        runner.autopilot = true\n        return runner\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            const event = evolver.runner.distanceFromTarget\n            evolver.proximityHistory.push(event)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({runner, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = runner.state.genome.tosses\n    const reachedTarget = runner.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { ARROW_GEOMETRY } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport function RunnerView({runner}: { runner: Runner }): JSX.Element {\n    const {topFaceLocation, target, state, showDirection} = runner\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!showDirection || !topFaceLocation ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topFaceLocation.x, topFaceLocation.y, topFaceLocation.z,\n                                    target.x, topFaceLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#FFFFFF\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={runner.directionQuaternion}\n                        position={topFaceLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#0afdeb\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Population } from \"./population\"\nimport { RunnerView } from \"./runner-view\"\n\nexport function PopulationView({population}: { population: Population }): JSX.Element {\n    const height = 6\n    const {midpoint, target} = population\n    return (\n        <group>\n            {population.winners.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index}`} runner={runner}/>\n            ))}\n            {!population.challengersVisible ? undefined : population.challengers.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index + population.winners.length}`} runner={runner}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#ffffff\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Sky } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { destinationAtom } from \"./evo-state\"\nimport { Happening } from \"./evo-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { FAUNA_PATCH_COLOR, FLORA_PATCH_COLOR, SIX, SUN_POSITION } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, Population } from \"./population\"\nimport { PopulationView } from \"./population-view\"\nimport { Runner } from \"./runner\"\nimport { Direction } from \"./runner-logic\"\nimport { RunnerView } from \"./runner-view\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.05\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 5\n\nexport function IslandView({island, happening, runner, population, evolutionPhase, countdownToEvo, stopEvo}: {\n    island: Island,\n    happening: Happening,\n    runner?: Runner,\n    population?: Population,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvo: (countdown: number) => void,\n    stopEvo: (nextEvolution?: Population) => void,\n}): JSX.Element {\n    const [rotating, setRotating] = useState(false)\n    const [destination, setDestination] = useRecoilState(destinationAtom)\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const [target, updateTarget] = useState(new Vector3(0, 1, 0))\n    const [position, updatePosition] = useState(new Vector3(0, 1, 10))\n\n    function adjustTarget(midpoint: Vector3): void {\n        updateTarget(new Vector3().subVectors(midpoint, target).multiplyScalar(TOWARDS_TARGET).add(target))\n    }\n\n    useFrame(() => {\n        const approachDistance = (distance: number) => {\n            const positionToTarget = new Vector3().subVectors(position, target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n            updatePosition(position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION)))\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Resting:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(8)\n                }\n                break\n            case Happening.Running:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(6)\n                }\n                break\n            case Happening.Evolving:\n                if (population) {\n                    switch (population.iterate()) {\n                        case EvolutionPhase.EvolutionDone:\n                            console.log(\"Evolution DONE\")\n                            stopEvo()\n                            break\n                        case EvolutionPhase.EvolutionHarder:\n                            console.log(\"Evolution advance...\")\n                            stopEvo(population.withReducedCyclePattern)\n                            break\n                    }\n                    adjustTarget(population.midpoint)\n                    approachDistance(15)\n                    evolutionPhase(population.phase)\n                }\n                break\n        }\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvo(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n        setRotating(happening === Happening.Evolving)\n    }, [happening])\n\n    function clickPatch(patch: Patch): void {\n        if (patch.flora) {\n            patch.flora.removeRandomInterval()\n            console.log(\"remove\", patch.name)\n        } else if (runner && runner.direction === Direction.Rest) {\n            setDestination((destination + 1) % SIX)\n        }\n    }\n\n    return (\n        <group>\n            <OrbitControls target={target} autoRotate={rotating}\n                           enableKeys={false} enablePan={false} position={position}\n                           autoRotateSpeed={0.6}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined}\n            />\n            <scene>\n                {(population && happening === Happening.Evolving) ? (\n                    <PopulationView population={population}/>\n                ) : (runner ? (\n                    <RunnerView runner={runner}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const array = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={() => clickPatch(patch)}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                side={DoubleSide}\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={array}\n                                    count={array.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                <Sky\n                    distance={1000000}\n                    rayleigh={3}\n                    inclination={0.505}\n                    mieCoefficient={0.001}\n                    mieDirectionalG={0.93}\n                    turbidity={7.5}\n                />\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\"/>\n            </scene>\n        </group>\n    )\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useRecoilValue } from \"recoil\"\nimport { PerspectiveCamera, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode, stageName } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { destinationAtom, homePatchSelector, islandAtom, RUNNER_CODE, showDetailsAtom } from \"./evo-state\"\nimport { emptyGenome, fromGeneData } from \"./genome\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\nimport { EVO_PARAMETERS, EvolutionPhase, IEvolutionSnapshot, Population } from \"./population\"\nimport { Runner } from \"./runner\"\nimport { Direction, IRunnerState } from \"./runner-logic\"\nimport { EvolutionInfo, StatsView } from \"./stats-view\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function EvoView({createBodyInstance}: { createBodyInstance: CreateInstance }): JSX.Element {\n    const [island] = useRecoilState(islandAtom)\n    const homePatch = useRecoilValue(homePatchSelector)\n    const destination = useRecoilValue(destinationAtom)\n    const [showStats, setShowStats] = useRecoilState(showDetailsAtom)\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [runner, setRunner] = useState(() => newRunner(homePatch))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [population, setPopulation] = useState<Population | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.SurvivorsAdvance)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    function newRunner(patch: Patch): Runner {\n        const targetPatch = patch.adjacent[0]\n        if (!targetPatch) {\n            throw new Error(\"No adjacent\")\n        }\n        const storedGenome = patch.storedGenes[0]\n        const genome = storedGenome ? fromGeneData(storedGenome) : emptyGenome()\n        const instance = createBodyInstance(RUNNER_CODE.featureValues)\n        instance.world.set_surface_character(SurfaceCharacter.Sticky)\n        const state: IRunnerState = {\n            patch,\n            targetPatch,\n            instance,\n            midpoint: new Vector3().copy(patch.center),\n            genome,\n            loopMuscles: [],\n            direction: Direction.ToA,\n            directionHistory: [],\n            autopilot: false,\n            timeSlice: 10,\n            twitchesPerCycle: 10,\n        }\n        const tree = compileTenscript(RUNNER_CODE, (err) => {\n            throw new Error(\"unable to compile runner: \" + err)\n        })\n        if (!tree) {\n            throw new Error(\"no tree\")\n        }\n        const embryo = new Tensegrity(patch.center, instance, 1000, RUNNER_CODE, tree)\n        return new Runner(state, embryo)\n    }\n\n    // function newFlora(patch: Patch, instance: FabricInstance): Flora {\n    //     const tree = compileTenscript(FLORA_CODE, (err) => {\n    //         throw new Error(\"unable to compile sat tree: \" + err)\n    //     })\n    //     if (!tree) {\n    //         throw new Error(\"no tree\")\n    //     }\n    //     const tensegrity = new Tensegrity(patch.center, percentOrHundred(), instance, 1000, FLORA_CODE, tree)\n    //     return new Flora(patch.name, tensegrity)\n    // }\n\n    useEffect(() => {\n        if (runner) {\n            const adjacent = runner.state.patch.adjacent[destination]\n            if (adjacent) {\n                runner.state.targetPatch = adjacent\n            }\n        }\n    }, [destination])\n\n    useEffect(() => {\n        if (!runner || !runner.embryo) {\n            updateStage(undefined)\n            return\n        }\n        const sub = runner.embryo.stage$.subscribe((newStage: Stage) => {\n            if (newStage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(newStage)\n        })\n        return () => sub.unsubscribe()\n    }, [runner])\n\n    useEffect(() => {\n        if (!population) {\n            return\n        }\n        const sub = population.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [population])\n\n    const evolveWithPattern = (toEvolve: Runner, pattern: number[]) => {\n        if (population) {\n            setPopulation(population.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setPopulation(new Population(toEvolve, createBodyInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (runner && countdown === 0) {\n            evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Population) => {\n        // todo: free up current evolution?\n        setPopulation(nextEvolution)\n        if (!nextEvolution) {\n            setRunner(newRunner(homePatch))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <RecoilBridge>\n                    <IslandView\n                        island={island}\n                        happening={happening}\n                        runner={runner}\n                        population={population}\n                        evolutionPhase={evolutionPhase => {\n                            if (evolutionPhase !== phase) {\n                                setPhase(evolutionPhase)\n                            }\n                        }}\n                        countdownToEvo={countdownToEvolution}\n                        stopEvo={stopEvolution}\n                    />\n                </RecoilBridge>\n            </Canvas>\n            {!runner ? <h1>no runner</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    runner={runner}\n                    happening={happening}\n                    evoCountdown={evolutionCountdown}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        runner.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setRunner(newRunner(homePatch))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        runner.direction = Direction.Rest\n                    }}\n                />\n            )}\n            {!population ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {showStats ? undefined : (\n                            <Button color=\"info\" onClick={() => setShowStats(true)}>\n                                Phase: {phase}<br/>\n                                {snapshots.length === 0 ? undefined :\n                                    <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                                }\n                            </Button>\n                        )}\n                    </div>\n                    {!showStats ? undefined : (\n                        <EvolutionStatsView happening={happening} snapshots={snapshots}/>\n                    )}\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => reloadGlobalMode(GlobalMode.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({\n                            runner,\n                            happening,\n                            evoCountdown,\n                            toRunning,\n                            toRest,\n                            toEvolving,\n                            toRebirth,\n                        }: {\n    runner?: Runner,\n    happening: Happening,\n    evoCountdown: number,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evoCountdown >= 0 ? evoCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, snapshots}: {\n    happening: Happening,\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return (\n                <div id=\"evolution-stats\">\n                    {snapshots.length > 0 ? (\n                        <StatsView snapshots={snapshots}/>\n                    ) : (\n                        <h2 className=\"p-2\">First round, please wait</h2>\n                    )}\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(-4, 5, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IMuscle, IRunnerState } from \"./runner-logic\"\n\nexport type TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nexport interface ITwitchConfig {\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IRunnerState) {\n        const genome = this.state.genome\n        const readTwitchConfig = (): ITwitchConfig => {\n            const reader = genome.createReader(GeneName.TwitchConfig)\n            const musclePeriod = reader.readFeatureValue(800, 1200)\n            return <ITwitchConfig>{\n                twitchNuance: reader.readFeatureValue(0.1, 0.3),\n                musclePeriod,\n                attackPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n                decayPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n            }\n        }\n        this.config = readTwitchConfig()\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, this.state.loopMuscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: TwitchFunction): boolean {\n        const state = this.state\n        state.timeSlice++\n        if (state.timeSlice >= 36) {\n            state.timeSlice = 0\n            this.cycleCount++\n            return true\n        }\n        const twitchCycle = this.twitchCycles[state.direction]\n        if (twitchCycle) {\n            this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(reader: GeneReader, config: ITwitchConfig, loopMuscles: IMuscle[][], totalTwitches: number) {\n        const loops = [...loopMuscles]\n        while (totalTwitches-- > 0) {\n            const chosen = reader.chooseFrom(loops.length)\n            const twitch = reader.readMuscleTwitch(loops[chosen], config)\n            loops.splice(chosen, 1)\n            this.addTwitch(twitch.when, twitch)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.interval.index}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: TwitchFunction): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IFace, IInterval } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, IGeneData } from \"./genome\"\nimport {\n    calculateDirections,\n    Direction,\n    directionGene,\n    DIRECTIONS,\n    extractLoopMuscles,\n    findTopFace,\n    IMuscle,\n    IRunnerState,\n} from \"./runner-logic\"\nimport { Twitcher, TwitchFunction } from \"./twitcher\"\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\nconst MAX_HISTORY_LENGTH = 20\n\nexport class Runner {\n\n    public toA = new Vector3(1, 0, 0)\n    public toB = new Vector3(0, 0, 1)\n    public toC = new Vector3(0, 0, -1)\n\n    private shapingTime = 150\n    private twitcher?: Twitcher\n    private topFace?: IFace\n    private currentTwitchAge = 0\n\n    constructor(public readonly state: IRunnerState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n        this.currentTwitchAge = this.twitchAge\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Runner {\n        const genome = fromGeneData(geneData ? geneData : this.state.patch.storedGenes[0])\n        const midpoint = new Vector3().copy(this.state.midpoint)\n        const state: IRunnerState = {...this.state, instance, midpoint, genome, directionHistory: []}\n        const runner = new Runner(state)\n        runner.topFace = this.topFace\n        calculateDirections(runner.state.instance, runner.toA, runner.toB, runner.toC, this.topFace)\n        return runner\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        return this.state.genome.withMutations(geneNames, Math.random() > 0.9).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public get distanceFromTarget(): number {\n        return this.state.midpoint.distanceTo(this.target)\n    }\n\n    public iterate(): boolean {\n        const instance = this.state.instance\n        const view = instance.view\n        this.state.midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const embryo = this.embryo\n        if (embryo) {\n            const busy = embryo.iterate()\n            if (busy) {\n                return true\n            }\n            const stage = embryo.stage$.getValue()\n            switch (stage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        embryo.stage = Stage.Slack\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Slack:\n                    this.topFace = findTopFace(embryo)\n                    embryo.stage = Stage.Pretensing\n                    return false\n                case Stage.Pretensing:\n                    embryo.stage = Stage.Pretenst\n                    return false\n                case Stage.Pretenst:\n                    this.state.loopMuscles = extractLoopMuscles(embryo)\n                    this.state.instance.refreshFloatView()\n                    calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n                    this.checkDirection()\n                    this.twitcher = new Twitcher(this.state)\n                    this.embryo = undefined\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            this.state.instance.iterate()\n            if (this.twitcher) {\n                const newTwitchAge = this.twitchAge\n                if (newTwitchAge <= this.currentTwitchAge) {\n                    return true\n                }\n                this.currentTwitchAge = newTwitchAge\n                const twitch: TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => {\n                    const twitchInterval = (interval?: IInterval) => {\n                        if (interval) {\n                            this.state.instance.fabric.twitch_interval(interval.index, attack, decay, twitchNuance)\n                            // console.log(`twitch ${interval.index}: ${attack}, ${decay}, ${twitchNuance}`)\n                        }\n                    }\n                    twitchInterval(muscle.alphaInterval)\n                    twitchInterval(muscle.omegaInterval)\n                }\n                if (this.state.autopilot && this.twitcher.tick(twitch)) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.state.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get topFaceLocation(): Vector3 | undefined {\n        const face = this.topFace\n        if (!face) {\n            return undefined\n        }\n        const joint = face.joint\n        if (!joint) {\n            return undefined\n        }\n        return this.state.instance.jointLocation(joint)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            if (state.direction === Direction.Rest) {\n                console.error(\"direction is REST??\")\n                return\n            }\n            state.directionHistory.push(state.direction)\n            if (state.directionHistory.length > MAX_HISTORY_LENGTH) {\n                state.directionHistory.shift()\n            }\n        }\n    }\n\n    private get twitchAge(): number {\n        return this.state.instance.fabric.age / 600\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.ToA:\n                    return this.toA\n                case Direction.ToB:\n                    return this.toB\n                case Direction.ToC:\n                    return this.toC\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n        const matchA = toTarget.dot(this.toA)\n        const matchB = toTarget.dot(this.toB)\n        const matchC = toTarget.dot(this.toC)\n        if (matchA > matchB && matchA > matchC) {\n            return Direction.ToA\n        }\n        if (matchB > matchA && matchB > matchC) {\n            return Direction.ToB\n        }\n        if (matchC > matchA && matchC > matchB) {\n            return Direction.ToC\n        }\n        return Direction.Rest\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        toTarget.subVectors(this.target, this.state.midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\nimport { useSetRecoilState } from \"recoil\"\n\nimport { showDetailsAtom } from \"./evo-state\"\nimport { IEvolutionSnapshot, letter } from \"./population\"\n\nexport function StatsView({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"text-monospace d-inline-flex\" onClick={() => setShowStats(false)}>\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\" onClick={() => setShowStats(false)}>\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt, FaSnowflake } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { atom, useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Material, MeshLambertMaterial, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { intervalRotation } from \"../fabric/tensegrity-types\"\nimport { saveCSVZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport const SPHERE_RADIUS = 15\n\nconst PUSH_RADIUS = 0.004 * SPHERE_RADIUS\nconst PULL_RADIUS = 0.002 * SPHERE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst PUSH_MATERIAL = material(\"#011884\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nconst FREQUENCY_CHOICES = [1, 2, 3, 4, 5]\nconst INITIAL_FREQUENCY_CHOICE = 1\n\nexport const showPushAtom = atom({\n    key: \"show push\",\n    default: true,\n})\nexport const showPullAtom = atom({\n    key: \"show pull\",\n    default: true,\n})\nexport const frozenAtom = atom({\n    key: \"frozen\",\n    default: false,\n})\nexport const useGravityAtom = atom({\n    key: \"useGravity\",\n    default: true,\n})\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number, useGravity: boolean) => TensegritySphere }): JSX.Element {\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n    const [showPush, setShowPush] = useRecoilState(showPushAtom)\n    const [showPull, setShowPull] = useRecoilState(showPullAtom)\n    const [useGravity, setUseGravity] = useRecoilState(useGravityAtom)\n    const [frequencyChoice, setFrequencyChoice] = useState(INITIAL_FREQUENCY_CHOICE)\n    const [sphere, setSphere] = useState(() => createSphere(FREQUENCY_CHOICES[frequencyChoice],\n        useGravity))\n\n    function createChoice(choice: number): void {\n        setFrozen(false)\n        setFrequencyChoice(choice)\n        setSphere(createSphere(FREQUENCY_CHOICES[choice], useGravity))\n    }\n\n    useEffect(() => {\n        setFrozen(false)\n        setSphere(createSphere(FREQUENCY_CHOICES[frequencyChoice], useGravity))\n    }, [useGravity])\n\n    useEffect(() => {\n        if (!showPush && !showPull) {\n            setShowPush(true)\n            setShowPull(true)\n        }\n    }, [showPush, showPull])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveCSVZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => reloadGlobalMode(GlobalMode.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"top-left\">\n                <ButtonGroup>\n                    {FREQUENCY_CHOICES.map((freq, index) => (\n                        <Button key={`Freq${freq}`} onClick={() => createChoice(index)}\n                                color={index === frequencyChoice ? \"success\" : \"secondary\"}>\n                            {freq}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"top-right\">\n                <ButtonGroup>\n                    <Button color={useGravity ? \"success\" : \"secondary\"}\n                            onClick={() => setUseGravity(true)}>Gravity</Button>\n                    <Button color={!useGravity ? \"success\" : \"secondary\"}\n                            onClick={() => setUseGravity(false)}>Space</Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-left\">\n                <ButtonGroup>\n                    <Button color={frozen ? \"success\" : \"secondary\"}\n                            onClick={() => setFrozen(!frozen)}><FaSnowflake/></Button>\n                    <Button color={showPush ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPush(!showPush)}>C</Button>\n                    <Button color={showPull ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPull(!showPull)}>T</Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <SphereCamera/>\n                <RecoilBridge>\n                    {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n                </RecoilBridge>\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const [target, setTarget] = useState(new Vector3())\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n\n    useFrame(() => {\n        if (!frozen) {\n            sphere.iterate(() => setTimeout(() => setFrozen(true), 0))\n            const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, target).multiplyScalar(0.1)\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    return (\n        <group>\n            <OrbitControls onPointerMissed={undefined} target={target}/>\n            <scene>\n                {frozen ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: { sphere: TensegritySphere }): JSX.Element {\n    const [showPush] = useRecoilState(showPushAtom)\n    const [showPull] = useRecoilState(showPullAtom)\n    const instance = sphere.instance\n    return (\n        <group>\n            {!showPull ? undefined : sphere.pulls.map((pull: IPull) => {\n                const rotation = intervalRotation(instance.unitVector(pull.index))\n                const length = instance.jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {!showPush ? undefined : sphere.pushes.map((push: IPush) => {\n                const rotation = intervalRotation(instance.unitVector(push.index))\n                const length = instance.jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PUSH_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction SphereCamera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, SPHERE_RADIUS, SPHERE_RADIUS * 2.6)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const instance = this.sphere.instance\n        instance.refreshFloatView()\n        const pushes = this.sphere.pushes\n        const averagePushLength = pushes\n            .reduce((sum, push) => sum + instance.jointDistance(push.alpha, push.omega), 0) / pushes.length\n        const segmentLength = this.sphere.segmentSize * averagePushLength\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { IntervalRole, intervalRoleName, PULL_RADIUS, PUSH_RADIUS, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint } from \"../fabric/tensegrity-types\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nconst TWIST_ANGLE = 0.52\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    idealLength: number,\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    segment: boolean\n    idealLength: number,\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly segmentSize: number,\n        public readonly useGravity: boolean,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const instance = this.instance\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, TWIST_ANGLE)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const length0 = alphaHub.location.distanceTo(omegaHub.location)\n        const idealLength = length0\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(alpha.index, omega.index, true, length0, idealLength, 1, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub, idealLength,\n            location: () => new Vector3()\n                .addVectors(instance.jointLocation(alpha), instance.jointLocation(omega))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const instance = this.instance\n        const pull = (alpha: IJoint, omega: IJoint, idealLength: number, segment: boolean) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const length0 = instance.jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(alpha.index, omega.index, false, length0, idealLength, 1, 0.0001)\n            const interval: IPull = {\n                index, alpha, omega, segment, idealLength,\n                location: () => new Vector3()\n                    .addVectors(instance.jointLocation(alpha), instance.jointLocation(omega))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength, true)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2, false)\n        return pulls\n    }\n\n    public iterate(setFrozen: () => void): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return true\n        }\n        switch (this.instance.stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.instance.stage = Stage.Shaping\n                break\n            case Stage.Shaping:\n                if (this.instance.fabric.age === 25000) {\n                    if (this.useGravity) {\n                        this.instance.stage = Stage.Slack\n                    } else {\n                        setFrozen()\n                    }\n                }\n                break\n            case Stage.Slack:\n                this.instance.stage = Stage.Pretensing\n                break\n            case Stage.Pretensing:\n                this.instance.stage = Stage.Pretenst\n                break\n            case Stage.Pretenst:\n                if (this.instance.fabric.age > 100000) {\n                    setFrozen()\n                }\n        }\n        return false\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = this.instance.jointLocation(joint)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const length = this.instance.jointDistance(push.alpha, push.omega)\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.PushA),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const length = this.instance.jointDistance(interval.alpha, interval.omega)\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.PushA),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (TWIST_ANGLE < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaBalanceScale } from \"react-icons/all\"\nimport { RecoilState, useRecoilState } from \"recoil\"\n\nimport { floatString, percentString } from \"../fabric/eig-util\"\n\nimport { IFeatureMapping } from \"./feature-mapping\"\n\nconst MAX_SLIDER = 100000\nconst domain = [0, MAX_SLIDER]\n\nexport function FeatureSlider({mapping, percentAtom, apply}: {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n    apply: (wf: WorldFeature, percent: number, value: number) => void,\n}): JSX.Element {\n    const {name, nuanceToPercent, percentToNuance, percentToValue} = mapping\n    const sliderValue = (p: number) => [Math.floor(percentToNuance(p) * MAX_SLIDER)]\n    const [percent, setPercent] = useRecoilState(percentAtom)\n    const [values, setValues] = useState(sliderValue(percent))\n\n    useEffect(() => {\n        setPercent(Math.round(nuanceToPercent(values[0] / MAX_SLIDER)))\n    }, [values])\n    useEffect(() => apply(mapping.feature, percent, percentToValue(percent)), [percent])\n    useEffect(() => {\n        setValues(sliderValue(percent))\n    }, [mapping, percent])\n\n    return (\n        <div className=\"slider\">\n            <div className=\"float-right mr-4\">\n                <FaBalanceScale onClick={() => setValues(sliderValue(100))}/>\n            </div>\n            <div className=\"ml-2 small my-1\">\n                {name} = {percentString(percent)} ({floatString(percentToValue(percent))})\n            </div>\n            <Slider\n                mode={1} step={1} domain={domain} rootStyle={sliderStyle}\n                values={values}\n                onChange={(newValues: number[]) => setValues(newValues)}\n            >\n                <Rail>\n                    {({getRailProps}) => <div className=\"slider-rail\" {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle key={handle.id} handle={handle} getHandleProps={getHandleProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track key={id} source={source} target={target} getTrackProps={getTrackProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({handle, getHandleProps}: {\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            className=\"slider-handle\"\n            style={{left: `${percent}%`}}\n            aria-valuemin={min} aria-valuemax={max} aria-valuenow={value}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n}): JSX.Element {\n    return (\n        <div className=\"slider-track\"\n             style={{left: `${source.percent}%`, width: `${target.percent - source.percent}%`}}\n             {...getTrackProps()}\n        />\n    )\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"1%\",\n    position: \"relative\",\n    width: \"98%\",\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { currentFeature, FEATURE_VALUES } from \"../storage/recoil\"\n\nimport { FeatureSlider } from \"./feature-slider\"\n\nexport function BottomMiddle({tensegrity}: {\n    tensegrity: Tensegrity,\n}): JSX.Element {\n    const [open, setOpen] = useState(false)\n    const [worldFeature, setWorldFeature] = useRecoilState(currentFeature)\n    const [featureValue, setFeatureValue] = useState(FEATURE_VALUES[worldFeature])\n    return (\n        <div className=\"w-100 d-flex\">\n            <ButtonDropdown isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle>Choose</DropdownToggle>\n                <DropdownMenu>{\n                    FEATURE_VALUES\n                        .filter(value => !value.mapping.name.startsWith(\"-\"))\n                        .map((value) => (\n                            <DropdownItem key={`fitem-${value.mapping.feature}`} onClick={() => {\n                                setWorldFeature(value.mapping.feature)\n                                setFeatureValue(value)\n                            }}>\n                                {value.mapping.name}\n                            </DropdownItem>\n                        ))\n                }</DropdownMenu>\n            </ButtonDropdown>\n            <FeatureSlider\n                mapping={featureValue.mapping}\n                percentAtom={featureValue.percentAtom}\n                apply={(feature, percent, value) => {\n                    tensegrity.instance.applyFeature(feature, percent, value)\n                }}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, PerspectiveCamera, Stars } from \"@react-three/drei\"\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useRecoilState } from \"recoil\"\nimport {\n    Color,\n    CylinderGeometry,\n    Euler,\n    Material,\n    MeshLambertMaterial,\n    PerspectiveCamera as Cam,\n    Vector3,\n} from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { GlobalMode, isPushRole, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { RunTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IIntervalDetails, intervalRotation, intervalsAdjacent } from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    globalModeAtom,\n    rotatingAtom,\n    ViewMode,\n    viewModeAtom,\n    visibleRolesAtom,\n} from \"../storage/recoil\"\n\nimport { isIntervalClick } from \"./events\"\nimport { IntervalDetails } from \"./interval-details\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"./materials\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst RADIUS_FACTOR = 0.01\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({tensegrity, runTenscript, selected, setSelected, details, selectDetails}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n    selected: IInterval | undefined,\n    setSelected: (selection: IInterval | undefined) => void,\n    details: IIntervalDetails[],\n    selectDetails: (detais: IIntervalDetails) => void,\n}): JSX.Element {\n\n    const [visibleRoles] = useRecoilState(visibleRolesAtom)\n    const [visualStrainPercent] = useRecoilState(FEATURE_VALUES[WorldFeature.VisualStrain].percentAtom)\n    const visualStrain = () => FEATURE_VALUES[WorldFeature.VisualStrain].mapping.percentToValue(visualStrainPercent)\n    const [globalMode] = useRecoilState(globalModeAtom)\n    const [bootstrapIndex, setBootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    const [nonBusyCount, updateNonBusyCount] = useState(0)\n    const [bullseye, updateBullseye] = useState(new Vector3(0, 1, 0))\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n\n    useEffect(() => {\n        setBootstrapIndex(0)\n        updateNonBusyCount(0)\n    }, [globalMode])\n\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        current.position.set(0, 5, tensegrity.instance.view.radius() * 5)\n    }, [])\n\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    useFrame(() => {\n        const current = camera.current\n        if (!current || !tensegrity) {\n            return\n        }\n        if (viewMode === ViewMode.Lines) {\n            const busy = tensegrity.iterate()\n            const view = tensegrity.instance.view\n            const target = selected ? tensegrity.instance.intervalLocation(selected) :\n                new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n            updateBullseye(new Vector3().subVectors(target, bullseye).multiplyScalar(TOWARDS_TARGET).add(bullseye))\n            const eye = current.position\n            if (globalMode === GlobalMode.Demo || stage === Stage.Growing) {\n                eye.y += (target.y - eye.y) * TOWARDS_POSITION\n                const distanceChange = eye.distanceTo(target) - view.radius() * 2.5\n                const towardsDistance = new Vector3().subVectors(target, eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n                eye.add(towardsDistance)\n            } else {\n                if (eye.y < 0) {\n                    eye.y -= eye.y * TOWARDS_POSITION * 20\n                }\n            }\n            if (busy) {\n                return\n            }\n            if (globalMode === GlobalMode.Demo) {\n                switch (stage) {\n                    case Stage.Shaping:\n                        if (nonBusyCount === 200) {\n                            tensegrity.stage = Stage.Slack\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Slack:\n                        if (nonBusyCount === 30) {\n                            tensegrity.stage = Stage.Pretensing\n                            setRotating(false)\n                            updateNonBusyCount(0)\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                    case Stage.Pretenst:\n                        if (nonBusyCount === 200) {\n                            const nextIndex = bootstrapIndex + 1\n                            if (nextIndex === BOOTSTRAP.length) {\n                                setBootstrapIndex(0)\n                                reloadGlobalMode(GlobalMode.Design)\n                                setRotating(false)\n                                runTenscript(BOOTSTRAP[0], emergency)\n                            } else {\n                                setBootstrapIndex(nextIndex)\n                                setRotating(true)\n                                updateNonBusyCount(0)\n                                runTenscript(BOOTSTRAP[nextIndex], emergency)\n                            }\n                        } else {\n                            updateNonBusyCount(nonBusyCount + 1)\n                        }\n                        break\n                }\n            }\n            if (stage === Stage.Pretensing) {\n                tensegrity.stage = Stage.Pretenst\n            }\n        }\n    })\n\n    const camera = useRef<Cam>()\n    const pushOverPull = tensegrity.instance.world.get_float_value(WorldFeature.PushOverPull)\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n        setViewMode(ViewMode.Selecting)\n    }\n    return (\n        <group>\n            <PerspectiveCamera ref={camera} makeDefault={true} onPointerMissed={undefined}/>\n            <OrbitControls target={bullseye} autoRotate={rotating} enableKeys={false} enablePan={false}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           onPointerMissed={undefined} zoomSpeed={0.5}\n            />\n            <scene>\n                {viewMode === ViewMode.Selecting ? (\n                    <SelectingView\n                        tensegrity={tensegrity} details={details} selectDetails={selectDetails}\n                        selected={selected} setSelected={setSelected}/>\n                ) : viewMode === ViewMode.Frozen ? (\n                    <group>\n                        {tensegrity.intervals\n                            .filter(interval => visibleRoles.some(role => role === interval.intervalRole))\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    pushOverPull={pushOverPull}\n                                    visualStrain={visualStrain()}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    onPointerDown={event => {\n                                        event.stopPropagation()\n                                        if (isIntervalClick(event)) {\n                                            clickInterval(interval)\n                                        }\n                                    }}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <lineSegments\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({pushOverPull, visualStrain, tensegrity, interval, selected, onPointerDown}: {\n    pushOverPull: number,\n    visualStrain: number,\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    onPointerDown?: (e: React.MouseEvent<Element, MouseEvent>) => void,\n}): JSX.Element | null {\n    const intervalMaterial = selected ? SELECTED_MATERIAL : roleMaterial(interval.intervalRole)\n    const push = isPushRole(interval.intervalRole)\n    const instance = tensegrity.instance\n    const stiffness = instance.floatView.stiffnesses[interval.index] * (push ? pushOverPull : 1.0)\n    const radius = RADIUS_FACTOR * Math.sqrt(stiffness) * (selected ? 1.5 : 1)\n    const rotation = intervalRotation(instance.unitVector(interval.index))\n    const strain = instance.floatView.strains[interval.index]\n    const idealLength = instance.floatView.idealLengths[interval.index]\n    const length = strain === 0 ? instance.intervalLength(interval) : idealLength + strain * idealLength * (1 - visualStrain)\n    const intervalScale = new Vector3(radius, (length < 0) ? 0.01 : length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={instance.intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={intervalMaterial}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={onPointerDown}\n        />\n    )\n}\n\nconst BASE_RADIUS = 8\nconst PUSH_RADIUS = 0.004 * BASE_RADIUS\nconst PULL_RADIUS = 0.002 * BASE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst SELECTED_MATERIAL = material(\"#ffdd00\")\nconst PUSH_MATERIAL = material(\"#384780\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nfunction SelectingView({tensegrity, selected, setSelected, details, selectDetails}: {\n    tensegrity: Tensegrity,\n    selected: IInterval | undefined,\n    setSelected: (interval?: IInterval) => void,\n    details: IIntervalDetails[],\n    selectDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const instance = tensegrity.instance\n    const clickInterval = (interval: IInterval) => {\n        if (selected && selected.index === interval.index) {\n            setSelected(undefined)\n        } else {\n            setSelected(interval)\n        }\n    }\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = isPushRole(interval.intervalRole)\n                if (!isPush) {\n                    if (selected) {\n                        if (isPushRole(selected.intervalRole)) {\n                            if (!intervalsAdjacent(selected, interval)) {\n                                return undefined\n                            }\n                        } else {\n                            if (selected.index !== interval.index) {\n                                return undefined\n                            }\n                        }\n                        if (!intervalsAdjacent(selected, interval)) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = (isPush ? PUSH_RADIUS : PULL_RADIUS) * (selected && selected.index === interval.index ? 2 : 1)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={isPush ? PUSH_MATERIAL : PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={event => {\n                            event.stopPropagation()\n                            if (isIntervalClick(event)) {\n                                clickInterval(interval)\n                            }\n                        }}\n                    />\n                )\n            })}}\n            {details.map(d => (\n                <IntervalDetails key={`deets-${d.interval.index}`} instance={tensegrity.instance}\n                                 details={d} selectDetails={selectDetails}/>\n            ))}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button } from \"reactstrap\"\n\nimport { Tensegrity, ToDo } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport const STAGE_TRANSITIONS = Object.keys(StageTransition)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => StageTransition[k])\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    function doNow(todo: ToDo): void {\n        tensegrity.toDo = {todo}\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <FaCamera/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => doNow(t => t.stage = Stage.Pretensing)}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/><FaChartBar/>\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonGroup, Input } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { compileTenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { postGrowthAtom, tenscriptAtom } from \"../storage/recoil\"\n\nexport function ScriptPanel({runTenscript}: { runTenscript: RunTenscript }): JSX.Element {\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [json, setJson] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const toJson = () => JSON.stringify(tenscript, undefined, 2)\n\n    function parse(): void {\n        try {\n            const newTenscript = JSON.parse(json)\n            if (compileTenscript(newTenscript, setError)) {\n                setError(\"\")\n                newTenscript.postGrowthOp = postGrowth\n                setTenscript(newTenscript)\n                runTenscript(newTenscript, setError)\n            }\n        } catch (e) {\n            setError(e.toString())\n        }\n    }\n\n    useEffect(() => {\n        if (tenscript) {\n            setJson(toJson())\n        } else {\n            setJson(\"\")\n        }\n    }, [tenscript])\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <div>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{flexDirection: \"column\", height: \"available\"}}>\n                    <Input\n                        style={{borderRadius: \"1em\", height: \"22em\", marginBottom: \"0.5em\"}}\n                        type=\"textarea\" id=\"tenscript\"\n                        value={json}\n                        onChange={changeEvent => setJson(changeEvent.target.value)}\n                    />\n                    <ButtonGroup vertical={true} className=\"w-100 my-2\">\n                        {error.length === 0 ? undefined : (\n                            <Button className=\"my-2\" color=\"warning\" onClick={() => {\n                                setJson(toJson())\n                                setError(\"\")\n                            }}>\n                                <FaBug/><hr/>{error}\n                            </Button>\n                        )}\n                        <Button color=\"success\" onClick={() => parse()}>\n                            Try it out!\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaEye, FaHiking } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { bootstrapIndexAtom, postGrowthAtom, tenscriptAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { ScriptPanel } from \"./script-panel\"\nimport { STAGE_TRANSITIONS, StageButton } from \"./stage-button\"\n\nexport function TopLeft({tensegrity, runTenscript}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const setBootstrapIndex = useSetRecoilState(bootstrapIndexAtom)\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth, setPostGrowth] = useRecoilState(postGrowthAtom)\n\n    const [showScriptPanel, setShowScriptPanel] = useState(false)\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    const run = (pgo: PostGrowthOp) => {\n        if (!tenscript) {\n            return\n        }\n        setPostGrowth(pgo)\n        if (tenscript.postGrowthOp === pgo) {\n            runTenscript(tenscript, error => console.error(error))\n        } else {\n            const opChanged: ITenscript = {...tenscript, postGrowthOp: pgo}\n            setTenscript(opChanged)\n            runTenscript(opChanged, error => console.error(error))\n        }\n    }\n\n    const opColor = (pgo: PostGrowthOp) => postGrowth === pgo ? \"success\" : \"secondary\"\n\n    return (\n        <>\n            <ButtonGroup>{STAGE_TRANSITIONS\n                .map(stageTransition => (\n                    <StageButton\n                        key={`strans-${stageTransition}`}\n                        tensegrity={tensegrity}\n                        stageTransition={stageTransition}\n                        disabled={viewMode === ViewMode.Frozen}/>\n                ))\n            }</ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => run(PostGrowthOp.NoOp)} color={opColor(PostGrowthOp.NoOp)}>0</Button>\n                <Button onClick={() => run(PostGrowthOp.Faces)} color={opColor(PostGrowthOp.Faces)}>&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Snelson)} color={opColor(PostGrowthOp.Snelson)}>S&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Bowtie)} color={opColor(PostGrowthOp.Bowtie)}>&#8904;</Button>\n                <Button onClick={() => run(PostGrowthOp.BowtieFaces)} color={opColor(PostGrowthOp.BowtieFaces)}>&#8904; <strong>&#9653;</strong></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <ButtonDropdown\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle><FaHiking/></DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => {\n                            setBootstrapIndex(index)\n                            runTenscript(bootstrapProgram, () => console.error(\"impossible\"))\n                        }}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n                <Button\n                    color={showScriptPanel ? \"warning\" : \"secondary\"}\n                    onClick={() => setShowScriptPanel(!showScriptPanel)}>\n                    <FaEye/>\n                </Button>\n            </ButtonGroup>\n            {!showScriptPanel ? undefined : <ScriptPanel runTenscript={runTenscript}/>}\n        </>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport { stageName } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport function TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaCircle, FaMinusSquare, FaPlusSquare } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport {\n    ADJUSTABLE_INTERVAL_ROLES,\n    floatString,\n    IntervalRole,\n    intervalRoleName,\n    roleDefaultLength,\n} from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\nimport { ViewMode, viewModeAtom, visibleRolesAtom } from \"../storage/recoil\"\n\nimport { roleColorString } from \"./materials\"\n\nexport function TopRight({\n                             tensegrity,\n                             selected,\n                         }: { tensegrity: Tensegrity, selected: IInterval | undefined }): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [visibleRoles, updateVisibleRoles] = useRecoilState(visibleRolesAtom)\n    const [currentRole, updateCurrentRole] = useState(IntervalRole.PullA)\n\n    const adjustSelection = (up: boolean) => () => {\n        const factor = 1.03\n        if (selected) {\n            tensegrity.changeIntervalScale(selected, up ? factor : (1 / factor))\n        }\n    }\n\n    switch (viewMode) {\n        case ViewMode.Lines:\n            return (\n                <>\n                    <ButtonGroup>{\n                        ADJUSTABLE_INTERVAL_ROLES\n                            .map((intervalRole, index) => (\n                                <Button key={`IntervalRole[${index}]`}\n                                        onClick={() => updateCurrentRole(intervalRole)}\n                                        color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                                >\n                                    {intervalRoleName(intervalRole)}\n                                </Button>\n                            ))\n                    }</ButtonGroup>\n                    <RoleLengthAdjuster tensegrity={tensegrity} intervalRole={currentRole}/>\n                </>\n            )\n        case ViewMode.Selecting:\n            return (\n                <ButtonGroup>\n                    <Button onClick={adjustSelection(true)}>\n                        <FaPlusSquare/>\n                    </Button>\n                    <Button onClick={adjustSelection(false)}>\n                        <FaMinusSquare/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case ViewMode.Frozen:\n            return (\n                <ButtonGroup>\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button key={`viz${intervalRole}`} onClick={() => {\n                            if (visibleRoles.indexOf(intervalRole) < 0) {\n                                updateVisibleRoles([...visibleRoles, intervalRole])\n                            } else {\n                                const nextRoles = visibleRoles.filter(role => role !== intervalRole)\n                                updateVisibleRoles(nextRoles.length > 0 ? nextRoles : ADJUSTABLE_INTERVAL_ROLES)\n                            }\n                        }}\n                                color={visibleRoles.some(role => role === intervalRole) ? \"success\" : \"secondary\"}\n                        >\n                            {intervalRoleName(intervalRole)}\n                            <FaCircle style={{color: roleColorString(intervalRole)}}/>\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            )\n        default:\n            return <span>?</span>\n    }\n}\n\nfunction RoleLengthAdjuster({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    const adjustValue = (up: boolean, fine: boolean) => () => {\n        function adjustment(): number {\n            const factor = fine ? 1.01 : 1.05\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup className=\"my-1\">\n                <Button disabled={disabled} onClick={adjustValue(true, false)}><FaPlusSquare/><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(true, true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false, true)}><FaMinusSquare/></Button>\n                <Button disabled={disabled}\n                        onClick={adjustValue(false, false)}><FaMinusSquare/><FaMinusSquare/></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <Button>{intervalRoleName(intervalRole)} = [{floatString(defaultLength())}]</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { GlobalMode, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { isAdjacent } from \"../fabric/tensegrity-logic\"\nimport { IInterval, IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    globalModeAtom,\n    postGrowthAtom,\n    STORAGE_KEY,\n    tenscriptAtom,\n    ViewMode,\n    viewModeAtom,\n} from \"../storage/recoil\"\n\nimport { BottomLeft } from \"./bottom-left\"\nimport { BottomMiddle } from \"./bottom-middle\"\nimport { BottomRight } from \"./bottom-right\"\nimport { FabricView } from \"./fabric-view\"\nimport { featureMapping } from \"./feature-mapping\"\nimport { TopLeft } from \"./top-left\"\nimport { TopMiddle } from \"./top-middle\"\nimport { TopRight } from \"./top-right\"\n\nexport function DesignView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance({}), [])\n    const worldFeatures = FEATURE_VALUES.map(({percentAtom}) => useRecoilState(percentAtom))\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [bootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [globalMode] = useRecoilState(globalModeAtom)\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selected, setSelected] = useState<IInterval | undefined>()\n    const [details, setDetails] = useState<IIntervalDetails[]>([])\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(tensegrity.intervals.filter(isAdjacent(selected))\n                    .map(interval => tensegrity.getIntervalDetails(interval)))\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    const runTenscript: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Lines)\n            setSelected(undefined)\n            const featureValues = ts.featureValues\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTenscript(ts)\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    worldFeatures[feature][1](percent)\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            setPostGrowth(ts.postGrowthOp)\n            setTensegrity(new Tensegrity(new Vector3(), mainInstance, countdown, ts, tree))\n        } catch (e) {\n            console.log(\"Problem running\", e)\n            return runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n        return true\n    }\n\n    useEffect(() => {\n        Object.keys(localStorage).filter(k => k !== STORAGE_KEY).forEach(k => localStorage.removeItem(k))\n        if (tenscript) {\n            runTenscript(tenscript, emergency)\n        } else {\n            runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n    }, [])\n    const setDetailsForSelected = (s: IInterval, t: Tensegrity) =>\n        setDetails(t.intervals.filter(isAdjacent(s))\n            .map(interval => t.getIntervalDetails(interval)))\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div>\n            <div style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <h1><FaPlay/></h1>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <Canvas\n                            style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: viewMode !== ViewMode.Lines ? \"#f0ad4e\" : \"black\",\n                                cursor: viewMode === ViewMode.Selecting ? \"pointer\" : \"default\",\n                                borderWidth: \"2px\",\n                            }}\n                        >\n                            <RecoilBridge>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    runTenscript={runTenscript}\n                                    selected={selected}\n                                    setSelected={setSelected}\n                                    details={details}\n                                    selectDetails={({interval}) => {\n                                        if (details.length === 1 && selected && tensegrity) {\n                                            setDetailsForSelected(selected, tensegrity)\n                                        } else {\n                                            setDetails(details.filter(d => d.interval.index === interval.index))\n                                        }\n                                        setDetails(details.filter(existing => interval.index === existing.interval.index))\n                                    }}\n                                />\n                            </RecoilBridge>\n                        </Canvas>\n                        {globalMode === GlobalMode.Demo ? undefined : (\n                            <>\n                                <div id=\"top-left\">\n                                    <TopLeft tensegrity={tensegrity} runTenscript={runTenscript}/>\n                                </div>\n                                <div id=\"top-right\">\n                                    <TopRight tensegrity={tensegrity} selected={selected}/>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <BottomLeft/>\n                                </div>\n                                <div id=\"bottom-middle\" style={{width: \"60%\"}}>\n                                    <BottomMiddle tensegrity={tensegrity}/>\n                                </div>\n                            </>\n                        )}\n                        <div id=\"top-middle\">\n                            <TopMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"bottom-right\">\n                            <BottomRight tensegrity={tensegrity}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { ConstructionView } from \"../construction/construction-view\"\nimport { EvoView } from \"../evo/evo-view\"\nimport { GlobalMode, globalModeFromUrl, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { SPHERE_RADIUS, SphereView } from \"../sphere/sphere-view\"\nimport { TensegritySphere } from \"../sphere/tensegrity-sphere\"\nimport { globalModeAtom } from \"../storage/recoil\"\n\nimport { DesignView } from \"./design-view\"\n\nexport function MainView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const [globalMode] = useRecoilState(globalModeAtom)\n    useEffect(() => {\n        const urlMode = globalModeFromUrl()\n        if (urlMode !== globalMode) {\n            reloadGlobalMode(urlMode)\n        }\n    }, [])\n\n    switch (globalMode) {\n        case GlobalMode.Halo:\n        case GlobalMode.Convergence:\n        case GlobalMode.HeadlessHug:\n        case GlobalMode.Triped:\n            return (\n                <ConstructionView globalMode={globalMode} createInstance={createInstance}/>\n            )\n        case GlobalMode.Evolution:\n            return (\n                <EvoView createBodyInstance={createInstance}/>\n            )\n        case GlobalMode.Sphere:\n            return (\n                <SphereView createSphere={(frequency: number, useGravity: boolean) => {\n                    const sphereInstance = createInstance({\n                        [WorldFeature.IterationsPerFrame]: 200,\n                        [WorldFeature.Gravity]: 1000,\n                        [WorldFeature.VisualStrain]: 0,\n                        [WorldFeature.StiffnessFactor]: 800,\n                    })\n                    return new TensegritySphere(\n                        new Vector3(0, 3, 0),\n                        SPHERE_RADIUS, frequency, 0.3333, useGravity, sphereInstance,\n                    )\n                }}/>\n            )\n        default:\n            return (\n                <DesignView createInstance={createInstance}/>\n            )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { RecoilRoot } from \"recoil\"\n\nimport { FabricInstance } from \"./fabric/fabric-instance\"\nimport registerServiceWorker from \"./service-worker\"\nimport { MainView } from \"./view/main-view\"\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    world: typeof import(\"eig\").World,\n): Promise<void> {\n    render(\n        <RecoilRoot>\n            <MainView createInstance={(\n                featureValues: Record<WorldFeature, number>,\n                fabric?: object,\n            ) => new FabricInstance(\n                eig,\n                2000, // TODO\n                world,\n                fabric,\n            )}/>\n        </RecoilRoot>,\n    )\n    registerServiceWorker()\n}\n"],"sourceRoot":""}