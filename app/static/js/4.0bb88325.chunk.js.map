{"version":3,"sources":["view/feature-mapping.ts","fabric/eig-util.ts","fabric/fabric-instance.ts","service-worker.ts","fabric/tensegrity-types.ts","fabric/tenscript-node.ts","fabric/tensegrity-logic.ts","fabric/twist-logic.ts","fabric/tensegrity.ts","fabric/tenscript.ts","storage/recoil.ts","view/bottom-left.tsx","storage/download.ts","view/bottom-right.tsx","view/materials.ts","view/live-view.tsx","view/look-view.tsx","view/interval-details.tsx","view/select-view.tsx","view/surface-component.tsx","construction/object-view.tsx","construction/construction-view.tsx","evo/island-geometry.ts","evo/genome.ts","evo/island.ts","evo/patch.ts","evo/evo-state.ts","evo/runner-logic.ts","evo/population.ts","evo/runner-view.tsx","evo/population-view.tsx","evo/island-view.tsx","evo/twitcher.ts","evo/runner.ts","evo/stats-view.tsx","evo/evo-view.tsx","fabric/bootstrap.ts","mobius/mobius-builder.ts","mobius/mobius-view.tsx","sphere/sphere-scaffold.ts","sphere/sphere-builder.ts","sphere/sphere-view.tsx","view/feature-slider.tsx","view/bottom-middle.tsx","view/fabric-view.tsx","view/script-panel.tsx","view/stage-button.tsx","view/top-left.tsx","view/top-middle.tsx","view/design-view.tsx","view/main-view.tsx","start.tsx"],"names":["FeatureStage","linearMapping","feature","name","featureStage","low","high","nuanceToPercent","nuance","percentToNuance","percent","percentToValue","default_world_feature","valueToPercent","value","featureMapping","WorldFeature","Gravity","Postslack","Antigravity","All","ShapingDrag","Preslack","ShapingStiffnessFactor","Drag","ShapingPretenstFactor","PretenstFactor","StiffnessFactor","IterationsPerFrame","IntervalCountdown","PretensingCountdown","VisualStrain","PushOverPull","Error","FORWARD","Vector3","UP","DOWN","ROOT3","WORLD_FEATURES","Object","keys","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","GlobalMode","GLOBAL_MODES","map","k","nameToUrl","replace","globalModeFromUrl","split","location","hash","substring","mode","find","m","param","length","reloadGlobalMode","Choice","reload","sub","a","b","subVectors","normalize","midpoint","points","mid","forEach","point","add","multiplyScalar","pointsToNormal","radials","copy","norm","index","current","next","crossVectors","vectorFromArray","array","vector","offset","set","FabricInstance","constructor","eig","featureValues","jointCount","worldObject","fabricObject","fabric","world","view","floatView","empty","Float32Array","intervalCount","faceCount","lineGeometry","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strains","strainLimits","strainNuances","stiffnesses","linearDensities","createEmptyFloatView","adoptFabric","valuesToApply","fabricBackup","this","key","entries","parseInt","set_float_value","free","View","on_fabric","Fabric","new","iterate","busy","refreshFloatView","shift","get_stage","requested","request_stage","console","error","showFrozen","satisfied","updateFloatView","clone","snapshot","log","fabricClone","restoreSnapshot","backup","render","midpoint_x","midpoint_y","midpoint_z","clear","applyFeature","push","jointLocation","joint","averageJointLocation","joints","reduce","accum","jointDistance","distanceTo","intervalLocation","alpha","omega","twistLocation","pushes","sum","intervalLength","faceLocation","face","ends","end","averageFaceLocation","faces","apply","matrix","apply_matrix4","toArray","unitVector","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","position","linePosition","needsUpdate","lineColor","color","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","isLocalhost","Boolean","window","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","Spin","Left","Right","LeftRight","RightLeft","spinChange","spin","opposite","toOmni","FaceName","FACE_NAMES","B","C","D","c","d","A","isFaceNameChar","char","faceNameFromChar","expectPush","jointPulls","pulls","twoJointKey","pairKey","intervalRotation","unit","dot","Quaternion","setFromUnitVectors","areAdjacent","intervalJoins","acrossPush","otherJoint","interval","percentOrHundred","_","factorFromPercent","percentFromFactor","factor","TenscriptNode","forward","scale","subtrees","markNumbers","root","undefined","subtreeCode","markCode","action","afterNode","subtree","faceName","faceMarks","deleteMark","omniFaceNames","filter","some","hasScale","parts","join","v","code","marks","mark","flat","PULL_AA","tag","stiffness","PULL_BB","PULL_CONFLICT","filterRole","targetRole","role","bowtiePairs","tensegrity","pullARole","pullBRole","pairs","onlyA","onlyB","common","aj","bj","intersection","pullA","instance","withPulls","pairMap","addPair","pair","addPairFor","near","pullB","far","otherFar","otherNear","commonNear","commonFar","acrossFar","acrossNear","nextPair","intervals","joint3APush","found","faceJoint","a3A","outwards","fjA","sort","f1","f2","namedJob","age","job","todo","zeroFaces","n","upwards","b1","up","b2","x","y","z","xy","yz","zx","basisFromVector","Matrix4","makeBasis","setPosition","invert","set_altitude","conflicts","betweenDot","toAlpha","toOmega","jointA","pushA","jointB","pushB","otherA","otherB","findConflicts","createInterval","t","faceFromTwist","twist","adjacentPullsFromTwist","detailsSoFar","addFace","f0","removed","removeFace","pull","removeInterval","removeJoint","createSingle","base","leftSpin","pointPairs","createJoint","alphaJoint","omegaJoint","PUSH_A","makeFace","midJoint","j","PULL_A","reverse","PULL_B","createDouble","botPairs","topPairs","bot","top","PUSH_B","faceJoints","midJoints","midVector","fromMid","between","idx1","idx2","avg","addVectors","addScaledVector","createBase","pushesPerTwist","angle","Math","PI","cos","sin","FaceAction","PostGrowthOp","PairSelection","PULL_CONNECTOR","AGE_POST_GROWTH","PULL_PRETENST_DISTANCER","PULL_SHAPING_DISTANCER","PULL_RADIAL","Tensegrity","countdown","builder","stage$","loops","twists","connectors","distancers","pretenstAge","jobs","BehaviorSubject","operateOn","newJoint","create_joint","remove_joint","createRadialPull","pullScale","axis","creatAxis","alphaRestLength","omegaRestLength","alphaRays","createRay","omegaRays","radialPull","patience","targetLength","currentLength","patienceFactor","abs","attack","create_interval","changeIntervalScale","multiply_rest_length","existing","remove_interval","faceToTriangle","endA","endB","triangleFaces","work","addPull","intervalKey","intervalToPair","createPulls","pairSelection","Bowtie","Snelson","snelsonPair","acrossA","acrossB","snelsonPairs","selectPairs","removeSlackPulls","pullC","createTwist","baseKnown","createTwistOn","baseFace","createLoop","findTwist","f","concat","getValue","ray","jobsBefore","ageNow","finished","checkConnectors","Pretenst","strainToStiffness","averagePullStrain","strainFactor","copy_stiffnesses","createRadialPulls","actionScale","locationFromFace","centerBrickFaceIntervals","omniTwist","averageScaleFactor","opposing","closestFace","ShapingDistance","PretenstDistance","faceA","indexA","faceB","indexB","Join","connectFaces","alphaEnds","omegaEnds","ringLengths","rotation","ringLength","walk","rotatedWalk","bestRotation","minLength","rotateForBestRing","i","getIntervalDetails","strain","height","reverseA","forwardB","loop","a0","a1","idealLength","restLength","CONNECTOR_LENGTH","PHI","compileTenscript","tenscript","codeToNode","e","message","TenscriptBuilder","tree","markDefStrings","buds","set_surface_character","surfaceCharacter","toDo","postGrowthOp","Faces","BowtieFaces","postGrowthJob","createBud","before","activeBuds","bud","markActions","reorient","decremented","omni","needsOmniTwist","grow","middle","faceBasis","twirl","makeRotationZ","rotate","makeRotationY","multiply","reorientMatrix","treeMarks","twistMark","Subtree","markTree","execute","markStrings","markDefStringsToActions","collated","possibleMark","None","FaceStrategy","faceStrategies","strategy","markAction","startsWith","codeFragment","codeString","argument","content","skip","codeTree","addMark","markNumber","charAt","direction","isDigit","forwardArg","forwardCount","toNumber","repeat","scaleArg","faceNameChar","nonEmpty","afterTree","scaleChange","getSpin","newTwist","twistToMark","treeWithMarks","thisFace","digits","maybeBracketed","stripBrackets","commaPos","commaPresent","finalBracket","s","depth","matchBracket","contentOption","persistAtom","recoilPersist","storage","localStorage","effects_UNSTABLE","postGrowthAtom","atom","default","NoOp","bootstrapIndexAtom","tenscriptAtom","currentFeature","rotatingAtom","globalModeAtom","ViewMode","viewModeAtom","Time","FEATURE_VALUES","SurfaceCharacter","Frozen","mapping","percentAtom","selectedTwistAtom","visibleDetailsAtom","BottomLeft","viewMode","setViewMode","useRecoilState","ViewModeButton","item","children","Button","disabled","onClick","ButtonGroup","Select","Look","csvNumber","toFixed","dateString","Date","toISOString","getFabricOutput","pushRadius","pullRadius","jointRadius","radius","anchor","isPush","alphaIndex","omegaIndex","type","linearDensity","saveCSVZip","output","zip","JSZip","file","csvJoints","extractJointFile","csvIntervals","extractIntervalFile","csvSubmerged","extractSubmergedFile","generateAsync","mimeType","blob","FileSaver","BottomRight","updateStage","useState","useEffect","subscribe","unsubscribe","rotating","setRotating","className","JSON","stringify","saveJSONZip","centralize","RAINBOW_COLORS","Color","setHex","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","MeshLambertMaterial","roleMaterial","ghost","roleColorString","roleColor","opacity","transparent","cylinderRadius","CYLINDER_GEOMETRY","CylinderGeometry","LiveView","geometry","material","LookView","intervalScale","Euler","setFromQuaternion","matrixWorldNeedsUpdate","IntervalDetails","details","singleDetails","Html","onMouseDown","Table","colSpan","SelectView","clickDetails","selected","setSelected","onDoubleClick","event","stopPropagation","again","MATERIAL","MeshPhongMaterial","specular","side","FrontSide","HEXAGON_POINTS","SURFACE_SCALE","KINDA","TRIANGLE_POSITION","SurfaceComponent","useMemo","positionF32","normalF32","faceOffset","BufferAttribute","patchesGeometry","ObjectView","aim","setAim","useFrame","toMidpoint","lengthSq","camera","distanceChange","towardsDistance","Rendering","OrbitControls","autoRotate","target","zoomSpeed","maxDistance","Stars","intensity","ConstructionView","createInstance","mainInstance","setTensegrity","setDetails","setPostGrowth","useSetRecoilState","emergency","ts","localValue","createTensegrity","Title","RecoilBridge","useRecoilBridgeAcrossReactRoots_UNSTABLE","style","left","right","backgroundColor","borderStyle","borderColor","cursor","borderWidth","id","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","Genome","roll","genes","createReader","GeneReader","getGene","withMutations","directionGeneNames","mutateTwitchConfig","genesCopy","gene","geneName","tosses","dice","slice","directionName","mutateGene","twitchConfig","GeneName","TwitchConfig","geneString","die","symbol","serializeGene","chooseFrom","total","floor","diceToNuance","nextDie","readMuscleTwitch","config","attackPeriod","decayPeriod","twitchNuance","muscle","when","diceToInteger","diceToFloat","decay","readFeatureValue","DICE","numeral","DICE_MAP","max","woops","random","currentRoll","rollTheDice","pow","PatchCharacter","emptyGenome","fromGeneData","geneData","search","fresh","Patch","island","coords","patchCharacter","runner","flora","center","adjacent","getItem","parse","setItem","SIX","RUNNER_CODE","Bouncy","islandAtom","seed","patches","_seed","patch","findPatch","p","equals","createSurroundedPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","homePatchSelector","selector","destinationAtom","showDetailsAtom","Direction","DIRECTIONS","directionGene","ToA","ToB","ToC","calculateDirections","toA","toB","toC","locations","fromTo","fromJoint","toJoint","from","to","EVO_PARAMETERS","EvolutionPhase","Population","ancestor","useTwitches","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","SurvivorsAdvance","cyclePatternIndex","currentCycle","currentMaxCycles","embryo","storedGenes","createAutoRunner","letter","proximityHistory","persisted","pop","winnerMinCycles","winnerMoved","cycleCount","getCycleCount","rankEvolvers","reachedTarget","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","genome","challenger","autopilot","ChallengersOvertake","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","SurvivorsStored","losers","splitEvolvers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","distanceFromTarget","proximityForCycle","proximity","String","fromCharCode","RunnerView","topFaceLocation","showDirection","onUpdate","self","computeBoundingSphere","attach","attachObject","count","itemSize","quaternion","directionQuaternion","PopulationView","population","IslandView","happening","evolutionPhase","countdownToEvo","stopEvo","destination","setDestination","happeningChanged","updateHappeningChanged","now","updateNow","updateTarget","adjustTarget","clock","elapsedTime","approachDistance","distance","positionToTarget","deltaDistance","Happening","Developing","Resting","Running","Evolving","withReducedCyclePattern","wasSeconds","time","isSeconds","minDistance","enablePan","autoRotateSpeed","enableDamping","minPolarAngle","maxPolarAngle","positionArray","normalArray","removeRandomInterval","Rest","clickPatch","DoubleSide","Sky","rayleigh","inclination","mieCoefficient","mieDirectionalG","turbidity","Twitcher","twitchCount","twitchCycles","reader","musclePeriod","readTwitchConfig","totalTwitches","TwitchCycle","loopMuscles","cycles","tick","twitch","timeSlice","twitchCycle","activate","slices","chosen","splice","addTwitch","twitches","twitchArray","Runner","shapingTime","twitcher","topFace","currentTwitchAge","twitchAge","directionHistory","twitchesPerCycle","auto","geneNames","dir","newTwitchAge","twitchInterval","twitch_interval","alphaInterval","omegaInterval","checkDirection","sortedFaces","aa","bb","locA","locB","findTopFace","alphaPulls","omegaPulls","onlyMuscles","extractLoopMuscles","targetPatch","quaternionForDirection","directionToTarget","towards","toTarget","matchA","matchB","matchC","StatsView","setShowStats","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","EvoView","createBodyInstance","homePatch","useRecoilValue","showStats","setRunner","newRunner","setHappening","setSnapshots","evolutionCountdown","setEvolutionCountdown","setPopulation","setPhase","storedGenome","Sticky","err","newStage","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","evoCountdown","toRunning","toEvolving","toRebirth","toRest","EvolutionStatsView","vertical","createContent","BOOTSTRAP","1","2","3","4","5","6","0","CONSTRUCTIONS","PUSH","PULL_WIDTH","PULL_LENGTH","MobiusBuilder","segments","bottom","major","minor","jointIndex","create_face","meshLambertMaterial","MobiusView","createMobius","mobius","muscles","unordered","even","odd","MobiusScene","setTarget","muscleIndex","setMuscleIndex","twitchTime","setTwitchTime","r","h","idx","matrixAutoUpdate","SphereScaffold","frequency","vertices","VERTEX","vertexAt","EDGE","edge","midVertices","v0","v1","midEdge","vertexBetween","FACE_EDGES","faceEdge","side0","side1","side2","buildFaces","buildEdgeVertices","sortVertex","edgeVertices","edgeVertexIndex","verticesOfEdge","vertex","previousVertex","loc0","loc1","spot","lerpVectors","faceVertexArrays","FACE_VERTICES","faceVertexIndex","faceIndex","faceVertex","which","walkA","vectorA","walkB","v2","vectorB","row","rowMember","vert","sideVertices","antiWalk","walkSide","faceEdges","vsVertex","PENTAGON_VERTICES","vertexArray","edgeVertexA","front","edgeVertexB","lerp","ONE","outward","first","sorted","vectorTo","neigbor","toAdjacent","toTop","adj","PULL","SphereBuilder","useCurves","scaffold","hubs","spokes","allSpokes","createCurve","createPush","spoke","segmentLength","averageIntervalLength","allPulls","hub","pullsForSpoke","setFromAxisAngle","alphaLocation","applyQuaternion","omegaLocation","alphaVertex","omegaVertex","midAlphaJoint","midOmegaJoint","pushScale","createPull","pullName","nextSpoke","nearOppositeNext","spokeLength","colorString","PUSH_MATERIAL","PULL_MATERIAL","FREQUENCY_CHOICES","showPushAtom","showPullAtom","frozenAtom","gravityAtom","useCurvesAtom","SphereView","frequencyParam","createSphere","frequencyChoice","setFrozen","showPush","setShowPush","showPull","setShowPull","gravity","setGravity","sphere","setSphere","freq","Sphere","SphereScene","SPHERE_RADIUS","PolygonView","CYLINDER","domain","FeatureSlider","sliderValue","setPercent","values","setValues","round","percentString","numeric","expo","toExponential","zero","floatString","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","handles","getHandleProps","handle","Handle","tracks","getTrackProps","source","Track","min","aria-valuemin","aria-valuemax","aria-valuenow","width","BottomMiddle","open","setOpen","worldFeature","setWorldFeature","featureValue","setFeatureValue","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","AMBIENT_COLOR","FabricView","updateAim","ScriptPanel","runTenscript","setTenscript","postGrowth","json","setJson","setError","toJson","flexDirection","Input","changeEvent","newTenscript","StageTransition","STAGE_TRANSITIONS","isNaN","StageButton","stageTransition","allDisabledExcept","stageAccepted","doNow","CaptureLengthsToSlack","Symbol","SlackToPretensing","CapturePretenstToSlack","CaptureStrainForStiffness","TopLeft","setBootstrapIndex","showScriptPanel","setShowScriptPanel","bootstrapOpen","setBootstrapOpen","run","pgo","opChanged","opColor","bootstrapProgram","TopMiddle","DesignView","worldFeatures","bootstrapIndex","removeItem","MainView","globalMode","visit","url","Design","Construction","Evolution","g","Mobius","size","async","startReact","element","document","getElementById","ReactDOM","registerServiceWorker"],"mappings":"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","file":"static/js/4.0bb88325.chunk.js","sourcesContent":["/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { default_world_feature, WorldFeature } from \"eig\"\n\nexport enum FeatureStage {\n    Preslack,\n    Postslack,\n    All,\n}\n\nexport interface IFeatureMapping {\n    feature: WorldFeature\n    name: string\n    featureStage: FeatureStage\n    nuanceToPercent: (nuance: number) => number\n    percentToNuance: (percent: number) => number\n    percentToValue: (percent: number) => number\n    valueToPercent: (value: number) => number\n}\n\nfunction linearMapping(feature: WorldFeature, name: string, featureStage: FeatureStage, low: number, high: number): IFeatureMapping {\n    const nuanceToPercent = (nuance: number) => (low * (1 - nuance) + high * nuance)\n    const percentToNuance = (percent: number) => (percent - low) / (high - low)\n    const percentToValue = (percent: number) => default_world_feature(feature) * percent / 100\n    const valueToPercent = (value: number) => value / default_world_feature(feature) * 100\n    return {feature, name, featureStage, nuanceToPercent, percentToNuance, percentToValue, valueToPercent}\n}\n\nexport function featureMapping(feature: WorldFeature): IFeatureMapping {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            // percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Gravity\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.Antigravity:\n            // percents: [5, 25, 50, 100, 150, 200, 500],\n            return linearMapping(feature, \"-Antigravity\", FeatureStage.All, 5, 500)\n        case WorldFeature.ShapingDrag:\n            // percents: [0, 10, 50, 100, 200, 500],\n            return linearMapping(feature, \"Shaping Drag\", FeatureStage.Preslack, 0, 500)\n        case WorldFeature.ShapingStiffnessFactor:\n            // percents: [10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Shaping Stiffness\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.Drag:\n            // percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            return linearMapping(feature, \"Drag\", FeatureStage.Postslack, 0, 1000)\n        case WorldFeature.ShapingPretenstFactor:\n            // percents: [0, 5,  25, 50, 100, 200, 500, 1000],\n            return linearMapping(feature, \"Shaping Pretenst\", FeatureStage.Preslack, 0, 1000)\n        case WorldFeature.PretenstFactor:\n            // percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            return linearMapping(feature, \"Pretenst Factor\", FeatureStage.Postslack, 0, 500)\n        case WorldFeature.StiffnessFactor:\n            // percents: [1, 10, 50, 100, 150, 200, 300],\n            return linearMapping(feature, \"Stiffness\", FeatureStage.Postslack, 1, 300)\n        case WorldFeature.IterationsPerFrame:\n            // percents: [2, 10, 25, 50, 100, 200, 300, 500],\n            return linearMapping(feature, \"Iterations/frame\", FeatureStage.All, 2, 500)\n        case WorldFeature.IntervalCountdown:\n            // percents: [10, 20, 30, 100, 150, 400, 1000],\n            return linearMapping(feature, \"-Interval Countdown\", FeatureStage.Preslack, 10, 1000)\n        case WorldFeature.PretensingCountdown:\n            // percents: [50, 75, 90, 100, 125, 150, 200],\n            return linearMapping(feature, \"-Pretenst countdown\", FeatureStage.All, 50, 200)\n        case WorldFeature.VisualStrain:\n            // percents: [0, 10, 50, 100, 200, 300, 500, 1000],\n            return linearMapping(feature, \"Visual strain\", FeatureStage.All, 0, 300)\n        case WorldFeature.PushOverPull:\n            // percents: [10, 25, 50, 100, 200, 300, 400, 500, 600, 700],\n            return linearMapping(feature, \"Push/Pull\", FeatureStage.All, 10, 700)\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\nexport const DOWN = new Vector3(0, -1, 0)\n\nexport const CONNECTOR_LENGTH = 0.05\n\nexport const ROOT3 = 1.732050807568877\nexport const ROOT5 = 2.23606797749979\nexport const PHI = (1 + ROOT5) / 2\nexport const ROOT6 = 2.44948974278\nexport const SHORTENING = 0.5\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const WORLD_FEATURES: string[] = Object.keys(WorldFeature)\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum GlobalMode {\n    Choice = \"choice\",\n    Design = \"design\",\n    Sphere = \"sphere\",\n    Mobius = \"mobius\",\n    Construction = \"construction\",\n    Evolution = \"evolution\",\n}\n\nexport const GLOBAL_MODES: GlobalMode[] = Object.keys(GlobalMode).map(k => GlobalMode[k])\n\nexport interface IGlobalMode {\n    mode: GlobalMode,\n    param?: string\n}\n\nexport function nameToUrl(name: string): string {\n    return name.replace(/ /g, \"-\")\n}\n\nexport function globalModeFromUrl(): IGlobalMode {\n    const hash = location.hash.substring(1)\n    const split = hash.split(\";\")\n    const mode = GLOBAL_MODES.find(m => m === split[0])\n    if (mode) {\n        const param = split.length > 1 ? split[1] : \"\"\n        return {mode, param}\n    }\n    return reloadGlobalMode(GlobalMode.Choice)\n}\n\nexport function reloadGlobalMode(mode: GlobalMode, param?: string): IGlobalMode {\n    location.hash = param && param.length > 0 ? `${mode};${param}` : mode\n    location.reload()\n    return {mode, param}\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(3)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(3)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"), expo.indexOf(\"e+3\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function percentString(percent: number): string {\n    if (percent <= 100) {\n        return `${percent.toFixed(0)}%`\n    } else {\n        return `${(percent / 100).toFixed(1)}x`\n    }\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function pointsToNormal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(current, next).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\nexport function basisFromVector(up: Vector3): { b1: Vector3, up: Vector3, b2: Vector3 } {\n    const {x, y, z} = up\n    const xy = x * x + y * y\n    const yz = y * y + z * z\n    const zx = z * z + x * x\n    const b1 = new Vector3()\n    if (xy > yz && xy > zx) {\n        b1.set(-y, x, 0).normalize()\n    } else if (yz > xy && yz > zx) {\n        b1.set(0, -z, y).normalize()\n    } else {\n        b1.set(-z, 0, x).normalize()\n    }\n    const b2 = new Vector3().crossVectors(up, b1).normalize()\n    return {b1, up, b2}\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World, WorldFeature } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { featureMapping } from \"../view/feature-mapping\"\n\nimport { midpoint, vectorFromArray } from \"./eig-util\"\nimport { IInterval, IJoint, ITwist, ITwistFace } from \"./tensegrity-types\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (featureValues?: Record<WorldFeature, number>, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n\n    private valuesToApply: ICurrentValue[] = []\n    private fabricBackup?: Fabric\n\n    constructor(\n        eig: typeof import(\"eig\"),\n        featureValues: Record<WorldFeature, number>,\n        jointCount: number,\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        worldObject: object,\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        fabricObject?: object,\n    ) {\n        this.world = worldObject as World\n        for (const [key, percent] of Object.entries(featureValues)) {\n            const feature = parseInt(key, 10)\n            const {percentToValue} = featureMapping(feature)\n            const value = percentToValue(percent)\n            this.world.set_float_value(feature, value)\n        }\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(): boolean {\n        const busy = this.fabric.iterate(this.world)\n        this.refreshFloatView()\n        const current = this.valuesToApply.shift()\n        if (current) {\n            this.world.set_float_value(current.feature, current.value)\n        }\n        return busy\n    }\n\n    public get stage(): Stage {\n        return this.fabric.get_stage()\n    }\n\n    public set stage(requested: Stage) {\n        const stage = this.fabric.request_stage(requested, this.world)\n        if (!stage) {\n            console.error(`Could not move to stage ${requested}!`)\n        }\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: WorldFeature, percent: number, value: number): void {\n        this.valuesToApply.push({feature, percent, value})\n    }\n\n    public jointLocation(joint: IJoint): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, joint.index)\n    }\n\n    public averageJointLocation(joints: IJoint[]): Vector3 {\n        return joints\n            .reduce((accum, joint) => accum.add(this.jointLocation(joint)), new Vector3())\n            .multiplyScalar(1 / joints.length)\n    }\n\n    public jointDistance(a: IJoint, b: IJoint): number {\n        return this.jointLocation(a).distanceTo(this.jointLocation(b))\n    }\n\n    public intervalLocation({alpha, omega}: IInterval): Vector3 {\n        return this.jointLocation(alpha).add(this.jointLocation(omega)).multiplyScalar(0.5)\n    }\n\n    public twistLocation({pushes}: ITwist): Vector3 {\n        return pushes\n            .reduce((sum, push) => sum.add(this.intervalLocation(push)), new Vector3())\n            .multiplyScalar(1 / pushes.length)\n    }\n\n    public intervalLength({alpha, omega}: IInterval): number {\n        return this.jointDistance(alpha, omega)\n    }\n\n    public faceLocation(face: ITwistFace): Vector3 {\n        return midpoint(face.ends.map(end => this.jointLocation(end)))\n    }\n\n    public averageFaceLocation(faces: ITwistFace[]): Vector3 {\n        return faces\n            .reduce((accum, face) => accum.add(this.faceLocation(face)), new Vector3())\n            .multiplyScalar(1 / faces.length)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n\ninterface ICurrentValue {\n    feature: WorldFeature\n    percent: number\n    value: number\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Matrix4, Quaternion, Vector3 } from \"three\"\n\nimport { DOWN, sub, UP } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {\n    Left = \"Left\",\n    Right = \"Right\",\n    LeftRight = \"Left-Right\",\n    RightLeft = \"Right-Left\",\n}\n\nexport const SPINS = [Spin.Left, Spin.Right, Spin.LeftRight, Spin.RightLeft]\n\nexport function spinChange(spin: Spin, opposite: boolean, toOmni: boolean): Spin {\n    if (opposite) {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.RightLeft : Spin.Right\n            case Spin.Right:\n                return toOmni ? Spin.LeftRight : Spin.Left\n            case Spin.LeftRight:\n                return Spin.RightLeft\n            case Spin.RightLeft:\n                return Spin.LeftRight\n        }\n    } else {\n        switch (spin) {\n            case Spin.Left:\n                return toOmni ? Spin.LeftRight : spin\n            case Spin.Right:\n                return toOmni ? Spin.RightLeft : spin\n            case Spin.LeftRight:\n            case Spin.RightLeft:\n                return spin\n        }\n    }\n    throw new Error(\"Spin?\")\n}\n\nexport function isOmniSpin(spin: Spin): boolean {\n    switch (spin) {\n        case Spin.LeftRight:\n        case Spin.RightLeft:\n            return true\n    }\n    return false\n}\n\nexport enum FaceName {a = 0, B, C, D, b, c, d, A}\n\nexport const FACE_NAMES = [FaceName.a, FaceName.B, FaceName.C, FaceName.D, FaceName.b, FaceName.c, FaceName.d, FaceName.A]\n\nexport const FACE_NAME_CHARS = \"aBCDbcdA\"\n\nexport function isFaceNameChar(char: string): boolean {\n    return FACE_NAME_CHARS.indexOf(char) >= 0\n}\n\nexport function faceNameFromChar(char: string): FaceName {\n    const index = FACE_NAME_CHARS.indexOf(char)\n    if (index < 0) {\n        throw new Error(`[${char}] is not a face name`)\n    }\n    return FACE_NAMES[index]\n}\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    pulls?: IInterval[]\n}\n\nexport function expectPush({push}: IJoint): IInterval {\n    if (!push) {\n        throw new Error(\"Expected push\")\n    }\n    return push\n}\n\nexport function jointPulls({pulls}: IJoint): IInterval[] {\n    if (!pulls) {\n        throw new Error(\"no pulls\")\n    }\n    return pulls\n}\n\nexport interface IIntervalDetails {\n    interval: IInterval\n    strain: number\n    length: number\n    height: number\n}\n\nfunction indexKey(a: number, b: number): string {\n    return a < b ? `(${a},${b})` : `(${b},${a})`\n}\n\nexport function twoJointKey(alpha: IJoint, omega: IJoint): string {\n    return indexKey(alpha.index, omega.index)\n}\n\nexport interface IPair {\n    alpha: IJoint\n    omega: IJoint\n    scale: IPercent\n    role: IRole\n}\n\nexport function pairKey({alpha, omega}: IPair): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport interface IRole {\n    tag: string\n    push: boolean\n    length: number\n    stiffness: number\n}\n\nexport interface IInterval {\n    index: number\n    removed: boolean\n    role: IRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalRotation(unit: Vector3): Quaternion {\n    const dot = UP.dot(unit)\n    return new Quaternion().setFromUnitVectors(dot > 0 ? UP : DOWN, unit)\n}\n\nexport function areAdjacent(a: IInterval, b: IInterval): boolean {\n    if (a.index === b.index) {\n        return false\n    }\n    return a.alpha.index === b.alpha.index\n        || a.omega.index === b.omega.index\n        || a.alpha.index === b.omega.index\n        || a.omega.index === b.alpha.index\n}\n\nexport function intervalToPair({alpha, omega, scale, role}: IInterval): IPair {\n    return {alpha, omega, scale, role}\n}\n\nexport function intervalKey({alpha, omega}: IInterval): string {\n    return twoJointKey(alpha, omega)\n}\n\nexport function intervalJoins(a: IJoint, b: IJoint): (interval: IInterval) => boolean {\n    return ({alpha, omega}: IInterval) =>\n        alpha.index === a.index && omega.index === b.index || omega.index === a.index && alpha.index === b.index\n}\n\nexport function intervalToString({role, alpha, omega}: IInterval): string {\n    return `${role.tag}/${alpha.index}:${omega.index}`\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IMarkNumber {\n    _: number\n}\n\nexport interface IRadialPull {\n    alpha: ITwistFace\n    omega: ITwistFace\n    axis: IInterval,\n    alphaRays: IInterval[],\n    omegaRays: IInterval[],\n}\n\nexport function rotateForBestRing(instance: FabricInstance, alpha: ITwistFace, omega: ITwistFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += instance.jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += instance.jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsFromFaces(faces: ITwistFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport function averageScaleFactor(faces: ITwistFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationZ(Math.PI * -0.24)\n    const rotate = new Matrix4().makeRotationY(-Math.PI / 2 - rotation * Math.PI / 3)\n    return faceBasis.multiply(twirl).multiply(rotate).invert()\n}\n\nexport interface ITwistFace {\n    twist: ITwist,\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    pushes: IInterval[]\n    markNumbers: IMarkNumber[]\n    removed: boolean\n    joint?: IJoint\n}\n\nexport interface ITwist {\n    faces: ITwistFace[]\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { FaceName, FACE_NAMES, FACE_NAME_CHARS, IMarkNumber, IPercent } from \"./tensegrity-types\"\n\nexport class TenscriptNode {\n    public root?: boolean\n\n    constructor(\n        public readonly forward: string | undefined,\n        public readonly scale: IPercent,\n        public readonly subtrees: Record<FaceName, TenscriptNode>,\n        public readonly markNumbers: Record<FaceName, IMarkNumber[]>,\n    ) {\n    }\n\n    public get nonEmpty(): TenscriptNode | undefined {\n        const empty = this.forward === undefined && this.subtreeCode.length === 0 && this.markCode.length === 0\n        return empty ? undefined : this\n    }\n\n    public get decremented(): { afterNode: TenscriptNode, action: string } {\n        if (this.forward !== undefined && this.forward.length > 0) {\n            const action = this.forward.substring(0, 1)\n            return {\n                afterNode: new TenscriptNode(this.forward.substring(1), this.scale, this.subtrees, this.markNumbers),\n                action,\n            }\n        }\n        return {afterNode: this, action: \"\"}\n    }\n\n    public subtree(faceName: FaceName): TenscriptNode | undefined {\n        return this.subtrees[faceName]\n    }\n\n    public faceMarks(faceName: FaceName): IMarkNumber [] | undefined {\n        return this.markNumbers[faceName]\n    }\n\n    public deleteMark(faceName: FaceName): void {\n        delete this.markNumbers[faceName]\n    }\n\n    public get needsOmniTwist(): boolean {\n        const omniFaceNames = FACE_NAMES.filter(faceName => faceName !== FaceName.A && faceName !== FaceName.a)\n        return omniFaceNames.some(faceName => this.subtrees[faceName]) || omniFaceNames.some(faceName => this.markNumbers[faceName])\n    }\n\n    public get code(): string {\n        const hasScale = this.scale._ !== 100\n        const subtreeCode = this.subtreeCode\n        const markCode = this.markCode\n        if (!this.root && this.forward && this.forward.length > 0 && !hasScale && subtreeCode.length === 0 && markCode.length === 0) {\n            return this.forward.toString()\n        }\n        const parts = []\n        if (this.forward && this.forward.length > 0) {\n            parts.push(this.forward.toString())\n        }\n        if (hasScale) {\n            parts.push(`S${this.scale._}`)\n        }\n        parts.push(...subtreeCode)\n        parts.push(...markCode)\n        return `(${parts.join(\",\")})`\n    }\n\n    private get subtreeCode(): string [] {\n        return Object.entries(this.subtrees).map(([k, v]) => `${FACE_NAME_CHARS[k]}${v.code}`)\n    }\n\n    private get markCode(): string[] {\n        return Object.entries(this.markNumbers)\n            .map(([k, marks]) => marks.map(mark => `M${FACE_NAME_CHARS[k]}${mark._}`)).flat()\n    }\n}\n","import { Stage } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { basisFromVector, midpoint, pointsToNormal, ROOT3, SHORTENING } from \"./eig-util\"\nimport { AGE_POST_GROWTH, IJob, PairSelection, PostGrowthOp, Tensegrity, ToDo } from \"./tensegrity\"\nimport {\n    acrossPush,\n    areAdjacent,\n    IInterval,\n    IJoint,\n    intervalJoins,\n    IPair,\n    IRole,\n    jointPulls,\n    otherJoint,\n    pairKey,\n    percentOrHundred,\n} from \"./tensegrity-types\"\n\nexport interface IConflict {\n    jointA: IJoint\n    jointB: IJoint\n}\n\nconst PULL_AA: IRole = {\n    tag: \"(aa)\",\n    push: false,\n    length: SHORTENING,\n    stiffness: 0.4,\n}\n\nconst PULL_BB: IRole = {\n    tag: \"(bb)\",\n    push: false,\n    length: ROOT3 * SHORTENING,\n    stiffness: 0.4,\n}\n\nconst PULL_CONFLICT: IRole = {\n    tag: \"conflict\",\n    push: false,\n    length: 0.01,\n    stiffness: 1,\n}\n\nconst CONFLICT_MULTIPLE = 6\n\nfunction filterRole(targetRole: IRole): (interval: IInterval) => boolean {\n    return ({role}) => targetRole.tag === role.tag\n}\n\nexport function findConflicts(tensegrity: Tensegrity): IConflict[] {\n    const conflicts: IConflict[] = []\n    const instance = tensegrity.instance\n    const betweenDot = (joint: IJoint, interval: IInterval) => {\n        const toAlpha = instance.jointLocation(joint).sub(instance.jointLocation(interval.alpha)).normalize()\n        const toOmega = instance.jointLocation(joint).sub(instance.jointLocation(interval.omega)).normalize()\n        return toAlpha.dot(toOmega) < 0\n    }\n    tensegrity.joints.forEach((jointA, a) => {\n        const pushA = jointA.push\n        if (pushA) {\n            tensegrity.joints.forEach((jointB, b) => {\n                if (b <= a) {\n                    return\n                }\n                const pushB = jointB.push\n                if (pushB) {\n                    const otherA = otherJoint(jointA, pushA)\n                    const otherB = otherJoint(jointB, pushB)\n                    const distanceNear = instance.jointDistance(jointA, jointB)\n                    const distanceFar = instance.jointDistance(otherA, otherB)\n                    if (distanceNear * CONFLICT_MULTIPLE > distanceFar) {\n                        return\n                    }\n                    if (betweenDot(jointA, pushB) && betweenDot(jointB, pushA)) {\n                        conflicts.push({jointA, jointB})\n                    }\n                }\n            })\n        }\n    })\n    return conflicts\n}\n\nexport function snelsonPairs(tensegrity: Tensegrity, pullARole: IRole, pullBRole: IRole): IPair[] {\n    const pairs: IPair[] = []\n    const snelsonPair = (alpha: IJoint, pullB: IInterval): IPair | undefined => {\n        const a = acrossPush(alpha)\n        const b = otherJoint(alpha, pullB)\n        if (!a.push || !b.push) {\n            return undefined\n        }\n        const acrossA = jointPulls(a).filter(filterRole(pullARole)).map(pullA => otherJoint(a, pullA))\n        const acrossB = jointPulls(b).filter(filterRole(pullARole)).map(pullA => otherJoint(b, pullA))\n        const omega = acrossA.find(jointA => !!acrossB.find(jointB => jointA.index === jointB.index))\n        if (!omega || !omega.push) {\n            return undefined\n        }\n        const role = pullBRole\n        const scale = pullB.scale\n        return {alpha, omega, role, scale}\n    }\n    tensegrity.withPulls(pairMap => {\n        const pullBs = tensegrity.intervals.filter(filterRole(pullBRole))\n        pullBs.forEach(pullB => {\n            const alpha = snelsonPair(pullB.alpha, pullB)\n            if (alpha) {\n                const existingAlpha = pairMap[pairKey(alpha)]\n                if (!existingAlpha) {\n                    pairs.push(alpha)\n                }\n            }\n            const omega = snelsonPair(pullB.omega, pullB)\n            if (omega) {\n                const existingOmega = pairMap[pairKey(omega)]\n                if (!existingOmega) {\n                    pairs.push(omega)\n                }\n            }\n        })\n    })\n    return pairs\n}\n\nexport function bowtiePairs(tensegrity: Tensegrity, pullARole: IRole, pullBRole: IRole): IPair[] {\n    const pairs: IPair[] = []\n    const onlyA = filterRole(pullARole)\n    const onlyB = filterRole(pullBRole)\n    const intersection = (a: IJoint[], b: IJoint[]) => a.find(aj => b.find(bj => aj.index === bj.index))\n    const common = (a: IJoint, b: IJoint) => intersection(\n        jointPulls(a).filter(onlyA).map(pullA => otherJoint(a, pullA)),\n        jointPulls(b).filter(onlyA).map(pullA => otherJoint(b, pullA)),\n    )\n    const nextPair = (near: IJoint): IPair | undefined => {\n        const pullB = jointPulls(near).filter(onlyB)[0]\n        const far = otherJoint(near, pullB)\n        const otherFar = acrossPush(near)\n        const otherB = jointPulls(otherFar).filter(onlyB)[0]\n        const otherNear = otherJoint(otherFar, otherB)\n        const commonNear = common(near, otherNear)\n        const commonFar = common(far, otherFar)\n        if (!commonNear || !commonFar) {\n            return undefined\n        }\n        if (commonNear.push && !commonFar.push) {\n            const acrossFar = acrossPush(far)\n            if (!jointPulls(acrossFar).some(intervalJoins(commonNear, acrossFar))) {\n                return undefined\n            }\n        } else if (commonFar.push && !commonNear.push) {\n            const acrossNear = acrossPush(near)\n            if (!jointPulls(acrossNear).some(intervalJoins(commonFar, acrossNear))) {\n                return undefined\n            }\n        }\n        const alpha = commonNear.push ? commonNear : near\n        const omega = commonFar.push ? commonFar : far\n        const scale = pullB.scale\n        const role = !commonNear.push || !commonFar.push ? pullBRole : PULL_BB\n        return {alpha, omega, scale, role}\n    }\n    const instance = tensegrity.instance\n    tensegrity.withPulls(pairMap => {\n        const addPair = (pair: IPair) => {\n            const key = pairKey(pair)\n            const exists = pairMap[key]\n            if (!exists) {\n                pairs.push(pair)\n                pairMap[key] = pair\n            }\n        }\n        const addPairFor = (joint: IJoint) => {\n            const pair = nextPair(joint)\n            if (pair) {\n                addPair(pair)\n            }\n        }\n        tensegrity.intervals\n            .filter(filterRole(pullBRole))\n            .forEach(({alpha, omega}) => {\n                addPairFor(alpha)\n                addPairFor(omega)\n            })\n        tensegrity.joints\n            .filter(joint => joint.push && jointPulls(joint).filter(onlyA).length === 3)\n            .forEach(joint3APush => {\n                const noPushAcross = (interval: IInterval) => !otherJoint(joint3APush, interval).push\n                const found = jointPulls(joint3APush).filter(onlyA).find(noPushAcross)\n                if (!found) {\n                    throw new Error(\"no-push not found\")\n                }\n                const faceJoint = otherJoint(joint3APush, found)\n                const a3A = jointPulls(joint3APush).filter(onlyA).map(pullA => otherJoint(joint3APush, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                const fjA = jointPulls(faceJoint).filter(onlyA).map(pullA => otherJoint(faceJoint, pullA))\n                    .map(end => {\n                        const outwards = new Vector3().subVectors(instance.jointLocation(end), instance.jointLocation(joint3APush)).normalize()\n                        return {end, outwards}\n                    })\n                a3A.map(a => {\n                    const b = fjA.sort((f1, f2) =>\n                        a.outwards.dot(f2.outwards) - a.outwards.dot(f1.outwards))[0]\n                    const role = PULL_AA\n                    const scale = found.scale\n                    const pair: IPair = {alpha: a.end, omega: b.end, scale, role}\n                    addPair(pair)\n                })\n            })\n    })\n    return pairs\n}\n\nexport function namedJob(name: string, age: number): IJob {\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (name) {\n        case \"orient-0\":\n            return job(tensegrity => {\n                const zeroFaces = tensegrity.faces.filter(({markNumbers}) => markNumbers.find((n) => n._ === 0))\n                if (zeroFaces.length === 0) {\n                    throw new Error(\"No faces marked zero\")\n                }\n                const instance = tensegrity.instance\n                const position = zeroFaces\n                    .reduce((v, {ends}) =>\n                        v.add(midpoint(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .multiplyScalar(1 / zeroFaces.length)\n                const upwards = zeroFaces\n                    .reduce((v, {ends}) =>\n                        v.sub(pointsToNormal(ends.map(end => instance.jointLocation(end)))), new Vector3())\n                    .normalize()\n                const {b1, up, b2} = basisFromVector(upwards)\n                tensegrity.instance.apply(new Matrix4().makeBasis(b1, up, b2).setPosition(position).invert())\n                tensegrity.fabric.set_altitude(5)\n            })\n        case \"conflict\":\n            return job(tensegrity => {\n                findConflicts(tensegrity).forEach(({jointA, jointB}) => {\n                    tensegrity.createInterval(jointA, jointB, PULL_CONFLICT, percentOrHundred())\n                })\n            })\n        case \"pretensing\":\n            return job(tensegrity => {\n                tensegrity.stage = Stage.Slack\n                tensegrity.stage = Stage.Pretensing\n            })\n        case \"age\":\n            return job(t => {\n                console.log(`age exceeds ${t.name} @ ${age}`, t.fabric.age)\n            })\n        default:\n            throw new Error(`No job named ${name}`)\n    }\n}\n\nexport function postGrowthJob(postGrowthOp: PostGrowthOp): IJob {\n    const age = AGE_POST_GROWTH\n    const job = (todo: ToDo): IJob => ({age, todo})\n    switch (postGrowthOp) {\n        case PostGrowthOp.Faces:\n            return job(tensegrity => {\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Snelson:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Snelson)\n                tensegrity.triangleFaces()\n            })\n        case PostGrowthOp.Bowtie:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n            })\n        case PostGrowthOp.BowtieFaces:\n            return job(tensegrity => {\n                tensegrity.createPulls(PairSelection.Bowtie)\n                tensegrity.triangleFaces()\n            })\n        default:\n            return job(() => {\n            })\n    }\n}\n\nexport function isAdjacent(targetInterval: IInterval): (interval: IInterval) => boolean {\n    return (interval: IInterval) => areAdjacent(targetInterval, interval)\n}\n","import { Vector3 } from \"three\"\n\nimport { avg, midpoint, pointsToNormal, sub } from \"./eig-util\"\nimport { PULL_A, PULL_B, PUSH_A, PUSH_B } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport {\n    areAdjacent, expectPush,\n    FaceName,\n    factorFromPercent,\n    IInterval,\n    IJoint,\n    IPercent,\n    ITwist,\n    ITwistFace,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport function createTwist(tensegrity: Tensegrity, spin: Spin, scale: IPercent, baseKnown?: Vector3[]): ITwist {\n    const base = !baseKnown ? createBase(new Vector3(), 3) :\n        baseKnown.length === 3 ? baseKnown : createBase(baseKnown[0], 3)\n    switch (spin) {\n        case Spin.Left:\n            return createSingle(base, spin, true, scale, tensegrity)\n        case Spin.Right:\n            return createSingle(base, spin, false, scale, tensegrity)\n        case Spin.LeftRight:\n            return createDouble(base, true, scale, tensegrity)\n        case Spin.RightLeft:\n            return createDouble(base, false, scale, tensegrity)\n        default:\n            throw new Error(\"Spin?\")\n    }\n}\n\nexport function faceFromTwist(faceName: FaceName, twist: ITwist): ITwistFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.a:\n                    return twist.faces[0]\n                case FaceName.A:\n                    return twist.faces[1]\n            }\n            break\n        case 8:\n            switch (faceName) {\n                case FaceName.a:\n                    return twist.faces[0]\n                case FaceName.B:\n                    return twist.faces[2]\n                case FaceName.C:\n                    return twist.faces[1]\n                case FaceName.D:\n                    return twist.faces[3]\n                case FaceName.b:\n                    return twist.faces[4]\n                case FaceName.c:\n                    return twist.faces[5]\n                case FaceName.d:\n                    return twist.faces[6]\n                case FaceName.A:\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function adjacentPullsFromTwist(tensegrity: Tensegrity, twist: ITwist): IInterval[] {\n    return tensegrity.intervals\n        .filter(({role}) => !role.push)\n        .reduce((detailsSoFar, interval) => {\n            const adjacent = twist.pushes.find(push => areAdjacent(push, interval))\n            if (adjacent) {\n                detailsSoFar.push(interval)\n            }\n            return detailsSoFar\n        }, [] as IInterval[])\n}\n\nfunction addFace(twist: ITwist, ends: IJoint[], pulls: IInterval[], spin: Spin, scale: IPercent, joint?: IJoint): void {\n    const f0 = ends[0]\n    const f1 = ends[2]\n    const f2 = ends[1]\n    const pushes = [expectPush(f0), expectPush(f1), expectPush(f2)]\n    const face: ITwistFace = {twist, spin, scale, ends, pushes, pulls, markNumbers: [], removed: false, joint}\n    twist.faces.push(face)\n}\n\nexport function removeFace(face: ITwistFace, tensegrity: Tensegrity): void {\n    face.pulls.forEach(pull => tensegrity.removeInterval(pull))\n    face.pulls = []\n    if (face.joint) {\n        tensegrity.removeJoint(face.joint)\n    }\n    face.removed = true\n}\n\nfunction createSingle(base: Vector3[], spin: Spin, leftSpin: boolean, scale: IPercent, tensegrity: Tensegrity): ITwist {\n    const twist: ITwist = {pushes: [], pulls: [], faces: []}\n    const pairs = pointPairs(base, scale, leftSpin)\n    const ends = pairs.map(({alpha, omega}) => ({\n        alpha: tensegrity.createJoint(alpha),\n        omega: tensegrity.createJoint(omega),\n    }))\n    const alphaJoint = tensegrity.createJoint(midpoint(pairs.map(({alpha}) => alpha)))\n    const omegaJoint = tensegrity.createJoint(midpoint(pairs.map(({omega}) => omega)))\n    tensegrity.instance.refreshFloatView()\n    ends.forEach(({alpha, omega}) => {\n        const push = tensegrity.createInterval(alpha, omega, PUSH_A, scale)\n        twist.pushes.push(push)\n        alpha.push = omega.push = push\n    })\n    const makeFace = (joints: IJoint[], midJoint: IJoint) => {\n        const pulls = joints.map(j => tensegrity.createInterval(j, midJoint, PULL_A, scale))\n        twist.pulls.push(...pulls)\n        addFace(twist, joints, pulls, spin, scale, midJoint)\n    }\n    makeFace(ends.map(({alpha}) => alpha), alphaJoint)\n    makeFace(ends.map(({omega}) => omega).reverse(), omegaJoint)\n    ends.forEach(({alpha}, index) => {\n        const omega = ends[(ends.length + index + (leftSpin ? -1 : 1)) % ends.length].omega\n        twist.pulls.push(tensegrity.createInterval(alpha, omega, PULL_B, scale))\n    })\n    return twist\n}\n\nfunction createDouble(base: Vector3[], leftSpin: boolean, scale: IPercent, tensegrity: Tensegrity): ITwist {\n    const twist: ITwist = {pushes: [], pulls: [], faces: []}\n    const botPairs = pointPairs(base, scale, leftSpin)\n    const topPairs = pointPairs(botPairs.map(({omega}) => omega), scale, !leftSpin)\n    const bot = botPairs.map(({alpha, omega}) => ({\n        alpha: tensegrity.createJoint(alpha),\n        omega: tensegrity.createJoint(omega),\n    }))\n    const top = topPairs.map(({alpha, omega}) => ({\n        alpha: tensegrity.createJoint(alpha),\n        omega: tensegrity.createJoint(omega),\n    }))\n    tensegrity.instance.refreshFloatView()\n    const ends = [...bot, ...top]\n    ends.forEach(({alpha, omega}) => {\n        const push = tensegrity.createInterval(alpha, omega, PUSH_B, scale)\n        twist.pushes.push(push)\n        alpha.push = omega.push = push\n    })\n    const faceJoints = leftSpin ?\n        [\n            [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n            [bot[2].alpha, bot[1].omega, top[1].alpha], // B\n            [bot[0].alpha, bot[2].omega, top[2].alpha], // C\n            [bot[1].alpha, bot[0].omega, top[0].alpha], // D\n            [top[1].omega, top[0].alpha, bot[1].omega].reverse(), // b\n            [top[0].omega, top[2].alpha, bot[0].omega].reverse(), // d\n            [top[2].omega, top[1].alpha, bot[2].omega].reverse(), // c\n            [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n        ] : [\n            [bot[0].alpha, bot[1].alpha, bot[2].alpha], // a\n            [bot[2].alpha, bot[0].omega, top[2].alpha].reverse(), // D\n            [bot[0].alpha, bot[1].omega, top[0].alpha].reverse(), // B\n            [bot[1].alpha, bot[2].omega, top[1].alpha].reverse(), // C\n            [top[1].omega, top[2].alpha, bot[2].omega], // b\n            [top[2].omega, top[0].alpha, bot[0].omega], // c\n            [top[0].omega, top[1].alpha, bot[1].omega], // d\n            [top[0].omega, top[1].omega, top[2].omega].reverse(), // A\n        ]\n    const jointLocation = (joint: IJoint) => tensegrity.instance.jointLocation(joint)\n    const midJoints = faceJoints.map(joints => tensegrity.createJoint(midpoint(joints.map(jointLocation))))\n    tensegrity.instance.refreshFloatView()\n    faceJoints.forEach((joints, index) => {\n        const midJoint = midJoints[index]\n        const pulls = joints.map(j => tensegrity.createInterval(j, midJoint, PULL_A, scale))\n        twist.pulls.push(...pulls)\n        const spin = leftSpin === ([0, 4, 5, 6].some(n => n === index)) ? Spin.Left : Spin.Right\n        addFace(twist, joints, pulls, spin, scale, midJoint)\n    })\n    return twist\n}\n\ninterface IPointPair {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction pointPairs(base: Vector3[], scale: IPercent, leftSpin: boolean): IPointPair[] {\n    const points: IPointPair[] = []\n    const mid = midpoint(base)\n    const midVector = () => new Vector3().copy(mid)\n    const factor = factorFromPercent(scale)\n    const up = pointsToNormal(base).multiplyScalar(-factor)\n    for (let index = 0; index < base.length; index++) {\n        const fromMid = (offset: number) => sub(base[(index + base.length + offset) % base.length], mid)\n        const between = (idx1: number, idx2: number) => avg(fromMid(idx1), fromMid(idx2))\n        const alpha = midVector().addScaledVector(between(0, 1), factor)\n        const omega = midVector().add(up).addScaledVector(leftSpin ? between(1, 2) : between(-1, 0), factor)\n        points.push({alpha, omega})\n    }\n    return points\n}\n\nfunction createBase(location: Vector3, pushesPerTwist: number): Vector3[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return base\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CONNECTOR_LENGTH, ROOT3 } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { bowtiePairs, snelsonPairs } from \"./tensegrity-logic\"\nimport {\n    averageScaleFactor,\n    FaceName,\n    factorFromPercent,\n    IInterval,\n    IIntervalDetails,\n    IJoint,\n    intervalKey,\n    intervalToPair,\n    IPair,\n    IPercent,\n    IRadialPull,\n    IRole,\n    ITwist,\n    ITwistFace,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\nimport { createTwist, faceFromTwist, removeFace } from \"./twist-logic\"\n\nexport enum FaceAction {\n    Subtree,\n    Join,\n    ShapingDistance,\n    PretenstDistance,\n    None,\n}\n\nexport enum PostGrowthOp {\n    NoOp,\n    Faces,\n    Snelson,\n    Bowtie,\n    BowtieFaces,\n}\n\nexport enum PairSelection {\n    Bowtie,\n    Snelson,\n}\n\nconst PULL_A: IRole = {\n    tag: \"(a)\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nconst PULL_CONNECTOR: IRole = {\n    tag: \"connector\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nexport type ToDo = (tensegrity: Tensegrity) => void\n\nexport const AGE_POST_GROWTH = -1\n\nconst PULL_B = {\n    tag: \"(b)\",\n    push: false,\n    length: ROOT3,\n    stiffness: 1,\n}\n\nconst PULL_PRETENST_DISTANCER = {\n    tag: \"pretenst-distancer\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nconst PULL_SHAPING_DISTANCER = {\n    tag: \"shaping-distancer\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nconst PULL_RADIAL = {\n    tag: \"radial\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nexport interface IJob {\n    todo: ToDo,\n    age?: number\n}\n\nexport interface ITensegrityBuilder {\n    operateOn: (tensegrity: Tensegrity) => void\n    finished: () => boolean\n    work: () => void\n}\n\nexport class Tensegrity {\n    public name: string\n    public stage$: BehaviorSubject<Stage>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public loops: IInterval[][] = []\n    public twists: ITwist[] = []\n\n    public connectors: IRadialPull[] = []\n    public distancers: IRadialPull[] = []\n    public pretenstAge = -1\n    public scale = 1\n\n    private jobs: IJob[] = []\n\n    constructor(\n        public readonly instance: FabricInstance,\n        public readonly countdown: number,\n        private builder: ITensegrityBuilder,\n    ) {\n        this.instance.clear()\n        this.stage$ = new BehaviorSubject(this.fabric.get_stage())\n        this.builder.operateOn(this)\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public removeJoint(joint: IJoint): void {\n        if (joint.index < 0) {\n            return\n        }\n        const index = joint.index\n        this.fabric.remove_joint(index)\n        this.joints = this.joints.filter(j => j.index !== index)\n        joint.index = -index - 1 // mark it\n        this.joints.forEach(j => j.index = j.index > index ? j.index - 1 : j.index)\n        this.instance.refreshFloatView()\n    }\n\n    public createRadialPull(alpha: ITwistFace, omega: ITwistFace, role: IRole, pullScale?: IPercent): IRadialPull {\n        const instance = this.instance\n        const alphaJoint = this.createJoint(instance.faceLocation(alpha))\n        const omegaJoint = this.createJoint(instance.faceLocation(omega))\n        instance.refreshFloatView()\n        const axis = this.creatAxis(alphaJoint, omegaJoint, role, pullScale)\n        const alphaRestLength = alpha.ends.reduce((sum, end) => sum + instance.jointDistance(alphaJoint, end), 0) / alpha.ends.length\n        const omegaRestLength = omega.ends.reduce((sum, end) => sum + instance.jointDistance(omegaJoint, end), 0) / omega.ends.length\n        const alphaRays = alpha.ends.map(end => this.createRay(alphaJoint, end, alphaRestLength))\n        const omegaRays = omega.ends.map(end => this.createRay(omegaJoint, end, omegaRestLength))\n        const radialPull: IRadialPull = {alpha, omega, axis, alphaRays, omegaRays}\n        switch (axis.role.tag) {\n            case \"connector\":\n                this.connectors.push(radialPull)\n                break\n            case \"shaping-distancer\":\n                this.distancers.push(radialPull)\n                break\n            case \"pretenst-distancer\":\n                break\n        }\n        return radialPull\n    }\n\n    public createInterval(alpha: IJoint, omega: IJoint, role: IRole, scale: IPercent, patience?: number): IInterval {\n        const targetLength = role.length * factorFromPercent(scale)\n        const currentLength = targetLength === 0 ? 0 : this.instance.jointDistance(alpha, omega)\n        const patienceFactor = patience === undefined ? 1 : patience\n        const countdown = this.countdown * Math.abs(targetLength - currentLength) * patienceFactor\n        const attack = countdown <= 0 ? 0 : 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, role.push, currentLength, targetLength, role.stiffness, attack)\n        const interval: IInterval = {index, role, scale, alpha, omega, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        const index = interval.index\n        this.intervals = this.intervals.filter(existing => existing.index !== index)\n        this.fabric.remove_interval(index)\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        interval.removed = true\n    }\n\n\n    public faceToTriangle(face: ITwistFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        if (face.joint) {\n            this.removeJoint(face.joint)\n        }\n        for (let index = 0; index < face.ends.length; index++) {\n            const endA = face.ends[index]\n            const endB = face.ends[(index + 1) % face.ends.length]\n            face.pulls.push(this.createInterval(endA, endB, PULL_B, face.scale))\n        }\n    }\n\n    public triangleFaces(): void {\n        this.faces.forEach(face => this.faceToTriangle(face))\n    }\n\n    public withPulls(work: (pairMap: Record<string, IPair>) => void): void {\n        const addPull = (end: IJoint, pull: IInterval) => {\n            if (end.pulls) {\n                end.pulls.push(pull)\n            } else {\n                end.pulls = [pull]\n            }\n        }\n        this.intervals\n            .filter(({role}) => !role.push)\n            .forEach(pull => {\n                addPull(pull.alpha, pull)\n                addPull(pull.omega, pull)\n            })\n        const pairMap: Record<string, IPair> = {}\n        this.intervals.forEach(interval => pairMap[intervalKey(interval)] = intervalToPair(interval))\n        work(pairMap)\n        this.joints.forEach(joint => joint.pulls = undefined)\n    }\n\n    public createPulls(pairSelection: PairSelection): void {\n        const selectPairs = () => {\n            switch (pairSelection) {\n                case PairSelection.Bowtie:\n                    return bowtiePairs(this, PULL_A, PULL_B)\n                case PairSelection.Snelson:\n                    return snelsonPairs(this, PULL_A, PULL_B)\n                default:\n                    throw new Error()\n            }\n        }\n        // selectPairs().forEach(pair=> console.log(pairKey(pair)))\n        selectPairs().forEach(({alpha, omega, role, scale}) => {\n            this.createInterval(alpha, omega, role, scale, 5)\n        })\n    }\n\n    public removeSlackPulls(): void {\n        const slack = this.intervals\n            .filter(({role}) => role.tag === \"(aa)\")\n            .filter(pullC => this.instance.floatView.strains[pullC.index] === 0)\n        slack.forEach(interval => this.removeInterval(interval))\n    }\n\n    public createTwist(spin: Spin, scale: IPercent, baseKnown?: Vector3[]): ITwist {\n        const twist = createTwist(this, spin, scale, baseKnown)\n        this.twists.push(twist)\n        return twist\n    }\n\n    public createTwistOn(baseFace: ITwistFace, spin: Spin, scale: IPercent): ITwist {\n        const jointLocation = (joint: IJoint) => this.instance.jointLocation(joint)\n        const twist = this.createTwist(spin, scale, baseFace.ends.map(jointLocation).reverse())\n        this.createLoop(baseFace, faceFromTwist(FaceName.a, twist))\n        return twist\n    }\n\n    public findTwist(push: IInterval): ITwist {\n        const found = this.twists.find(({pushes}) => pushes.find(({index}) => index === push.index))\n        if (!found) {\n            throw new Error(\"Cannot find twist\")\n        }\n        return found\n    }\n\n    public get faces(): ITwistFace[] {\n        return this.twists.reduce((f, {faces}) => f.concat(faces), [] as ITwistFace[]).filter(({removed}) => !removed)\n    }\n\n    public get stage(): Stage {\n        return this.stage$.getValue()\n    }\n\n    public set stage(stage: Stage) {\n        this.instance.stage = stage\n        if (stage === Stage.Slack) {\n            this.distancers.forEach(radialPull => {\n                const {axis, alphaRays, omegaRays} = radialPull\n                const intervals = [axis, ...alphaRays, ...omegaRays]\n                intervals.forEach(ray => this.removeInterval(ray))\n            })\n            this.distancers = []\n            this.instance.snapshot()\n        }\n        this.stage$.next(stage)\n    }\n\n    public set toDo(job: IJob) {\n        this.jobs.push(job)\n    }\n\n    public iterate(): boolean {\n        const busy = this.instance.iterate()\n        if (busy) {\n            return busy\n        }\n        const jobsBefore = this.jobs.length\n        if (jobsBefore) {\n            const ageNow = this.instance.fabric.age\n            this.jobs = this.jobs.filter(({todo, age}) => {\n                if (age !== undefined && (age < 0 || age > ageNow)) {\n                    return true // keep\n                }\n                todo(this)\n                return false\n            })\n            if (this.jobs.length < jobsBefore) {\n                return true\n            }\n        }\n        switch (this.stage) {\n            case Stage.Growing:\n                if (!this.builder.finished()) {\n                    this.builder.work()\n                    return false\n                } else if (this.connectors.length > 0) {\n                    this.connectors = this.checkConnectors()\n                    return false\n                }\n                this.stage = Stage.Shaping\n                this.jobs = this.jobs.filter(({todo, age}) => {\n                    if (age === AGE_POST_GROWTH) {\n                        todo(this)\n                        return false\n                    }\n                    return true\n                })\n                break\n            case Stage.Shaping:\n                break\n            case Stage.Slack:\n                break\n            case Stage.Pretensing:\n                this.stage = Stage.Pretenst\n                break\n            case Stage.Pretenst:\n                if (this.pretenstAge < 0) {\n                    this.pretenstAge = this.fabric.age\n                }\n        }\n        return false\n    }\n\n    public strainToStiffness(): void {\n        const instance = this.instance\n        const floatView = instance.floatView\n        const pulls = this.intervals.filter(interval => {\n            if (interval.role.push) {\n                return false\n            }\n            return instance.jointLocation(interval.alpha).y >= 0 || instance.jointLocation(interval.omega).y >= 0\n        })\n        const strains = floatView.strains\n        const averagePullStrain = pulls.reduce((sum, interval) => sum + strains[interval.index], 0) / pulls.length\n        const stiffnesses = new Float32Array(floatView.stiffnesses)\n        pulls.forEach(pull => {\n            const pullStrain = strains[pull.index]\n            const normalizedStrain = pullStrain - averagePullStrain\n            const strainFactor = normalizedStrain / averagePullStrain\n            stiffnesses[pull.index] *= 1 + strainFactor\n        })\n        instance.restoreSnapshot()\n        this.fabric.copy_stiffnesses(stiffnesses)\n    }\n\n    public createRadialPulls(faces: ITwistFace[], action: FaceAction, actionScale?: IPercent): void {\n        const locationFromFace = (face: ITwistFace) => this.instance.faceLocation(face)\n        const centerBrickFaceIntervals = () => {\n            const omniTwist = this.createTwist(Spin.LeftRight, percentFromFactor(averageScaleFactor(faces)), [this.instance.averageFaceLocation(faces)])\n            this.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.createRadialPull(closestFace, face, PULL_CONNECTOR)\n            })\n        }\n        const pullScale = actionScale ? actionScale : percentFromFactor(0.75)\n        switch (action) {\n            case FaceAction.ShapingDistance:\n            case FaceAction.PretenstDistance:\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        const role = action === FaceAction.ShapingDistance ? PULL_SHAPING_DISTANCER : PULL_PRETENST_DISTANCER\n                        this.createRadialPull(faceA, faceB, role, pullScale)\n                    })\n                })\n                break\n            case FaceAction.Join:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            centerBrickFaceIntervals()\n                        } else {\n                            this.createRadialPull(faces[0], faces[1], PULL_CONNECTOR)\n                        }\n                        break\n                    case 3:\n                        centerBrickFaceIntervals()\n                        break\n                }\n                break\n        }\n    }\n\n    public checkConnectors(): IRadialPull[] {\n        if (this.connectors.length === 0) {\n            return this.connectors\n        }\n        const connectFaces = (alpha: ITwistFace, omega: ITwistFace) => {\n            rotateForBestRing(this.instance, alpha, omega)\n            this.createLoop(alpha, omega)\n        }\n        return this.connectors.filter(({axis, alpha, omega, alphaRays, omegaRays}) => {\n            if (axis.role.tag === \"connector\") {\n                const distance = this.instance.jointDistance(axis.alpha, axis.omega)\n                if (distance <= CONNECTOR_LENGTH) {\n                    connectFaces(alpha, omega)\n                    this.removeInterval(axis)\n                    alphaRays.forEach(i => this.removeInterval(i))\n                    omegaRays.forEach(i => this.removeInterval(i))\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public getIntervalDetails(interval: IInterval): IIntervalDetails {\n        const instance = this.instance\n        const {floatView} = instance\n        const strain = floatView.strains[interval.index]\n        const length = instance.intervalLength(interval) * this.scale\n        const height = instance.intervalLocation(interval).y * this.scale\n        return {interval, strain, length, height}\n    }\n\n    private createLoop(faceA: ITwistFace, faceB: ITwistFace): void {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const loop: IInterval[] = []\n        for (let index = 0; index < reverseA.length; index++) {\n            const a0 = reverseA[index]\n            const a1 = reverseA[(index + 1) % reverseA.length]\n            const b = forwardB[index]\n            loop.push(this.createInterval(a0, b, PULL_A, scale))\n            loop.push(this.createInterval(b, a1, PULL_A, scale))\n        }\n        removeFace(faceB, this)\n        removeFace(faceA, this)\n        this.loops.push(loop)\n    }\n\n    // =========================\n\n    private creatAxis(alpha: IJoint, omega: IJoint, role: IRole, pullScale?: IPercent): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const restLength = pullScale ? factorFromPercent(pullScale) * idealLength : CONNECTOR_LENGTH / 2\n        const stiffness = 1\n        const scale = percentOrHundred()\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, role, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n\n    private createRay(alpha: IJoint, omega: IJoint, restLength: number): IInterval {\n        const idealLength = this.instance.jointDistance(alpha, omega)\n        const role = PULL_RADIAL\n        const stiffness = 1\n        const scale = percentFromFactor(restLength)\n        const countdown = this.countdown * Math.abs(restLength - idealLength)\n        const attack = 1 / countdown\n        const index = this.fabric.create_interval(alpha.index, omega.index, false, idealLength, restLength, stiffness, attack)\n        const interval: IInterval = {index, alpha, omega, role, scale, removed: false}\n        this.intervals.push(interval)\n        return interval\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { PHI, ROOT3, ROOT6 } from \"./eig-util\"\nimport { TenscriptNode } from \"./tenscript-node\"\nimport { FaceAction, ITensegrityBuilder, PostGrowthOp, Tensegrity } from \"./tensegrity\"\nimport { namedJob, postGrowthJob } from \"./tensegrity-logic\"\nimport {\n    FaceName,\n    faceNameFromChar,\n    FACE_NAMES,\n    factorFromPercent,\n    IMarkNumber,\n    IPercent,\n    IRole,\n    isFaceNameChar,\n    ITwist,\n    ITwistFace,\n    percentFromFactor,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChange,\n} from \"./tensegrity-types\"\nimport { faceFromTwist } from \"./twist-logic\"\n\nexport const PUSH_A: IRole = {\n    tag: \"[A]\",\n    push: true,\n    length: ROOT6,\n    stiffness: 1,\n}\n\nexport const PUSH_B: IRole = {\n    tag: \"[B]\",\n    push: true,\n    length: PHI * ROOT3,\n    stiffness: 1,\n}\n\nexport const PULL_A: IRole = {\n    tag: \"(a)\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nexport const PULL_B: IRole = {\n    tag: \"(b)\",\n    push: false,\n    length: ROOT3,\n    stiffness: 1,\n}\n\nexport interface INamedJob {\n    todo: string\n    age: number\n}\n\nexport interface ITenscript {\n    name: string\n    spin: Spin\n    postGrowthOp: PostGrowthOp\n    surfaceCharacter: SurfaceCharacter\n    code: string[]\n    scale?: number\n    jobs?: INamedJob[]\n    markDefStrings?: Record<number, string>\n    featureValues?: Record<WorldFeature, number>\n}\n\nexport interface IMarkAction {\n    action: FaceAction\n    tree?: TenscriptNode\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport function compileTenscript(tenscript: ITenscript, error: (message: string) => void): TenscriptNode | undefined {\n    try {\n        const code = tenscript.code.join()\n        const root = codeToNode(code)\n        if (!root) {\n            error(\"Nothing to compile\")\n            return undefined\n        }\n        root.root = true\n        return root\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nexport type RunTenscript = (tenscript: ITenscript, error: (message: string) => void) => boolean\n\nexport interface IBud {\n    tensegrity: Tensegrity\n    tree: TenscriptNode\n    twist: ITwist\n    markActions: Record<number, IMarkAction>\n    reorient: boolean\n}\n\nexport class TenscriptBuilder implements ITensegrityBuilder {\n    private tensegrity: Tensegrity\n    private markDefStrings: Record<number, string>\n    private buds: IBud[]\n\n    constructor(\n        private location: Vector3,\n        private tenscript: ITenscript,\n        private tree: TenscriptNode,\n    ) {\n    }\n\n    public operateOn(tensegrity: Tensegrity): void {\n        this.tensegrity = tensegrity\n        if (this.tenscript.scale) {\n            this.tensegrity.scale = this.tenscript.scale\n        }\n        tensegrity.name = this.tenscript.name\n        tensegrity.instance.world.set_surface_character(this.tenscript.surfaceCharacter)\n        this.markDefStrings = this.tenscript.markDefStrings ? this.tenscript.markDefStrings : {}\n        if (this.tenscript.jobs) {\n            this.tenscript.jobs.forEach(({todo, age}) => tensegrity.toDo = namedJob(todo, age))\n        }\n        this.tensegrity.toDo = postGrowthJob(this.tenscript.postGrowthOp)\n        this.buds = [createBud(tensegrity, this.location, this.tenscript, this.tree)]\n    }\n\n    public finished(): boolean {\n        return this.buds.length === 0\n    }\n\n    public work(): void {\n        this.buds = execute(this.buds)\n        if (this.finished()) { // last one executed\n            faceStrategies(this.tensegrity, this.tensegrity.faces, this.markDefStrings).forEach(strategy => strategy.execute())\n        }\n    }\n}\n\nfunction faceStrategies(tensegrity: Tensegrity, faces: ITwistFace[], markStrings?: Record<number, string>): FaceStrategy[] {\n    const marks = markDefStringsToActions(markStrings)\n    const collated: Record<number, ITwistFace[]> = {}\n    faces.forEach(face => {\n        face.markNumbers.forEach(mark => {\n            const found = collated[mark._]\n            if (found) {\n                found.push(face)\n            } else {\n                collated[mark._] = [face]\n            }\n        })\n    })\n    return Object.entries(collated).map(([key]) => {\n        const possibleMark = marks[key] || marks[-1]\n        const mark = possibleMark ? possibleMark : FaceAction.None\n        return new FaceStrategy(tensegrity, collated[key], mark)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private tensegrity: Tensegrity, private faces: ITwistFace[], private markAction: IMarkAction) {\n    }\n\n    public execute(): void {\n        switch (this.markAction.action) {\n            case FaceAction.Join:\n            case FaceAction.ShapingDistance:\n            case FaceAction.PretenstDistance:\n                this.tensegrity.createRadialPulls(this.faces, this.markAction.action, this.markAction.scale)\n                break\n        }\n    }\n}\n\nexport function createBud(tensegrity: Tensegrity, location: Vector3, tenscript: ITenscript, tree: TenscriptNode): IBud {\n    const reorient = tree.forward === undefined\n    const {spin, markDefStrings} = tenscript\n    const twist = tensegrity.createTwist(spin, percentOrHundred(), [location])\n    return {tensegrity, tree, twist, markActions: markDefStringsToActions(markDefStrings), reorient}\n}\n\nexport function markDefStringsToActions(markStrings?: Record<number, string>): Record<number, IMarkAction> {\n    const markActions: Record<number, IMarkAction> = {}\n    if (markStrings) {\n        Object.keys(markStrings).forEach(key => {\n            const c: string = markStrings[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = codeToNode(c.substring(\"subtree\".length))\n                markActions[key] = <IMarkAction>{action: FaceAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"join\")) {\n                markActions[key] = <IMarkAction>{action: FaceAction.Join}\n            } else if (c.startsWith(\"shaping-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.ShapingDistance, scale}\n            } else if (c.startsWith(\"pretenst-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                markActions[key] = <IMarkAction>{action: FaceAction.PretenstDistance, scale}\n            }\n        })\n    }\n    return markActions\n}\n\nfunction codeToNode(codeFragment: string): TenscriptNode | undefined {\n    const initialCode = argument(codeFragment, true)\n    const codeString = initialCode.content\n    let forward: string | undefined\n    let scale = percentOrHundred()\n    const subtrees = {} as Record<FaceName, TenscriptNode>\n    const faceMarks = {} as Record<FaceName, IMarkNumber[]>\n\n    function subtree(index: number): { codeTree?: TenscriptNode, skip: number } {\n        const {content, skip} = argument(codeString.substring(index), false)\n        const codeTree = codeToNode(content)\n        return {codeTree, skip}\n    }\n\n    function addMark(faceName: FaceName, mark: number): void {\n        const found = faceMarks[faceName]\n        const markNumber: IMarkNumber = {_: mark}\n        if (found) {\n            found.push(markNumber)\n        } else {\n            faceMarks[faceName] = [markNumber]\n        }\n    }\n\n    for (let index = 0; index < codeString.length; index++) {\n        const char = codeString.charAt(index)\n        if (isFaceNameChar(char)) {\n            const direction = subtree(index + 1)\n            const codeTree = direction.codeTree\n            if (!codeTree) {\n                throw new Error(`No subtree: ${codeString.substring(index)}`)\n            }\n            subtrees[faceNameFromChar(char)] = codeTree\n            index += direction.skip\n        } else if (isDigit(char)) {\n            const forwardArg = argument(codeString, false)\n            const forwardCount = toNumber(forwardArg.content)\n            forward = \"X\".repeat(forwardCount)\n            index += forwardArg.skip\n        } else if (char === \"X\" || char === \"O\") {\n            const forwardArg = argument(codeString, false)\n            forward = forwardArg.content\n            index += forwardArg.skip\n        } else {\n            switch (char) {\n                case \"S\":\n                    const scaleArg = argument(codeString.substring(index + 1), true)\n                    scale = {_: toNumber(scaleArg.content)}\n                    index += scaleArg.skip\n                    break\n                case \"M\":\n                    const faceNameChar = codeString.charAt(index + 1)\n                    const markNumber = argument(codeString.substring(index + 2), true)\n                    addMark(faceNameFromChar(faceNameChar), toNumber(markNumber.content))\n                    index += markNumber.skip + 1\n                    break\n                case \",\":\n                case \" \":\n                case \"\\n\":\n                    break\n                default:\n                    throw new Error(`Unexpected character: ${char}`)\n            }\n        }\n    }\n    return new TenscriptNode(forward, scale, subtrees, faceMarks).nonEmpty\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: TenscriptNode): void {\n    FACE_NAMES.forEach(thisFace => {\n        const marks = treeWithMarks.faceMarks(thisFace)\n        if (!marks) {\n            return\n        }\n        faceFromTwist(thisFace, twistToMark).markNumbers.push(...marks)\n    })\n}\n\nfunction grow(\n    {tensegrity, twist, markActions}: IBud,\n    action: string,\n    afterTree: TenscriptNode,\n    faceName: FaceName,\n    toOmni: boolean,\n    scaleChange: IPercent,\n): IBud {\n    const baseFace = faceFromTwist(faceName, twist)\n    const getSpin = () => {\n        switch (action) {\n            case \"O\":\n                return spinChange(baseFace.spin, false, toOmni)\n            default:\n                return spinChange(baseFace.spin, true, toOmni)\n        }\n    }\n    const spin = getSpin()\n    const scale = percentFromFactor(factorFromPercent(baseFace.scale) * factorFromPercent(scaleChange))\n    const newTwist = tensegrity.createTwistOn(baseFace, spin, scale)\n    if (afterTree.forward === \"\") {\n        markTwist(newTwist, afterTree)\n    }\n    return {tensegrity, tree: afterTree, twist: newTwist, markActions, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tensegrity, tree, markActions, reorient} = bud\n        if (tree.forward !== undefined && tree.forward.length > 0) {\n            const {afterNode, action} = tree.decremented\n            const omni = tree.needsOmniTwist && afterNode.forward !== undefined && afterNode.forward.length === 0\n            activeBuds.push(grow(bud, action, afterNode, FaceName.A, omni, tree.scale))\n            return\n        }\n        if (reorient) {\n            const abOrientation = ![FaceName.A, FaceName.a, FaceName.B, FaceName.b].some(f => !tree.subtree(f))\n            if (abOrientation) {\n                const points = tensegrity.joints.map(joint => tensegrity.instance.jointLocation(joint))\n                tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = tree.subtree(faceName)\n            if (subtree) {\n                const {afterNode, action} = subtree.decremented\n                const omni = subtree.needsOmniTwist && subtree.forward === \"\"\n                activeBuds.push(grow(bud, action, afterNode, faceName, omni, subtree.scale))\n            } else {\n                const treeMarks = tree.faceMarks(faceName)\n                if (treeMarks) {\n                    treeMarks.forEach(twistMark => {\n                        const mark = markActions[twistMark._]\n                        if (mark && mark.action === FaceAction.Subtree) {\n                            const markTree = mark.tree\n                            if (!markTree) {\n                                throw new Error(\"Missing subtree\")\n                            }\n                            tree.deleteMark(faceName)\n                            const omni = markTree.needsOmniTwist\n                            activeBuds.push(grow(bud, \"\", markTree, faceName, omni, percentOrHundred(markTree.scale)))\n                        }\n                    })\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d*$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    if (digits.length === 0) {\n        return 0\n    }\n    return parseInt(digits, 10)\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const contentOption = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    const content = contentOption.length > 0 ? contentOption : \"0\"\n    return {content, skip: finalBracket + 1}\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, RecoilState } from \"recoil\"\nimport { recoilPersist } from \"recoil-persist\"\n\nimport { globalModeFromUrl, IGlobalMode, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { IIntervalDetails, ITwist } from \"../fabric/tensegrity-types\"\nimport { featureMapping, IFeatureMapping } from \"../view/feature-mapping\"\n\nexport const STORAGE_KEY = \"pretenst-2021-11-02\"\nconst DEFAULT_BOOTSTRAP = 0\n\nconst {persistAtom} = recoilPersist({\n    key: STORAGE_KEY,\n    storage: localStorage,\n})\n\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst effects_UNSTABLE = [persistAtom]\n\nexport const postGrowthAtom = atom({\n    key: \"postGrowth\",\n    default: PostGrowthOp.NoOp,\n    effects_UNSTABLE,\n})\n\nexport const bootstrapIndexAtom = atom({\n    key: \"bootstrapIndex\",\n    default: DEFAULT_BOOTSTRAP,\n    effects_UNSTABLE,\n})\n\nexport const tenscriptAtom = atom<ITenscript | undefined>({\n    key: \"tenscript\",\n    default: undefined,\n    effects_UNSTABLE,\n})\n\nexport const currentFeature = atom<WorldFeature>({\n    key: \"currentFeature\",\n    default: WorldFeature.VisualStrain,\n    effects_UNSTABLE,\n})\n\nfunction createWorldFeatureValues(): IWorldFeatureValue[] {\n    return WORLD_FEATURES.map(feature => {\n        const mapping = featureMapping(WorldFeature[feature])\n        const percentAtom = atom({\n            key: mapping.name,\n            default: 100,\n            effects_UNSTABLE,\n        })\n        return <IWorldFeatureValue>{mapping, percentAtom}\n    })\n}\n\nexport const rotatingAtom = atom({\n    key: \"rotating\",\n    default: false,\n})\n\nexport const globalModeAtom = atom<IGlobalMode>({\n    key: \"globalMode\",\n    default: globalModeFromUrl(),\n})\n\nexport enum ViewMode {\n    Time = \"Time\",\n    Select = \"Select\",\n    Look = \"Look\",\n}\n\nexport const viewModeAtom = atom<ViewMode>({\n    key: \"viewMode\",\n    default: ViewMode.Time,\n})\n\nexport const surfaceCharacterAtom = atom({\n    key: \"surfaceCharacter\",\n    default: SurfaceCharacter.Frozen,\n})\n\nexport interface IWorldFeatureValue {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n}\n\nexport const FEATURE_VALUES = createWorldFeatureValues()\n\nexport const selectedTwistAtom = atom<ITwist | undefined>({\n    key: \"selectedTwist\",\n    default: undefined,\n})\n\nexport const visibleDetailsAtom = atom<IIntervalDetails[]>({\n    key: \"visibleDetails\",\n    default: [],\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaCamera, FaHandPointUp, FaPlay } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nexport function BottomLeft(): JSX.Element {\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    function ViewModeButton({item, children}: {\n        item: ViewMode,\n        children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    }): JSX.Element {\n        return (\n            <Button\n                disabled={item === viewMode}\n                color={item === viewMode ? \"success\" : \"secondary\"}\n                onClick={() => setViewMode(item)}\n            >\n                {children}\n            </Button>\n        )\n    }\n\n    return (\n        <ButtonGroup>\n            <ViewModeButton item={ViewMode.Time}>\n                <FaPlay/><span> Time</span>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Select}>\n                <FaHandPointUp/><span> Select</span>\n            </ViewModeButton>\n            <ViewModeButton item={ViewMode.Look}>\n                <FaCamera/><span> Look</span>\n            </ViewModeButton>\n        </ButtonGroup>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nexport function getFabricOutput({name, instance, joints, intervals}: Tensegrity, pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n    instance.refreshFloatView()\n    const idealLengths = instance.floatView.idealLengths\n    const strains = instance.floatView.strains\n    const stiffnesses = instance.floatView.stiffnesses\n    const linearDensities = instance.floatView.linearDensities\n    return {\n        name,\n        joints: joints.map(joint => {\n            const vector = instance.jointLocation(joint)\n            return <IOutputJoint>{\n                index: joint.index,\n                radius: jointRadius,\n                x: vector.x, y: vector.z, z: vector.y,\n                anchor: false, // TODO: can this be determined?\n            }\n        }),\n        intervals: intervals.map(interval => {\n            const isPush = interval.role.push\n            const radius = isPush ? pushRadius : pullRadius\n            const currentLength = instance.intervalLength(interval)\n            const alphaIndex = interval.alpha.index\n            const omegaIndex = interval.omega.index\n            if (alphaIndex >= joints.length || omegaIndex >= joints.length) {\n                throw new Error(`Joint not found ${interval.role.tag}:${alphaIndex},${omegaIndex}:${joints.length}`)\n            }\n            return <IOutputInterval>{\n                index: interval.index,\n                joints: [alphaIndex, omegaIndex],\n                type: isPush ? \"Push\" : \"Pull\",\n                strain: strains[interval.index],\n                stiffness: stiffnesses[interval.index],\n                linearDensity: linearDensities[interval.index],\n                role: interval.role.tag,\n                scale: interval.scale._,\n                idealLength: idealLengths[interval.index],\n                isPush,\n                length: currentLength,\n                radius,\n            }\n        }),\n    }\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\", \"ideal length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, csvNumber(interval.length), csvNumber(interval.idealLength),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    // TODO: submerged\n    // csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaCompressArrowsAlt,\n    FaDownload,\n    FaFile,\n    FaFileCsv,\n    FaParachuteBox,\n    FaSignOutAlt,\n    FaSyncAlt,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { GlobalMode, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { getFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { rotatingAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nconst PUSH_RADIUS = 0.012\nconst PULL_RADIUS = 0.005\nconst JOINT_RADIUS = 0.015\n\nexport function BottomRight({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [rotating, setRotating] = useRecoilState(rotatingAtom)\n\n    return (\n        <div className=\"text-right\">\n            <ButtonGroup>\n                {viewMode !== ViewMode.Time ? (\n                    <>\n                        <Button\n                            onClick={() => saveCSVZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFileCsv/>\n                        </Button>\n                        <Button\n                            onClick={() => saveJSONZip(getFabricOutput(tensegrity, PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS))}>\n                            <FaDownload/><FaFile/>\n                        </Button>\n                    </>\n                ) : stage > Stage.Slack ? (\n                    <>\n                        <Button disabled={stage !== Stage.Pretenst}\n                                onClick={() => tensegrity.fabric.set_altitude(10)}>\n                            <FaParachuteBox/>\n                        </Button>\n                    </>\n                ) : undefined}\n                <Button onClick={() => tensegrity.fabric.centralize()}><FaCompressArrowsAlt/></Button>\n                <Button\n                    color={rotating ? \"warning\" : \"secondary\"}\n                    onClick={() => setRotating(!rotating)}\n                >\n                    <FaSyncAlt/>\n                </Button>\n                <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}>\n                    <FaSignOutAlt/>\n                </Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, CylinderGeometry, LineBasicMaterial, Material, MeshLambertMaterial } from \"three\"\n\nimport { IInterval, IRole } from \"../fabric/tensegrity-types\"\nimport { ViewMode } from \"../storage/recoil\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(role?: IRole): string {\n    if (!role) {\n        return \"#FFFFFF\"\n    }\n    switch (role.tag) {\n        case \"[A]\":\n            return \"#191f86\"\n        case \"[B]\":\n            return \"#5739a0\"\n        case \"(a)\":\n            return \"#a20d0d\"\n        case \"(b)\":\n            return \"#eeec05\"\n        case \"(aa)\":\n            return \"#da04b7\"\n        case \"(bb)\":\n            return \"#00ff06\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport function roleColor(role?: IRole): Color {\n    return new Color(roleColorString(role))\n}\n\nexport function roleMaterial(role: IRole, ghost?: boolean): Material {\n    const color = roleColor(role)\n    const opacity = ghost ? 0.4 : 1\n    const transparent = true\n    return new MeshLambertMaterial({color, opacity, transparent})\n}\n\nexport function cylinderRadius(interval: IInterval, viewMode: ViewMode): number {\n    switch (viewMode) {\n        case ViewMode.Select:\n            return interval.role.push ? 0.05 : 0.02\n        case ViewMode.Look:\n            return interval.role.push ? 0.03 : 0.01\n        default:\n            throw new Error(\"Bad view mode\")\n    }\n}\n\nexport const CYLINDER_GEOMETRY = new CylinderGeometry(1, 1, 1, 12, 1, false)\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { LINE_VERTEX_COLORS } from \"./materials\"\n\nexport function LiveView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    return (\n        <lineSegments\n            key=\"lines\"\n            geometry={tensegrity.instance.floatView.lineGeometry}\n            material={LINE_VERTEX_COLORS}\n        />\n    )\n}\n\n//            onUpdate={self => self.geometry.computeBoundingSphere()}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { Euler, Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalRotation } from \"../fabric/tensegrity-types\"\nimport { ViewMode } from \"../storage/recoil\"\n\nimport { cylinderRadius, CYLINDER_GEOMETRY, roleMaterial } from \"./materials\"\n\nexport function LookView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const instance = tensegrity.instance\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const {alpha, omega, role} = interval\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(alpha, omega)\n                const radius = cylinderRadius(interval, ViewMode.Look)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER_GEOMETRY}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(role)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Html } from \"@react-three/drei\"\nimport * as React from \"react\"\nimport { FaMousePointer } from \"react-icons/all\"\nimport { Table } from \"reactstrap\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\n\nconst DIGITS = 1\n\nexport function IntervalDetails({instance, details, singleDetails, onClick}: {\n    instance: FabricInstance,\n    details: IIntervalDetails,\n    singleDetails: boolean,\n    onClick: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    return (\n        <Html\n            className={`interval-details ${singleDetails ? \"single-details\" : \"\"}`}\n            position={instance.intervalLocation(details.interval)}\n        >\n            <div onMouseDown={(e) => onClick(details)}>\n\n                <div className=\"details-mouse\">\n                    <FaMousePointer/>\n                </div>\n                <Table className=\"details-table\">\n                    <thead>\n                    <tr>\n                        <td colSpan={2}>{details.interval.alpha.index}-{details.interval.omega.index}</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td className=\"text-right\">Length:</td>\n                        <td className=\"text-center\">{details.length.toFixed(DIGITS)}mm</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-right\">Height:</td>\n                        <td className=\"text-center\">{(details.height).toFixed(DIGITS)}mm</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-right\">Strain:</td>\n                        <td className=\"text-center\">{(details.strain * 100).toFixed(DIGITS)}%</td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </Html>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Euler, Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { areAdjacent, IInterval, IIntervalDetails, intervalRotation } from \"../fabric/tensegrity-types\"\nimport { selectedTwistAtom, ViewMode, visibleDetailsAtom } from \"../storage/recoil\"\n\nimport { IntervalDetails } from \"./interval-details\"\nimport { cylinderRadius, CYLINDER_GEOMETRY, roleMaterial } from \"./materials\"\n\nexport function SelectView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details] = useRecoilState(visibleDetailsAtom)\n    const instance = tensegrity.instance\n    return (\n        <group>\n            {tensegrity.intervals.map((interval: IInterval) => {\n                const isPush = interval.role.push\n                if (!isPush) {\n                    if (selected) {\n                        const adjacent = selected.pushes.find(push => areAdjacent(push, interval))\n                        if (!adjacent) {\n                            return undefined\n                        }\n                    } else {\n                        return undefined\n                    }\n                }\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const radius = cylinderRadius(interval, ViewMode.Select)\n                const intervalScale = new Vector3(radius, length, radius)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER_GEOMETRY}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(interval.role)}\n                        matrixWorldNeedsUpdate={true}\n                        onDoubleClick={event => {\n                            event.stopPropagation()\n                            if (!interval.role.push) {\n                                return\n                            }\n                            if (!selected) {\n                                setSelected(tensegrity.findTwist(interval))\n                            } else {\n                                const again = selected.pushes.find(push => push.index === interval.index)\n                                if (again) {\n                                    setSelected(undefined)\n                                } else {\n                                    setSelected(tensegrity.findTwist(interval))\n                                }\n                            }\n                        }}\n                    />\n                )\n            })}\n            {details.map(d => (\n                <IntervalDetails key={`deets-${d.interval.index}`} instance={tensegrity.instance}\n                                 details={d} singleDetails={details.length === 1} onClick={clickDetails}\n                />\n            ))}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { BufferAttribute, BufferGeometry, Color, FrontSide, MeshPhongMaterial, Vector3 } from \"three\"\n\nconst MATERIAL = new MeshPhongMaterial({\n    color: new Color(\"#070707\"),\n    specular: new Color(\"#110404\"),\n    side: FrontSide,\n})\nconst KINDA = 0.866\nconst SURFACE_SCALE = 20\nconst HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(),\n]\nconst TRIANGLES = [\n    6, 0, 1,\n    6, 1, 2,\n    6, 2, 3,\n    6, 3, 4,\n    6, 4, 5,\n    6, 5, 0,\n]\nconst TRIANGLE_POSITION = TRIANGLES.map(t => HEXAGON_POINTS[t])\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return <mesh name=\"Patches\" geometry={geometry} material={MATERIAL}/>\n}\n\nfunction patchesGeometry(): BufferGeometry {\n    const geometry = new BufferGeometry()\n    const positionF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    const normalF32 = new Float32Array(TRIANGLE_POSITION.length * 3)\n    TRIANGLE_POSITION.forEach((position, index) => {\n        const faceOffset = index * 3\n        positionF32[faceOffset] = position.x\n        positionF32[faceOffset + 1] = position.y - 0.01\n        positionF32[faceOffset + 2] = position.z\n        const normal = new Vector3(0,300,0).add(position).normalize()\n        normalF32[faceOffset] = normal.x\n        normalF32[faceOffset + 1] = normal.y\n        normalF32[faceOffset + 2] = normal.z\n    })\n    geometry.setAttribute(\"position\", new BufferAttribute(positionF32, 3))\n    geometry.setAttribute(\"normal\", new BufferAttribute(normalF32, 3))\n    return geometry\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, selectedTwistAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\nimport { LiveView } from \"../view/live-view\"\nimport { LookView } from \"../view/look-view\"\nimport { SelectView } from \"../view/select-view\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nconst TOWARDS_TARGET = 0.1\nconst TOWARDS_POSITION = 0.1\n\nexport function ObjectView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [selected] = useRecoilState(selectedTwistAtom)\n    const [aim, setAim] = useState(new Vector3())\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    const [rotating] = useRecoilState(rotatingAtom)\n    useFrame(state => {\n        if (viewMode === ViewMode.Time) {\n            tensegrity.iterate()\n        }\n        const midpoint = selected ? tensegrity.instance.twistLocation(selected) : tensegrity.instance.midpoint\n        const toMidpoint = new Vector3().subVectors(midpoint, aim).multiplyScalar(TOWARDS_TARGET)\n        if (viewMode === ViewMode.Time || toMidpoint.lengthSq() > 0.001) {\n            setAim(new Vector3().copy(aim).add(toMidpoint))\n        }\n        if (stage === Stage.Growing) {\n            state.camera.position.y += (midpoint.y - state.camera.position.y) * TOWARDS_POSITION\n            const distanceChange = state.camera.position.distanceTo(midpoint) - tensegrity.instance.view.radius() * 1.5\n            const towardsDistance = new Vector3().subVectors(midpoint, state.camera.position).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            state.camera.position.add(towardsDistance)\n        } else {\n            if (state.camera.position.y < 0) {\n                state.camera.position.y -= state.camera.position.y * TOWARDS_POSITION * 20\n            }\n        }\n\n    })\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <LiveView tensegrity={tensegrity}/>\n            case ViewMode.Select:\n                return <SelectView tensegrity={tensegrity} clickDetails={clickDetails}/>\n            case ViewMode.Look:\n                return <LookView tensegrity={tensegrity}/>\n        }\n    }\n    return (\n        <group>\n            <OrbitControls autoRotate={rotating} target={aim} zoomSpeed={0.5} maxDistance={200}/>\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars radius={400}/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Canvas } from \"@react-three/fiber\"\nimport { default_world_feature, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { stageName, WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { adjacentPullsFromTwist } from \"../fabric/twist-logic\"\nimport { postGrowthAtom, selectedTwistAtom, ViewMode, viewModeAtom, visibleDetailsAtom } from \"../storage/recoil\"\nimport { BottomLeft } from \"../view/bottom-left\"\nimport { BottomRight } from \"../view/bottom-right\"\nimport { featureMapping } from \"../view/feature-mapping\"\n\nimport { ObjectView } from \"./object-view\"\n\nexport function ConstructionView({tenscript, createInstance}: {\n    tenscript: ITenscript,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    const mainInstance = useMemo(() => createInstance(tenscript.featureValues), [])\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details, setDetails] = useRecoilState(visibleDetailsAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const emergency = (message: string) => console.error(\"build view\", message)\n    const [stage, updateStage] = useState<Stage | undefined>()\n\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.stage$.subscribe(updateStage) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const createTensegrity: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Time)\n            setPostGrowth(ts.postGrowthOp)\n            const featureValues = ts.featureValues\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            const builder =  new TenscriptBuilder(new Vector3(), ts, tree)\n            setTensegrity(new Tensegrity(mainInstance, countdown, builder))\n        } catch (e) {\n            throw new Error(\"Problem running\")\n        }\n        return true\n    }\n    useEffect(() => {\n        createTensegrity(tenscript, emergency)\n    }, [])\n    useEffect(() => {\n        if (viewMode === ViewMode.Time) {\n            setSelected(undefined)\n        }\n    }, [viewMode])\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(selected.pushes.map(push => tensegrity.getIntervalDetails(push)))\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n\n    const Title = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <span>{stage !== undefined ? stageName(stage) : \"New\"} {tensegrity ? `\"${tensegrity.name}\"` : \"\"}</span>\n            case ViewMode.Select:\n                return <span>Double click to select a twist</span>\n            case ViewMode.Look:\n                return <span>{tensegrity ? `\"${tensegrity.name}\"` : \"\"}</span>\n        }\n    }\n\n    // const camera = useRef<Cam>()\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            {!tensegrity ? (\n                <div className=\"h-100\">\n                    <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                        <h1><FaPlay/></h1>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"h-100\">\n                    <Canvas\n                        style={{\n                            backgroundColor: \"black\",\n                            borderStyle: \"solid\",\n                            borderColor: viewMode !== ViewMode.Time ? \"#f0ad4e\" : \"black\",\n                            cursor: viewMode === ViewMode.Select ? \"pointer\" : \"default\",\n                            borderWidth: \"2px\",\n                        }}\n                    >\n                        <RecoilBridge>\n                            <ObjectView\n                                tensegrity={tensegrity}\n                                clickDetails={({interval}) => {\n                                    if (!selected || !tensegrity) {\n                                        return\n                                    }\n                                    if (details.length === 1) { // one pull, presumably\n                                        setDetails(adjacentPullsFromTwist(tensegrity, selected).map(pull => tensegrity.getIntervalDetails(pull)))\n                                    } else {\n                                        if (interval.role.push) {\n                                            setDetails(adjacentPullsFromTwist(tensegrity, selected).map(pull => tensegrity.getIntervalDetails(pull)))\n                                        } else {\n                                            setDetails(details.filter(d => d.interval.index === interval.index))\n                                        }\n                                    }\n                                }}\n                            />\n                        </RecoilBridge>\n                    </Canvas>\n                    <div id=\"top-middle\">\n                        <Title/>\n                    </div>\n                    <div id=\"bottom-left\">\n                        <BottomLeft/>\n                    </div>\n                    <div id=\"bottom-right\">\n                        <BottomRight tensegrity={tensegrity}/>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Vector3 } from \"three\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 35\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#091009\")\nexport const FLORA_PATCH_COLOR = new Color(\"#100902\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./runner-logic\"\nimport { ITwitchConfig } from \"./twitcher\"\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        return 16\n    }\n\n    public withMutations(directionGeneNames: GeneName[], mutateTwitchConfig: boolean): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionGeneNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (mutateTwitchConfig) {\n            const twitchConfig = getGene(GeneName.TwitchConfig, genesCopy)\n            mutateGene(() => this.roll(), twitchConfig)\n            twitchConfig.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}: IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public chooseFrom(total: number): number {\n        return Math.floor(total * diceToNuance(this.nextDie(), this.nextDie()))\n    }\n\n    public readMuscleTwitch(loop: IMuscle[], config: ITwitchConfig): ITwitch {\n        const {attackPeriod, decayPeriod, twitchNuance} = config\n        const muscle = loop[this.nextDie().index]\n        return {\n            muscle, twitchNuance,\n            when: diceToInteger(36, this.nextDie(), this.nextDie()),\n            attack: (2 + diceToFloat(6, this.nextDie())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.nextDie())) * decayPeriod,\n        }\n    }\n\n    public readFeatureValue(low: number, high: number): number {\n        const nuance = diceToNuance(this.nextDie(), this.nextDie(), this.nextDie())\n        return low * nuance + high * (1 - nuance)\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    public nextDie(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n}\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\"},\n    {index: 1, numeral: \"2\", symbol: \"⚁\"},\n    {index: 2, numeral: \"3\", symbol: \"⚂\"},\n    {index: 3, numeral: \"4\", symbol: \"⚃\"},\n    {index: 4, numeral: \"5\", symbol: \"⚄\"},\n    {index: 5, numeral: \"6\", symbol: \"⚅\"},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(...dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(...dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(...dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n\nexport enum GeneName {\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n    TwitchConfig = \"TwitchConfig\",\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { Flora } from \"./flora\"\nimport { emptyGenome, IGeneData } from \"./genome\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { Runner } from \"./runner\"\n\nexport class Patch {\n    public runner?: Runner\n    public flora?: Flora\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { SurfaceCharacter, WorldFeature } from \"eig\"\nimport { atom, selector } from \"recoil\"\n\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp } from \"../fabric/tensegrity\"\nimport { Spin } from \"../fabric/tensegrity-types\"\n\nimport { Island } from \"./island\"\nimport { Patch } from \"./patch\"\n\nconst LEG = 5\nconst SCALE = 90\n\nexport const RUNNER_CODE: ITenscript = {\n    name: \"Runner\",\n    spin: Spin.LeftRight,\n    code: [\n        `(A1,B(${LEG},S${SCALE}),C(${LEG},S${SCALE}),D(${LEG},S${SCALE}))`,\n    ],\n    postGrowthOp: PostGrowthOp.Bowtie,\n    markDefStrings: {},\n    surfaceCharacter: SurfaceCharacter.Bouncy,\n    featureValues: {\n        [WorldFeature.IterationsPerFrame]: 300,\n        [WorldFeature.Drag]: 200,\n        [WorldFeature.StiffnessFactor]: 150,\n        [WorldFeature.Gravity]: 500,\n    },\n}\n\nexport const FLORA_CODE: ITenscript = {\n    name: \"Flora\",\n    postGrowthOp: PostGrowthOp.Bowtie,\n    code: [\"(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0))\"],\n    spin: Spin.Left,\n    markDefStrings: {\n        0: \"subtree(b(3, S85),c(3, S85),d(3, S85))\",\n    },\n    surfaceCharacter: SurfaceCharacter.Frozen,\n    featureValues: {},\n}\n\nexport const islandAtom = atom<Island>({\n    key: \"island\",\n    default: new Island(\"galapagos\", 383),\n})\n\nexport const homePatchSelector = selector<Patch>({\n    key: \"MySelector\",\n    get: ({get}) => get(islandAtom).patches[0], // todo: for now\n})\n\nexport const destinationAtom = atom<number>({\n    key: \"destination\",\n    default: 0,\n})\n\nexport const showDetailsAtom = atom<boolean>({\n    key: \"showDetails\",\n    default: false,\n})\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IJoint, ITwistFace } from \"../fabric/tensegrity-types\"\n\nimport { GeneName, Genome } from \"./genome\"\nimport { Patch } from \"./patch\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    ToA = \"ToA\",\n    ToB = \"ToB\",\n    ToC = \"ToC\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.ToA:\n            return GeneName.ToA\n        case Direction.ToB:\n            return GeneName.ToB\n        case Direction.ToC:\n            return GeneName.ToC\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IMuscle {\n    interval: IInterval\n    alphaInterval?: IInterval\n    omegaInterval?: IInterval\n}\n\nexport interface IRunnerState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    midpoint: Vector3,\n    genome: Genome\n    loopMuscles: IMuscle[][]\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function findTopFace(tensegrity: Tensegrity): ITwistFace {\n    const sortedFaces = tensegrity.faces.sort((a, b) => {\n        const aa = a.joint\n        const bb = b.joint\n        if (!aa || !bb) {\n            throw new Error(\"faces without joints\")\n        }\n        const locA = tensegrity.instance.jointLocation(aa)\n        const locB = tensegrity.instance.jointLocation(bb)\n        return locA.y - locB.y\n    })\n    const top = sortedFaces.pop()\n    sortedFaces.forEach(face => tensegrity.faceToTriangle(face))\n    if (!top) {\n        throw new Error(\"no top face\")\n    }\n    return top\n}\n\nexport function calculateDirections(instance: FabricInstance, toA: Vector3, toB: Vector3, toC: Vector3, face?: ITwistFace): void {\n    if (!face) {\n        return\n    }\n    const joint = face.joint\n    if (!joint) {\n        return undefined\n    }\n    const locations = instance.floatView.jointLocations\n    const fromTo = (fromJoint: IJoint, toJoint: IJoint, vector: Vector3) => {\n        const from = fromJoint.index * 3\n        const to = toJoint.index * 3\n        vector.set(locations[to] - locations[from], 0, locations[to + 2] - locations[from + 2])\n        vector.normalize()\n    }\n    fromTo(joint, face.ends[0], toA)\n    fromTo(joint, face.ends[1], toB)\n    fromTo(joint, face.ends[2], toC)\n}\n\nexport function extractLoopMuscles(tensegrity: Tensegrity): IMuscle[][] {\n    const loopMuscles: IMuscle[][] = []\n    tensegrity.withPulls(() => {\n        tensegrity.loops.forEach(loop => loopMuscles.push(loop.map(interval => {\n            const alphaPulls = interval.alpha.pulls\n            const omegaPulls = interval.omega.pulls\n            if (!alphaPulls || !omegaPulls) {\n                throw new Error(\"missing pulls\")\n            }\n            const onlyMuscles = ({role}: IInterval) => role.tag === \"(aa)\" || role.tag === \"(bb)\"\n            const alphaInterval = alphaPulls.find(onlyMuscles)\n            const omegaInterval = omegaPulls.find(onlyMuscles)\n            if (!alphaInterval && !omegaInterval) {\n                throw new Error(\"cannot find any intervals\")\n            }\n            return <IMuscle>{interval, alphaInterval, omegaInterval}\n        })))\n    })\n    return loopMuscles\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { RUNNER_CODE } from \"./evo-state\"\nimport { fromGeneData, Genome } from \"./genome\"\nimport { Runner } from \"./runner\"\nimport { directionGene } from \"./runner-logic\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [4, 5, 6, 7, 8, 9],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    SurvivorsAdvance = \"Survivors advance\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersOvertake = \"Challengers try to overtake\",\n    SurvivorsStored = \"Survivors stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    runner: Runner\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Population {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public midpoint: Vector3\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.SurvivorsAdvance\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n\n    constructor(\n        private ancestor: Runner,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (ancestor.embryo) {\n            throw new Error(\"Cannot create evolution from runner which is not pretenst\")\n        }\n        this.midpoint = ancestor.state.midpoint\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Runner[] = []\n        const storedGenes = ancestor.state.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoRunner(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((runner, index) => ({\n            runner,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Population | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Population(this.ancestor, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.SurvivorsAdvance:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({runner}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.runner.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Runner[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].runner.state.genome.geneData)\n                    challengers.push(this.createAutoRunner(genome.withMutations([directionGene(this.ancestor.direction)], false)))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{runner: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.runner.adoptFabric(this.ancestor.state.instance.fabricClone)\n                    const runner = challenger.runner.recycled(instance, parent.runner.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    runner.autopilot = true\n                    return {runner, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersOvertake\n                break\n            case EvolutionPhase.ChallengersOvertake:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({runner, name}) => {\n                    const cycleCount = runner.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        runner.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.SurvivorsStored\n                }\n                break\n            case EvolutionPhase.SurvivorsStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.ancestor.state.patch.storedGenes = winners.map(({runner}) => runner.state.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({runner}) => !runner.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.SurvivorsAdvance\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        this.midpoint.set(0, 0, 0)\n        this.winners.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.challengers.forEach(({runner}) => this.midpoint.add(runner.state.midpoint))\n        this.midpoint.multiplyScalar(1.0 / (this.winners.length + this.challengers.length))\n        return this.phase\n    }\n\n    public get target(): Vector3 {\n        return this.ancestor.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoRunner(genome: Genome): Runner {\n        const instance = this.createInstance(RUNNER_CODE.featureValues, this.ancestor.state.instance.fabricClone)\n        const runner = this.ancestor.recycled(instance, genome.geneData)\n        runner.autopilot = true\n        return runner\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            const event = evolver.runner.distanceFromTarget\n            evolver.proximityHistory.push(event)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({runner, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = runner.state.genome.tosses\n    const reachedTarget = runner.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Runner } from \"./runner\"\n\nexport function RunnerView({runner}: { runner: Runner }): JSX.Element {\n    const {topFaceLocation, target, state, showDirection} = runner\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!showDirection || !topFaceLocation ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topFaceLocation.x, topFaceLocation.y, topFaceLocation.z,\n                                    target.x, topFaceLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#FFFFFF\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        quaternion={runner.directionQuaternion}\n                        position={topFaceLocation}\n                    >\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    0,0,0,\n                                    0,0,5,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#f80303\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\n\nimport { Population } from \"./population\"\nimport { RunnerView } from \"./runner-view\"\n\nexport function PopulationView({population}: { population: Population }): JSX.Element {\n    const height = 6\n    const {midpoint, target} = population\n    return (\n        <group>\n            {population.winners.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index}`} runner={runner}/>\n            ))}\n            {!population.challengersVisible ? undefined : population.challengers.map(({runner}, index) => (\n                <RunnerView key={`evolving-${index + population.winners.length}`} runner={runner}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#ffffff\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Sky } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { DoubleSide, Vector3 } from \"three\"\n\nimport { destinationAtom } from \"./evo-state\"\nimport { Happening } from \"./evo-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { FAUNA_PATCH_COLOR, FLORA_PATCH_COLOR, SIX, SUN_POSITION } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, Population } from \"./population\"\nimport { PopulationView } from \"./population-view\"\nimport { Runner } from \"./runner\"\nimport { Direction } from \"./runner-logic\"\nimport { RunnerView } from \"./runner-view\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.05\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 5\n\nexport function IslandView({island, happening, runner, population, evolutionPhase, countdownToEvo, stopEvo}: {\n    island: Island,\n    happening: Happening,\n    runner?: Runner,\n    population?: Population,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvo: (countdown: number) => void,\n    stopEvo: (nextEvolution?: Population) => void,\n}): JSX.Element {\n    const [rotating, setRotating] = useState(false)\n    const [destination, setDestination] = useRecoilState(destinationAtom)\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const [target, updateTarget] = useState(new Vector3(0, 1, 0))\n\n    function adjustTarget(midpoint: Vector3): void {\n        updateTarget(new Vector3().subVectors(midpoint, target).multiplyScalar(TOWARDS_TARGET).add(target))\n    }\n\n    useFrame((state) => {\n        const {camera, clock} = state\n        if (clock.elapsedTime === 0) {\n            camera.position.set(30, 30, 10)\n        }\n        const approachDistance = (distance: number) => {\n            const positionToTarget = new Vector3().subVectors(camera.position, target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            camera.position.y += (TARGET_HEIGHT - camera.position.y) * TOWARDS_HEIGHT\n            camera.position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(9)\n                }\n                break\n            case Happening.Resting:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(12)\n                }\n                break\n            case Happening.Running:\n                if (runner) {\n                    runner.iterate()\n                    adjustTarget(runner.state.midpoint)\n                    approachDistance(9)\n                }\n                break\n            case Happening.Evolving:\n                if (population) {\n                    switch (population.iterate()) {\n                        case EvolutionPhase.EvolutionDone:\n                            console.log(\"Evolution DONE\")\n                            stopEvo()\n                            break\n                        case EvolutionPhase.EvolutionHarder:\n                            console.log(\"Evolution advance...\")\n                            stopEvo(population.withReducedCyclePattern)\n                            break\n                    }\n                    adjustTarget(population.midpoint)\n                    approachDistance(25)\n                    evolutionPhase(population.phase)\n                }\n                break\n        }\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvo(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    useEffect(() => {\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n        setRotating(happening === Happening.Evolving)\n    }, [happening])\n\n    function clickPatch(patch: Patch): void {\n        if (patch.flora) {\n            patch.flora.removeRandomInterval()\n            console.log(\"remove\", patch.name)\n        } else if (runner && runner.direction === Direction.Rest) {\n            setDestination((destination + 1) % SIX)\n        }\n    }\n\n    return (\n        <group>\n            <OrbitControls target={target} maxDistance={250} minDistance={1}\n                           enablePan={false} autoRotateSpeed={0.6} autoRotate={rotating}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.5}\n            />\n            <scene>\n                {(population && happening === Happening.Evolving) ? (\n                    <PopulationView population={population}/>\n                ) : (runner ? (\n                    <RunnerView runner={runner}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const array = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={() => clickPatch(patch)}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                side={DoubleSide}\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={array}\n                                    count={array.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                <Sky\n                    distance={1000000}\n                    rayleigh={3}\n                    inclination={0.505}\n                    mieCoefficient={0.001}\n                    mieDirectionalG={0.93}\n                    turbidity={7.5}\n                />\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\"/>\n            </scene>\n        </group>\n    )\n}\n\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IMuscle, IRunnerState } from \"./runner-logic\"\n\nexport type TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nexport interface ITwitchConfig {\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IRunnerState) {\n        const genome = this.state.genome\n        const readTwitchConfig = (): ITwitchConfig => {\n            const reader = genome.createReader(GeneName.TwitchConfig)\n            const musclePeriod = reader.readFeatureValue(800, 1200)\n            return <ITwitchConfig>{\n                twitchNuance: reader.readFeatureValue(0.1, 0.3),\n                musclePeriod,\n                attackPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n                decayPeriod: reader.readFeatureValue(0.5, 1) * musclePeriod,\n            }\n        }\n        this.config = readTwitchConfig()\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, this.state.loopMuscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: TwitchFunction): boolean {\n        const state = this.state\n        state.timeSlice++\n        if (state.timeSlice >= 36) {\n            state.timeSlice = 0\n            this.cycleCount++\n            return true\n        }\n        const twitchCycle = this.twitchCycles[state.direction]\n        if (twitchCycle) {\n            this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(reader: GeneReader, config: ITwitchConfig, loopMuscles: IMuscle[][], totalTwitches: number) {\n        const loops = [...loopMuscles]\n        while (totalTwitches-- > 0) {\n            const chosen = reader.chooseFrom(loops.length)\n            const twitch = reader.readMuscleTwitch(loops[chosen], config)\n            loops.splice(chosen, 1)\n            this.addTwitch(twitch.when, twitch)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.interval.index}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: TwitchFunction): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, ITwistFace } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, IGeneData } from \"./genome\"\nimport {\n    calculateDirections,\n    Direction,\n    directionGene,\n    DIRECTIONS,\n    extractLoopMuscles,\n    findTopFace,\n    IMuscle,\n    IRunnerState,\n} from \"./runner-logic\"\nimport { Twitcher, TwitchFunction } from \"./twitcher\"\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\nconst MAX_HISTORY_LENGTH = 20\n\nexport class Runner {\n\n    public toA = new Vector3(1, 0, 0)\n    public toB = new Vector3(0, 0, 1)\n    public toC = new Vector3(0, 0, -1)\n\n    private shapingTime = 150\n    private twitcher?: Twitcher\n    private topFace?: ITwistFace\n    private currentTwitchAge = 0\n\n    constructor(public readonly state: IRunnerState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n        this.currentTwitchAge = this.twitchAge\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Runner {\n        const genome = fromGeneData(geneData ? geneData : this.state.patch.storedGenes[0])\n        const midpoint = new Vector3().copy(this.state.midpoint)\n        const state: IRunnerState = {...this.state, instance, midpoint, genome, directionHistory: []}\n        const runner = new Runner(state)\n        runner.topFace = this.topFace\n        calculateDirections(runner.state.instance, runner.toA, runner.toB, runner.toC, this.topFace)\n        return runner\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        return this.state.genome.withMutations(geneNames, Math.random() > 0.9).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public get distanceFromTarget(): number {\n        return this.state.midpoint.distanceTo(this.target)\n    }\n\n    public iterate(): boolean {\n        const instance = this.state.instance\n        const view = instance.view\n        this.state.midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const embryo = this.embryo\n        if (embryo) {\n            const busy = embryo.iterate()\n            if (busy) {\n                return true\n            }\n            const stage = embryo.stage$.getValue()\n            switch (stage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        embryo.stage = Stage.Slack\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Slack:\n                    this.topFace = findTopFace(embryo)\n                    embryo.stage = Stage.Pretensing\n                    return false\n                case Stage.Pretensing:\n                    return false\n                case Stage.Pretenst:\n                    this.state.loopMuscles = extractLoopMuscles(embryo)\n                    this.state.instance.refreshFloatView()\n                    calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n                    this.checkDirection()\n                    this.twitcher = new Twitcher(this.state)\n                    this.embryo = undefined\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            this.state.instance.iterate()\n            if (this.twitcher) {\n                const newTwitchAge = this.twitchAge\n                if (newTwitchAge <= this.currentTwitchAge) {\n                    return true\n                }\n                this.currentTwitchAge = newTwitchAge\n                const twitch: TwitchFunction = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => {\n                    const twitchInterval = (interval?: IInterval) => {\n                        if (interval) {\n                            this.state.instance.fabric.twitch_interval(interval.index, attack, decay, twitchNuance)\n                            // console.log(`twitch ${interval.index}: ${attack}, ${decay}, ${twitchNuance}`)\n                        }\n                    }\n                    twitchInterval(muscle.alphaInterval)\n                    twitchInterval(muscle.omegaInterval)\n                }\n                if (this.state.autopilot && this.twitcher.tick(twitch)) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.state.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get topFaceLocation(): Vector3 | undefined {\n        const face = this.topFace\n        if (!face) {\n            return undefined\n        }\n        const joint = face.joint\n        if (!joint) {\n            return undefined\n        }\n        return this.state.instance.jointLocation(joint)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            if (state.direction === Direction.Rest) {\n                console.error(\"direction is REST??\")\n                return\n            }\n            state.directionHistory.push(state.direction)\n            if (state.directionHistory.length > MAX_HISTORY_LENGTH) {\n                state.directionHistory.shift()\n            }\n        }\n    }\n\n    private get twitchAge(): number {\n        return this.state.instance.fabric.age / 600\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.ToA:\n                    return this.toA\n                case Direction.ToB:\n                    return this.toB\n                case Direction.ToC:\n                    return this.toC\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        calculateDirections(this.state.instance, this.toA, this.toB, this.toC, this.topFace)\n        const matchA = toTarget.dot(this.toA)\n        const matchB = toTarget.dot(this.toB)\n        const matchC = toTarget.dot(this.toC)\n        if (matchA > matchB && matchA > matchC) {\n            return Direction.ToA\n        }\n        if (matchB > matchA && matchB > matchC) {\n            return Direction.ToB\n        }\n        if (matchC > matchA && matchC > matchB) {\n            return Direction.ToC\n        }\n        return Direction.Rest\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        toTarget.subVectors(this.target, this.state.midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\nimport { useSetRecoilState } from \"recoil\"\n\nimport { showDetailsAtom } from \"./evo-state\"\nimport { IEvolutionSnapshot, letter } from \"./population\"\n\nexport function StatsView({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"text-monospace d-inline-flex\" onClick={() => setShowStats(false)}>\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    const setShowStats = useSetRecoilState(showDetailsAtom)\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\" onClick={() => setShowStats(false)}>\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Canvas } from \"@react-three/fiber\"\nimport { Stage, SurfaceCharacter } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBaby, FaDna, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useRecoilValue } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode, stageName } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nimport { destinationAtom, homePatchSelector, islandAtom, RUNNER_CODE, showDetailsAtom } from \"./evo-state\"\nimport { emptyGenome, fromGeneData } from \"./genome\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\nimport { EvolutionPhase, EVO_PARAMETERS, IEvolutionSnapshot, Population } from \"./population\"\nimport { Runner } from \"./runner\"\nimport { Direction, IRunnerState } from \"./runner-logic\"\nimport { EvolutionInfo, StatsView } from \"./stats-view\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function EvoView({createBodyInstance}: { createBodyInstance: CreateInstance }): JSX.Element {\n    const [island] = useRecoilState(islandAtom)\n    const homePatch = useRecoilValue(homePatchSelector)\n    const destination = useRecoilValue(destinationAtom)\n    const [showStats, setShowStats] = useRecoilState(showDetailsAtom)\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [runner, setRunner] = useState(() => newRunner(homePatch))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [population, setPopulation] = useState<Population | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.SurvivorsAdvance)\n    const [stage, updateStage] = useState<Stage | undefined>(undefined)\n\n    function newRunner(patch: Patch): Runner {\n        const targetPatch = patch.adjacent[0]\n        if (!targetPatch) {\n            throw new Error(\"No adjacent\")\n        }\n        const storedGenome = patch.storedGenes[0]\n        const genome = storedGenome ? fromGeneData(storedGenome) : emptyGenome()\n        const instance = createBodyInstance(RUNNER_CODE.featureValues)\n        instance.world.set_surface_character(SurfaceCharacter.Sticky)\n        const state: IRunnerState = {\n            patch,\n            targetPatch,\n            instance,\n            midpoint: new Vector3().copy(patch.center),\n            genome,\n            loopMuscles: [],\n            direction: Direction.ToA,\n            directionHistory: [],\n            autopilot: false,\n            timeSlice: 10,\n            twitchesPerCycle: 10,\n        }\n        const tree = compileTenscript(RUNNER_CODE, (err) => {\n            throw new Error(\"unable to compile runner: \" + err)\n        })\n        if (!tree) {\n            throw new Error(\"no tree\")\n        }\n        const builder = new TenscriptBuilder(patch.center, RUNNER_CODE, tree)\n        const embryo = new Tensegrity(instance, 1000, builder)\n        return new Runner(state, embryo)\n    }\n\n    // function newFlora(patch: Patch, instance: FabricInstance): Flora {\n    //     const tree = compileTenscript(FLORA_CODE, (err) => {\n    //         throw new Error(\"unable to compile sat tree: \" + err)\n    //     })\n    //     if (!tree) {\n    //         throw new Error(\"no tree\")\n    //     }\n    //     const tensegrity = new Tensegrity(patch.center, percentOrHundred(), instance, 1000, FLORA_CODE, tree)\n    //     return new Flora(patch.name, tensegrity)\n    // }\n\n    useEffect(() => {\n        if (runner) {\n            const adjacent = runner.state.patch.adjacent[destination]\n            if (adjacent) {\n                runner.state.targetPatch = adjacent\n            }\n        }\n    }, [destination])\n\n    useEffect(() => {\n        if (!runner || !runner.embryo) {\n            updateStage(undefined)\n            return\n        }\n        const sub = runner.embryo.stage$.subscribe((newStage: Stage) => {\n            if (newStage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateStage(newStage)\n        })\n        return () => sub.unsubscribe()\n    }, [runner])\n\n    useEffect(() => {\n        if (!population) {\n            return\n        }\n        const sub = population.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [population])\n\n    const evolveWithPattern = (toEvolve: Runner, pattern: number[]) => {\n        if (population) {\n            setPopulation(population.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setPopulation(new Population(toEvolve, createBodyInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (runner && countdown === 0) {\n            evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Population) => {\n        // todo: free up current evolution?\n        setPopulation(nextEvolution)\n        if (!nextEvolution) {\n            setRunner(newRunner(homePatch))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <RecoilBridge>\n                    <IslandView\n                        island={island}\n                        happening={happening}\n                        runner={runner}\n                        population={population}\n                        evolutionPhase={evolutionPhase => {\n                            if (evolutionPhase !== phase) {\n                                setPhase(evolutionPhase)\n                            }\n                        }}\n                        countdownToEvo={countdownToEvolution}\n                        stopEvo={stopEvolution}\n                    />\n                </RecoilBridge>\n            </Canvas>\n            {!runner ? <h1>no runner</h1> : (happening === Happening.Developing) ? (\n                !stage ? <h1>nothing</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    runner={runner}\n                    happening={happening}\n                    evoCountdown={evolutionCountdown}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        runner.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(runner, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setRunner(newRunner(homePatch))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        runner.direction = Direction.Rest\n                    }}\n                />\n            )}\n            {!population ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {showStats ? undefined : (\n                            <Button color=\"info\" onClick={() => setShowStats(true)}>\n                                Phase: {phase}<br/>\n                                {snapshots.length === 0 ? undefined :\n                                    <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                                }\n                            </Button>\n                        )}\n                    </div>\n                    {!showStats ? undefined : (\n                        <EvolutionStatsView happening={happening} snapshots={snapshots}/>\n                    )}\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({\n                            runner,\n                            happening,\n                            evoCountdown,\n                            toRunning,\n                            toRest,\n                            toEvolving,\n                            toRebirth,\n                        }: {\n    runner?: Runner,\n    happening: Happening,\n    evoCountdown: number,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evoCountdown >= 0 ? evoCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !runner ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, snapshots}: {\n    happening: Happening,\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return (\n                <div id=\"evolution-stats\">\n                    {snapshots.length > 0 ? (\n                        <StatsView snapshots={snapshots}/>\n                    ) : (\n                        <h2 className=\"p-2\">First round, please wait</h2>\n                    )}\n                </div>\n            )\n    }\n}\n","import { SurfaceCharacter, WorldFeature } from \"eig\"\n\nimport { compileTenscript, ITenscript } from \"./tenscript\"\nimport { PostGrowthOp } from \"./tensegrity\"\nimport { Spin } from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS: ITenscript[] = [\n    {\n        name: \"Phi\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"()\"],\n    },\n    {\n        name: \"One\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.NoOp,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(1)\"],\n        jobs: [\n            {\n                age: 30000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 300,\n        },\n    },\n    {\n        name: \"Axoneme\",\n        spin: Spin.Left,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        code: [\"(30,S95)\"],\n    },\n    {\n        name: \"Knee\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(3,b3)\"],\n    },\n    {\n        name: \"Jack\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b2,c2,d2)\"],\n    },\n    {\n        name: \"Star\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\"],\n    },\n    {\n        name: \"Tripod with Knees\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\"],\n    },\n    {\n        name: \"Zigzag\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(c(3,MA1),d(7,b(7,c(7,d(7,c(7,d(3,MA1)))))))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n    },\n    {\n        name: \"Diamond\",\n        spin: Spin.RightLeft,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"   a(5,\",\n            \"      b(5,b(5,b(2,MA3)),c(5,c(2,MA4))),\",\n            \"      c(5,b(5,b(2,MA1)),c(5,c(2,MA5))),\",\n            \"      d(5,b(5,b(2,MA6)),c(5,c(2,MA2)))\",\n            \"   )\",\n            \"   b(5,b(5,b(2,MA5)),c(5,c(2,MA3))),\",\n            \"   c(5,b(5,b(2,MA2)),c(5,c(2,MA1))),\",\n            \"   d(5,b(5,b(2,MA4)),c(5,c(2,MA6)))\",\n            \")\",\n        ],\n        markDefStrings: {\n            1: \"join\",\n            2: \"join\",\n            3: \"join\",\n            4: \"join\",\n            5: \"join\",\n            6: \"join\",\n        },\n    },\n    {\n        name: \"Composed Tree\",\n        spin: Spin.Left,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(6,b(4,MA1),c(4,MA1),d(4,MA1))\"],\n        markDefStrings: {\n            1: \"subtree(b5,c5,d5)\",\n        },\n    },\n    {\n        name: \"Equus Lunae\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"  A(16,S95,Md0),\",\n            \"  b(16,S95,Md0),\",\n            \"  a(16,S95,Md0),\",\n            \"  B(16,S95,Md0)\",\n            \")\",\n        ],\n        markDefStrings: {\n            0: \"shaping-distance-60\",\n        },\n    },\n    {\n        name: \"Runner\",\n        spin: Spin.LeftRight,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(A1,B(5,S90),C(5,S90),D(5,S90))\"],\n    },\n    {\n        name: \"Infinity\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"A(11,S88,MA1),b(11,S88,MA1),\",\n            \"a(11,S88,MA2),B(11,S88,MA2)\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n        },\n    },\n    {\n        name: \"Propellor Tree\",\n        spin: Spin.LeftRight,\n        postGrowthOp: 3,\n        surfaceCharacter: 2,\n        code: [\n            \"(\",\n            \"  a(5,S110),\",\n            \"  B(11,S90,MA3),\",\n            \"  b(11,S90,MA1),\",\n            \"  C(11,S90,MA2),\",\n            \"  c(11,S90,MA3),\",\n            \"  D(11,S90,MA1),\",\n            \"  d(11,S90,MA2),\",\n            \")\",\n        ],\n        featureValues: {},\n        markDefStrings: {\n            \"1\": \"join\",\n            \"2\": \"join\",\n            \"3\": \"join\",\n            \"4\": \"join\",\n        },\n    },\n    {\n        name: \"Halo by Crane\",\n        spin: Spin.Left,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(5,S92,b(12,S92,MA1),d(11,S92,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.Gravity]: 50,\n            [WorldFeature.IterationsPerFrame]: 1000,\n        },\n    },\n    {\n        name: \"Convergence\",\n        spin: Spin.LeftRight,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(a2,b(10,S90,MA1),c(10,S90,MA1),d(10,S90,MA1))\"],\n        markDefStrings: {\n            1: \"join\",\n        },\n        jobs: [\n            {\n                age: 60000,\n                todo: \"pretensing\",\n            },\n        ],\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n        },\n    },\n    {\n        name: \"Headless Hug\",\n        spin: Spin.LeftRight,\n        scale: 105,\n        postGrowthOp: PostGrowthOp.BowtieFaces,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\n            \"(\",\n            \"A(OOOOXOO,S95,MA0),\",\n            \"b(OOOOXOO,S95,MA0),\",\n            \"a(3,C(XOOOXOO,S93,MA3),S90,MA2),\",\n            \"B(3,C(XOOOXOO,S93,MA3),S90,MA2)\",\n            \")\",\n        ],\n        markDefStrings: {\n            \"0\": \"shaping-distance-5\",\n            \"2\": \"shaping-distance-7\",\n            \"3\": \"shaping-distance-5\",\n        },\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n            [WorldFeature.PushOverPull]: 400,\n        },\n        jobs: [\n            {\n                age: 100000,\n                todo: \"pretensing\",\n            },\n            {\n                age: 110000,\n                todo: \"conflict\",\n            },\n            {\n                age: 120000,\n                todo: \"orient-0\",\n            },\n        ],\n    },\n    {\n        name: \"Triped\",\n        spin: Spin.LeftRight,\n        scale: 100,\n        postGrowthOp: PostGrowthOp.Bowtie,\n        surfaceCharacter: SurfaceCharacter.Bouncy,\n        code: [\"(B(9,S90,MA1),C(9,S90,MA1),D(9,S90,MA1))\"],\n        markDefStrings: {\n            1: \"shaping-distance-25\",\n        },\n        featureValues: {\n            [WorldFeature.IterationsPerFrame]: 1000,\n            [WorldFeature.PushOverPull]: 1000,\n        },\n        jobs: [\n            {\n                age: 80000,\n                todo: \"pretensing\",\n            },\n        ],\n    },\n    {\n        name: \"Arch\",\n        spin: Spin.Left,\n        scale: 1600,\n        postGrowthOp: PostGrowthOp.Faces,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        code: [\"(A(3,MA0), a(4,MA0))\"],\n        markDefStrings: {\n            0: \"pretenst-distance-35\",\n        },\n        featureValues: {\n            [WorldFeature.PushOverPull]: 1000,\n            [WorldFeature.IterationsPerFrame]: 500,\n        },\n        jobs: [\n            {\n                age: 50000,\n                todo: \"orient-0\",\n            },\n        ],\n    },\n]\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(tenscript => {\n    compileTenscript(tenscript, (message: string) => {\n        throw new Error(`Bootstrap compile error in \"${tenscript}\"! ${message}`)\n    })\n    return tenscript\n})\n\nexport const CONSTRUCTIONS = BOOTSTRAP.filter(({scale}) => scale !== undefined)\n","import { Vector3 } from \"three\"\n\nimport { ITensegrityBuilder, Tensegrity } from \"../fabric/tensegrity\"\nimport { IJoint, IRole, percentOrHundred } from \"../fabric/tensegrity-types\"\n\nconst PUSH: IRole = {\n    tag: \"push\",\n    push: true,\n    length: 3,\n    stiffness: 1,\n}\n\nconst PULL_WIDTH: IRole = {\n    tag: \"pull-width\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nconst PULL_LENGTH: IRole = {\n    tag: \"pull-length\",\n    push: false,\n    length: 0.4,\n    stiffness: 1,\n}\n\nexport class MobiusBuilder implements ITensegrityBuilder {\n    public readonly radius: number\n    public readonly jointCount: number\n    private tensegrity: Tensegrity\n\n    constructor(segments: number) {\n        this.jointCount = segments * 2 + 1\n        this.radius = this.jointCount * PULL_LENGTH.length * 0.17\n    }\n\n    public operateOn(tensegrity: Tensegrity): void {\n        this.tensegrity = tensegrity\n    }\n\n    public finished(): boolean {\n        return this.tensegrity.joints.length > 0\n    }\n\n    public work(): void {\n        const location = (bottom: boolean, angle: number) => {\n            const major = new Vector3(Math.cos(angle) * this.radius, 0, Math.sin(angle) * this.radius)\n            const outwards = new Vector3().copy(major).normalize()\n            const up = new Vector3(0, 1, 0)\n            const ray = new Vector3().addVectors(outwards.multiplyScalar(Math.sin(angle / 2)), up.multiplyScalar(Math.cos(angle / 2)))\n            const minor = ray.multiplyScalar((bottom ? -0.5 : 0.5))\n            return major.add(minor)\n        }\n        for (let joint = 0; joint < this.jointCount; joint++) {\n            const angle = joint / this.jointCount * Math.PI * 2\n            this.tensegrity.createJoint(location(joint % 2 === 0, angle))\n        }\n        this.tensegrity.instance.refreshFloatView()\n        const createInterval = (alpha: IJoint, omega: IJoint, role: IRole) =>\n            this.tensegrity.createInterval(alpha, omega, role, percentOrHundred(), 1000)\n        for (let jointIndex = 0; jointIndex < this.jointCount; jointIndex++) {\n            const joint = (offset: number) => this.tensegrity.joints[(jointIndex * 2 + offset) % this.tensegrity.joints.length]\n            createInterval(joint(0), joint(2), PULL_LENGTH)\n            createInterval(joint(0), joint(1), PULL_WIDTH)\n            createInterval(joint(0), joint(3), PUSH)\n            this.tensegrity.instance.fabric.create_face(joint(0).index, joint(1).index, joint(2).index)\n        }\n    }\n}\n","import { OrbitControls, Stars } from \"@react-three/drei\"\nimport { Canvas, useFrame } from \"@react-three/fiber\"\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaSignOutAlt } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE } from \"recoil\"\nimport { Color, DoubleSide, MeshLambertMaterial, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nconst meshLambertMaterial = new MeshLambertMaterial({color: \"#FFFFFF\", side: DoubleSide})\n\nexport function MobiusView({createMobius}: {\n    createMobius: (segments: number) => Tensegrity,\n}): JSX.Element {\n    const [mobius] = useState(() => {\n        const m = createMobius(60)\n        m.iterate()\n        return m\n    })\n    const [muscles] = useState(() => {\n        const unordered = mobius.intervals.filter(({role}) => role.tag === \"pull-length\")\n        const even = unordered.filter(({}, index) => index % 2 === 0)\n        const odd = unordered.filter(({}, index) => index % 2 === 1)\n        return even.concat(odd)\n    })\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <RecoilBridge>\n                    {!mobius ? <h1>No Mobius</h1> : <MobiusScene mobius={mobius} muscles={muscles}/>}\n                </RecoilBridge>\n            </Canvas>\n        </div>\n    )\n}\n\nfunction MobiusScene({mobius, muscles}: { mobius: Tensegrity, muscles: IInterval[] }): JSX.Element {\n    const [target, setTarget] = useState(new Vector3())\n    const [muscleIndex, setMuscleIndex] = useState(0)\n    const [twitchTime, setTwitchTime] = useState(20000)\n    useFrame(state => {\n        const {camera, clock} = state\n        if (clock.elapsedTime < 0.01) {\n            const radius = mobius.joints.reduce((r, joint) => Math.max(r, mobius.instance.jointLocation(joint).length()), 0)\n            const height = mobius.joints.reduce((h, joint) => Math.max(h, mobius.instance.jointLocation(joint).y), 0)\n            camera.position.set(radius * 1.5, height * 2, 0)\n        }\n        mobius.iterate()\n        const age = mobius.instance.fabric.age\n        if (age > twitchTime) {\n            const muscle = muscles[muscleIndex]\n            mobius.instance.fabric.twitch_interval(muscle.index, 50000, 50000, 0.9)\n            setMuscleIndex(idx => idx === muscles.length - 1 ? 0 : idx + 1)\n            setTwitchTime(time => time + 10000)\n        }\n        const toMidpoint = new Vector3().subVectors(mobius.instance.midpoint, target).multiplyScalar(0.1)\n        setTarget(new Vector3().copy(target).add(toMidpoint))\n    })\n    return (\n        <group>\n            <OrbitControls target={target} maxDistance={200}/>\n            <scene>\n                <mesh\n                    geometry={mobius.instance.floatView.faceGeometry}\n                    material={meshLambertMaterial}\n                    matrixAutoUpdate={false}\n                />\n                <Stars radius={300}/>\n                <ambientLight color={new Color(\"white\")} intensity={0.1}/>\n                <pointLight color={new Color(\"#4fa903\")} position={new Vector3(0, 100, 0)}/>\n                <pointLight color={new Color(\"#043eb7\")} position={new Vector3(0, -10, 100)}/>\n                <pointLight color={new Color(\"#f60606\")} position={new Vector3(0, -10, -100)}/>\n            </scene>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nexport interface IVertex {\n    index: number,\n    location: Vector3\n    adjacent: IVertex[]\n}\n\nexport class SphereScaffold {\n    public readonly vertices: IVertex[] = []\n\n    constructor(public readonly frequency: number, public readonly radius: number) {\n        VERTEX.forEach(location => this.vertexAt(location))\n        if (frequency === 1) {\n            EDGE.forEach(edge => {\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                adjacent(v0, v1)\n            })\n        } else if (frequency === 2) {\n            const midVertices = EDGE.map(edge => {\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const midEdge = this.vertexBetween(v0, v1)\n                adjacent(v0, midEdge)\n                adjacent(midEdge, v1)\n                return midEdge\n            })\n            FACE_EDGES.forEach(faceEdge => {\n                const side0 = midVertices[faceEdge[0]]\n                const side1 = midVertices[faceEdge[1]]\n                const side2 = midVertices[faceEdge[2]]\n                adjacent(side0, side1)\n                adjacent(side1, side2)\n                adjacent(side2, side0)\n            })\n        } else {\n            this.buildFaces(this.buildEdgeVertices())\n        }\n        this.vertices.forEach(sortVertex)\n    }\n\n    private buildEdgeVertices(): IVertex[][] {\n        const edgeVertices: IVertex[][] = []\n        EDGE.forEach(edgeVertexIndex => {\n            const verticesOfEdge: IVertex[] = []\n            edgeVertices.push(verticesOfEdge)\n            let vertex: IVertex | undefined\n            let previousVertex: IVertex | undefined\n            for (let walk = 0; walk < this.frequency - 1; walk++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edgeVertexIndex[0]]\n                const v1 = this.vertices[edgeVertexIndex[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walk + 1) / this.frequency)\n                vertex = this.vertexAt(spot)\n                verticesOfEdge.push(vertex)\n                if (previousVertex) {\n                    adjacent(vertex, previousVertex)\n                    if (walk === this.frequency - 2) {\n                        adjacent(vertex, v1)\n                    }\n                } else {\n                    adjacent(vertex, v0)\n                }\n            }\n        })\n        return edgeVertices\n    }\n\n    private buildFaces(edgeVertices: IVertex[][]): void {\n        const faceVertexArrays: IVertex[][] = []\n        FACE_VERTICES.forEach((faceVertexIndex, faceIndex) => {\n            const faceVertex = (which: number) => this.vertices[faceVertexIndex[which]]\n            const v0 = faceVertex(0)\n            const origin = v0.location\n            // interpolate along the edges of the face creating arrays of vertices on the way\n            for (let walkA = 1; walkA < this.frequency - 1; walkA++) {\n                const v1 = faceVertex(1)\n                const vectorA = new Vector3().lerpVectors(origin, v1.location, walkA / this.frequency)\n                vectorA.sub(origin)\n                faceVertexArrays[walkA - 1] = []\n                for (let walkB = 1; walkB < this.frequency - walkA; walkB++) {\n                    const v2 = faceVertex(2)\n                    const vectorB = new Vector3().lerpVectors(origin, v2.location, walkB / this.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    faceVertexArrays[walkA - 1].push(this.vertexAt(spot))\n                }\n            }\n            // define the adjacency among face vertices\n            for (let row = 0; row < faceVertexArrays.length; row++) {\n                for (let rowMember = 0; rowMember < faceVertexArrays[row].length; rowMember++) {\n                    if (rowMember < faceVertexArrays[row].length - 1) {\n                        adjacent(faceVertexArrays[row][rowMember], faceVertexArrays[row][rowMember + 1])\n                    }\n                    if (row > 0) {\n                        const vert = faceVertexArrays[row][rowMember]\n                        adjacent(vert, faceVertexArrays[row - 1][rowMember])\n                        adjacent(vert, faceVertexArrays[row - 1][rowMember + 1])\n                    }\n                }\n            }\n            // compile side vertices (of a triangle!) reversing traversal when necessary\n            const sideVertices: IVertex[] [] = [[], [], []]\n            for (let walk = 0; walk < this.frequency - 2; walk++) {\n                const antiWalk = faceVertexArrays.length - walk - 1\n                sideVertices[0].push(faceVertexArrays[walk][0])\n                sideVertices[1].push(faceVertexArrays[antiWalk][faceVertexArrays[antiWalk].length - 1])\n                sideVertices[2].push(faceVertexArrays[0][walk])\n            }\n            // define adjacency between face vertices and edge vertices\n            for (let walkSide = 0; walkSide < sideVertices.length; walkSide++) {\n                const faceEdges = FACE_EDGES[faceIndex]\n                const edge = edgeVertices[faceEdges[walkSide]]\n                for (let walk = 0; walk < faceVertexArrays.length; walk++) {\n                    const vsVertex = sideVertices[walkSide][walk]\n                    adjacent(vsVertex, edge[walk])\n                    adjacent(vsVertex, edge[walk + 1])\n                }\n            }\n        })\n        PENTAGON_VERTICES.forEach(vertexArray => {\n            // define the adjacency for this pentagon\n            for (let current = 0; current < vertexArray.length; current++) {\n                const next = (current + 1) % vertexArray.length\n                const edgeVertexA = vertexArray[current].front ? 0 : this.frequency - 2\n                const edgeVertexB = vertexArray[next].front ? 0 : this.frequency - 2\n                const vertexA = edgeVertices[vertexArray[current].edge][edgeVertexA]\n                const vertexB = edgeVertices[vertexArray[next].edge][edgeVertexB]\n                adjacent(vertexA, vertexB)\n            }\n        })\n    }\n\n    private vertexBetween(v0: IVertex, v1: IVertex): IVertex {\n        const location = new Vector3().copy(v0.location).lerp(v1.location, 0.5)\n        return this.vertexAt(location)\n    }\n\n    private vertexAt(location: Vector3): IVertex {\n        const length = location.length()\n        location.multiplyScalar(this.radius / length)\n        const index = this.vertices.length\n        const vertex = {index, location, adjacent: []}\n        this.vertices.push(vertex)\n        return vertex\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX: Vector3[] = [\n    new Vector3(+ONE, NUL, +PHI), new Vector3(+ONE, NUL, -PHI),\n    new Vector3(+PHI, +ONE, NUL), new Vector3(-PHI, +ONE, NUL),\n    new Vector3(NUL, +PHI, +ONE), new Vector3(NUL, -PHI, +ONE),\n    new Vector3(-ONE, NUL, -PHI), new Vector3(-ONE, NUL, +PHI),\n    new Vector3(-PHI, -ONE, NUL), new Vector3(+PHI, -ONE, NUL),\n    new Vector3(NUL, -PHI, -ONE), new Vector3(NUL, +PHI, -ONE),\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE_VERTICES = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGES = [\n    [0, 11, 1], [0, 12, 4], [1, 19, 3], [2, 21, 3], [2, 23, 4],\n    [7, 10, 6], [7, 12, 9], [8, 24, 5], [8, 25, 6], [9, 29, 5],\n    [11, 18, 10], [14, 18, 13], [14, 19, 16], [15, 25, 13], [15, 26, 17],\n    [16, 27, 17], [21, 27, 22], [22, 28, 20], [23, 29, 20], [26, 28, 24],\n]\n\ninterface IPentagonVertex {\n    edge: number\n    front: boolean\n}\n\nconst PENTAGON_VERTICES: IPentagonVertex[][] = [\n    [{edge: 0, front: true}, {edge: 1, front: true},\n        {edge: 3, front: true}, {edge: 2, front: true}, {edge: 4, front: true}],\n    [{edge: 7, front: true}, {edge: 6, front: true},\n        {edge: 8, front: true}, {edge: 5, front: true}, {edge: 9, front: true}],\n    [{edge: 10, front: true}, {edge: 11, front: true},\n        {edge: 0, front: false}, {edge: 12, front: true}, {edge: 7, front: false}],\n    [{edge: 14, front: true}, {edge: 13, front: true},\n        {edge: 15, front: true}, {edge: 17, front: true}, {edge: 16, front: true}],\n    [{edge: 18, front: true}, {edge: 11, front: false},\n        {edge: 1, front: false}, {edge: 19, front: true}, {edge: 14, front: false}],\n    [{edge: 21, front: true}, {edge: 22, front: true},\n        {edge: 20, front: true}, {edge: 23, front: true}, {edge: 2, front: false}],\n    [{edge: 26, front: true}, {edge: 24, front: true},\n        {edge: 8, front: false}, {edge: 25, front: true}, {edge: 15, front: false}],\n    [{edge: 27, front: true}, {edge: 16, front: false},\n        {edge: 19, front: false}, {edge: 3, front: false}, {edge: 21, front: false}],\n    [{edge: 28, front: true}, {edge: 22, front: false},\n        {edge: 27, front: false}, {edge: 17, front: false}, {edge: 26, front: false}],\n    [{edge: 4, front: false}, {edge: 23, front: false},\n        {edge: 29, front: true}, {edge: 9, front: false}, {edge: 12, front: false}],\n    [{edge: 28, front: false}, {edge: 20, front: false},\n        {edge: 29, front: false}, {edge: 5, front: false}, {edge: 24, front: false}],\n    [{edge: 6, front: false}, {edge: 10, front: false},\n        {edge: 18, front: false}, {edge: 13, front: false}, {edge: 25, front: false}],\n]\n\nfunction adjacent(v0: IVertex, v1: IVertex): void {\n    v0.adjacent.push(v1)\n    v1.adjacent.push(v0)\n}\n\n// sort the adjacent vertices of a vertex in a clockwise way\nfunction sortVertex(vertex: IVertex): void {\n    const outward = new Vector3().copy(vertex.location).normalize()\n    const first = vertex.adjacent.pop()\n    if (!first) {\n        throw new Error(\"No first to pop!\")\n    }\n    const sorted: IVertex[] = [first]\n    const vectorTo = ({location}: IVertex) => new Vector3().subVectors(location, vertex.location).normalize()\n    while (vertex.adjacent.length > 0) {\n        const top: IVertex = sorted[sorted.length - 1]\n        const next = vertex.adjacent.find(neigbor => {\n            const toAdjacent = vectorTo(neigbor)\n            const toTop = vectorTo(top)\n            if (toAdjacent.dot(toTop) < 0.25) {\n                return false\n            }\n            return new Vector3().crossVectors(toTop, toAdjacent).dot(outward) > 0\n        })\n        if (!next) {\n            throw new Error(\"No next found\")\n        }\n        sorted.push(next)\n        vertex.adjacent = vertex.adjacent.filter(adj => adj.index !== next.index)\n    }\n    vertex.adjacent = sorted\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { ITensegrityBuilder, Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IJoint, IRole, percentFromFactor } from \"../fabric/tensegrity-types\"\n\nimport { IVertex, SphereScaffold } from \"./sphere-scaffold\"\n\nconst PUSH: IRole = {\n    tag: \"push\",\n    push: true,\n    length: 1,\n    stiffness: 1,\n}\n\nconst PULL: IRole = {\n    tag: \"pull\",\n    push: false,\n    length: 1,\n    stiffness: 1,\n}\n\nconst TWIST_ANGLE = 0.52\n\ninterface IHub {\n    vertex: IVertex\n    spokes: ISpoke[]\n}\n\ninterface ISpoke {\n    hubs: IHub[]\n    joints: IJoint[]\n    push: IInterval[]\n}\n\nexport class SphereBuilder implements ITensegrityBuilder {\n    private readonly scaffold: SphereScaffold\n    private readonly hubs: IHub[]\n    private tensegrity: Tensegrity\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly frequency: number,\n        public readonly radius: number,\n        public readonly useCurves: boolean,\n    ) {\n        this.scaffold = new SphereScaffold(frequency, radius)\n        this.hubs = this.scaffold.vertices.map(vertex => ({vertex, spokes: []} as IHub))\n    }\n\n    public operateOn(tensegrity: Tensegrity): void {\n        this.tensegrity = tensegrity\n    }\n\n    public finished(): boolean {\n        return this.tensegrity.joints.length > 0\n    }\n\n    public work(): void {\n        const allSpokes: Record<string, ISpoke> = {}\n        // create pushes and populate spokes\n        this.hubs.forEach(({vertex, spokes}) =>\n            vertex.adjacent.forEach(adjacent => {\n                const existing = allSpokes[`${adjacent.index}-${vertex.index}`]\n                const hubs = [this.hubs[vertex.index], this.hubs[adjacent.index]]\n                if (existing) {\n                    const {push} = existing\n                    const joints = this.useCurves ? [push[1].omega, push[0].omega, push[1].alpha, push[0].alpha] : [push[0].omega, push[0].alpha]\n                    spokes.push({push, hubs, joints})\n                } else {\n                    const push = this.useCurves ? this.createCurve(vertex, adjacent) : this.createPush(vertex, adjacent)\n                    const joints = this.useCurves ? [push[0].alpha, push[1].alpha, push[0].omega, push[1].omega] : [push[0].alpha, push[0].omega]\n                    const spoke: ISpoke = {push, hubs, joints}\n                    allSpokes[`${vertex.index}-${adjacent.index}`] = spoke\n                    spokes.push(spoke)\n                }\n            }))\n        this.instance.refreshFloatView()\n        const segmentLength = this.averageIntervalLength / 3\n        const allPulls: Record<string, IInterval> = {}\n        this.hubs.forEach(hub => hub.spokes.forEach(spoke => this.pullsForSpoke(hub, spoke, segmentLength, allPulls)))\n        this.tensegrity.toDo = {\n            age: 20000,\n            todo: (t: Tensegrity) => {\n                t.stage = Stage.Slack\n                t.fabric.set_altitude(this.location.y)\n                t.stage = Stage.Pretensing\n            },\n        }\n    }\n\n    private createPush(alpha: IVertex, omega: IVertex): IInterval[] {\n        const midpoint = new Vector3().addVectors(alpha.location, omega.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, TWIST_ANGLE)\n        const alphaLocation = new Vector3().copy(alpha.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omega.location).applyQuaternion(quaternion)\n        const length0 = alpha.location.distanceTo(omega.location)\n        const scale = percentFromFactor(length0)\n        const alphaJoint = this.tensegrity.createJoint(alphaLocation)\n        const omegaJoint = this.tensegrity.createJoint(omegaLocation)\n        this.instance.refreshFloatView()\n        return [this.tensegrity.createInterval(alphaJoint, omegaJoint, PUSH, scale)]\n    }\n\n    private createCurve(alphaVertex: IVertex, omegaVertex: IVertex): IInterval[] {\n        const midpoint = new Vector3().addVectors(alphaVertex.location, omegaVertex.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, TWIST_ANGLE)\n        const alphaLocation = new Vector3().copy(alphaVertex.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaVertex.location).applyQuaternion(quaternion)\n        const alphaJoint = this.tensegrity.createJoint(alphaLocation)\n        const midAlphaJoint = this.tensegrity.createJoint(new Vector3().lerpVectors(alphaLocation, omegaLocation, 1 / 3))\n        const midOmegaJoint = this.tensegrity.createJoint(new Vector3().lerpVectors(alphaLocation, omegaLocation, 2 / 3))\n        const omegaJoint = this.tensegrity.createJoint(omegaLocation)\n        this.instance.refreshFloatView()\n        const pushScale = percentFromFactor(alphaVertex.location.distanceTo(omegaVertex.location) * 2 / 3)\n        const alpha = this.tensegrity.createInterval(alphaJoint, midOmegaJoint, PUSH, pushScale)\n        const omega = this.tensegrity.createInterval(midAlphaJoint, omegaJoint, PUSH, pushScale)\n        const pullScale = percentFromFactor(alphaVertex.location.distanceTo(omegaVertex.location) / 6)\n        this.tensegrity.createInterval(alphaJoint, midAlphaJoint, PULL, pullScale)\n        this.tensegrity.createInterval(midAlphaJoint, midOmegaJoint, PULL, pullScale)\n        this.tensegrity.createInterval(midOmegaJoint, omegaJoint, PULL, pullScale)\n        return [alpha, omega]\n    }\n\n\n    private pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number, allPulls: Record<string, IInterval>): void {\n        const createPull = (alpha: IJoint, omega: IJoint, idealLength: number) => {\n            const pullName = omega.index > alpha.index ? `${alpha.index}-${omega.index}` : `${omega.index}-${alpha.index}`\n            if (allPulls[pullName]) {\n                return\n            }\n            allPulls[pullName] = this.tensegrity.createInterval(alpha, omega, PULL, percentFromFactor(idealLength))\n        }\n        if (this.useCurves) {\n            createPull(spoke.joints[0], nextSpoke(hub, spoke).joints[1], segmentLength / 5)\n        } else {\n            const next = nextSpoke(hub, spoke)\n            createPull(spoke.joints[0], next.joints[0], segmentLength)\n            const nearOppositeNext = nextSpoke(spoke.hubs[1], spoke).joints[0]\n            const spokeLength = this.instance.intervalLength(spoke.push[0])\n            createPull(next.joints[0], nearOppositeNext, spokeLength - segmentLength * 2)\n        }\n    }\n\n    private get averageIntervalLength(): number {\n        const length = (interval: IInterval) => this.instance.intervalLength(interval)\n        return this.intervals.reduce((sum, push) => sum + length(push), 0) / this.intervals.length\n    }\n\n    private get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    private get intervals(): IInterval[] {\n        return this.tensegrity.intervals\n    }\n}\n\nfunction nextSpoke(hub: IHub, spoke: ISpoke): ISpoke {\n    const index = hub.spokes.findIndex(({push}) => push[0].index === spoke.push[0].index)\n    if (index < 0) {\n        throw new Error(\"Cannot find current spoke when looking for next\")\n    }\n    return hub.spokes[(index + 1) % hub.spokes.length]\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport { Canvas, useFrame } from \"@react-three/fiber\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaDownload, FaSignOutAlt, FaSnowflake } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { atom, useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState } from \"recoil\"\nimport { Color, CylinderGeometry, Euler, Material, MeshLambertMaterial, Vector3 } from \"three\"\n\nimport { GlobalMode, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { intervalRotation } from \"../fabric/tensegrity-types\"\nimport { getFabricOutput, saveCSVZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nexport const SPHERE_RADIUS = 15\n\nconst PUSH_RADIUS = 0.004 * SPHERE_RADIUS\nconst PULL_RADIUS = 0.002 * SPHERE_RADIUS\n\nfunction material(colorString: string): Material {\n    const color = new Color(colorString)\n    return new MeshLambertMaterial({color})\n}\n\nconst PUSH_MATERIAL = material(\"#011884\")\nconst PULL_MATERIAL = material(\"#a80000\")\n\nconst FREQUENCY_CHOICES = [1, 2, 3, 4, 5]\n\nexport const showPushAtom = atom({\n    key: \"show push\",\n    default: true,\n})\nexport const showPullAtom = atom({\n    key: \"show pull\",\n    default: true,\n})\nexport const frozenAtom = atom({\n    key: \"frozen\",\n    default: false,\n})\nexport const gravityAtom = atom({\n    key: \"gravity\",\n    default: 2,\n})\nexport const useCurvesAtom = atom({\n    key: \"useCurves\",\n    default: false,\n})\n\nexport function SphereView({frequencyParam, createSphere}: {\n    frequencyParam?: string,\n    createSphere: (frequency: number, gravity: number, useCurves: boolean) => Tensegrity,\n}): JSX.Element {\n    const frequencyChoice = useMemo(() => {\n        const frequency = (frequencyParam === undefined) ? 1 : parseInt(frequencyParam, 10)\n        const index = FREQUENCY_CHOICES.findIndex(c => c === frequency)\n        return index >= 0 ? index : 0\n    }, [])\n    const [frozen, setFrozen] = useRecoilState(frozenAtom)\n    const [showPush, setShowPush] = useRecoilState(showPushAtom)\n    const [showPull, setShowPull] = useRecoilState(showPullAtom)\n    const [gravity, setGravity] = useRecoilState(gravityAtom)\n    const [useCurves] = useRecoilState(useCurvesAtom)\n    const [sphere, setSphere] = useState(() => createSphere(FREQUENCY_CHOICES[frequencyChoice], gravity, useCurves))\n\n    useEffect(() => {\n        setFrozen(false)\n        setSphere(createSphere(FREQUENCY_CHOICES[frequencyChoice], gravity, useCurves))\n    }, [gravity, frequencyChoice, useCurves])\n\n    useEffect(() => {\n        if (!showPush && !showPull) {\n            setShowPush(true)\n            setShowPull(true)\n        }\n    }, [showPush, showPull])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveCSVZip(getFabricOutput(sphere, 1, 1, 1))}><FaDownload/></Button>\n                    <Button color=\"warning\" onClick={() => reloadGlobalMode(GlobalMode.Choice)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"top-left\">\n                <ButtonGroup>\n                    {FREQUENCY_CHOICES.map((freq, index) => (\n                        <Button key={`Freq${freq}`} onClick={() => reloadGlobalMode(GlobalMode.Sphere, freq.toFixed(0))}\n                                color={index === frequencyChoice ? \"success\" : \"secondary\"}>\n                            {freq}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"top-right\">\n                <ButtonGroup>\n                    <Button color={gravity === 2 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(2)}>Heavy Gravity</Button>\n                    <Button color={gravity === 1 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(1)}>Light Gravity</Button>\n                    <Button color={gravity === 0 ? \"success\" : \"secondary\"}\n                            onClick={() => setGravity(0)}>Space</Button>\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-left\">\n                <ButtonGroup>\n                    <Button color={frozen ? \"success\" : \"secondary\"}\n                            onClick={() => setFrozen(!frozen)}><FaSnowflake/></Button>\n                    <Button color={showPush ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPush(!showPush)}>C</Button>\n                    <Button color={showPull ? \"success\" : \"secondary\"}\n                            disabled={!frozen}\n                            onClick={() => setShowPull(!showPull)}>T</Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <RecoilBridge>\n                    {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere}/>}\n                </RecoilBridge>\n            </Canvas>\n        </div>\n    )\n}\n\nfunction SphereScene({sphere}: { sphere: Tensegrity }): JSX.Element {\n    const [target, setTarget] = useState(new Vector3())\n    const [frozen] = useRecoilState(frozenAtom)\n\n    useFrame(state => {\n        const {camera, clock} = state\n        if (clock.elapsedTime < 0.01) {\n            camera.position.set(0, SPHERE_RADIUS, SPHERE_RADIUS * 3.6)\n        }\n        if (!frozen) {\n            sphere.iterate()\n            const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, target).multiplyScalar(0.1)\n            setTarget(new Vector3().copy(target).add(toMidpoint))\n        }\n    })\n    return (\n        <group>\n            <OrbitControls target={target} maxDistance={200}/>\n            <scene>\n                {frozen ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <Stars radius={300}/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: { sphere: Tensegrity }): JSX.Element {\n    const [showPush] = useRecoilState(showPushAtom)\n    const [showPull] = useRecoilState(showPullAtom)\n    const instance = sphere.instance\n    return (\n        <group>\n            {!showPull ? undefined : sphere.intervals.filter(({role}) => !role.push).map(interval => {\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PULL_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n            {!showPush ? undefined : sphere.intervals.filter(({role}) => role.push).map(interval => {\n                const rotation = intervalRotation(instance.unitVector(interval.index))\n                const length = instance.jointDistance(interval.alpha, interval.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${interval.index}`}\n                        geometry={CYLINDER}\n                        position={instance.intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={PUSH_MATERIAL}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaBalanceScale } from \"react-icons/all\"\nimport { RecoilState, useRecoilState } from \"recoil\"\n\nimport { floatString, percentString } from \"../fabric/eig-util\"\n\nimport { IFeatureMapping } from \"./feature-mapping\"\n\nconst MAX_SLIDER = 100000\nconst domain = [0, MAX_SLIDER]\n\nexport function FeatureSlider({mapping, percentAtom, apply}: {\n    mapping: IFeatureMapping\n    percentAtom: RecoilState<number>\n    apply: (wf: WorldFeature, percent: number, value: number) => void,\n}): JSX.Element {\n    const {name, nuanceToPercent, percentToNuance, percentToValue} = mapping\n    const sliderValue = (p: number) => [Math.floor(percentToNuance(p) * MAX_SLIDER)]\n    const [percent, setPercent] = useRecoilState(percentAtom)\n    const [values, setValues] = useState(sliderValue(percent))\n\n    useEffect(() => {\n        setPercent(Math.round(nuanceToPercent(values[0] / MAX_SLIDER)))\n    }, [values])\n    useEffect(() => apply(mapping.feature, percent, percentToValue(percent)), [percent])\n    useEffect(() => {\n        setValues(sliderValue(percent))\n    }, [mapping, percent])\n\n    return (\n        <div className=\"slider\">\n            <div className=\"float-right mr-4\">\n                <FaBalanceScale onClick={() => setValues(sliderValue(100))}/>\n            </div>\n            <div className=\"ml-2 small my-1\">\n                {name} = {percentString(percent)} ({floatString(percentToValue(percent))})\n            </div>\n            <Slider\n                mode={1} step={1} domain={domain} rootStyle={sliderStyle}\n                values={values}\n                onChange={(newValues: number[]) => setValues(newValues)}\n            >\n                <Rail>\n                    {({getRailProps}) => <div className=\"slider-rail\" {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle key={handle.id} handle={handle} getHandleProps={getHandleProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track key={id} source={source} target={target} getTrackProps={getTrackProps}/>\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({handle, getHandleProps}: {\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            className=\"slider-handle\"\n            style={{left: `${percent}%`}}\n            aria-valuemin={min} aria-valuemax={max} aria-valuenow={value}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n}): JSX.Element {\n    return (\n        <div className=\"slider-track\"\n             style={{left: `${source.percent}%`, width: `${target.percent - source.percent}%`}}\n             {...getTrackProps()}\n        />\n    )\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"1%\",\n    position: \"relative\",\n    width: \"98%\",\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { currentFeature, FEATURE_VALUES } from \"../storage/recoil\"\n\nimport { FeatureSlider } from \"./feature-slider\"\n\nexport function BottomMiddle({tensegrity}: {\n    tensegrity: Tensegrity,\n}): JSX.Element {\n    const [open, setOpen] = useState(false)\n    const [worldFeature, setWorldFeature] = useRecoilState(currentFeature)\n    const [featureValue, setFeatureValue] = useState(FEATURE_VALUES[worldFeature])\n    return (\n        <div className=\"w-100 d-flex\">\n            <ButtonDropdown isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle>Choose</DropdownToggle>\n                <DropdownMenu>{\n                    FEATURE_VALUES\n                        .filter(value => !value.mapping.name.startsWith(\"-\"))\n                        .map((value) => (\n                            <DropdownItem key={`fitem-${value.mapping.feature}`} onClick={() => {\n                                setWorldFeature(value.mapping.feature)\n                                setFeatureValue(value)\n                            }}>\n                                {value.mapping.name}\n                            </DropdownItem>\n                        ))\n                }</DropdownMenu>\n            </ButtonDropdown>\n            <FeatureSlider\n                mapping={featureValue.mapping}\n                percentAtom={featureValue.percentAtom}\n                apply={(feature, percent, value) => {\n                    tensegrity.instance.applyFeature(feature, percent, value)\n                }}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { OrbitControls, Stars } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useRecoilState } from \"recoil\"\nimport { Color, Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IIntervalDetails } from \"../fabric/tensegrity-types\"\nimport { rotatingAtom, selectedTwistAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { LiveView } from \"./live-view\"\nimport { LookView } from \"./look-view\"\nimport { SelectView } from \"./select-view\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\n\nexport function FabricView({tensegrity, clickDetails}: {\n    tensegrity: Tensegrity,\n    clickDetails: (details: IIntervalDetails) => void,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const [rotating] = useRecoilState(rotatingAtom)\n    const [selected] = useRecoilState(selectedTwistAtom)\n\n    const [aim, updateAim] = useState(new Vector3(0, 1, 0))\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    useFrame(state => {\n        if (viewMode === ViewMode.Time) {\n            tensegrity.iterate()\n        }\n        const midpoint = selected ? tensegrity.instance.twistLocation(selected) : tensegrity.instance.midpoint\n        updateAim(new Vector3().subVectors(midpoint, aim).multiplyScalar(TOWARDS_TARGET).add(aim))\n        if (stage === Stage.Growing) {\n            state.camera.position.y += (midpoint.y - state.camera.position.y) * TOWARDS_POSITION\n            const distanceChange = state.camera.position.distanceTo(midpoint) - tensegrity.instance.view.radius() * 2.5\n            const towardsDistance = new Vector3().subVectors(midpoint, state.camera.position).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            state.camera.position.add(towardsDistance)\n        } else {\n            if (state.camera.position.y < 0) {\n                state.camera.position.y -= state.camera.position.y * TOWARDS_POSITION * 20\n            }\n        }\n    })\n    const Rendering = () => {\n        switch (viewMode) {\n            case ViewMode.Time:\n                return <LiveView tensegrity={tensegrity}/>\n            case ViewMode.Select:\n                return <SelectView tensegrity={tensegrity} clickDetails={clickDetails}/>\n            case ViewMode.Look:\n                return <LookView tensegrity={tensegrity}/>\n        }\n    }\n    return (\n        <group>\n            <OrbitControls target={aim} autoRotate={rotating} enablePan={false}  maxDistance={200}\n                           enableDamping={false} minPolarAngle={Math.PI * 0.1} maxPolarAngle={Math.PI * 0.8}\n                           zoomSpeed={0.5}\n            />\n            <scene>\n                <Rendering/>\n                <SurfaceComponent/>\n                <Stars radius={300}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaBug, FaSeedling } from \"react-icons/all\"\nimport { Button, ButtonGroup, Input } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\n\nimport { compileTenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { postGrowthAtom, tenscriptAtom } from \"../storage/recoil\"\n\nexport function ScriptPanel({runTenscript}: { runTenscript: RunTenscript }): JSX.Element {\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth] = useRecoilState(postGrowthAtom)\n    const [json, setJson] = useState<string>(\"\")\n    const [error, setError] = useState(\"\")\n    const toJson = () => JSON.stringify(tenscript, undefined, 2)\n\n    function parse(): void {\n        try {\n            const newTenscript = JSON.parse(json)\n            if (compileTenscript(newTenscript, setError)) {\n                setError(\"\")\n                newTenscript.postGrowthOp = postGrowth\n                setTenscript(newTenscript)\n                runTenscript(newTenscript, setError)\n            }\n        } catch (e) {\n            setError(e.toString())\n        }\n    }\n\n    useEffect(() => {\n        if (tenscript) {\n            setJson(toJson())\n        } else {\n            setJson(\"\")\n        }\n    }, [tenscript])\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <div>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{flexDirection: \"column\", height: \"available\"}}>\n                    <Input\n                        style={{borderRadius: \"1em\", height: \"22em\", marginBottom: \"0.5em\"}}\n                        type=\"textarea\" id=\"tenscript\"\n                        value={json}\n                        onChange={changeEvent => setJson(changeEvent.target.value)}\n                    />\n                    <ButtonGroup vertical={true} className=\"w-100 my-2\">\n                        {error.length === 0 ? undefined : (\n                            <Button className=\"my-2\" color=\"warning\" onClick={() => {\n                                setJson(toJson())\n                                setError(\"\")\n                            }}>\n                                <FaBug/><hr/>{error}\n                            </Button>\n                        )}\n                        <Button color=\"success\" onClick={() => parse()}>\n                            Try it out!\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowRight,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button } from \"reactstrap\"\n\nimport { Tensegrity, ToDo } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport const STAGE_TRANSITIONS = Object.keys(StageTransition)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => StageTransition[k])\n\nexport function StageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [stage, updateStage] = useState(tensegrity.stage)\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || stage === Stage.Pretensing) {\n            return true\n        }\n        return stage !== stageAccepted\n    }\n\n    function doNow(todo: ToDo): void {\n        tensegrity.toDo = {todo}\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <FaCamera/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => doNow(t => t.stage = Stage.Pretensing)}\n                >\n                    <Symbol stage={Stage.Slack}/><FaArrowRight/><Symbol stage={Stage.Pretenst}/>\n                </Button>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => t.stage = Stage.Slack)}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/>\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => doNow(t => {\n                        t.stage = Stage.Slack\n                        t.strainToStiffness()\n                    })}\n                >\n                    <Symbol stage={Stage.Pretenst}/><FaArrowRight/><Symbol stage={Stage.Slack}/><FaChartBar/>\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\nimport { FaEye, FaHiking } from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\"\nimport { useRecoilState, useSetRecoilState } from \"recoil\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { ITenscript, RunTenscript } from \"../fabric/tenscript\"\nimport { PostGrowthOp, Tensegrity } from \"../fabric/tensegrity\"\nimport { bootstrapIndexAtom, postGrowthAtom, tenscriptAtom, ViewMode, viewModeAtom } from \"../storage/recoil\"\n\nimport { ScriptPanel } from \"./script-panel\"\nimport { StageButton, STAGE_TRANSITIONS } from \"./stage-button\"\n\nexport function TopLeft({tensegrity, runTenscript}: {\n    tensegrity: Tensegrity,\n    runTenscript: RunTenscript,\n}): JSX.Element {\n\n    const [viewMode] = useRecoilState(viewModeAtom)\n    const setBootstrapIndex = useSetRecoilState(bootstrapIndexAtom)\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [postGrowth, setPostGrowth] = useRecoilState(postGrowthAtom)\n\n    const [showScriptPanel, setShowScriptPanel] = useState(false)\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    const run = (pgo: PostGrowthOp) => {\n        if (!tenscript) {\n            return\n        }\n        setPostGrowth(pgo)\n        if (tenscript.postGrowthOp === pgo) {\n            runTenscript(tenscript, error => console.error(error))\n        } else {\n            const opChanged: ITenscript = {...tenscript, postGrowthOp: pgo}\n            setTenscript(opChanged)\n            runTenscript(opChanged, error => console.error(error))\n        }\n    }\n\n    const opColor = (pgo: PostGrowthOp) => postGrowth === pgo ? \"success\" : \"secondary\"\n\n    return (\n        <>\n            <ButtonGroup>{STAGE_TRANSITIONS\n                .map(stageTransition => (\n                    <StageButton\n                        key={`strans-${stageTransition}`}\n                        tensegrity={tensegrity}\n                        stageTransition={stageTransition}\n                        disabled={viewMode === ViewMode.Look}/>\n                ))\n            }</ButtonGroup>\n            <br/>\n            <ButtonGroup className=\"my-1\">\n                <Button onClick={() => run(PostGrowthOp.NoOp)} color={opColor(PostGrowthOp.NoOp)}>0</Button>\n                <Button onClick={() => run(PostGrowthOp.Faces)} color={opColor(PostGrowthOp.Faces)}>&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Snelson)} color={opColor(PostGrowthOp.Snelson)}>S&#9653;</Button>\n                <Button onClick={() => run(PostGrowthOp.Bowtie)} color={opColor(PostGrowthOp.Bowtie)}>&#8904;</Button>\n                <Button onClick={() => run(PostGrowthOp.BowtieFaces)} color={opColor(PostGrowthOp.BowtieFaces)}>&#8904; <strong>&#9653;</strong></Button>\n            </ButtonGroup>\n            <br/>\n            <ButtonGroup>\n                <ButtonDropdown\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle><FaHiking/></DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => {\n                            setBootstrapIndex(index)\n                            runTenscript(bootstrapProgram, () => console.error(\"impossible\"))\n                        }}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n                <Button\n                    color={showScriptPanel ? \"warning\" : \"secondary\"}\n                    onClick={() => setShowScriptPanel(!showScriptPanel)}>\n                    <FaEye/>\n                </Button>\n            </ButtonGroup>\n            {!showScriptPanel ? undefined : <ScriptPanel runTenscript={runTenscript}/>}\n        </>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport { stageName } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport function TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [stage, updateStage] = useState(tensegrity.stage$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.stage$.subscribe(updateStage)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div>\n            <span>{stageName(stage)}</span> <i>\"{tensegrity.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Canvas } from \"@react-three/fiber\"\nimport { default_world_feature, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaPlay } from \"react-icons/all\"\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE, useRecoilState, useSetRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { BOOTSTRAP } from \"../fabric/bootstrap\"\nimport { WORLD_FEATURES } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { compileTenscript, ITenscript, RunTenscript, TenscriptBuilder } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { adjacentPullsFromTwist } from \"../fabric/twist-logic\"\nimport {\n    bootstrapIndexAtom,\n    FEATURE_VALUES,\n    postGrowthAtom,\n    selectedTwistAtom,\n    STORAGE_KEY,\n    tenscriptAtom,\n    ViewMode,\n    viewModeAtom,\n    visibleDetailsAtom,\n} from \"../storage/recoil\"\n\nimport { BottomLeft } from \"./bottom-left\"\nimport { BottomMiddle } from \"./bottom-middle\"\nimport { BottomRight } from \"./bottom-right\"\nimport { FabricView } from \"./fabric-view\"\nimport { featureMapping } from \"./feature-mapping\"\nimport { TopLeft } from \"./top-left\"\nimport { TopMiddle } from \"./top-middle\"\n\nexport function DesignView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance({}), [])\n    const worldFeatures = FEATURE_VALUES.map(({percentAtom}) => useRecoilState(percentAtom))\n    const [tenscript, setTenscript] = useRecoilState(tenscriptAtom)\n    const [bootstrapIndex] = useRecoilState(bootstrapIndexAtom)\n    const setPostGrowth = useSetRecoilState(postGrowthAtom)\n    const [viewMode, setViewMode] = useRecoilState(viewModeAtom)\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selected, setSelected] = useRecoilState(selectedTwistAtom)\n    const [details, setDetails] = useRecoilState(visibleDetailsAtom)\n    useEffect(() => {\n        if (tensegrity) {\n            if (selected) {\n                setDetails(selected.pushes.map(push => tensegrity.getIntervalDetails(push)))\n            } else {\n                setDetails([])\n            }\n        }\n    }, [selected])\n    const emergency = (message: string) => console.error(\"tensegrity view\", message)\n\n    const runTenscript: RunTenscript = (ts: ITenscript, error: (message: string) => void) => {\n        try {\n            const tree = compileTenscript(ts, error)\n            if (!tree) {\n                return false\n            }\n            setViewMode(ViewMode.Time)\n            setSelected(undefined)\n            const featureValues = ts.featureValues\n            const localValue = featureValues ? featureValues[WorldFeature.IntervalCountdown] : undefined\n            const countdown = localValue === undefined ? default_world_feature(WorldFeature.IntervalCountdown) : localValue\n            setTenscript(ts)\n            WORLD_FEATURES.map(key => {\n                const feature = WorldFeature[key]\n                const {percentToValue} = featureMapping(feature)\n                const percent = featureValues ? featureValues[key] : undefined\n                if (percent !== undefined) {\n                    worldFeatures[feature][1](percent)\n                    mainInstance.applyFeature(feature, percent, percentToValue(percent))\n                }\n            })\n            setPostGrowth(ts.postGrowthOp)\n            const builder = new TenscriptBuilder(new Vector3(), ts, tree)\n            setTensegrity(new Tensegrity(mainInstance, countdown, builder))\n        } catch (e) {\n            console.log(\"Problem running\", e)\n            return runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n        return true\n    }\n\n    useEffect(() => {\n        Object.keys(localStorage).filter(k => k !== STORAGE_KEY).forEach(k => localStorage.removeItem(k))\n        if (tenscript) {\n            runTenscript(tenscript, emergency)\n        } else {\n            runTenscript(BOOTSTRAP[bootstrapIndex], emergency)\n        }\n    }, [])\n\n    const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE()\n    return (\n        <div>\n            <div style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <h1><FaPlay/></h1>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <Canvas\n                            style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: viewMode !== ViewMode.Time ? \"#f0ad4e\" : \"black\",\n                                cursor: viewMode === ViewMode.Select ? \"pointer\" : \"default\",\n                                borderWidth: \"2px\",\n                            }}\n                        >\n                            <RecoilBridge>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    clickDetails={({interval}) => {\n                                        if (!selected || !tensegrity) {\n                                            return\n                                        }\n                                        if (details.length === 1) { // one pull, presumably\n                                            setDetails(adjacentPullsFromTwist(tensegrity, selected).map(pull => tensegrity.getIntervalDetails(pull)))\n                                        } else {\n                                            if (interval.role.push) {\n                                                setDetails(adjacentPullsFromTwist(tensegrity, selected).map(pull => tensegrity.getIntervalDetails(pull)))\n                                            } else {\n                                                setDetails(details.filter(d => d.interval.index === interval.index))\n                                            }\n                                        }\n                                    }}\n                                />\n                            </RecoilBridge>\n                        </Canvas>\n                        <div id=\"top-left\">\n                            <TopLeft tensegrity={tensegrity} runTenscript={runTenscript}/>\n                        </div>\n                        <div id=\"bottom-left\">\n                            <BottomLeft/>\n                        </div>\n                        <div id=\"bottom-middle\" style={{width: \"60%\"}}>\n                            <BottomMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"top-middle\">\n                            <TopMiddle tensegrity={tensegrity}/>\n                        </div>\n                        <div id=\"bottom-right\">\n                            <BottomRight tensegrity={tensegrity}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2021. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { useRecoilState } from \"recoil\"\nimport { Vector3 } from \"three\"\n\nimport { ConstructionView } from \"../construction/construction-view\"\nimport { EvoView } from \"../evo/evo-view\"\nimport { BOOTSTRAP, CONSTRUCTIONS } from \"../fabric/bootstrap\"\nimport { GlobalMode, globalModeFromUrl, nameToUrl, reloadGlobalMode } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { MobiusBuilder } from \"../mobius/mobius-builder\"\nimport { MobiusView } from \"../mobius/mobius-view\"\nimport { SphereBuilder } from \"../sphere/sphere-builder\"\nimport { SphereView, SPHERE_RADIUS } from \"../sphere/sphere-view\"\nimport { globalModeAtom } from \"../storage/recoil\"\n\nimport { DesignView } from \"./design-view\"\n\nexport function MainView({createInstance}: { createInstance: CreateInstance }): JSX.Element {\n\n    const [globalMode] = useRecoilState(globalModeAtom)\n    useEffect(() => {\n        const {mode, param} = globalModeFromUrl()\n        if (mode !== globalMode.mode) {\n            reloadGlobalMode(mode, param)\n        }\n    }, [])\n\n    function visit(url: string): void {\n        window.open(url, \"_blank\")\n    }\n\n    switch (globalMode.mode) {\n        case GlobalMode.Design:\n            return <DesignView createInstance={createInstance}/>\n        case GlobalMode.Construction:\n            const tenscript = CONSTRUCTIONS.find(({name}) => nameToUrl(name) === globalMode.param)\n            if (tenscript) {\n                return <ConstructionView tenscript={tenscript} createInstance={createInstance}/>\n            } else {\n                reloadGlobalMode(GlobalMode.Choice)\n                return <div/>\n            }\n        case GlobalMode.Evolution:\n            return (\n                <EvoView createBodyInstance={createInstance}/>\n            )\n        case GlobalMode.Sphere:\n            return (\n                <SphereView\n                    frequencyParam={globalMode.param}\n                    createSphere={(frequency: number, gravity: number, useCurves: boolean) => {\n                        const g = () => {\n                            switch (gravity) {\n                                case 0:\n                                    return 0\n                                case 1:\n                                    return 25\n                                default:\n                                    return 1500\n                            }\n                        }\n                        const instance = createInstance({\n                            [WorldFeature.IterationsPerFrame]: 200,\n                            [WorldFeature.Gravity]: g(),\n                            [WorldFeature.ShapingStiffnessFactor]: 600,\n                            [WorldFeature.ShapingDrag]: 300,\n                            [WorldFeature.Drag]: 0,\n                            [WorldFeature.VisualStrain]: 0,\n                            [WorldFeature.StiffnessFactor]: 800,\n                        })\n                        const builder = new SphereBuilder(new Vector3(0, 60, 0), frequency, SPHERE_RADIUS, useCurves)\n                        return new Tensegrity(instance, 100, builder)\n                    }}\n                />\n            )\n        case GlobalMode.Mobius:\n            return (\n                <MobiusView createMobius={(segments: number) => {\n                    const instance = createInstance({\n                        [WorldFeature.IterationsPerFrame]: 1000,\n                        [WorldFeature.Gravity]: 0,\n                        [WorldFeature.ShapingDrag]: 10,\n                        [WorldFeature.ShapingStiffnessFactor]: 1000,\n                        [WorldFeature.VisualStrain]: 0,\n                    })\n                    const builder = new MobiusBuilder(segments)\n                    return new Tensegrity(instance, 100, builder)\n                }}/>\n            )\n        default:\n            return (\n                <div id=\"choice-menu\">\n                    <h1>Pretenst App</h1>\n                    <div className=\"d-inline-flex\">\n                        <div className=\"choice-menu-box\">\n                            <h4>Projects</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                {BOOTSTRAP.map(({scale, name}) => {\n                                    if (scale === undefined) {\n                                        return undefined\n                                    }\n                                    return (\n                                        <Button size=\"lg\" color=\"info\" key={name}\n                                                onClick={() => reloadGlobalMode(GlobalMode.Construction, nameToUrl(name))}\n                                        >\n                                            \"{name}\"\n                                        </Button>\n                                    )\n                                })}\n                            </ButtonGroup>\n                        </div>\n                        <div className=\"choice-menu-box\">\n                            <h4>Modes</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Mobius)}>\n                                    Möbius\n                                </Button>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Sphere)}>\n                                    Sphere\n                                </Button>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Design)}>\n                                    Design\n                                </Button>\n                                <Button size=\"lg\" color=\"info\" onClick={() => reloadGlobalMode(GlobalMode.Evolution)}>\n                                    Evolution\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                        <div className=\"choice-menu-box\">\n                            <h4>Background</h4>\n                            <ButtonGroup className=\"choice-menu-group\" vertical={true}>\n                                <Button size=\"lg\" color=\"info\" onClick={() => visit(\"https://pretenst.com/\")}>\n                                    Construction Stories\n                                </Button>\n                                <Button size=\"lg\" color=\"info\"\n                                        onClick={() => visit(\"https://github.com/elastic-interval/pretenst\")}>\n                                    Virtual Design Software\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { RecoilRoot } from \"recoil\"\n\nimport { FabricInstance } from \"./fabric/fabric-instance\"\nimport registerServiceWorker from \"./service-worker\"\nimport { MainView } from \"./view/main-view\"\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    world: typeof import(\"eig\").World,\n): Promise<void> {\n    render(\n        <RecoilRoot>\n            <MainView createInstance={(\n                featureValues: Record<WorldFeature, number>,\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                fabric?: object,\n            ) => new FabricInstance(\n                    eig,\n                    featureValues,\n                    2000, // TODO\n                    world,\n                    fabric,\n                )}/>\n        </RecoilRoot>,\n    )\n    registerServiceWorker()\n}\n"],"sourceRoot":""}