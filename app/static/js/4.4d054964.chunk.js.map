{"version":3,"sources":["pretenst.ts","fabric/eig-util.ts","fabric/tensegrity-types.ts","fabric/tensegrity-optimizer.ts","bridge/bridge-logic.ts","storage/download.ts","view/materials.ts","view/surface-component.tsx","bridge/bridge-view.tsx","fabric/fabric-instance.ts","fabric/tenscript.ts","storage/stored-state.ts","fabric/float-feature.ts","fabric/life.ts","fabric/tensegrity-builder.ts","fabric/tensegrity.ts","gotchi/genome.ts","gotchi/twitcher.ts","gotchi/gotchi.ts","gotchi/evolution.ts","gotchi/evolution-stats.tsx","gotchi/island-geometry.ts","gotchi/island.ts","gotchi/patch.ts","gotchi/gotchi-view.tsx","gotchi/island-view.tsx","gotchi/satoshi-tree.ts","service-worker.ts","sphere/sphere-builder.ts","view/orbit.ts","sphere/sphere-view.tsx","sphere/tensegrity-sphere.ts","view/frozen-tab.tsx","view/life-stage-button.tsx","view/feature-panel.tsx","view/live-tab.tsx","view/shape-tab.tsx","view/realize-tab.tsx","view/tenscript-tab.tsx","view/control-tabs.tsx","view/fabric-view.tsx","view/tensegrity-view.tsx","start.tsx"],"names":["PHI","roleDefaultLength","intervalRole","IntervalRole","PhiPush","RootPush","PhiTriangle","Twist","InterTwist","Ring","Math","sqrt","Cross","CROSS1","BowMid","BowEnd","RibbonPush","RIBBON_WIDTH","RibbonShort","RIBBON_STEP_LENGTH","RibbonLong","RibbonHanger","Error","FORWARD","Vector3","RIGHT","UP","FABRIC_FEATURES","Object","keys","WorldFeature","filter","k","isNaN","parseInt","map","intervalRoleName","long","FaceConnector","FaceDistancer","FaceAnchor","SpherePush","SpherePull","Version","Spin","FaceName","ADJUSTABLE_INTERVAL_ROLES","role","isPushInterval","stageName","stage","Stage","Growing","Shaping","Slack","Pretensing","versionFromUrl","hash","location","Bridge","Gotchi","startsWith","Sphere","Design","switchToVersion","version","reload","floatString","numeric","expo","toExponential","zero","indexOf","substring","max","toFixed","sub","a","b","subVectors","normalize","avg","addVectors","midpoint","points","mid","forEach","point","add","multiplyScalar","length","vectorFromArray","array","index","vector","offset","set","oppositeSpin","spin","Left","Right","FACE_NAMES","NNN","PNN","NPN","NNP","NPP","PNP","PPN","PPP","jointLocation","instance","jointDistance","distanceTo","intervalLocation","alpha","omega","intervalLength","acrossPush","joint","push","otherJoint","interval","locationFromFace","face","ends","percentOrHundred","percent","_","factorFromPercent","percentFromFactor","factor","faceFromTwist","twist","faceName","faces","scaleToInitialStiffness","scale","scaleFactor","pow","TensegrityOptimizer","tensegrity","countdown","this","pairs","findPush","jointIndex","intervals","i","isPush","find","crosses","intervalA","indexA","aAlpha","aOmega","aAlphaPush","aOmegaPush","aAlphaLoc","aOmegaLoc","aLength","aMid","intervalB","indexB","bAlpha","bOmega","x","y","bAlphaPush","bOmegaPush","samePush","pushA","pushB","bAlphaLoc","bOmegaLoc","bLength","bMid","aAlphaMidB","aOmegaMidB","bAlphaMidA","bOmegaMidA","closeCount","close","dist","stiffness","linearDensity","createInterval","ax","findInterval","ay","bx","by","removeInterval","changeIntervalRole","console","log","includeInterval","pushOverPull","numericFeature","PushOverPull","floatView","strains","getAverageStrain","toAverage","included","reduce","sum","pushes","averagePushStrain","pulls","averagePullStrain","averageAbsoluteStrain","changes","stiffnesses","value","linearDensities","adjustedStiffness","restoreSnapshot","fabric","copy_material","Arch","bridgeTenscript","BaseLength","BaseWidth","bridgeNumeric","feature","defaultValue","IntervalCountdown","Gravity","Drag","ShapingStiffnessFactor","PretensingCountdown","VisualStrain","PretenstFactor","StiffnessFactor","ribbon","ribbonShort","ribbonLong","left","z","ribbonJoint","createJoint","joints","L0","R0","J","walk","FrontLeft","FrontRight","BackLeft","BackRight","refreshFloatView","prev","curr","short","hooks","hangerCount","identities","arch","group","shift","distance","name","hook","sortXY","aa","bb","lengthSq","sort","extractHooks","hanger","rj","floor","hookJoint","csvNumber","n","replace","dateString","Date","toISOString","saveCSVZip","output","zip","JSZip","file","csvJoints","join","extractJointFile","csvIntervals","j","type","strain","extractIntervalFile","csvSubmerged","anchor","extractSubmergedFile","generateAsync","mimeType","then","blob","FileSaver","saveJSONZip","JSON","stringify","undefined","RAINBOW_COLORS","reverse","c","Color","setHex","SURFACE","MeshPhongMaterial","color","side","FrontSide","opacity","LINE_VERTEX_COLORS","LineBasicMaterial","vertexColors","SELECT_MATERIAL","JOINT_MATERIAL","MeshLambertMaterial","roleColorString","roleMaterial","roleColor","SUBDUED_MATERIAL","HEXAGON_POINTS","SURFACE_SCALE","KINDA","SURFACE_LAND_COLOR","SurfaceComponent","geometry","useMemo","Geometry","vertices","hexPoint","vertexNormals","addScaledVector","Face3","addSurfaceGeometry","v","patchesGeometry","material","BridgeView","useState","life$","getValue","life","updateLife","getFabricOutput","useEffect","subscribe","unsubscribe","id","style","position","right","height","ButtonGroup","vertical","Button","onClick","backgroundColor","Camera","BridgeScene","perspective","useThree","camera","viewContainer","document","getElementById","orbit","useUpdate","orb","minPolarAngle","maxPolarAngle","PI","minDistance","maxDistance","SPACE_RADIUS","zoomSpeed","enableZoom","target","update","showLines","tick","setTick","strainToStiffness","setStrainToStiffness","setHooks","useFrame","control","current","copy","iterate","transition","autoRotate","rotateSpeed","adoptLengths","Pretenst","ref","args","key","lineGeometry","IntervalMesh","hookArray","HookMesh","intensity","onPointerDown","unit","unitVector","rotation","Quaternion","setFromUnitVectors","intervalRadius","intervalScale","jointScale","Euler","setFromQuaternion","attach","matrixWorldNeedsUpdate","end","props","useRef","setDefaultCamera","fov","updateMatrixWorld","FabricInstance","eig","jointCount","worldObject","fabricObject","world","view","empty","Float32Array","intervalCount","faceCount","BufferGeometry","faceGeometry","jointLocations","unitVectors","idealLengths","strainLimits","strainNuances","createEmptyFloatView","adoptFabric","forward","featuresToApply","fabricBackup","free","View","on_fabric","Fabric","new","requestedStage","set_float_value","worldFeature","satisfied","updateFloatView","fabricClone","backup","clone","render","midpoint_x","midpoint_y","midpoint_z","clear","matrix","apply_matrix4","toArray","intervalIndex","frozen","get_joint_count","get_interval_count","get_face_count","dispose","lineLocations","copy_line_locations_to","setAttribute","Float32BufferAttribute","lineColors","fill","green","copy_line_colors_to","faceLocations","copy_face_vertex_locations_to","faceNormals","copy_face_normals_to","line","attributes","linePosition","needsUpdate","lineColor","facePosition","faceNormal","normal","copy_joint_locations_to","copy_unit_vectors_to","copy_ideal_lengths_to","copy_strains_to","copy_strain_limits_to","copy_strain_nuances_to","copy_stiffnesses_to","copy_linear_densities_to","locations","fromJoint","toJoint","from","to","fromTo","crossVectors","MarkAction","treeNeedsOmniTwist","d","B","C","D","Mb","Mc","Md","MB","MC","MD","MAIN_CODE","treeToCode","tree","s","treeToTenscript","pushesPerTwist","mainTree","marks","fromUrl","optionalPushes","mainCode","spinChar","markSections","mark","action","Subtree","BaseFace","JoinFaces","FaceDistance","Anchor","format","subtreesCode","code","isDirection","char","faceMark","isDigit","toNumber","digits","match","parseCode","parts","split","foundName","part","endsWith","main","parsed","exec","parseMain","test","markCode","eq","Number","argument","maybeBracketed","stripBrackets","commaPos","commaPresent","charAt","content","skip","finalBracket","depth","matchBracket","codeToTenscript","error","fragmentToTree","codeFragment","codeString","subtree","codeTree","direction","scaleArg","S","directionChar","markNumber","matches","parseFloat","submerged","e","message","noParseErrors","ControlTab","BOOTSTRAP","script","grow","afterTree","omni","twistToMark","treeWithMarks","builder","baseFace","newTwist","createTwistOn","thisFace","reorient","execute","before","activeBuds","bud","decremented","A","apply","middle","faceBasis","Matrix4","makeBasis","setPosition","twirl","makeRotationX","rotate","makeRotationY","getInverse","multiply","reorientMatrix","childTree","brickMark","markTree","deleteFaceMark","extractTenscriptArray","record","recentCode","tenscript","state$","partial","state","next","nonce","saveState","storedState","localStorage","setItem","loadState","toConfig","item","getItem","parse","DEFAULT_FEATURE_VALUES","config","surfaceCharacter","SurfaceCharacter","Frozen","featureValues","controlTab","Grow","demoCount","fullScreen","polygons","rotating","visibleRoles","pushBottom","pushTop","pullBottom","pullTop","initialStoredState","featureConfig","percents","Antigravity","ShapingDrag","ShapingPretenstFactor","IterationsPerFrame","FloatFeature","storedState$","value$","storedFeature","initialValue","BehaviorSubject","createFloatFeatures","features","Life","_stage","tx","adopt_lengths","faceIntervals","removeFaceInterval","faceAnchors","removeFaceAnchor","snapshot","stiffnessesFromStrains","TensegrityBuilder","createTwistAt","twistScale","baseFactor","bottom","createTwist","faceTwistPoints","bottomTopFace","top","createOmniTwist","connect","connectRoles","trianglePoints","faceToOriginMatrix","centerBrickFaceIntervals","averageScaleFactor","where","accum","locationFromFaces","omniTwist","opposing","faceLocation","closestFace","createFaceConnector","pullScale","distancers","faceA","faceB","createFaceDistancer","connectFaceInterval","alphaEnds","omegaEnds","ringLengths","ringLength","rotatedWalk","bestRotation","minLength","rotateForBestRing","faceInterval","connector","scaleToFaceConnectorLength","createFaceAnchor","firstTwistPoints","bottomTwist","topTwist","omniRoles","ring","down","up","connectPulls","createFaceTouching","facePulls","pull","thirdForward","thirdReverse","createFace","topFace","topTouching","bottomFace","bottomTouching","roles","reverseA","forwardB","a0","a1","b0","b1","c0","d0","removeFace","pushRole","createIJoint","alphaPulls","alphaFace","omegaPulls","omegaFace","currentLength","idealLength","abs","omniA","omniB","base","angle","cos","sin","twistPoints","initialLength","tinyRadius","radials","norm","bc","cd","ba","Tensegrity","buds","transitionQueue","createBud","executeTransition","create_joint","newJoint","createFaceInterval","omegaJointIndex","anchor_joint","restLength","create_interval","removed","existing","eliminateInterval","coundown","multiply_rest_length","set_interval_role","change_rest_length","knownPulls","f0","f1","f2","create_face","remove_face","lifeTransition","activeCode","collated","found","entries","possibleMark","FaceStrategy","faceStrategies","strategy","finish_growing","checkFaceIntervals","joint1","joint2","pushRadius","pullRadius","jointRadius","is_anchor_joint","holes","here","touching","unitFromHere","pushUnit","adjacent","hole","oppositeJoint","chords","pushToA","dot","pushToB","other","acos","holeIndex","jointHolesFromJoint","radius","alphaIndex","omegaIndex","faceConnectorLengthFromScale","remove_interval","GeneName","faceToOrigin","createFaceIntervals","MODIFIER_NAMES","Forward","MusclePeriod","AttackPeriod","DecayPeriod","TwitchNuance","TicksPerSlice","isModifier","emptyGenome","Genome","rollTheDice","fromGeneData","geneData","genes","geneName","tosses","geneString","dice","numeral","DICE_MAP","die","getGene","search","fresh","roll","GeneReader","directionNames","modifierName","genesCopy","gene","slice","directionName","woops","random","currentRoll","mutateGene","maxTosses","symbol","serializeGene","DICE","featureDelta","diceToInteger","diceToNuance","diceToFloat","cursor","muscles","attackPeriod","decayPeriod","twitchNuance","doubleMuscle","alternating","muscle","when","attack","decay","original","Direction","Twitcher","cycleCount","twitchCount","ticks","twitchCycles","genome","musclePeriod","createReader","modifyFeature","ticksPerSlice","readTwichConfig","totalTwitches","DIRECTIONS","Rest","directionGene","reader","TwitchCycle","cycles","toString","twitch","timeSlice","twitchCycle","activate","geneReader","slices","remainingMuscles","removeMuscle","faceIndex","readMuscleTwitch","addTwitch","oppositeMuscle","twitches","twitchArray","GOTCHI_TENSCRIPT","SATOSHI_TREE_TENSCRIPT","Limb","freshGotchiState","patch","targetPatch","extremities","directionHistory","autopilot","reachedTarget","twitchesPerCycle","embryo","shapingTime","twitcher","storedGenes","useTwitches","whichLimb","extremity","limb","geneNames","dir","count","withMutations","m","checkDirection","nextStage","showFrozen","directionToTarget","twitch_face","towards","auto","age","getMidpoint","center","quaternionForDirection","distanceFromTarget","loc","topJoint","toTarget","degreeForward","degreeRight","oppositeFace","findLimb","oppositeLimb","opposite","gotchiNumeric","treeNumeric","EvolutionPhase","EVO_PARAMETERS","Evolution","evolvingGotchi","createInstance","cyclePattern","snapshotsSubject","winners","challengersVisible","challengers","phase","WinnersRun","cyclePatternIndex","currentCycle","currentMaxCycles","gotchiMidpoint","createAutoGotchi","gotchi","letter","proximityHistory","persisted","winnerMinCycles","winnerMoved","getCycleCount","rankEvolvers","EvolutionDone","winner","ChallengersBorn","ChallengersReborn","challenger","ChallengersRun","parentIndex","survivorIndex","parent","recycled","mutatedGeneData","challengerMoved","challengerMinCycles","evolvers","broadcastSnapshot","evolver","rankedToSnapshot","WinnersStored","splitEvolvers","losers","EvolutionAdvance","allReachedTarget","EvolutionHarder","rankedEvolver","evolverSnapshots","cycle","cycleIndex","snapshots","alreadyHere","findIndex","pop","proximityForCycle","proximity","String","fromCharCode","EvolutionStats","className","borderStyle","borderWidth","EvolutionInfo","evolverSnapshot","mutationSymbols","nameLength","reachedSymbol","borderRadius","marginBottom","padding","display","whiteSpace","margin","PATCH_SURROUNDING_SHAPE","ADJACENT","SIN_60","PATCH_DISTANCE","SCALE_X","SCALE_Y","FAUNA_PATCH_COLOR","FLORA_PATCH_COLOR","SUN_POSITION","HEMISPHERE_COLOR","PatchCharacter","ARROW_GEOMETRY","geom","origin","arrowToLx","arrowToL","arrowToR","arrowToRx","arrowTip","arrowVertices","arrowGeometry","Patch","island","coords","patchCharacter","satoshiTree","source","newGotchi","newSatoshiTree","removeRandomInterval","SIX","Happening","Island","seed","patches","_seed","p","createSurroundedPatch","findPatch","getOrCreatePatch","surface","FaunaPatch","FloraPatch","IslandView","satoshiTrees","happening","evolution","evolutionPhase","countdownToEvolution","stopEvolution","now","happeningChanged","updateHappeningChanged","updateNow","approachDistance","object","positionToTarget","deltaDistance","Developing","Resting","g","resting","Running","running","Evolving","withReducedCyclePattern","evolving","treeNumber","wasSeconds","time","isSeconds","EvolutionScene","GotchiComponent","positionArray","normalArray","attachObject","itemSize","SatoshiTreeComponent","onUpdate","self","topJointLocation","showDirection","computeBoundingSphere","transparent","DoubleSide","quaternion","directionQuaternion","GotchiView","homePatch","createNewSatoshiTree","createGotchi","setGotchi","setHappening","evoDetails","setEvoDetails","setSnapshots","evolutionCountdown","setEvolutionCountdown","setEvolution","setPhase","latestLife","evolveWithPattern","toEvolve","pattern","nextEvolution","ControlButtons","toRunning","toEvolving","toRebirth","toRest","toggleEvoDetails","EvolutionStatsView","createContent","SatoshiTree","deadInterval","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","addEventListener","swUrl","fetch","response","status","headers","get","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","SphereBuilder","sphere","VERTEX","hubAt","edgeVertexCount","build30Edges","sixty","build60Edges","buildSmallFaces","many","buildEdges","buildFaces","hubs","spokes","segmentLength","hub","spoke","pullsForSpoke","set_altitude","hubA","hubB","withMiddle","middleLocation","lerp","hubMid","pushBetween","edgeHubs","EDGE","edge","edgePoints","vertex","previousVertex","edgeVertexRows","walkBeads","v0","v1","loc0","loc1","spot","lerpVectors","frequency","PENTA","penta","walkBead","nextBead","currentVertex","nextVertex","FACE_EDGE","faceEdge","side0","side1","side2","vectorA","vectorB","walkF","FACE","walkA","walkB","v2","walkRow","vert","vv0","vv1","vv2","antiWalk","ee","vs","walkSide","vsVertex","ONE","sphereNumeric","STATE","CHANGE_EVENT","START_EVENT","END_EVENT","Orbit","element","enabled","enableRotate","enablePan","keyPanSpeed","autoRotateSpeed","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","target0","position0","zoom0","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","THREE","Infinity","LEFT","BOTTOM","ORBIT","ZOOM","MIDDLE","PAN","zoom","inverse","event","preventDefault","button","clientX","clientY","dispatchEvent","rotateLeft","clientWidth","rotateUp","clientHeight","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","touches","pageX","pageY","dx","dy","capture","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","min","makeSafe","setFromSpherical","lookAt","distanceToSquared","objectMatrix","setFromMatrixColumn","deltaX","targetDistance","tan","panLeft","panUp","dollyScale","updateProjectionMatrix","extend","FREQUENCIES","SphereView","createSphere","setPolygons","freq","f","setFrequency","setSphere","disabled","fabricOutput","SphereScene","toMidpoint","PolygonView","CYLINDER","CylinderGeometry","nearJoint","farHub","alphaHub","omegaHub","TensegritySphere","setFromAxisAngle","alphaLocation","omegaLocation","pullExists","nextNear","nextSpoke","oppositeNext","spokeLength","build","currentSpoke","currentLocation","toCurrent","cross","otherSpokes","closest","distanceA","FrozenTab","worldFeatures","updatePolygons","updateVisibleRoles","subscription","newState","Grouping","size","StrainSlider","domain","values","setValues","setBottom","setTop","nuanceToStrain","nuance","width","mode","step","rootStyle","sliderStyle","onChange","newValues","getRailProps","railDisabledBackground","railBackground","handles","getHandleProps","handle","Handle","tracks","getTrackProps","Track","trackColor","aria-valuemin","aria-valuemax","aria-valuenow","marginLeft","marginTop","zIndex","boxShadow","handleColor","StageTransition","FeaturePanel","featurePercent","setFeaturePercent","observable","formatted","percentChoices","percentLabel","LiveTab","centralize","LifeStageButton","stageTransition","allDisabledExcept","stageAccepted","CaptureLengthsToSlack","Symbol","SlackToPretensing","SlackToShaping","CapturePretenstToSlack","CaptureStrainForStiffness","ShapeSelection","ShapeTab","selectedIntervals","shapeSelection","setFabric","setShapeSelection","selectedJoints","clearSelection","pushAndPull","setPushAndPull","set_push_and_pull","subscriptions","currentRole","setCurrentRole","adjustValue","changeIntervalScale","disableUnlessFaceCount","None","Joints","Intervals","replaceCrosses","RolePanel","RealizeTab","updateFabricState","disabledLifeStage","active","TenscriptTab","rootTenscript","setRootTenscript","runTenscript","setTenscript","setError","recentOpen","setRecentOpen","recentPrograms","setRecentPrograms","bootstrapOpen","setBootstrapOpen","addToRecentPrograms","newCode","addRecentCode","flexDirection","CodeArea","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","bootstrapProgram","tenscriptCode","setTenscriptCode","onCodeChange","compiled","compile","borderColor","Input","changeEvent","ControlTabs","toFullScreen","updateControlTab","Link","tab","NavItem","NavLink","Pane","NO_FABRIC","Alert","TabPane","tabId","Shape","Live","Realize","Nav","tabs","TabContent","flex","flexFlow","activeTab","children","SPHERE","SphereGeometry","SELECTION_SCALE","AMBIENT_COLOR","SPACE_GEOMETRY","FabricView","toggleSelectedInterval","setSelectedJoints","whyThis","updateWhyThis","spaceMaterial","spaceTexture","TextureLoader","load","BackSide","updateInstance","updateStoredState","updatedOrbit","ALTITUDE","far","near","toggleSelectedJoint","jointToToggle","some","selected","towardsTarget","eye","distanceChange","towardsDistance","Faces","clickFace","toggleInterval","JointMesh","toggleJoint","r","strainNuance","intervalStrainNuance","isIntervalVisible","raycaster","meshRef","downEvent","setDownEvent","onPointerUp","mesh","doNotClick","intersectObjects","intersection","getCodeToRun","urlCode","decodeURIComponent","getCodeFromUrl","TensegrityView","mainInstance","setTensegrity","setSelectedIntervals","codeToRun","updateRotating","updateFullScreen","updateDemoCount","newTenscript","setTimeout","set_surface_character","featureSubscriptions","applyFeature","timer","clearTimeout","visibility","TopMiddle","tenscriptError","toTenscript","root","ReactDOM","startReact","stickyWorld","frozenWorld","createTensegrity","gotchiValue","gotchiLocation","default_world_feature","bridgeInstance","sphereInstance","at","floatFeatures","registerServiceWorker"],"mappings":"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","file":"static/js/4.4d054964.chunk.js","sourcesContent":["/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\nimport { IntervalRole } from \"eig\"\n\nconst ROOT2 = 1.414213562373095\nconst ROOT3 = 1.732050807568877\nconst ROOT5 = 2.23606797749979\nconst PHI = (1 + ROOT5) / 2\nconst RIBBON_WIDTH = 6\nconst RIBBON_STEP_LENGTH = 6\nconst CROSS1 = 0.5\nconst CROSS2 = (PHI / 3 - 1 / 6) * ROOT3\nconst CROSS3 = PHI / 3 * ROOT3 - 1 + ROOT2 / ROOT3\n\nexport function roleDefaultLength(intervalRole: IntervalRole): number {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return PHI\n        case IntervalRole.RootPush:\n            return ROOT2\n        case IntervalRole.PhiTriangle:\n        case IntervalRole.Twist:\n        case IntervalRole.InterTwist:\n            return 1\n        case IntervalRole.Ring:\n            return Math.sqrt(2 - 2 * Math.sqrt(2 / 3))\n        case IntervalRole.Cross:\n            return Math.sqrt(CROSS1 * CROSS1 + CROSS2 * CROSS2 + CROSS3 * CROSS3)\n        case IntervalRole.BowMid:\n            return 0.4\n        case IntervalRole.BowEnd:\n            return 0.6\n        case IntervalRole.RibbonPush:\n            return Math.sqrt(RIBBON_WIDTH * RIBBON_WIDTH + RIBBON_STEP_LENGTH * RIBBON_STEP_LENGTH)\n        case IntervalRole.RibbonShort:\n            return RIBBON_STEP_LENGTH / 2\n        case IntervalRole.RibbonLong:\n            return RIBBON_WIDTH\n        case IntervalRole.RibbonHanger:\n            return 1\n        default:\n            throw new Error(\"role?\")\n    }\n}\n\nexport const PUSH_RADIUS = 0.012\nexport const PULL_RADIUS = 0.005\nexport const JOINT_RADIUS = 0.015\n\nexport const SPACE_RADIUS = 10000\nexport const SPACE_SCALE = 1\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nexport const FORWARD = new Vector3(1, 0, 0)\nexport const RIGHT = new Vector3(0, 0, 1)\nexport const UP = new Vector3(0, 1, 0)\n\nexport function doNotClick(stage: Stage): boolean {\n    return stage === Stage.Growing || stage === Stage.Slack\n}\n\nexport const FABRIC_FEATURES: WorldFeature[] = Object.keys(WorldFeature)\n    .filter(k => isNaN(parseInt(k, 10)))\n    .map(k => WorldFeature[k])\n\nexport function intervalRoleName(intervalRole: IntervalRole, long?: boolean): string {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return long ? \"Phi Push\" : \"PP\"\n        case IntervalRole.RootPush:\n            return long ? \"Root Push\" :\"RP\"\n        case IntervalRole.PhiTriangle:\n            return long ? \"Phi Triangle\" :\"PT\"\n        case IntervalRole.Ring:\n            return long ? \"Ring\" :\"RI\"\n        case IntervalRole.Twist:\n            return long ? \"Twist\" :\"TW\"\n        case IntervalRole.InterTwist:\n            return long ? \"Intertwist\" :\"IT\"\n        case IntervalRole.Cross:\n            return long ? \"Cross\" :\"CR\"\n        case IntervalRole.BowMid:\n            return long ? \"Bow-mid\" :\"BM\"\n        case IntervalRole.BowEnd:\n            return long ? \"Bow-end\" : \"BE\"\n        case IntervalRole.RibbonPush:\n            return \"RP\"\n        case IntervalRole.RibbonShort:\n            return \"RS\"\n        case IntervalRole.RibbonLong:\n            return \"RL\"\n        case IntervalRole.RibbonHanger:\n            return \"RH\"\n        case IntervalRole.FaceConnector:\n            return \"FC\"\n        case IntervalRole.FaceDistancer:\n            return \"FD\"\n        case IntervalRole.FaceAnchor:\n            return \"FA\"\n        case IntervalRole.SpherePush:\n            return \"SB\"\n        case IntervalRole.SpherePull:\n            return \"SC\"\n        default:\n            return \"?\"\n    }\n}\n\nexport const ADJUSTABLE_INTERVAL_ROLES: IntervalRole[] = Object.keys(IntervalRole)\n    .filter(role => {\n        switch (IntervalRole[role]) {\n            case IntervalRole.PhiPush:\n            case IntervalRole.RootPush:\n            case IntervalRole.PhiTriangle:\n            case IntervalRole.Twist:\n            case IntervalRole.InterTwist:\n            case IntervalRole.Ring:\n            case IntervalRole.Cross:\n            case IntervalRole.BowMid:\n            case IntervalRole.BowEnd:\n                return true\n            default:\n                return false\n        }\n    })\n    .map(role => IntervalRole[role])\n\nexport function isPushInterval(intervalRole: IntervalRole): boolean {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n        case IntervalRole.RootPush:\n        case IntervalRole.RibbonPush:\n        case IntervalRole.SpherePush:\n            return true\n    }\n    return false\n}\n\nexport function stageName(stage: Stage): string {\n    switch (stage) {\n        case Stage.Growing:\n            return \"Growing\"\n        case Stage.Shaping:\n            return \"Shaping\"\n        case Stage.Slack:\n            return \"Slack\"\n        case Stage.Pretensing:\n            return \"Pretensing\"\n        default:\n            return \"Pretenst\"\n    }\n}\n\nexport enum Version {Design = \"design\", Gotchi = \"gotchi\", Bridge = \"bridge\", Sphere = \"sphere\"}\n\nexport function versionFromUrl(): Version {\n    const hash = location.hash\n    if (hash === \"#bridge\") {\n        return Version.Bridge\n    }\n    if (hash === \"#gotchi\") {\n        return Version.Gotchi\n    }\n    if (hash.startsWith(\"#sphere\")) {\n        return Version.Sphere\n    }\n    return Version.Design\n}\n\nexport function switchToVersion(version: Version): void {\n    location.hash = version\n    location.reload()\n}\n\nexport function floatString(numeric: number): string {\n    const expo = numeric.toExponential(5)\n    const zero = expo.indexOf(\"e+0\")\n    if (zero > 0) {\n        return expo.substring(0, zero)\n    }\n    const minus = Math.max(expo.indexOf(\"e-1\"), expo.indexOf(\"e-2\"))\n    if (minus > 0) {\n        return numeric.toFixed(5)\n    }\n    const plus = Math.max(expo.indexOf(\"e+1\"), expo.indexOf(\"e+2\"))\n    if (plus > 0) {\n        return numeric.toFixed(1)\n    }\n    return expo\n}\n\nexport function vectorString({x, y, z}: Vector3): string {\n    const digits = 2\n    return `(${x.toFixed(digits)}, ${y.toFixed(digits)}, ${z.toFixed(digits)})`\n}\n\nexport function sub(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().subVectors(a, b).normalize()\n}\n\nexport function avg(a: Vector3, b: Vector3): Vector3 {\n    return new Vector3().addVectors(a, b).normalize()\n}\n\nexport function midpoint(points: Vector3[]): Vector3 {\n    const mid = new Vector3()\n    points.forEach(point => mid.add(point))\n    return mid.multiplyScalar(1 / points.length)\n}\n\nexport function normal(points: Vector3 []): Vector3 {\n    const mid = midpoint(points)\n    const radials = points.map(point => new Vector3().copy(point).sub(mid))\n    const norm = new Vector3()\n    for (let index = 0; index < radials.length; index++) {\n        const current = radials[index]\n        const next = radials[(index + 1) % radials.length]\n        norm.add(new Vector3().crossVectors(next, current).normalize())\n    }\n    return norm.normalize()\n}\n\nexport function vectorFromArray(array: Float32Array, index: number, vector?: Vector3): Vector3 {\n    const offset = index * 3\n    if (vector) {\n        vector.set(array[offset], array[offset + 1], array[offset + 2])\n        return vector\n    } else {\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2])\n    }\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport { Matrix4, Vector3 } from \"three\"\n\nimport { JOINT_RADIUS } from \"../pretenst\"\n\nimport { intervalRoleName, midpoint, sub } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\n\nexport enum Spin {Left, Right}\n\nexport function oppositeSpin(spin: Spin): Spin {\n    switch (spin) {\n        case Spin.Left:\n            return Spin.Right\n        case Spin.Right:\n            return Spin.Left\n    }\n}\n\nexport function spinChar(spin: Spin): string {\n    return spin === Spin.Left ? \"L\" : \"R\"\n}\n\nexport enum FaceName {NNN = 0, PNN, NPN, NNP, NPP, PNP, PPN, PPP}\n\nexport const FACE_NAMES = [FaceName.NNN, FaceName.PNN, FaceName.NPN, FaceName.NNP, FaceName.NPP, FaceName.PNP, FaceName.PPN, FaceName.PPP]\n\nexport const FACE_DIRECTIONS = \"aBCDbcdA\"\n\nexport interface IJoint {\n    index: number\n    push?: IInterval\n    instance: FabricInstance\n}\n\nexport function jointLocation({instance, index}: IJoint): Vector3 {\n    return instance.jointLocation(index)\n}\n\nexport function jointDistance(a: IJoint, b: IJoint): number {\n    return jointLocation(a).distanceTo(jointLocation(b))\n}\n\nexport interface IInterval {\n    index: number\n    isPush: boolean\n    removed: boolean\n    intervalRole: IntervalRole\n    scale: IPercent\n    alpha: IJoint\n    omega: IJoint\n}\n\nexport function intervalLocation({alpha, omega}: IInterval): Vector3 {\n    return jointLocation(alpha).add(jointLocation(omega)).multiplyScalar(0.5)\n}\n\nexport function intervalLength({alpha, omega}: IInterval): number {\n    return jointDistance(alpha, omega)\n}\n\nexport function intervalStrainNuance({alpha, index}: IInterval): number {\n    return alpha.instance.floatView.strainNuances[index]\n}\n\nexport function acrossPush(joint: IJoint): IJoint {\n    if (!joint.push) {\n        throw new Error(\"No push\")\n    }\n    const push = joint.push\n    if (push.alpha.index === joint.index) {\n        return push.omega\n    }\n    if (push.omega.index === joint.index) {\n        return push.alpha\n    }\n    throw new Error(\"Big problem\")\n}\n\nexport function otherJoint(joint: IJoint, interval: IInterval): IJoint {\n    if (interval.alpha.index === joint.index) {\n        return interval.omega\n    }\n    if (interval.omega.index === joint.index) {\n        return interval.alpha\n    }\n    throw new Error(\"No other joint\")\n}\n\nexport interface IFaceMark {\n    _: number\n}\n\nexport interface IFace {\n    index: number\n    omni: boolean\n    spin: Spin\n    scale: IPercent\n    pulls: IInterval[]\n    ends: IJoint[]\n    mark?: IFaceMark\n}\n\nexport interface IFaceInterval {\n    index: number\n    alpha: IFace\n    omega: IFace\n    connector: boolean\n    scaleFactor: number\n    removed: boolean\n}\n\nexport interface IFaceAnchor {\n    index: number\n    alpha: IFace\n    omega: IJoint\n    removed: boolean\n}\n\nexport function rotateForBestRing(alpha: IFace, omega: IFace): void {\n    const alphaEnds = [...alpha.ends].reverse()\n    const omegaEnds = omega.ends\n    const ringLengths: number[] = []\n    for (let rotation = 0; rotation < alphaEnds.length; rotation++) {\n        let ringLength = 0\n        for (let walk = 0; walk < alphaEnds.length; walk++) {\n            const rotatedWalk = (walk + rotation) % alphaEnds.length\n            ringLength += jointDistance(alphaEnds[walk], omegaEnds[rotatedWalk])\n            ringLength += jointDistance(omegaEnds[rotatedWalk], alphaEnds[(walk + 1) % alphaEnds.length])\n        }\n        ringLengths.push(ringLength)\n    }\n    let bestRotation = 0\n    let minLength = ringLengths[bestRotation]\n    ringLengths.forEach((ringLength, index) => {\n        if (ringLength < minLength) {\n            bestRotation = index\n            minLength = ringLength\n        }\n    })\n    if (bestRotation > 0) {\n        omega.ends = omega.ends.map(({}, index) => omega.ends[(index + bestRotation) % omega.ends.length])\n    }\n}\n\nexport function intervalsTouching(joints: IJoint[]): (interval: IInterval) => boolean {\n    return ({alpha, omega}) =>\n        joints.some(joint => joint.index === alpha.index || joint.index === omega.index)\n}\n\nexport function intervalsFromFaces(faces: IFace[]): IInterval[] {\n    return faces.reduce((accum, face) => {\n        const unknown = (interval: IInterval) => !accum.some(existing => interval.index === existing.index)\n        const pulls = face.pulls.filter(unknown)\n        return [...accum, ...pulls]\n    }, [] as IInterval[])\n}\n\nexport function locationFromFace(face: IFace): Vector3 {\n    return midpoint(face.ends.map(jointLocation))\n}\n\nexport function normalFromFace(face: IFace): Vector3 {\n    const origin = locationFromFace(face)\n    const cross = new Vector3()\n    const norm = new Vector3()\n    const toEnds = face.ends.map(jointLocation).map(location => location.sub(origin))\n    for (let index = 0; index < toEnds.length; index++) {\n        cross.crossVectors(toEnds[index], toEnds[(index + 1) % toEnds.length]).normalize()\n        norm.add(cross)\n    }\n    return norm.normalize()\n}\n\nexport function locationFromJoints(joints: IJoint[]): Vector3 {\n    return joints\n        .reduce((accum, joint) => accum.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / joints.length)\n}\n\nexport function locationFromFaces(faces: IFace[]): Vector3 {\n    return faces\n        .reduce((accum, face) => accum.add(locationFromFace(face)), new Vector3())\n        .multiplyScalar(1 / faces.length)\n}\n\nexport interface IPercent {\n    _: number\n}\n\nexport function percentOrHundred(percent?: IPercent): IPercent {\n    return percent ? percent : {_: 100.0}\n}\n\nexport function factorFromPercent({_: percent}: IPercent): number {\n    return percent / 100.0\n}\n\nexport function percentFromFactor(factor: number): IPercent {\n    const _ = factor * 100.0\n    return {_}\n}\n\nexport interface ITwist {\n    faces: IFace[]\n    scale: IPercent\n    pushes: IInterval[]\n    pulls: IInterval[]\n}\n\nexport function locationFromTwist(twist: ITwist): Vector3 {\n    const gatherJoints = (array: IJoint[], push: IInterval) => {\n        array.push(push.alpha, push.omega)\n        return array\n    }\n    return twist.pushes\n        .reduce(gatherJoints, [])\n        .reduce((loc, joint) => loc.add(jointLocation(joint)), new Vector3())\n        .multiplyScalar(1 / (twist.pushes.length * 2))\n}\n\nexport function faceFromTwist(twist: ITwist, faceName: FaceName): IFace {\n    switch (twist.faces.length) {\n        case 2:\n            switch (faceName) {\n                case FaceName.NNN:\n                    return twist.faces[0]\n                case FaceName.PPP:\n                    return twist.faces[1]\n            }\n            break\n        case 8: // aBCDbcdA\n            switch (faceName) {\n                case FaceName.NNN: // a\n                    return twist.faces[0]\n                case FaceName.PNN: // B\n                    return twist.faces[2]\n                case FaceName.NPN: // C\n                    return twist.faces[1]\n                case FaceName.NNP: // D\n                    return twist.faces[3]\n                case FaceName.NPP: // b\n                    return twist.faces[4]\n                case FaceName.PNP: // c\n                    return twist.faces[5]\n                case FaceName.PPN: // d\n                    return twist.faces[6]\n                case FaceName.PPP: // A\n                    return twist.faces[7]\n            }\n            break\n    }\n    throw new Error(`Face ${FaceName[faceName]} not found in twist with ${twist.faces.length} faces`)\n}\n\nexport function faceConnectorLengthFromScale(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\nexport interface IChord {\n    holeIndex: number\n    length: number\n}\n\nexport interface IJointHole {\n    index: number\n    interval: number\n    role: string\n    oppositeJoint: number\n    chords: IChord[]\n}\n\ninterface IAdjacentInterval {\n    interval: IInterval\n    unit: Vector3\n    hole: IJointHole\n}\n\nexport function jointHolesFromJoint(here: IJoint, intervals: IInterval[]): IJointHole[] {\n    const touching = intervals.filter(interval => interval.alpha.index === here.index || interval.omega.index === here.index)\n    const push = touching.find(interval => interval.isPush)\n    if (!push) {\n        return []\n    }\n    const unitFromHere = (interval: IInterval) => new Vector3()\n        .subVectors(jointLocation(otherJoint(here, interval)), jointLocation(here)).normalize()\n    const pushUnit = unitFromHere(push)\n    const adjacent = touching\n        .map(interval => (<IAdjacentInterval>{\n            interval,\n            unit: unitFromHere(interval),\n            hole: <IJointHole>{\n                index: 0, // assigned below\n                interval: interval.index,\n                role: intervalRoleName(interval.intervalRole),\n                oppositeJoint: otherJoint(here, interval).index,\n                chords: [],\n            },\n        }))\n        .sort((a: IAdjacentInterval, b: IAdjacentInterval) => {\n            const pushToA = a.unit.dot(pushUnit)\n            const pushToB = b.unit.dot(pushUnit)\n            return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n        })\n    adjacent.forEach((a, index) => a.hole.index = index)\n    const compareDot = (unit: Vector3) => (a: IAdjacentInterval, b: IAdjacentInterval) => {\n        const pushToA = a.unit.dot(unit)\n        const pushToB = b.unit.dot(unit)\n        return pushToA < pushToB ? 1 : pushToA > pushToB ? -1 : 0\n    }\n    adjacent.forEach(from => {\n        adjacent\n            .filter(a => a.hole.index !== from.hole.index)\n            .sort(compareDot(from.unit))\n            .forEach(other => {\n                const angle = Math.acos(from.unit.dot(other.unit))\n                const length = 2 * Math.sin(angle / 2) * JOINT_RADIUS\n                from.hole.chords.push(<IChord>{holeIndex: other.hole.index, length})\n            })\n    })\n    return adjacent.map(({hole}: IAdjacentInterval) => hole)\n}\n\nexport function averageScaleFactor(faces: IFace[]): number {\n    return faces.reduce((sum, face) => sum + factorFromPercent(face.scale), 0) / faces.length\n}\n\nexport function faceToOriginMatrix(face: IFace): Matrix4 {\n    const trianglePoints = face.ends.map(jointLocation)\n    const mid = midpoint(trianglePoints)\n    const x = new Vector3().subVectors(trianglePoints[1], mid).normalize()\n    const z = new Vector3().subVectors(trianglePoints[0], mid).normalize()\n    const y = new Vector3().crossVectors(x, z).normalize()\n    z.crossVectors(x, y).normalize()\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(mid)\n    return new Matrix4().getInverse(faceBasis)\n}\n\nexport function reorientMatrix(points: Vector3[], rotation: number): Matrix4 {\n    const x = sub(points[0], points[1])\n    const y = sub(points[3], points[2])\n    const z = sub(points[5], points[4])\n    const middle = points\n        .reduce((sum, point) => sum.add(point), new Vector3())\n        .multiplyScalar(1.0 / points.length)\n    const faceBasis = new Matrix4().makeBasis(x, y, z).setPosition(middle)\n    const twirl = new Matrix4().makeRotationX(Math.PI * -0.27)\n    const rotate = new Matrix4().makeRotationY(-rotation * Math.PI / 3)\n    return new Matrix4().getInverse(faceBasis.multiply(twirl).multiply(rotate))\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { factorFromPercent, IInterval, IJoint, IPercent, jointLocation } from \"./tensegrity-types\"\n\nexport function scaleToInitialStiffness(scale: IPercent): number {\n    const scaleFactor = factorFromPercent(scale)\n    return Math.pow(scaleFactor, 0.6) * 0.001\n}\n\nexport class TensegrityOptimizer {\n\n    constructor(private tensegrity: Tensegrity) {\n    }\n\n    public replaceCrosses(countdown: number): void {\n        const tensegrity = this.tensegrity\n        const pairs: IPair[] = []\n        const findPush = (jointIndex: number): IPush => {\n            const interval = tensegrity.intervals\n                .filter(i => i.isPush)\n                .find(i => i.alpha.index === jointIndex || i.omega.index === jointIndex)\n            if (!interval) {\n                throw new Error(`Cannot find ${jointIndex}`)\n            }\n            const joint: IJoint = interval.alpha.index === jointIndex ? interval.alpha : interval.omega\n            return {interval, joint}\n        }\n        const crosses = tensegrity.intervals.filter(interval => interval.intervalRole === IntervalRole.Cross)\n        crosses.forEach((intervalA, indexA) => {\n            const aAlpha = intervalA.alpha.index\n            const aOmega = intervalA.omega.index\n            const aAlphaPush = findPush(aAlpha)\n            const aOmegaPush = findPush(aOmega)\n            const aAlphaLoc = jointLocation(intervalA.alpha)\n            const aOmegaLoc = jointLocation(intervalA.omega)\n            const aLength = aAlphaLoc.distanceTo(aOmegaLoc)\n            const aMid = new Vector3().addVectors(aAlphaLoc, aOmegaLoc).multiplyScalar(0.5)\n            crosses.forEach((intervalB, indexB) => {\n                const bAlpha = intervalB.alpha.index\n                const bOmega = intervalB.omega.index\n                if (indexA >= indexB || aAlpha === bAlpha || aAlpha === bOmega || aOmega === bAlpha || aOmega === bOmega) {\n                    return\n                }\n                const bAlphaPush = findPush(bAlpha)\n                const bOmegaPush = findPush(bOmega)\n                let push: IInterval | undefined\n                let a: IJoint | undefined\n                let x: IJoint | undefined\n                let b: IJoint | undefined\n                let y: IJoint | undefined\n                const samePush = (pushA: IPush, pushB: IPush) => pushA.interval.index === pushB.interval.index\n                if (samePush(aAlphaPush, bAlphaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aAlphaPush, bOmegaPush)) {\n                    push = aAlphaPush.interval\n                    a = intervalA.alpha\n                    x = intervalA.omega\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else if (samePush(aOmegaPush, bAlphaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.alpha\n                    y = intervalB.omega\n                } else if (samePush(aOmegaPush, bOmegaPush)) {\n                    push = aOmegaPush.interval\n                    a = intervalA.omega\n                    x = intervalA.alpha\n                    b = intervalB.omega\n                    y = intervalB.alpha\n                } else {\n                    return\n                }\n                const bAlphaLoc = jointLocation(intervalB.alpha)\n                const bOmegaLoc = jointLocation(intervalB.omega)\n                const bLength = bAlphaLoc.distanceTo(bOmegaLoc)\n                const bMid = new Vector3().addVectors(bAlphaLoc, bOmegaLoc).multiplyScalar(0.5)\n                const aAlphaMidB = aAlphaLoc.distanceTo(bMid) / bLength\n                const aOmegaMidB = aOmegaLoc.distanceTo(bMid) / bLength\n                const bAlphaMidA = bAlphaLoc.distanceTo(aMid) / aLength\n                const bOmegaMidA = bOmegaLoc.distanceTo(aMid) / aLength\n                let closeCount = 0\n                const close = (dist: number) => {\n                    if (dist < 0.5) {\n                        closeCount++\n                    }\n                }\n                close(aAlphaMidB)\n                close(aOmegaMidB)\n                close(bAlphaMidA)\n                close(bOmegaMidA)\n                if (closeCount < 2) {\n                    return\n                }\n                const scale = push.scale\n                pairs.push({scale, a, x, b, y})\n            })\n        })\n        pairs.forEach(({scale, a, x, b, y}: IPair) => {\n            const stiffness = scaleToInitialStiffness(scale)\n            const linearDensity = Math.sqrt(stiffness)\n            tensegrity.createInterval(x, y, IntervalRole.BowMid, scale, stiffness, linearDensity, countdown)\n            const ax = tensegrity.findInterval(a, x)\n            const ay = tensegrity.findInterval(a, y)\n            const bx = tensegrity.findInterval(b, x)\n            const by = tensegrity.findInterval(b, y)\n            if (!(ax && bx && ay && by)) {\n                console.log(\"Cannot find intervals during optimize\")\n                return\n            }\n            tensegrity.removeInterval(ax)\n            tensegrity.removeInterval(by)\n            this.tensegrity.changeIntervalRole(ay, IntervalRole.BowEnd, scale, countdown)\n            this.tensegrity.changeIntervalRole(bx, IntervalRole.BowEnd, scale, countdown)\n        })\n    }\n\n    public stiffnessesFromStrains(includeInterval: (interval: IInterval) => boolean): void {\n        const pushOverPull = this.tensegrity.numericFeature(WorldFeature.PushOverPull)\n        const {stiffnesses, linearDensities} = adjustedStiffness(this.tensegrity, includeInterval, pushOverPull)\n        this.tensegrity.instance.restoreSnapshot()\n        this.tensegrity.fabric.copy_material(stiffnesses, linearDensities)\n    }\n}\n\nfunction adjustedStiffness(tensegrity: Tensegrity, includeInterval: (interval: IInterval) => boolean, pushOverPull: number): {\n    stiffnesses: Float32Array,\n    linearDensities: Float32Array,\n} {\n    const floatView = tensegrity.instance.floatView\n    const strains: Float32Array = floatView.strains\n    const getAverageStrain = (toAverage: IInterval[]) => {\n        const included = toAverage.filter(includeInterval)\n        const totalStrain = included.reduce((sum, interval) => sum + strains[interval.index], 0)\n        return totalStrain / included.length\n    }\n    const intervals = tensegrity.intervals\n    const pushes = intervals.filter(interval => interval.isPush)\n    const averagePushStrain = getAverageStrain(pushes)\n    const pulls = intervals.filter(interval => !interval.isPush)\n    const averagePullStrain = getAverageStrain(pulls)\n    const averageAbsoluteStrain = (-pushOverPull * averagePushStrain + averagePullStrain) / 2\n    const changes = intervals.map(interval => {\n        if (!includeInterval(interval)) {\n            return 1\n        }\n        const absoluteStrain = strains[interval.index] * (interval.isPush ? -pushOverPull : 1)\n        const normalizedStrain = absoluteStrain - averageAbsoluteStrain\n        const strainFactor = normalizedStrain / averageAbsoluteStrain\n        return 1 + strainFactor\n    })\n    const stiffnesses = floatView.stiffnesses.map((value, index) => value * changes[index])\n    const linearDensities = floatView.linearDensities.map((value, index) => Math.sqrt(value * value * changes[index]))\n    return {stiffnesses, linearDensities}\n}\n\ninterface IPair {\n    scale: IPercent\n    a: IJoint\n    x: IJoint\n    b: IJoint\n    y: IJoint\n}\n\ninterface IPush {\n    interval: IInterval\n    joint: IJoint\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { scaleToInitialStiffness } from \"../fabric/tensegrity-optimizer\"\nimport {\n    FaceName,\n    IFace,\n    IInterval,\n    IJoint,\n    jointDistance,\n    jointLocation,\n    percentFromFactor,\n    percentOrHundred,\n} from \"../fabric/tensegrity-types\"\nimport { roleDefaultLength } from \"../pretenst\"\n\nexport const SHAPING_TIME = 1000\n\nconst RibbonHeight = 7\nconst RibbonPushDensity = 2\nconst RibbonCount = 7\nconst HangerCount = 6\nconst BrickCount = 4\nconst BaseWidth = 18\nconst BaseLength = 50\nconst AnchorLength = 5\nconst AnchorScale = 110\n\nexport function bridgeTenscript(): string {\n    return (\n        `'Melkvonder Ulft':` +\n        `(` +\n        ` A(${BrickCount},MA0),` +\n        ` b(${BrickCount},MA1),` +\n        ` a(${BrickCount},MA3),` +\n        ` B(${BrickCount},MA2)` +\n        `)` +\n        `:0=anchor-(${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:1=anchor-(${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:2=anchor-(-${BaseLength / 2},${BaseWidth / 2})-${AnchorLength}-${AnchorScale}` +\n        `:3=anchor-(-${BaseLength / 2},-${BaseWidth / 2})-${AnchorLength}-${AnchorScale}`\n    )\n}\n\nexport function bridgeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IntervalCountdown:\n            return defaultValue\n        case WorldFeature.Gravity:\n            return defaultValue * 0.03\n        case WorldFeature.Drag:\n            return defaultValue * 2\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 3\n        case WorldFeature.VisualStrain:\n            return defaultValue\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 200.0\n        case WorldFeature.PushOverPull:\n            return 4\n        default:\n            return defaultValue\n    }\n}\n\nexport enum Arch {\n    FrontLeft,\n    FrontRight,\n    BackLeft,\n    BackRight,\n}\n\nexport interface IHook {\n    face: IFace\n    name: string\n    arch: Arch\n    distance: number\n    jointIndex: number\n}\n\nexport function ribbon(tensegrity: Tensegrity): IHook[][] {\n    const ribbonShort = roleDefaultLength(IntervalRole.RibbonShort)\n    const ribbonLong = roleDefaultLength(IntervalRole.RibbonLong)\n    const joint = (x: number, left: boolean): IJoint => {\n        const z = ribbonLong * (left ? -0.5 : 0.5)\n        const location = new Vector3(x, RibbonHeight, z)\n        const jointIndex = tensegrity.createJoint(location)\n        const ribbonJoint: IJoint = {index: jointIndex, instance: tensegrity.instance}\n        tensegrity.joints.push(ribbonJoint)\n        return ribbonJoint\n    }\n    const interval = (alpha: IJoint, omega: IJoint, intervalRole: IntervalRole): IInterval => {\n        const scale = percentOrHundred()\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = intervalRole === IntervalRole.RibbonPush ? RibbonPushDensity : Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 100)\n    }\n    const L0 = joint(0, true)\n    const R0 = joint(0, false)\n    const J: IJoint[][] = [[L0], [R0], [L0], [R0]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const x = walk * ribbonShort\n        J[Arch.FrontLeft].push(joint(x, true))\n        J[Arch.FrontRight].push(joint(x, false))\n        J[Arch.BackLeft].push(joint(-x, true))\n        J[Arch.BackRight].push(joint(-x, false))\n    }\n    tensegrity.instance.refreshFloatView()\n    interval(L0, R0, IntervalRole.RibbonLong)\n    const joints = (index: number) => [J[0][index], J[1][index], J[2][index], J[3][index]]\n    for (let walk = 1; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 1)\n        const curr = joints(walk)\n        interval(curr[0], curr[1], IntervalRole.RibbonLong)\n        interval(curr[2], curr[3], IntervalRole.RibbonLong)\n        for (let short = 0; short < 4; short++) {\n            interval(prev[short], curr[short], IntervalRole.RibbonShort)\n        }\n    }\n    interval(J[Arch.FrontLeft][1], J[Arch.BackRight][1], IntervalRole.RibbonPush)\n    interval(J[Arch.FrontRight][1], J[Arch.BackLeft][1], IntervalRole.RibbonPush)\n    for (let walk = 2; walk < RibbonCount; walk++) {\n        const prev = joints(walk - 2)\n        const curr = joints(walk)\n        interval(prev[0], curr[1], IntervalRole.RibbonPush)\n        interval(prev[1], curr[0], IntervalRole.RibbonPush)\n        interval(prev[2], curr[3], IntervalRole.RibbonPush)\n        interval(prev[3], curr[2], IntervalRole.RibbonPush)\n    }\n    const hooks = extractHooks(tensegrity, HangerCount)\n    const hanger = (alpha: IJoint, omega: IJoint): IInterval => {\n        const intervalRole = IntervalRole.RibbonHanger\n        const length = jointDistance(alpha, omega)\n        const scale = percentFromFactor(length)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, 10)\n    }\n    for (let arch = 0; arch < 4; arch++) {\n        const h = [...hooks[arch]]\n        h.forEach((hook, index) => {\n            if (index === 0) {\n                return\n            }\n            const rj = J[arch][1 + Math.floor(index / 3)]\n            const hookJoint = hook.face.ends[hook.jointIndex]\n            hanger(rj, hookJoint)\n        })\n    }\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[11])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[10])\n    hanger(J[Arch.FrontRight][0], tensegrity.joints[9])\n    hanger(J[Arch.FrontLeft][0], tensegrity.joints[8])\n    return hooks\n}\n\nfunction extractHooks(tensegrity: Tensegrity, hangerCount: number): IHook[][] {\n    const hooks: IHook[][] = [[], [], [], []]\n    tensegrity.faces.forEach(face => {\n        // const gatherAncestors = (f: IFace, id: FaceName[]): Arch => {\n        // const definition = BRICK_FACE_DEF[f.faceName]\n        // id.push(definition.negative ? definition.opposite : definition.name)\n        // const parentFace = f.brick.parentFace\n        // if (parentFace) {\n        //     return gatherAncestors(parentFace, id)\n        // } else {\n        //     return archFromFaceName(f.faceName)\n        // }\n        // return Arch.FrontRight\n        // }\n        const identities: FaceName[] = []\n        const arch = Arch.FrontRight // TODO: This is wrong! Just so it will compile.\n        const group = identities.shift()\n        if (!group) {\n            throw new Error(\"no top!\")\n        }\n        if (group && isFaceExtremity(group)) {\n            return\n        }\n        const distance = identities.length\n        face.ends.forEach(({}, jointIndex) => {\n            const name = `[${arch}]:[${distance}:${FaceName[group]}]:J${jointIndex}`\n            hooks[arch].push({face, name, arch, distance, jointIndex})\n        })\n    })\n    const filter = (hook: IHook) => {\n        const {distance} = hook\n        if (distance > hangerCount) {\n            return false\n        }\n        // switch (hook.faceName) {\n        //     case FaceName.NPN:\n        //         return arch === Arch.BackRight\n        //     case FaceName.NNP:\n        //         return arch === Arch.FrontRight\n        //     case FaceName.PNP:\n        //         return arch === Arch.BackLeft\n        //     case FaceName.PPN:\n        //         return arch === Arch.FrontLeft\n        //     default:\n        //         return false\n        // }\n        return true // TODO: this is wrong!\n    }\n    const sortXY = (a: IHook, b: IHook) => {\n        const aa = jointLocation(a.face.ends[a.jointIndex])\n        const bb = jointLocation(b.face.ends[b.jointIndex])\n        return aa.lengthSq() - bb.lengthSq()\n    }\n    return [\n        hooks[Arch.FrontLeft].filter(filter).sort(sortXY),\n        hooks[Arch.FrontRight].filter(filter).sort(sortXY),\n        hooks[Arch.BackLeft].filter(filter).sort(sortXY),\n        hooks[Arch.BackRight].filter(filter).sort(sortXY),\n    ]\n}\n\n// function archFromFaceName(faceName: FaceName): Arch {\n//     switch (faceName) {\n//         case FaceName.NNN:\n//             return Arch.BackLeft\n//         case FaceName.PNN:\n//             return Arch.BackRight\n//         case FaceName.NPP:\n//             return Arch.FrontLeft\n//         case FaceName.PPP:\n//             return Arch.FrontRight\n//         default:\n//             throw new Error(\"Strange arch\")\n//     }\n// }\n\nfunction isFaceExtremity(faceName: FaceName): boolean {\n    return false // TODO\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as FileSaver from \"file-saver\"\nimport JSZip from \"jszip\"\n\nimport { IJointHole } from \"../fabric/tensegrity-types\"\n\nfunction csvNumber(n: number): string {\n    return n.toFixed(5).replace(/[.]/, \",\")\n}\n\nfunction dateString(): string {\n    return new Date().toISOString()\n        .replace(/[.].*/, \"\").replace(/[:T_]/g, \"-\")\n}\n\nexport interface IOutputJoint {\n    index: number\n    x: number\n    y: number\n    z: number\n    radius: number\n    anchor: boolean\n    holes: IJointHole[]\n}\n\nexport interface IOutputInterval {\n    index: number\n    joints: number[]\n    type: string\n    strain: number\n    stiffness: number\n    linearDensity: number\n    isPush: boolean\n    role: string\n    scale: number\n    idealLength: number\n    length: number\n    radius: number\n}\n\nexport interface IFabricOutput {\n    name: string\n    joints: IOutputJoint[]\n    intervals: IOutputInterval[]\n}\n\nfunction extractJointFile(output: IFabricOutput): string {\n    const csvJoints: string[][] = []\n    csvJoints.push([\"index\", \"x\", \"y\", \"z\"])\n    output.joints.forEach(joint => csvJoints.push([\n        (joint.index+1).toFixed(0),\n        csvNumber(joint.x), csvNumber(joint.y), csvNumber(joint.z),\n    ]))\n    return csvJoints.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractIntervalFile(output: IFabricOutput): string {\n    const csvIntervals: string[][] = []\n    csvIntervals.push([\"joints\", \"type\", \"strain\", \"stiffness\", \"linear density\", \"role\", \"length\"])\n    output.intervals.forEach(interval => {\n        csvIntervals.push([\n            `\"=\"\"${interval.joints.map(j => (j + 1).toFixed(0))}\"\"\"`, interval.type,\n            csvNumber(interval.strain), csvNumber(interval.stiffness), csvNumber(interval.linearDensity),\n            interval.role, interval.length.toFixed(8),\n        ])\n    })\n    return csvIntervals.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nfunction extractSubmergedFile(output: IFabricOutput): string {\n    const csvSubmerged: string[][] = []\n    csvSubmerged.push([\"joints\"])\n    csvSubmerged.push([`\"=\"\"${output.joints.filter(({anchor})=> anchor).map(joint => joint.index + 1)}\"\"\"`])\n    return csvSubmerged.map(a => a.join(\";\")).join(\"\\n\")\n}\n\nexport function saveCSVZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(\"joints.csv\", extractJointFile(output))\n    zip.file(\"intervals.csv\", extractIntervalFile(output))\n    zip.file(\"submerged.csv\", extractSubmergedFile(output))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n\nexport function saveJSONZip(output: IFabricOutput): void {\n    const zip = new JSZip()\n    zip.file(`pretenst-${dateString()}.json`, JSON.stringify(output, undefined, 2))\n    zip.generateAsync({type: \"blob\", mimeType: \"application/zip\"}).then(blob => {\n        FileSaver.saveAs(blob, `pretenst-${dateString()}.zip`)\n    })\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport { Color, FrontSide, LineBasicMaterial, Material, MeshLambertMaterial, MeshPhongMaterial } from \"three\"\n\nexport const SELECTION_COLOR = \"#993431\"\nexport const JOINT_COLOR = \"#6c72e0\"\n\nconst RAINBOW_GRADIENT = [\n    \"#fd0000\",\n    \"#c94f00\",\n    \"#d58e1c\",\n    \"#897c00\",\n    \"#6c8901\",\n    \"#1d6c01\",\n    \"#0e4e00\",\n    \"#007f67\",\n    \"#01808b\",\n    \"#005da3\",\n    \"#0015c7\",\n    \"#0000ff\",\n].reverse()\n\nconst RAINBOW_COLORS = RAINBOW_GRADIENT.map(c => new Color().setHex(parseInt(`${c.substring(1)}`, 16)))\n\nexport const SURFACE = new MeshPhongMaterial({\n    color: new Color(\"#181818\"),\n    side: FrontSide,\n    opacity: 0.5,\n})\n\nexport const LINE_VERTEX_COLORS = new LineBasicMaterial({\n    vertexColors: true,\n})\n\nexport const SELECT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(SELECTION_COLOR),\n})\n\nexport const JOINT_MATERIAL = new MeshPhongMaterial({\n    color: new Color(JOINT_COLOR),\n})\n\nconst RAINBOW_LAMBERT = RAINBOW_COLORS.map(color => new MeshLambertMaterial({color}))\n\nexport function rainbowMaterial(nuance: number): Material {\n    const index = Math.floor(nuance * RAINBOW_LAMBERT.length)\n    return RAINBOW_LAMBERT[index >= RAINBOW_LAMBERT.length ? RAINBOW_LAMBERT.length - 1 : index]\n}\n\nexport function roleColorString(intervalRole?: IntervalRole): string | undefined {\n    switch (intervalRole) {\n        case IntervalRole.PhiPush:\n            return \"#8955fa\"\n        case IntervalRole.RootPush:\n            return \"#2b38ff\"\n        case IntervalRole.PhiTriangle:\n            return \"#d0c61a\"\n        case IntervalRole.Twist:\n            return \"#ffffff\"\n        case IntervalRole.InterTwist:\n            return \"#d0c61a\"\n        case IntervalRole.Ring:\n            return \"#ff5c2b\"\n        case IntervalRole.Cross:\n            return \"#28c245\"\n        case IntervalRole.BowMid:\n            return \"#4393b3\"\n        case IntervalRole.BowEnd:\n            return \"#4393b3\"\n        case IntervalRole.FaceConnector:\n            return \"#fe0105\"\n        case IntervalRole.FaceDistancer:\n            return \"#9e9b02\"\n        case IntervalRole.FaceAnchor:\n            return \"#dc5bf8\"\n        default:\n            return undefined\n    }\n}\n\nexport function roleColor(intervalRole?: IntervalRole): Color {\n    return new Color(roleColorString(intervalRole))\n}\n\nexport function roleMaterial(intervalRole: IntervalRole): Material {\n    const color = roleColor(intervalRole)\n    return new MeshLambertMaterial({color})\n}\n\nexport const SUBDUED_MATERIAL = new MeshLambertMaterial({color: \"#1d1d1d\"})\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useMemo } from \"react\"\nimport { Color, Face3, Geometry, Vector3 } from \"three\"\n\nimport { SURFACE } from \"./materials\"\n\nexport const KINDA = 0.866\nexport const SURFACE_SCALE = 20\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(KINDA * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(KINDA * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const SURFACE_LAND_COLOR = new Color(\"tan\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const LAND_NORMAL_SPREAD = 0.03\n\nexport function SurfaceComponent(): JSX.Element {\n    const geometry = useMemo(() => patchesGeometry(), [])\n    return (\n        <mesh name=\"Patches\" geometry={geometry} material={SURFACE}/>\n    )\n}\n\nfunction patchesGeometry(): Geometry {\n    const geometry = new Geometry()\n    addSurfaceGeometry(geometry.vertices, geometry.faces)\n    geometry.vertices.forEach(v => v.sub(new Vector3(0, 0.01, 0)))\n    return geometry\n}\n\nfunction addSurfaceGeometry(vertices: Vector3[], faces: Face3[]): void {\n    vertices.push(...HEXAGON_POINTS.map(hexPoint => new Vector3(hexPoint.x, hexPoint.y, hexPoint.z).multiplyScalar(4)))\n    vertices.push(new Vector3())\n    for (let a = 0; a < SIX; a++) {\n        const b = (a + 1) % SIX\n        const vertexNormals = [\n            UP,\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], LAND_NORMAL_SPREAD).normalize(),\n            new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], LAND_NORMAL_SPREAD).normalize(),\n        ]\n        faces.push(new Face3(SIX, a, b, vertexNormals, SURFACE_LAND_COLOR))\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaDownload, FaFile, FaFileCsv, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, DomEvent, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { Life } from \"../fabric/life\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, intervalLength, intervalLocation, jointLocation } from \"../fabric/tensegrity-types\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS, SPACE_RADIUS, SPACE_SCALE } from \"../pretenst\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IHook, ribbon, SHAPING_TIME } from \"./bridge-logic\"\n\nexport function BridgeView({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function getFabricOutput(): IFabricOutput {\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"top-middle\">\n                {stageName(life.stage)}\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false}>\n                    <Button\n                        onClick={() => saveCSVZip(getFabricOutput())}><FaDownload/>\n                        <FaFileCsv/></Button>\n                    <Button onClick={() => saveJSONZip(getFabricOutput())}><FaDownload/> <FaFile/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!tensegrity ? <h1>No bridge</h1> : <BridgeScene tensegrity={tensegrity} life={life}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nfunction BridgeScene({tensegrity, life}: { tensegrity: Tensegrity, life: Life }): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(0, 50, 0)\n        orb.update()\n    }, [])\n\n    const [showLines] = useState(true)\n    const [tick, setTick] = useState(0)\n    // const [lengthsAdopted, setLengthsAdopted] = useState(false)\n    const [strainToStiffness, setStrainToStiffness] = useState(false)\n    const [hooks, setHooks] = useState<IHook[][]>([])\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        control.target.copy(tensegrity.instance.midpoint)\n        control.update()\n        const nextStage = tensegrity.iterate()\n        switch (nextStage) {\n            case Stage.Growing:\n                setTick(tick + 1)\n                break\n            case Stage.Shaping:\n                if (life.stage === Stage.Growing) {\n                    tensegrity.transition = {stage: Stage.Shaping}\n                    setTick(0)\n                    break\n                }\n                if (tick < SHAPING_TIME) {\n                    setTick(tick + 1)\n                    break\n                }\n                if (tick === SHAPING_TIME) {\n                    console.log(\"Ribbon!\")\n                    setHooks(ribbon(tensegrity))\n                    control.autoRotate = true\n                    control.rotateSpeed = 5\n                    tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    setTick(0)\n                }\n                break\n            case Stage.Slack:\n                tensegrity.transition = {stage: Stage.Pretensing}\n                setTick(0)\n                break\n            case Stage.Pretensing:\n                setTick(tick + 1)\n                break\n            case Stage.Pretenst:\n                if (life.stage === Stage.Pretensing) {\n                    tensegrity.transition = {stage: Stage.Pretenst}\n                    setTick(0)\n                    break\n                }\n                if (tick === 200) {\n                    // if (!lengthsAdopted) {\n                    //     setLengthsAdopted(true)\n                    //     console.log(\"adopt lengths\")\n                    //     tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}\n                    // } else\n                    if (!strainToStiffness) {\n                        setStrainToStiffness(true)\n                        console.log(\"strain to stiffness\", strainToStiffness)\n                        tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}\n                    }\n                }\n                setTick(tick + 1)\n                break\n            default:\n                setTick(tick + 1)\n                break\n        }\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {showLines ? (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={tensegrity.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                    />\n                ) : (\n                    <>\n                        {tensegrity.intervals.map(interval => (\n                            <IntervalMesh key={`I${interval.index}`} tensegrity={tensegrity} interval={interval}/>\n                        ))}\n                        {hooks.map(hookArray => hookArray.map(hook => <HookMesh key={hook.name} hook={hook}/>))}\n                    </>\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, onPointerDown}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    onPointerDown?: (event: DomEvent) => void,\n}): JSX.Element | null {\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(new Vector3(0, 1, 0), unit)\n    const length = intervalLength(interval)\n    const intervalRadius = interval.isPush ? PUSH_RADIUS : PULL_RADIUS\n    const intervalScale = new Vector3(intervalRadius, length + (interval.isPush ? -JOINT_RADIUS * 2 : 0), intervalRadius)\n    const jointScale = new Vector3(JOINT_RADIUS, JOINT_RADIUS, JOINT_RADIUS)\n    return (\n        <>\n            {interval.isPush ? (\n                <>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#bd7b14\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 1, 6, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={intervalLocation(interval)}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        matrixWorldNeedsUpdate={true}\n                        onPointerDown={onPointerDown}\n                    >\n                        <meshLambertMaterial attach=\"material\" color={new Color(\"#ec8700\")}/>\n                        <cylinderGeometry attach=\"geometry\" args={[1, 1, 0.85, 12, 1]}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.alpha)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                    <mesh\n                        position={jointLocation(interval.omega)}\n                        scale={jointScale}\n                        onPointerDown={onPointerDown}\n                    >\n                        <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                        <meshPhongMaterial attach=\"material\" color={new Color(\"#2bc19d\")}/>\n                    </mesh>\n                </>\n            ) : (\n                <mesh\n                    position={intervalLocation(interval)}\n                    rotation={new Euler().setFromQuaternion(rotation)}\n                    scale={intervalScale}\n                    onPointerDown={onPointerDown}\n                >\n                    <meshLambertMaterial attach=\"material\" color={new Color(\"#faf8f8\")}/>\n                    <cylinderGeometry attach=\"geometry\" args={[1, 1, 1, 6, 1]}/>\n                </mesh>\n            )}\n        </>\n    )\n}\n\nfunction HookMesh({hook}: { hook: IHook }): JSX.Element {\n    const radius = 0.04\n    const jointScale = new Vector3(radius, radius, radius)\n    const {face} = hook\n    return (\n        <>\n            {face.ends.map(end => (\n                <mesh\n                    key={`hook-${end.index}`}\n                    position={jointLocation(end)}\n                    scale={jointScale}\n                    matrixWorldNeedsUpdate={true}\n                >\n                    <sphereGeometry attach=\"geometry\" args={[1, 32, 8]}/>\n                    <meshPhongMaterial attach=\"material\" color={new Color(\"#43d903\")}/>\n                </mesh>\n            ))}\n        </>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(35, 10, 30)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, World } from \"eig\"\nimport { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from \"three\"\n\nimport { UP, vectorFromArray } from \"./eig-util\"\nimport { FloatFeature } from \"./float-feature\"\n\nexport interface IFloatView {\n    jointCount: number\n    intervalCount: number\n    faceCount: number\n    lineGeometry: BufferGeometry\n    faceGeometry: BufferGeometry\n    jointLocations: Float32Array\n    unitVectors: Float32Array\n    idealLengths: Float32Array\n    strains: Float32Array\n    strainLimits: Float32Array\n    strainNuances: Float32Array\n    stiffnesses: Float32Array\n    linearDensities: Float32Array\n}\n\nexport type CreateInstance = (frozen: boolean, existingFabric?: Fabric) => FabricInstance\n\nexport class FabricInstance {\n    public fabric: Fabric\n    public world: World\n    public view: View\n    public floatView: IFloatView = createEmptyFloatView()\n    public adoptFabric: (fabric: Fabric) => FabricInstance\n    public midpoint = new Vector3(0, 0, 0)\n    public forward = new Vector3(1, 0, 0)\n    public right = new Vector3(0, 0, 1)\n    public left = new Vector3(0, 0, -1)\n\n    private featuresToApply: FloatFeature[] = []\n    private fabricBackup?: Fabric\n\n    constructor(eig: typeof import(\"eig\"), jointCount: number, worldObject: object, fabricObject?: object) {\n        this.world = worldObject as World\n        this.adoptFabric = (fabric) => {\n            this.free()\n            this.fabric = fabric\n            this.view = eig.View.on_fabric(fabric)\n            return this\n        }\n        this.adoptFabric(fabricObject ? fabricObject as Fabric : eig.Fabric.new(jointCount))\n    }\n\n    public iterate(requestedStage: Stage): Stage | undefined {\n        const stage = this.fabric.iterate(requestedStage, this.world)\n        const feature = this.featuresToApply.shift()\n        if (feature) {\n            this.world.set_float_value(feature.worldFeature, feature.numeric)\n        }\n        this.refreshFloatView()\n        return stage\n    }\n\n    public showFrozen(satisfied: boolean): void {\n        this.updateFloatView(true, satisfied)\n    }\n\n    public get fabricClone(): Fabric {\n        return this.fabric.clone()\n    }\n\n    public snapshot(): void {\n        console.log(\"snapshot\")\n        this.fabricBackup = this.fabricClone\n    }\n\n    public restoreSnapshot(): void {\n        console.log(\"restoreSnapshot\")\n        const backup = this.fabricBackup\n        if (!backup) {\n            throw new Error(\"Missing backup\")\n        }\n        this.adoptFabric(backup.clone())\n    }\n\n    public refreshFloatView(): void {\n        this.view.render(this.fabric, this.world)\n        this.midpoint.set(this.view.midpoint_x(), this.view.midpoint_y(), this.view.midpoint_z())\n        this.updateFloatView(false, false)\n    }\n\n    public clear(): FabricInstance {\n        this.fabric.clear()\n        this.refreshFloatView()\n        return this\n    }\n\n    public applyFeature(feature: FloatFeature): void {\n        this.featuresToApply.push(feature)\n    }\n\n    public jointLocation(jointIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.jointLocations, jointIndex)\n    }\n\n    public apply(matrix: Matrix4): void {\n        this.fabric.apply_matrix4(new Float32Array(matrix.toArray()))\n        this.refreshFloatView()\n    }\n\n    public unitVector(intervalIndex: number): Vector3 {\n        return vectorFromArray(this.floatView.unitVectors, intervalIndex)\n    }\n\n    public free(): void {\n        const fabric = this.fabric\n        if (fabric) {\n            fabric.free()\n        }\n        const view = this.view\n        if (view) {\n            view.free()\n        }\n    }\n\n    private updateFloatView(frozen: boolean, satisfied: boolean): void {\n        const fabric = this.fabric\n        const view = this.view\n        const jointCount = fabric.get_joint_count()\n        const intervalCount = fabric.get_interval_count()\n        const faceCount = fabric.get_face_count()\n        const floatView = this.floatView\n        const dimensionChange = floatView.jointCount !== jointCount || floatView.intervalCount !== intervalCount || floatView.faceCount !== faceCount\n        if (dimensionChange) {\n            // console.log(`j(${floatView.jointCount}=>${jointCount}) i(${floatView.intervalCount}=>${intervalCount}) f(${floatView.faceCount}=>${faceCount})`)\n            floatView.jointCount = jointCount\n            floatView.intervalCount = intervalCount\n            floatView.faceCount = faceCount\n            floatView.lineGeometry.dispose()\n            floatView.lineGeometry = new BufferGeometry()\n            const lineLocations = new Float32Array(intervalCount * 3 * 2)\n            view.copy_line_locations_to(lineLocations)\n            floatView.lineGeometry.setAttribute(\"position\", new Float32BufferAttribute(lineLocations, 3))\n            const lineColors = new Float32Array(intervalCount * 3 * 2)\n            if (frozen) {\n                if (satisfied) {\n                    lineColors.fill(0)\n                    for (let green = 1; green < lineColors.length; green += 3) {\n                        lineColors[green] = 1\n                    }\n                } else {\n                    lineColors.fill(1)\n                }\n            } else {\n                view.copy_line_colors_to(lineColors)\n            }\n            floatView.lineGeometry.setAttribute(\"color\", new Float32BufferAttribute(lineColors, 3))\n            floatView.faceGeometry.dispose()\n            floatView.faceGeometry = new BufferGeometry()\n            const faceLocations = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_vertex_locations_to(faceLocations)\n            floatView.faceGeometry.setAttribute(\"position\", new Float32BufferAttribute(faceLocations, 3))\n            const faceNormals = new Float32Array(faceCount * 3 * 3)\n            view.copy_face_normals_to(faceNormals)\n            floatView.faceGeometry.setAttribute(\"normal\", new Float32BufferAttribute(faceNormals, 3))\n            floatView.jointLocations = new Float32Array(jointCount * 3)\n            floatView.unitVectors = new Float32Array(intervalCount * 3)\n            floatView.idealLengths = new Float32Array(intervalCount)\n            floatView.strains = new Float32Array(intervalCount)\n            floatView.strainNuances = new Float32Array(intervalCount)\n            floatView.stiffnesses = new Float32Array(intervalCount)\n            floatView.linearDensities = new Float32Array(intervalCount)\n        } else {\n            const line = this.floatView.lineGeometry.attributes\n            const face = this.floatView.faceGeometry.attributes\n            if (line.position) {\n                // console.log(`j(${floatView.jointCount}) i(${floatView.intervalCount}) f(${floatView.faceCount})`)\n                const linePosition = line.position as Float32BufferAttribute\n                view.copy_line_locations_to(linePosition.array as Float32Array)\n                linePosition.needsUpdate = true\n                const lineColor = line.color as Float32BufferAttribute\n                const lineColors = lineColor.array as Float32Array\n                if (frozen) {\n                    if (satisfied) {\n                        lineColors.fill(0)\n                        for (let green = 1; green < lineColors.length; green += 3) {\n                            lineColors[green] = 1\n                        }\n                    } else {\n                        lineColors.fill(1)\n                    }\n                } else {\n                    view.copy_line_colors_to(lineColors)\n                }\n                lineColor.needsUpdate = true\n                const facePosition = face.position as Float32BufferAttribute\n                view.copy_face_vertex_locations_to(facePosition.array as Float32Array)\n                facePosition.needsUpdate = true\n                const faceNormal = face.normal as Float32BufferAttribute\n                view.copy_face_normals_to(faceNormal.array as Float32Array)\n                faceNormal.needsUpdate = true\n            }\n        }\n        view.copy_joint_locations_to(floatView.jointLocations)\n        view.copy_unit_vectors_to(floatView.unitVectors)\n        view.copy_ideal_lengths_to(floatView.idealLengths)\n        view.copy_strains_to(floatView.strains)\n        view.copy_strain_limits_to(floatView.strainLimits)\n        view.copy_strain_nuances_to(floatView.strainNuances)\n        view.copy_stiffnesses_to(floatView.stiffnesses)\n        view.copy_linear_densities_to(floatView.linearDensities)\n        const locations = floatView.jointLocations\n        const fromTo = (fromJoint: number, toJoint: number, vector: Vector3) => {\n            const from = fromJoint * 3\n            const to = toJoint * 3\n            vector.set(\n                locations[to] - locations[from],\n                locations[to + 1] - locations[from + 1],\n                locations[to + 2] - locations[from + 2],\n            )\n        }\n        fromTo(2, 1, this.forward)\n        this.forward.y = 0\n        this.forward.normalize()\n        this.right.crossVectors(this.forward, UP).normalize()\n        this.left.set(0, 0, 0).sub(this.right)\n    }\n}\n\nfunction createEmptyFloatView(): IFloatView {\n    const empty = new Float32Array(0)\n    const jointCount = 0\n    const intervalCount = 0\n    const faceCount = 0\n    return {\n        jointCount, intervalCount, faceCount,\n        lineGeometry: new BufferGeometry(), faceGeometry: new BufferGeometry(),\n        jointLocations: empty, unitVectors: empty, idealLengths: empty,\n        strains: empty, strainLimits: new Float32Array(4), strainNuances: empty,\n        stiffnesses: empty, linearDensities: empty,\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport {\n    FACE_DIRECTIONS,\n    FACE_NAMES,\n    faceFromTwist,\n    FaceName,\n    IFaceMark,\n    IPercent,\n    ITwist,\n    jointLocation,\n    percentOrHundred,\n    reorientMatrix,\n    Spin,\n    spinChar,\n} from \"./tensegrity-types\"\n\nconst BOOTSTRAP_TENSCRIPTS = [\n    \"'One':(1)\",\n    \"'Six':(6)\",\n    \"'Axoneme':(30,S95)\",\n    \"'Knee':(3,b3)\",\n    \"'Snelson Star':(a(15,S90),b(15,S90),c(15,S90),d(15,S90))\",\n    \"'Tripod with Knees':R(A5,B(7,c(5,S90),S90),C(7,c(5,S90),S90),D(7,c(5,S90),S90))\",\n    \"'Pretenst Lander':(B(15,S90),C(15,S90),D(15,S90))\",\n    \"'Zig Zag Loop':(d(3,MA0),c(7,b(7,d(7,d(7,d(7,d(3,MA0)))))))\",\n    \"'Bulge Ring':(A(15,S90, MA1), a(16, S90, MA1))\",\n    \"'Ring':(A(19,MA1),a(18,MA1))\",\n    \"'Convergence':(a1,b(15,S90,MA1),c(15,S90,MA1),d(15,S90,MA1))\",\n    \"'Halo by Crane':L(5,S92,b(12,S92,MA1),d(11,S92,MA1))\",\n    \"'Thick Tripod':(A3,B(8,MA1),C(8,MA1),D(8,MA1)):1=face-distance-35\",\n    \"'Diamond':R(a(5,b(5,c(5,c(2,MA3)),d(5,b(2,MA4))),c(5,d(5,b(2,MA5)),c(5,c(2,MA1))),d(5,c(5,c(2,MA6)),d(5,b(2,MA2)))),b(5,b(5,d(2,MA3)),c(5,c(2,MA2))),c(5,b(5,d(2,MA6)),c(5,c(2,MA5))),d(5,c(5,c(2,MA4)),b(5,d(2,MA1))))\",\n    \"'Composed':(6,b(4,MA0),c(4,MA0),d(4,MA0)):0=subtree(b5,c5,d5)\",\n    \"'Equus Lunae':L(A(16,S95,Mb0),b(16,S95,Md0),a(16,S95,Md0),B(16,Mb0,S95)):0=face-distance-60\",\n    \"'Infinity':(a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Binfinity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA3),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA2))\",\n    \"'Mobiosity':(d(16,S90,MA4),C(16,S90,MA4),c(16,S90,MA3),D(16,S90,MA2),a(16,S90,MA1),b(16,S90,MA2),B(16,S90,MA1),A(16,S90,MA3))\",\n    \"'Cup':L24(15,S105)\",\n    \"'Torus':L24(A(13,S95,MA1),a(14,S95,MA1))\",\n]\n\nexport interface ITenscriptTree {\n    _?: number, // forward steps\n    S?: IPercent, // scale\n    A?: ITenscriptTree, // directions: up\n    b?: ITenscriptTree, // kinda up\n    c?: ITenscriptTree,\n    d?: ITenscriptTree,\n    B?: ITenscriptTree, // kinda down\n    C?: ITenscriptTree,\n    D?: ITenscriptTree,\n    a?: ITenscriptTree, // down\n    MA?: IFaceMark, // marks: reference\n    MB?: IFaceMark,\n    MC?: IFaceMark,\n    MD?: IFaceMark,\n    Ma?: IFaceMark,\n    Mb?: IFaceMark,\n    Mc?: IFaceMark,\n    Md?: IFaceMark,\n}\n\nexport function treeNeedsOmniTwist({_, b, c, d, B, C, D, Mb, Mc, Md, MB, MC, MD}: ITenscriptTree): boolean {\n    return !!(b || c || d || B || C || D || Mb || Mc || Md || MB || MC || MD)\n}\n\nexport enum MarkAction {\n    Subtree,\n    BaseFace,\n    JoinFaces,\n    FaceDistance,\n    Anchor,\n}\n\nexport interface IMark {\n    action: MarkAction\n    tree?: ITenscriptTree\n    scale?: IPercent\n    point?: Vector3\n}\n\nexport interface ITenscript {\n    name: string\n    code: string\n    spin: Spin,\n    pushesPerTwist: number,\n    tree: ITenscriptTree\n    marks: Record<number, IMark>\n    fromUrl: boolean\n}\n\nconst MAIN_CODE = /([LR]?)(\\d*)(\\(.*\\))/\n\nfunction treeToCode(tree: ITenscriptTree): string {\n    const replacer = (s: string, ...args: object[]) => `${args[0]}${args[1]}`\n    return JSON.stringify(tree)\n        .replace(/[_.:\"]/g, \"\")\n        .replace(/[{]/g, \"(\")\n        .replace(/[}]/g, \")\")\n        .replace(/([ABCDabcdSM])\\((\\d*)\\)/g, replacer)\n}\n\nexport function treeToTenscript(\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainTree: ITenscriptTree,\n    marks: Record<number, IMark>,\n    fromUrl: boolean,\n): ITenscript {\n    const optionalPushes = pushesPerTwist > 3 ? pushesPerTwist.toFixed(0) : \"\"\n    const mainCode = spinChar(spin) + optionalPushes + treeToCode(mainTree)\n    const markSections: string[] = []\n    Object.keys(marks).forEach(key => {\n        const mark: IMark = marks[key]\n        switch (mark.action) {\n            case MarkAction.Subtree:\n                const tree = mark.tree\n                if (!tree) {\n                    throw new Error(\"Missing tree\")\n                }\n                markSections.push(`${key}=subtree${treeToCode(tree)}`)\n                break\n            case MarkAction.BaseFace:\n                break\n            case MarkAction.JoinFaces:\n                break\n            case MarkAction.FaceDistance:\n                if (!mark.scale) {\n                    throw new Error(\"Missing scale\")\n                }\n                markSections.push(`${key}=face-distance-${mark.scale._}`)\n                break\n            case MarkAction.Anchor:\n                const point = mark.point\n                const scale = mark.scale\n                if (!point || !scale) {\n                    throw new Error(\"Bad anchor\")\n                }\n                const format = (x: number) => x.toFixed(1)\n                markSections.push(`${key}=anchor-(${format(point.x)},${format(point.z)})-${-point.y}-${scale._}`)\n                break\n        }\n    })\n    const subtreesCode = markSections.length > 0 ? `:${markSections.join(\":\")}` : \"\"\n    return {name, tree: mainTree, spin, pushesPerTwist, marks, code: `'${name}':${mainCode}${subtreesCode}`, fromUrl}\n}\n\nfunction isDirection(char: string): boolean {\n    return FACE_DIRECTIONS.indexOf(char) >= 0\n}\n\nfunction childTree(faceName: FaceName, tree: ITenscriptTree): ITenscriptTree | undefined {\n    return tree[FACE_DIRECTIONS[faceName]]\n}\n\nfunction faceMark(faceName: FaceName, tree: ITenscriptTree): IFaceMark | undefined {\n    return tree[`M${FACE_DIRECTIONS[faceName]}`]\n}\n\nfunction deleteFaceMark(faceName: FaceName, tree: ITenscriptTree): void {\n    tree[`M${FACE_DIRECTIONS[faceName]}`] = undefined\n}\n\nfunction isDigit(char: string): boolean {\n    return \"0123456789\".indexOf(char) >= 0\n}\n\nfunction toNumber(digits: string): number {\n    if (!digits.match(/^\\d+$/)) {\n        throw new Error(`Not a number: ${digits}`)\n    }\n    return parseInt(digits, 10)\n}\n\nfunction parseMain(main: string): { mainCode: string, spin: Spin, pushesPerTwist: number } {\n    const parsed = MAIN_CODE.exec(main)\n    if (!parsed) {\n        throw new Error(\"Couldn't parse\")\n    }\n    const spin = parsed[1] === \"R\" ? Spin.Right : Spin.Left\n    const pushesPerTwist = parsed[2].length === 0 ? 3 : parseInt(parsed[2], 10)\n    const mainCode = parsed[3]\n    return {mainCode, spin, pushesPerTwist}\n}\n\nfunction parseCode(code: string): {\n    name: string,\n    spin: Spin,\n    pushesPerTwist: number,\n    mainCode: string,\n    markCode: Record<number, string>,\n} {\n    const parts = code.replace(/[\\n\\r\\t]/g, \"\").split(\":\")\n    const foundName = parts.find(part => part.startsWith(\"'\") && part.endsWith(\"'\"))\n    const foundMain = parts.find(part => MAIN_CODE.test(part)) || \"(0)\"\n    const {mainCode, spin, pushesPerTwist} = parseMain(foundMain)\n    const markCode: Record<number, string> = {}\n    parts.filter(part => part.match(/^\\d+=.*$/)).forEach(part => {\n        const eq = part.indexOf(\"=\")\n        const mark = Number(part.substring(0, eq))\n        markCode[mark] = part.substring(eq + 1)\n    })\n    const name = foundName ? foundName.replace(/'/g, \"\") : \"\"\n    return {name, spin, pushesPerTwist, mainCode, markCode}\n}\n\nfunction matchBracket(s: string): number {\n    if (s.charAt(0) !== \"(\") {\n        throw new Error(`Code must start with \"(\": ${s} ${s.charAt(0)}`)\n    }\n    let depth = 0\n    for (let index = 0; index < s.length; index++) {\n        const char = s.charAt(index)\n        if (char === \"(\") {\n            depth++\n        } else if (char === \")\") {\n            depth--\n            if (depth === 0) {\n                return index\n            }\n        }\n    }\n    throw new Error(`No matching end bracket: |${s}|`)\n}\n\nfunction argument(maybeBracketed: string, stripBrackets: boolean): { content: string, skip: number } {\n    const commaPos = maybeBracketed.indexOf(\",\")\n    const commaPresent = commaPos >= 0\n    if (maybeBracketed.charAt(0) !== \"(\") {\n        if (commaPresent) {\n            return {content: maybeBracketed.substring(0, commaPos), skip: commaPos}\n        }\n        return {content: maybeBracketed, skip: maybeBracketed.length}\n    }\n    const finalBracket = matchBracket(maybeBracketed)\n    const content = stripBrackets ? maybeBracketed.substring(1, finalBracket) : maybeBracketed.substring(0, finalBracket + 1)\n    return {content, skip: finalBracket + 1}\n}\n\nexport function codeToTenscript(\n    error: (message: string) => void,\n    fromUrl: boolean,\n    code?: string,\n): ITenscript | undefined {\n\n    function fragmentToTree(codeFragment: string): ITenscriptTree | undefined {\n        const initialCode = argument(codeFragment, true)\n        const codeString = initialCode.content\n        const tree: ITenscriptTree = {}\n\n        function subtree(index: number): { codeTree?: ITenscriptTree, skip: number } {\n            const {content, skip} = argument(codeString.substring(index), false)\n            const codeTree = fragmentToTree(content)\n            return {codeTree, skip}\n        }\n\n        for (let index = 0; index < codeString.length; index++) {\n            const char = codeString.charAt(index)\n            if (isDirection(char)) {\n                const direction = subtree(index + 1)\n                if (!direction.codeTree) {\n                    throw new Error(`No subtree: ${codeString.substring(index)}`)\n                }\n                tree[char] = direction.codeTree\n                index += direction.skip\n            } else if (isDigit(char)) {\n                const forward = argument(codeString, false)\n                tree._ = toNumber(forward.content)\n                index += forward.skip\n            } else {\n                switch (char) {\n                    case \"S\":\n                        const scaleArg = argument(codeString.substring(index + 1), true)\n                        tree.S = {_: toNumber(scaleArg.content)}\n                        index += scaleArg.skip\n                        break\n                    case \"M\":\n                        const directionChar = codeString.charAt(index + 1)\n                        const markNumber = argument(codeString.substring(index + 2), true)\n                        tree[`M${directionChar}`] = {_: toNumber(markNumber.content)}\n                        index += markNumber.skip + 1\n                        break\n                    case \",\":\n                    case \" \":\n                        break\n                    default:\n                        throw new Error(`Unexpected character: ${char}`)\n                }\n            }\n        }\n        return Object.keys(tree).length === 0 ? undefined : tree\n    }\n\n    try {\n        if (!code || code.length === 0) {\n            error(\"No code to parse\")\n            return undefined\n        }\n        const {name, spin, pushesPerTwist, mainCode, markCode} = parseCode(code)\n        if (!name.length) {\n            return undefined\n        }\n        const tree = fragmentToTree(mainCode)\n        if (!tree) {\n            return undefined\n        }\n        const marks: Record<number, IMark> = {}\n        Object.keys(markCode).forEach(key => {\n            const c: string = markCode[key]\n            if (c.startsWith(\"subtree\")) {\n                const subtree = fragmentToTree(c.substring(\"subtree\".length))\n                marks[key] = <IMark>{action: MarkAction.Subtree, tree: subtree}\n            } else if (c.startsWith(\"base-face\")) {\n                marks[key] = <IMark>{action: MarkAction.BaseFace}\n            } else if (c.startsWith(\"join-faces\")) {\n                marks[key] = <IMark>{action: MarkAction.JoinFaces}\n            } else if (c.startsWith(\"face-distance-\")) {\n                const scale: IPercent = {_: parseInt(c.split(\"-\")[2], 10)}\n                marks[key] = <IMark>{action: MarkAction.FaceDistance, scale}\n            } else {\n                const AnchorPattern = /anchor-\\(([0-9.-]*),([0-9.-]*)\\)-(\\d*)-(\\d*)/\n                const matches = c.match(AnchorPattern)\n                if (!matches) {\n                    throw new Error(`Unrecognized mark code: [${c}]`)\n                }\n                const x = parseFloat(matches[1])\n                const y = parseFloat(matches[2])\n                const submerged = parseFloat(matches[3])\n                const scale: IPercent = {_: parseInt(matches[4], 10)}\n                const point = new Vector3(x, -submerged, y)\n                marks[key] = <IMark>{action: MarkAction.Anchor, point, scale}\n            }\n        })\n        return treeToTenscript(name, spin, pushesPerTwist, tree, marks, fromUrl)\n    } catch (e) {\n        error(e.message)\n        return undefined\n    }\n}\n\nfunction noParseErrors(message: string): void {\n    throw new Error(`Unable to parse: ${message}`)\n}\n\nexport const BOOTSTRAP = BOOTSTRAP_TENSCRIPTS.map(script => codeToTenscript(noParseErrors, false, script)) as ITenscript[]\n\nexport interface IBud {\n    builder: TensegrityBuilder\n    tree: ITenscriptTree\n    twist: ITwist\n    marks: Record<number, IMark>\n    reorient: boolean\n}\n\nfunction markTwist(twistToMark: ITwist, treeWithMarks: ITenscriptTree): void {\n    FACE_NAMES.forEach(thisFace => {\n        const mark = faceMark(thisFace, treeWithMarks)\n        if (!mark) {\n            return\n        }\n        faceFromTwist(twistToMark, thisFace).mark = mark\n    })\n}\n\nfunction grow({builder, twist, marks}: IBud, afterTree: ITenscriptTree, faceName: FaceName, omni: boolean, scale: IPercent): IBud {\n    const baseFace = faceFromTwist(twist, faceName)\n    const newTwist = builder.createTwistOn(baseFace, scale, omni)\n    if (afterTree._ === 0) {\n        markTwist(newTwist, afterTree)\n    }\n    return {tree: afterTree, twist: newTwist, builder, marks, reorient: false}\n}\n\nexport function execute(before: IBud[]): IBud[] {\n    const activeBuds: IBud[] = []\n    before.forEach(bud => {\n        const {tree, marks, builder, reorient} = bud\n        const forward = tree._\n        if (forward) {\n            const decremented = forward - 1\n            const afterTree = {...tree, _: decremented}\n            const omni = treeNeedsOmniTwist(tree) && decremented === 0\n            activeBuds.push(grow(bud, afterTree, FaceName.PPP, omni, percentOrHundred(tree.S)))\n            return\n        }\n        if (reorient) {\n            const {A, a, B, b} = tree\n            const abOrientation = !(!a || !A || !b || !B)\n            if (abOrientation) {\n                const points = builder.tensegrity.joints.map(jointLocation)\n                builder.tensegrity.instance.apply(reorientMatrix(points, 0))\n            }\n        }\n        FACE_NAMES.forEach(faceName => {\n            const subtree = childTree(faceName, tree)\n            const brickMark = faceMark(faceName, tree)\n            if (subtree) {\n                const decremented = subtree._ ? subtree._ - 1 : 0\n                const afterTree = {...subtree, _: decremented}\n                const omni = treeNeedsOmniTwist(subtree) && decremented === 0\n                activeBuds.push(grow(bud, afterTree, faceName, omni, percentOrHundred(subtree.S)))\n            } else if (brickMark) {\n                const mark = marks[brickMark._]\n                if (mark && mark.action === MarkAction.Subtree) {\n                    const markTree = mark.tree\n                    if (!markTree) {\n                        throw new Error(\"Missing subtree\")\n                    }\n                    deleteFaceMark(faceName, tree)\n                    const omni = treeNeedsOmniTwist(markTree)\n                    activeBuds.push(grow(bud, markTree, faceName, omni, percentOrHundred(markTree.S)))\n                }\n            }\n        })\n    })\n    return activeBuds\n}\n\nexport function getCodeFromUrl(): ITenscript | undefined {\n    const urlCode = location.hash.substring(1)\n    try {\n        return codeToTenscript(message => console.error(message), true, decodeURIComponent(urlCode))\n    } catch (e) {\n        console.error(\"Code error\", e)\n    }\n    return undefined\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, SurfaceCharacter, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, FABRIC_FEATURES } from \"../fabric/eig-util\"\nimport { IFeatureConfig } from \"../fabric/float-feature\"\nimport { codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { IInterval, intervalStrainNuance } from \"../fabric/tensegrity-types\"\n\nexport enum ControlTab {\n    Grow = \"Grow\",\n    Shape = \"Shape\",\n    Live = \"Live\",\n    Realize = \"Realize\",\n    Frozen = \"Frozen\",\n}\n\nconst VERSION = \"2020-07-20\"\n\nexport interface IFeatureValue {\n    numeric: number\n    percent: number\n}\n\nexport interface IStoredState {\n    version: string\n    nonce: number\n    surfaceCharacter: SurfaceCharacter\n    featureValues: Record<WorldFeature, IFeatureValue>\n    recentCode: Record<string, string>\n    controlTab: ControlTab\n    fullScreen: boolean\n    demoCount: number\n    polygons: boolean\n    rotating: boolean\n    visibleRoles: IntervalRole[]\n    pushBottom: number\n    pushTop: number\n    pullBottom: number\n    pullTop: number\n}\n\nfunction extractTenscriptArray(record: Record<string, string>): ITenscript[] {\n    return Object.keys(record).map(key => {\n        const code = record.recentCode[key]\n        const tenscript = codeToTenscript(error => console.error(error), false, code)\n        if (!tenscript) {\n            throw new Error(`Unable to read recent tenscript code: ${code}`)\n        }\n        return tenscript\n    })\n}\n\nexport function addRecentCode(state$: BehaviorSubject<IStoredState>, {code, name}: ITenscript): ITenscript[] {\n    const state = state$.getValue()\n    const recentCode = {...state.recentCode}\n    recentCode[name] = code\n    transition(state$, {recentCode})\n    return extractTenscriptArray(recentCode)\n}\n\nexport function getRecentTenscript(state: IStoredState): ITenscript[] {\n    return extractTenscriptArray(state.recentCode)\n}\n\nexport function transition(state$: BehaviorSubject<IStoredState>, partial: Partial<IStoredState>): void {\n    const state = state$.getValue()\n    return state$.next({...state, nonce: state.nonce + 1, ...partial})\n}\n\nfunction initialStoredState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const DEFAULT_FEATURE_VALUES = FABRIC_FEATURES.map(toConfig)\n        .reduce((record, config) => {\n            record[config.feature] = ({percent: 100, numeric: defaultValue(config.feature)})\n            return record\n        }, {} as Record<WorldFeature, IFeatureValue>)\n\n    return ({\n        version: VERSION,\n        nonce: 0,\n        surfaceCharacter: SurfaceCharacter.Frozen,\n        featureValues: DEFAULT_FEATURE_VALUES,\n        recentCode: {},\n        controlTab: ControlTab.Grow,\n        demoCount: 0,\n        fullScreen: true,\n        polygons: false,\n        rotating: true,\n        visibleRoles: ADJUSTABLE_INTERVAL_ROLES,\n        pushBottom: 0,\n        pushTop: 1,\n        pullBottom: 0,\n        pullTop: 1,\n    })\n}\n\nexport function isIntervalVisible(interval: IInterval, storedState: IStoredState): boolean {\n    if (storedState.visibleRoles.find(r => r === interval.intervalRole) === undefined) {\n        return false\n    }\n    const strainNuance = intervalStrainNuance(interval)\n    if (interval.isPush) {\n        return strainNuance >= storedState.pushBottom && strainNuance <= storedState.pushTop\n    } else {\n        return strainNuance >= storedState.pullBottom && strainNuance <= storedState.pullTop\n    }\n}\n\nconst STORED_STATE_KEY = \"State\"\n\nexport function saveState(storedState: IStoredState): void {\n    localStorage.setItem(STORED_STATE_KEY, JSON.stringify(storedState))\n}\n\nexport function loadState(toConfig: (feature: WorldFeature) => IFeatureConfig, defaultValue: (feature: WorldFeature) => number): IStoredState {\n    const item = localStorage.getItem(STORED_STATE_KEY)\n    if (item) {\n        const storedState = JSON.parse(item) as IStoredState\n        if (storedState.version === VERSION) {\n            return storedState\n        }\n    }\n    return initialStoredState(toConfig, defaultValue)\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n * something extra so it can compile\n */\n\nimport { WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { IFeatureValue, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FABRIC_FEATURES, floatString } from \"./eig-util\"\n\nexport interface IFeatureConfig {\n    feature: WorldFeature\n    name: string\n    percents: number[]\n}\n\nexport function featureConfig(feature: WorldFeature): IFeatureConfig {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return {\n                feature,\n                name: \"Gravity\",\n                percents: [0, 10, 25, 50, 100, 200, 500, 1000],\n            }\n        case WorldFeature.Antigravity:\n            return {\n                feature,\n                name: \"Antigravity\",\n                percents: [5, 25, 50, 100, 150, 200, 500],\n            }\n        case WorldFeature.ShapingDrag:\n            return {\n                feature,\n                name: \"Shaping Drag\",\n                percents: [0, 10, 50, 100, 200, 500],\n            }\n        case WorldFeature.Drag:\n            return {\n                feature,\n                name: \"Drag\",\n                percents: [0, 10, 50, 100, 150, 200, 500, 1000],\n            }\n        case WorldFeature.ShapingPretenstFactor:\n            return {\n                feature,\n                name: \"Shaping Pretenst factor\",\n                percents: [0, 1, 2, 3, 5, 10, 20, 50, 100],\n            }\n        case WorldFeature.PretenstFactor:\n            return {\n                feature,\n                name: \"Pretenst factor\",\n                percents: [0, 50, 90, 100, 125, 150, 200, 300, 500],\n            }\n        case WorldFeature.ShapingStiffnessFactor:\n            return {\n                feature,\n                name: \"Shaping Stiffness factor\",\n                percents: [20, 50, 100, 150, 200, 250, 300],\n            }\n        case WorldFeature.StiffnessFactor:\n            return {\n                feature,\n                name: \"Stiffness Factor\",\n                percents: [5, 25, 50, 100, 150, 200, 250, 300, 400, 500],\n            }\n        case WorldFeature.IterationsPerFrame:\n            return {\n                feature,\n                name: \"Iterations per frame\",\n                percents: [10, 25, 50, 100, 200, 300, 500],\n            }\n        case WorldFeature.IntervalCountdown:\n            return {\n                feature,\n                name: \"Interval Countdown\",\n                percents: [10, 20, 30, 100, 150, 400, 1000],\n            }\n        case WorldFeature.PretensingCountdown:\n            return {\n                feature,\n                name: \"Slack to Pretenst countdown\",\n                percents: [50, 75, 90, 100, 125, 150, 200],\n            }\n        case WorldFeature.VisualStrain:\n            return {\n                feature,\n                name: \"Visual Strain\",\n                percents: [0, 10, 50, 100, 200, 300, 500, 1000, 2000, 3000],\n            }\n        case WorldFeature.PushOverPull:\n            return {\n                feature,\n                name: \"Compression/Tension\",\n                percents: [10, 20, 30, 50, 100, 200, 300, 500, 1000],\n            }\n        default:\n            throw new Error(\"Feature?\")\n    }\n}\n\nexport class FloatFeature {\n    private value$: BehaviorSubject<IFeatureValue>\n\n    constructor(public readonly config: IFeatureConfig, private defaultValue: number, storedState$: BehaviorSubject<IStoredState>) {\n        const features = storedState$.getValue().featureValues\n        const storedFeature = features[config.feature]\n        const initialValue: IFeatureValue = storedFeature !== undefined ? storedFeature : {\n            numeric: this.defaultValue,\n            percent: 100,\n        }\n        this.value$ = new BehaviorSubject<IFeatureValue>(initialValue)\n        this.value$.subscribe(value => {\n            const storedState = storedState$.getValue()\n            const featureValues = {...storedState.featureValues} as Record<WorldFeature, IFeatureValue>\n            featureValues[config.feature] = value\n            transition(storedState$, {featureValues})\n        })\n    }\n\n    public get value(): IFeatureValue {\n        return this.value$.getValue()\n    }\n\n    public get title(): string {\n        return this.config.name\n    }\n\n    public get percentChoices(): number[] {\n        return this.config.percents\n    }\n\n    public get numeric(): number {\n        return this.value$.getValue().numeric\n    }\n\n    public get formatted(): string {\n        return floatString(this.numeric)\n    }\n\n    public get percent(): number {\n        return this.value$.getValue().percent\n    }\n\n    public set percent(percent: number) {\n        this.value$.next({numeric: this.defaultValue * percent / 100, percent})\n    }\n\n    public get observable(): BehaviorSubject<IFeatureValue> {\n        return this.value$\n    }\n\n    public get worldFeature(): WorldFeature {\n        return this.config.feature\n    }\n}\n\nexport function createFloatFeatures(storedState$: BehaviorSubject<IStoredState>, defaultValue: (feature: WorldFeature) => number):\n    Record<WorldFeature, FloatFeature> {\n    const features = {} as Record<WorldFeature, FloatFeature>\n    FABRIC_FEATURES.map(featureConfig).forEach(config => {\n        features[config.feature] = new FloatFeature(config, defaultValue(config.feature), storedState$)\n    })\n    return features\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\n\nimport { Tensegrity } from \"./tensegrity\"\nimport { TensegrityOptimizer } from \"./tensegrity-optimizer\"\nimport { jointLocation } from \"./tensegrity-types\"\n\nexport interface ILifeTransition {\n    stage: Stage\n    strainToStiffness?: boolean\n    adoptLengths?: boolean\n}\n\nexport class Life {\n    private _stage: Stage\n\n    constructor(private numericFeature: (worldFeature: WorldFeature) => number, private tensegrity: Tensegrity, stage: Stage) {\n        this._stage = stage\n    }\n\n    public executeTransition(tx: ILifeTransition): Life {\n        this.transition(tx)\n        this._stage = tx.stage\n        return new Life(this.numericFeature, this.tensegrity, tx.stage)\n    }\n\n    public get stage(): Stage {\n        return this._stage\n    }\n\n    private transition({stage, adoptLengths, strainToStiffness}: ILifeTransition): void {\n        const tensegrity = this.tensegrity\n        switch (this._stage) {\n            case Stage.Growing:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                }\n                break\n            case Stage.Shaping:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            const faceIntervals = [...tensegrity.faceIntervals]\n                            faceIntervals.forEach(interval => tensegrity.removeFaceInterval(interval))\n                            const faceAnchors = [...tensegrity.faceAnchors]\n                            faceAnchors.forEach(interval => tensegrity.removeFaceAnchor(interval))\n                            tensegrity.instance.snapshot()\n                        }\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Slack:\n                switch (stage) {\n                    case Stage.Shaping:\n                        return\n                    case Stage.Pretensing:\n                        return\n                }\n                break\n            case Stage.Pretensing:\n                switch (stage) {\n                    case Stage.Pretenst:\n                        return\n                }\n                break\n            case Stage.Pretenst:\n                switch (stage) {\n                    case Stage.Slack:\n                        if (strainToStiffness) {\n                            new TensegrityOptimizer(tensegrity).stiffnessesFromStrains(interval => {\n                                switch (interval.intervalRole) {\n                                    case IntervalRole.RibbonPush:\n                                    case IntervalRole.RibbonShort:\n                                    case IntervalRole.RibbonLong:\n                                    case IntervalRole.RibbonHanger:\n                                        return false\n                                    default:\n                                        const alphaY = jointLocation(interval.alpha).y\n                                        const omegaY = jointLocation(interval.omega).y\n                                        const surface = (alphaY + omegaY) < 0.1\n                                        return !surface\n                                }\n                            })\n                            return\n                        }\n                        if (adoptLengths) {\n                            tensegrity.fabric.adopt_lengths()\n                            tensegrity.instance.snapshot()\n                            return\n                        }\n                }\n                break\n        }\n        throw new Error(`No transition ${Stage[this._stage]} to ${Stage[stage]}`)\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { roleDefaultLength } from \"../pretenst\"\n\nimport { avg, midpoint, normal, sub } from \"./eig-util\"\nimport { IBud, IMark, ITenscript, MarkAction, treeNeedsOmniTwist } from \"./tenscript\"\nimport { Tensegrity } from \"./tensegrity\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    acrossPush,\n    averageScaleFactor,\n    faceFromTwist,\n    FaceName,\n    faceToOriginMatrix,\n    factorFromPercent,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    IPercent,\n    ITwist,\n    jointDistance,\n    jointLocation,\n    locationFromFace,\n    locationFromFaces,\n    oppositeSpin,\n    otherJoint,\n    percentFromFactor,\n    percentOrHundred,\n    rotateForBestRing,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class TensegrityBuilder {\n    constructor(public readonly tensegrity: Tensegrity) {\n    }\n\n    public createBud({spin, tree, marks}: ITenscript): IBud {\n        const reorient = tree._ === undefined\n        const omni = treeNeedsOmniTwist(tree) && reorient\n        const twist = this.createTwistAt(new Vector3, spin, percentOrHundred(), omni)\n        return {builder: this, tree, twist, marks, reorient}\n    }\n\n    public createTwistOn(baseFace: IFace, twistScale: IPercent, omni: boolean): ITwist {\n        const baseFactor = factorFromPercent(baseFace.scale)\n        const scale = percentFromFactor(factorFromPercent(twistScale) * baseFactor)\n        if (omni) {\n            const bottom = this.createTwist(faceTwistPoints(baseFace, scale), scale, oppositeSpin(baseFace.spin), IntervalRole.PhiPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.PhiPush)\n            const twist = this.createOmniTwist(bottom, top)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        } else {\n            const points = faceTwistPoints(baseFace, scale)\n            const twist = this.createTwist(points, scale, oppositeSpin(baseFace.spin), IntervalRole.RootPush)\n            this.connect(baseFace, faceFromTwist(twist, FaceName.NNN), connectRoles(baseFace.omni, omni))\n            return twist\n        }\n    }\n\n    public faceToOrigin(face: IFace): void {\n        const instance = this.tensegrity.instance\n        instance.apply(faceToOriginMatrix(face))\n        instance.refreshFloatView()\n    }\n\n    public createFaceIntervals(faces: IFace[], mark: IMark): IFaceInterval[] {\n        const centerBrickFaceIntervals = () => {\n            const scale = percentFromFactor(averageScaleFactor(faces))\n            const where = locationFromFaces(faces)\n            const omniTwist = this.createTwistAt(where, Spin.Left, scale, true)\n            this.tensegrity.instance.refreshFloatView()\n            return faces.map(face => {\n                const opposing = omniTwist.faces.filter(({spin, pulls}) => pulls.length > 0 && spin !== face.spin)\n                const faceLocation = locationFromFace(face)\n                const closestFace = opposing.reduce((a, b) => {\n                    const aa = locationFromFace(a).distanceTo(faceLocation)\n                    const bb = locationFromFace(b).distanceTo(faceLocation)\n                    return aa < bb ? a : b\n                })\n                return this.tensegrity.createFaceConnector(closestFace, face)\n            })\n        }\n        switch (mark.action) {\n            case MarkAction.JoinFaces:\n                switch (faces.length) {\n                    case 2:\n                        if (faces[0].spin === faces[1].spin) {\n                            return centerBrickFaceIntervals()\n                        }\n                        return [this.tensegrity.createFaceConnector(faces[0], faces[1])]\n                    case 3:\n                        return centerBrickFaceIntervals()\n                    default:\n                        return []\n                }\n            case MarkAction.FaceDistance:\n                const pullScale = mark.scale\n                if (!pullScale) {\n                    throw new Error(\"Missing pull scale\")\n                }\n                const distancers: IFaceInterval[] = []\n                faces.forEach((faceA, indexA) => {\n                    faces.forEach((faceB, indexB) => {\n                        if (indexA <= indexB) {\n                            return\n                        }\n                        distancers.push(this.tensegrity.createFaceDistancer(faceA, faceB, pullScale))\n                    })\n                })\n                return distancers\n            default:\n                return []\n        }\n    }\n\n    public checkFaceIntervals(faceIntervals: IFaceInterval[], removeInterval: (faceInterval: IFaceInterval) => void): IFaceInterval[] {\n        if (faceIntervals.length === 0) {\n            return faceIntervals\n        }\n        const connectFaceInterval = ({alpha, omega}: IFaceInterval) => {\n            rotateForBestRing(alpha, omega)\n            this.connect(alpha, omega, connectRoles(alpha.omni, omega.omni))\n        }\n        return faceIntervals.filter(faceInterval => {\n            if (faceInterval.connector) {\n                const {alpha, omega, scaleFactor} = faceInterval\n                const distance = locationFromFace(alpha).distanceTo(locationFromFace(omega))\n                const closeEnough = distance <= scaleToFaceConnectorLength(scaleFactor) * 10\n                if (closeEnough) {\n                    connectFaceInterval(faceInterval)\n                    removeInterval(faceInterval)\n                    return false\n                }\n            }\n            return true\n        })\n    }\n\n    public createFaceAnchor(face: IFace, mark: IMark): IFaceAnchor {\n        if (mark.action !== MarkAction.Anchor) {\n            throw new Error(\"Anchor problem\")\n        }\n        const point = mark.point\n        const scale = mark.scale\n        if (!point || !scale) {\n            throw new Error(\"Missing anchor point specs\")\n        }\n        return this.tensegrity.createFaceAnchor(face, point, scale)\n    }\n\n    // =====================================================\n\n    private createTwistAt(location: Vector3, spin: Spin, scale: IPercent, omni: boolean): ITwist {\n        const pushesPerTwist = this.tensegrity.pushesPerTwist\n        if (omni) {\n            const bottom = this.createTwist(firstTwistPoints(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.PhiPush)\n            const bottomTopFace = faceFromTwist(bottom, FaceName.PPP)\n            const top = this.createTwist(faceTwistPoints(bottomTopFace, scale), scale, oppositeSpin(bottomTopFace.spin), IntervalRole.PhiPush)\n            return this.createOmniTwist(bottom, top)\n        } else {\n            return this.createTwist(firstTwistPoints(location, pushesPerTwist, spin, scale), scale, spin, IntervalRole.RootPush)\n        }\n    }\n\n    private createOmniTwist(bottomTwist: ITwist, topTwist: ITwist): ITwist {\n        const {scale} = bottomTwist\n        const omniRoles = {ring: IntervalRole.PhiTriangle, down: IntervalRole.PhiTriangle, up: IntervalRole.PhiTriangle}\n        const connectPulls = this.connect(faceFromTwist(bottomTwist, FaceName.PPP), faceFromTwist(topTwist, FaceName.NNN), omniRoles)\n        const pulls = [...bottomTwist.pulls, ...topTwist.pulls, ...connectPulls]\n        const createFaceTouching = (joint: IJoint, spin: Spin): IFace => {\n            const facePulls = pulls.filter(({alpha, omega}) => joint.index === alpha.index || joint.index === omega.index)\n            const ends = facePulls.map(pull => otherJoint(joint, pull))\n            const thirdForward = pulls.find(({alpha, omega}) => alpha.index === ends[0].index && omega.index === ends[1].index)\n            const thirdReverse = pulls.find(({alpha, omega}) => alpha.index === ends[1].index && omega.index === ends[0].index)\n            ends.push(joint)\n            if (spin === Spin.Left) {\n                ends.reverse()\n            }\n            if (thirdForward) {\n                facePulls.push(thirdForward)\n            } else if (thirdReverse) {\n                facePulls.push(thirdReverse)\n            } else {\n                throw new Error(\"Interval not found\")\n            }\n            return this.tensegrity.createFace(ends, true, spin, scale, facePulls)\n        }\n        const topFace = topTwist.faces[1]\n        const topTouching = topFace.ends.map(end => createFaceTouching(end, oppositeSpin(topFace.spin)))\n        const bottomFace = bottomTwist.faces[0]\n        const bottomTouching = bottomFace.ends.map(end => createFaceTouching(end, oppositeSpin(bottomFace.spin)))\n        bottomFace.omni = topFace.omni = true\n        const pushes = [...bottomTwist.pushes, ...topTwist.pushes]\n        const faces = [bottomFace, ...bottomTouching, ...topTouching, topFace]\n        return {scale, pushes, pulls, faces}\n    }\n\n    private connect(faceA: IFace, faceB: IFace, roles: IConnectRoles): IInterval[] {\n        const reverseA = [...faceA.ends].reverse()\n        const forwardB = faceB.ends\n        const a = reverseA.map(acrossPush)\n        const b = reverseA\n        const c = forwardB\n        const d = forwardB.map(acrossPush)\n        const scale = percentFromFactor((factorFromPercent(faceA.scale) + factorFromPercent(faceB.scale)) / 2)\n        const pulls: IInterval[] = []\n        for (let index = 0; index < b.length; index++) {\n            const a0 = a[index]\n            const a1 = a[(index + 1) % a.length]\n            const b0 = b[index]\n            const b1 = b[(index + 1) % b.length]\n            const c0 = c[index]\n            const d0 = d[index]\n            pulls.push(this.createInterval(b0, c0, scale, roles.ring))\n            pulls.push(this.createInterval(c0, b1, scale, roles.ring))\n            if (faceA.spin === Spin.Left) {\n                pulls.push(this.createInterval(c0, a1, scale, roles.down))\n            } else {\n                pulls.push(this.createInterval(c0, a0, scale, roles.down))\n            }\n            if (faceB.spin === Spin.Left) {\n                pulls.push(this.createInterval(b1, d0, scale, roles.up))\n            } else {\n                pulls.push(this.createInterval(b0, d0, scale, roles.up))\n            }\n        }\n        this.tensegrity.removeFace(faceB)\n        this.tensegrity.removeFace(faceA)\n        return pulls\n    }\n\n    private createTwist(points: IPoint[], scale: IPercent, spin: Spin, pushRole: IntervalRole): ITwist {\n        const ends = points.map(({alpha, omega}) => ({\n            alpha: this.tensegrity.createIJoint(alpha),\n            omega: this.tensegrity.createIJoint(omega),\n        }))\n        this.tensegrity.instance.refreshFloatView()\n        const alphaEnds = ends.map(({alpha}) => alpha)\n        const omegaEnds = ends.map(({omega}) => omega).reverse()\n        const alphaPulls = alphaEnds.map((alpha, index) =>\n            this.createInterval(alpha, alphaEnds[(index + 1) % alphaEnds.length], scale, IntervalRole.InterTwist))\n        const alphaFace = this.tensegrity.createFace(alphaEnds, false, spin, scale, alphaPulls)\n        const omegaPulls = omegaEnds.map((omega, index) =>\n            this.createInterval(omega, omegaEnds[(index + 1) % omegaEnds.length], scale, IntervalRole.InterTwist))\n        const omegaFace = this.tensegrity.createFace(omegaEnds, false, spin, scale, omegaPulls)\n        const twist: ITwist = {scale, pushes: [], pulls: [], faces: [alphaFace, omegaFace]}\n        ends.forEach(({alpha, omega}) => {\n            const push = this.createInterval(alpha, omega, scale, pushRole)\n            twist.pushes.push(push)\n            alpha.push = omega.push = push\n        })\n        ends.forEach(({alpha}, index) => {\n            const offset = spin === Spin.Left ? ends.length - 1 : 1\n            const omega = ends[(index + offset) % ends.length].omega\n            twist.pulls.push(this.createInterval(alpha, omega, scale, IntervalRole.Twist))\n        })\n        // console.log(`${ends.map(e => `${e.alpha.index}-${e.omega.index}`).join(\" \")} : ${spin === Spin.Left ? \"L\" : \"R\"}`)\n        return twist\n    }\n\n    private createInterval(alpha: IJoint, omega: IJoint, scale: IPercent, intervalRole: IntervalRole): IInterval {\n        const currentLength = jointDistance(alpha, omega)\n        const idealLength = factorFromPercent(scale) * roleDefaultLength(intervalRole)\n        const countdown = this.tensegrity.numericFeature(WorldFeature.IntervalCountdown) * Math.abs(currentLength - idealLength)\n        const stiffness = scaleToInitialStiffness(scale)\n        const linearDensity = Math.sqrt(stiffness)\n        return this.tensegrity.createInterval(alpha, omega, intervalRole, scale, stiffness, linearDensity, countdown)\n    }\n}\n\nexport function scaleToFaceConnectorLength(scaleFactor: number): number {\n    return 0.6 * scaleFactor\n}\n\ninterface IConnectRoles {\n    ring: IntervalRole\n    up: IntervalRole\n    down: IntervalRole\n}\n\nfunction connectRoles(omniA: boolean, omniB: boolean): IConnectRoles {\n    if (!omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.InterTwist}\n    } else if (omniA && !omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.Cross, down: IntervalRole.InterTwist}\n    } else if (!omniA && omniB) {\n        return {ring: IntervalRole.Ring, up: IntervalRole.InterTwist, down: IntervalRole.Cross}\n    } else {\n        throw new Error(\"Cannot create connected twist\")\n    }\n}\n\ninterface IPoint {\n    alpha: Vector3\n    omega: Vector3\n}\n\nfunction firstTwistPoints(location: Vector3, pushesPerTwist: number, spin: Spin, scale: IPercent): IPoint[] {\n    const base: Vector3[] = []\n    for (let index = 0; index < pushesPerTwist; index++) {\n        const angle = index * Math.PI * 2 / pushesPerTwist\n        const x = Math.cos(angle)\n        const y = Math.sin(angle)\n        base.push(new Vector3(x, 0, y).add(location))\n    }\n    return twistPoints(base, spin, scale)\n}\n\nfunction faceTwistPoints(face: IFace, scale: IPercent): IPoint[] {\n    const base = face.ends.map(jointLocation).reverse()\n    return twistPoints(base, oppositeSpin(face.spin), scale)\n}\n\nfunction twistPoints(base: Vector3[], spin: Spin, scale: IPercent): IPoint[] {\n    const initialLength = roleDefaultLength(IntervalRole.PhiTriangle) * factorFromPercent(scale) / Math.sqrt(3)\n    const tinyRadius = initialLength * base.length / 3 / Math.sqrt(3)\n    const points: IPoint[] = []\n    const mid = midpoint(base)\n    const up = normal(base).multiplyScalar(initialLength)\n    for (let index = 0; index < base.length; index++) {\n        const a = sub(base[(index + base.length - 1) % base.length], mid)\n        const b = sub(base[index], mid)\n        const c = sub(base[(index + 1) % base.length], mid)\n        const d = sub(base[(index + 2) % base.length], mid)\n        const bc = avg(b, c)\n        const cd = avg(c, d)\n        const ba = avg(b, a)\n        const alpha = new Vector3().copy(mid)\n        const omega = new Vector3().copy(mid).add(up)\n        if (spin === Spin.Left) {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(cd, tinyRadius)\n        } else {\n            alpha.addScaledVector(bc, tinyRadius)\n            omega.addScaledVector(ba, tinyRadius)\n        }\n        points.push({alpha, omega})\n    }\n    return points\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { roleDefaultLength } from \"../pretenst\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { intervalRoleName, isPushInterval } from \"./eig-util\"\nimport { FabricInstance } from \"./fabric-instance\"\nimport { ILifeTransition, Life } from \"./life\"\nimport { execute, IBud, IMark, ITenscript, MarkAction } from \"./tenscript\"\nimport { TensegrityBuilder } from \"./tensegrity-builder\"\nimport { scaleToInitialStiffness } from \"./tensegrity-optimizer\"\nimport {\n    faceConnectorLengthFromScale,\n    factorFromPercent,\n    IFace,\n    IFaceAnchor,\n    IFaceInterval,\n    IInterval,\n    IJoint,\n    intervalLength,\n    IPercent,\n    jointDistance,\n    jointHolesFromJoint,\n    jointLocation,\n    locationFromFace,\n    percentFromFactor,\n    percentOrHundred,\n    Spin,\n} from \"./tensegrity-types\"\n\nexport class Tensegrity {\n    public life$: BehaviorSubject<Life>\n    public joints: IJoint[] = []\n    public intervals: IInterval[] = []\n    public faceIntervals: IFaceInterval[] = []\n    public faceAnchors: IFaceAnchor[] = []\n    public faces: IFace[] = []\n    public pushesPerTwist: number\n    public buds?: IBud[]\n    private transitionQueue: ILifeTransition[] = []\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly scale: IPercent,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n        public readonly tenscript: ITenscript,\n    ) {\n        this.instance.clear()\n        this.life$ = new BehaviorSubject(new Life(numericFeature, this, Stage.Growing))\n        this.pushesPerTwist = this.tenscript.pushesPerTwist\n        this.buds = [new TensegrityBuilder(this).createBud(this.tenscript)]\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public lifeTransition(tx: ILifeTransition): void {\n        const life = this.life$.getValue()\n        if (tx.stage === life.stage) {\n            return\n        }\n        this.life$.next(life.executeTransition(tx))\n    }\n\n    public createJoint(location: Vector3): number {\n        return this.fabric.create_joint(location.x, location.y, location.z)\n    }\n\n    public createIJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const newJoint: IJoint = {index, instance: this.instance}\n        this.joints.push(newJoint)\n        return newJoint\n    }\n\n    public createFaceConnector(alpha: IFace, omega: IFace): IFaceInterval {\n        return this.createFaceInterval(alpha, omega)\n    }\n\n    public createFaceDistancer(alpha: IFace, omega: IFace, pullScale: IPercent): IFaceInterval {\n        return this.createFaceInterval(alpha, omega, pullScale)\n    }\n\n    public createFaceAnchor(alpha: IFace, point: Vector3, scale: IPercent): IFaceAnchor {\n        const intervalRole = IntervalRole.FaceAnchor\n        const omegaJointIndex = this.createJoint(point)\n        this.fabric.anchor_joint(omegaJointIndex)\n        const omega: IJoint = {index: omegaJointIndex, instance: this.instance}\n        this.joints.push(omega)\n        const idealLength = locationFromFace(alpha).distanceTo(point)\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const linearDensity = 0\n        const restLength = -point.y * factorFromPercent(scale)\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceAnchor = {index, alpha, omega, removed: false}\n        this.faceAnchors.push(interval)\n        return interval\n    }\n\n    public removeFaceInterval(interval: IFaceInterval): void {\n        this.faceIntervals = this.faceIntervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public removeFaceAnchor(interval: IFaceAnchor): void {\n        this.faceAnchors = this.faceAnchors.filter(existing => existing.index !== interval.index)\n        interval.alpha.ends.forEach(end => this.fabric.anchor_joint(end.index))\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createInterval(\n        alpha: IJoint, omega: IJoint, intervalRole: IntervalRole, scale: IPercent,\n        stiffness: number, linearDensity: number, coundown: number,\n    ): IInterval {\n        const idealLength = jointDistance(alpha, omega)\n        const scaleFactor = factorFromPercent(scale)\n        const defaultLength = roleDefaultLength(intervalRole)\n        const restLength = scaleFactor * defaultLength\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, coundown)\n        const interval: IInterval = {\n            index,\n            intervalRole,\n            scale,\n            alpha,\n            omega,\n            removed: false,\n            isPush: isPushInterval(intervalRole),\n        }\n        this.intervals.push(interval)\n        return interval\n    }\n\n    public changeIntervalScale(interval: IInterval, factor: number): void {\n        interval.scale = percentFromFactor(factorFromPercent(interval.scale) * factor)\n        this.fabric.multiply_rest_length(interval.index, factor, 100)\n    }\n\n    public changeIntervalRole(interval: IInterval, intervalRole: IntervalRole, scaleFactor: IPercent, countdown: number): void {\n        interval.intervalRole = intervalRole\n        this.fabric.set_interval_role(interval.index, intervalRole)\n        this.fabric.change_rest_length(interval.index, factorFromPercent(scaleFactor) * roleDefaultLength(intervalRole), countdown)\n    }\n\n    public removeInterval(interval: IInterval): void {\n        this.intervals = this.intervals.filter(existing => existing.index !== interval.index)\n        this.eliminateInterval(interval.index)\n        interval.removed = true\n    }\n\n    public createFace(ends: IJoint[], omni: boolean, spin: Spin, scale: IPercent, knownPulls?: IInterval[]): IFace {\n        const pull = (a: IJoint, b: IJoint) => {\n            for (let walk = this.intervals.length - 1; walk >= 0; walk--) { // backwards: more recent\n                const interval = this.intervals[walk]\n                const {alpha, omega} = interval\n                if (alpha.index === a.index && omega.index === b.index ||\n                    omega.index === a.index && alpha.index === b.index) {\n                    return interval\n                }\n            }\n            throw new Error(\"Could not find pull\")\n        }\n        const f0 = ends[0]\n        const f1 = ends[Math.floor(ends.length / 3)]\n        const f2 = ends[Math.floor(2 * ends.length / 3)]\n        const index = this.fabric.create_face(f0.index, f1.index, f2.index)\n        const pulls = knownPulls ? knownPulls : [pull(f0, f1), pull(f1, f2), pull(f2, f0)]\n        const face: IFace = {index, omni, spin, scale, ends, pulls}\n        this.faces.push(face)\n        return face\n    }\n\n    public removeFace(face: IFace): void {\n        face.pulls.forEach(pull => this.removeInterval(pull))\n        face.pulls = []\n        this.fabric.remove_face(face.index)\n        this.faces = this.faces.filter(existing => existing.index !== face.index)\n        this.faces.forEach(existing => {\n            if (existing.index > face.index) {\n                existing.index--\n            }\n        })\n    }\n\n    public get anchorJoints(): IJoint[] {\n        return this.joints.filter(joint => this.fabric.is_anchor_joint(joint.index))\n    }\n\n    public startTightening(intervals: IFaceInterval[]): void {\n        this.faceIntervals = intervals\n    }\n\n    public set transition(tx: ILifeTransition) {\n        if (tx.stage === undefined) {\n            throw new Error(\"Undefined stage!\")\n        }\n        this.transitionQueue.push(tx)\n    }\n\n    public iterate(): Stage | undefined {\n        const tx = this.transitionQueue.shift()\n        if (tx) {\n            this.lifeTransition(tx)\n        }\n        const stage = this.instance.iterate(this.life$.getValue().stage)\n        if (stage === undefined) {\n            return undefined\n        }\n        const activeCode = this.buds\n        const builder = () => new TensegrityBuilder(this)\n        if (activeCode) {\n            if (activeCode.length > 0) {\n                this.buds = execute(activeCode)\n            }\n            if (activeCode.length === 0) {\n                this.buds = undefined\n                faceStrategies(this.faces, this.tenscript.marks, builder()).forEach(strategy => strategy.execute())\n                if (stage === Stage.Growing) {\n                    return this.fabric.finish_growing()\n                }\n            }\n            return Stage.Growing\n        }\n        if (this.faceIntervals.length > 0) {\n            this.faceIntervals = builder().checkFaceIntervals(this.faceIntervals, interval => this.removeFaceInterval(interval))\n        }\n        return stage\n    }\n\n    public findInterval(joint1: IJoint, joint2: IJoint): IInterval | undefined {\n        return this.intervals.find(interval => (\n            (interval.alpha.index === joint1.index && interval.omega.index === joint2.index) ||\n            (interval.alpha.index === joint2.index && interval.omega.index === joint1.index)\n        ))\n    }\n\n    public getFabricOutput(pushRadius: number, pullRadius: number, jointRadius: number): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: this.tenscript.name,\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                const holes = jointHolesFromJoint(joint, this.intervals)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    radius: jointRadius,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor, holes,\n                }\n            }),\n            intervals: this.intervals.map(interval => {\n                const radius = interval.isPush ? pushRadius : pullRadius\n                const currentLength = intervalLength(interval)\n                const alphaIndex = interval.alpha.index\n                const omegaIndex = interval.omega.index\n                if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                    throw new Error(`Joint not found ${intervalRoleName(interval.intervalRole)}:${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                }\n                return <IOutputInterval>{\n                    index: interval.index,\n                    joints: [alphaIndex, omegaIndex],\n                    type: interval.isPush ? \"Push\" : \"Pull\",\n                    strain: strains[interval.index],\n                    stiffness: stiffnesses[interval.index],\n                    linearDensity: linearDensities[interval.index],\n                    role: intervalRoleName(interval.intervalRole),\n                    scale: interval.scale._,\n                    idealLength: idealLengths[interval.index],\n                    isPush: interval.isPush,\n                    length: currentLength,\n                    radius,\n                }\n            }),\n        }\n    }\n\n    private createFaceInterval(alpha: IFace, omega: IFace, pullScale?: IPercent): IFaceInterval {\n        const connector = !pullScale\n        const intervalRole = connector ? IntervalRole.FaceConnector : IntervalRole.FaceDistancer\n        const idealLength = locationFromFace(alpha).distanceTo(locationFromFace(omega))\n        const stiffness = scaleToInitialStiffness(percentOrHundred())\n        const scaleFactor = (factorFromPercent(alpha.scale) + factorFromPercent(omega.scale)) / 2\n        const restLength = !pullScale ? faceConnectorLengthFromScale(scaleFactor) : factorFromPercent(pullScale) * idealLength\n        const linearDensity = 0\n        const countdown = idealLength * this.numericFeature(WorldFeature.IntervalCountdown)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, intervalRole,\n            idealLength, restLength, stiffness, linearDensity, countdown,\n        )\n        const interval: IFaceInterval = {index, alpha, omega, connector, scaleFactor, removed: false}\n        this.faceIntervals.push(interval)\n        return interval\n    }\n\n    private eliminateInterval(index: number): void {\n        this.fabric.remove_interval(index)\n        this.faceIntervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.faceAnchors.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n        this.intervals.forEach(existing => {\n            if (existing.index > index) {\n                existing.index--\n            }\n        })\n    }\n}\n\nfunction faceStrategies(faces: IFace[], marks: Record<number, IMark>, builder: TensegrityBuilder): FaceStrategy[] {\n    const collated: Record<number, IFace[]> = {}\n    faces.forEach(face => {\n        if (face.mark === undefined) {\n            return\n        }\n        const found = collated[face.mark._]\n        if (found) {\n            found.push(face)\n        } else {\n            collated[face.mark._] = [face]\n        }\n    })\n    return Object.entries(collated).map(([key, value]) => {\n        const possibleMark = marks[key]\n        const mark = possibleMark ? possibleMark :\n            value.length === 1 ?\n                <IMark>{action: MarkAction.BaseFace} :\n                <IMark>{action: MarkAction.JoinFaces}\n        return new FaceStrategy(collated[key], mark, builder)\n    })\n}\n\nclass FaceStrategy {\n    constructor(private faces: IFace[], private mark: IMark, private builder: TensegrityBuilder) {\n    }\n\n    public execute(): void {\n        switch (this.mark.action) {\n            case MarkAction.Subtree:\n                break\n            case MarkAction.BaseFace:\n                this.builder.faceToOrigin(this.faces[0])\n                break\n            case MarkAction.JoinFaces:\n            case MarkAction.FaceDistance:\n                this.builder.createFaceIntervals(this.faces, this.mark)\n                break\n            case MarkAction.Anchor:\n                this.builder.createFaceAnchor(this.faces[0], this.mark)\n                break\n        }\n    }\n}\n\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IMuscle } from \"./gotchi\"\n\nexport enum GeneName {\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n    MusclePeriod = \"Attack\",\n    AttackPeriod = \"Attack\",\n    DecayPeriod = \"Decay\",\n    TwitchNuance = \"TwitchNuance\",\n    TicksPerSlice = \"TicksPerSlice\",\n}\n\nfunction isModifier(name: GeneName): boolean {\n    switch (name) {\n        case GeneName.Forward:\n        case GeneName.Left:\n        case GeneName.Right:\n            return false\n        case GeneName.MusclePeriod:\n        case GeneName.AttackPeriod:\n        case GeneName.DecayPeriod:\n        case GeneName.TwitchNuance:\n        case GeneName.TicksPerSlice:\n            return true\n    }\n}\n\nexport const MODIFIER_NAMES: GeneName[] = Object.keys(GeneName).filter(key => isModifier(GeneName[key])).map(k => GeneName[k])\n\nexport function randomModifierName(): GeneName {\n    return MODIFIER_NAMES[Math.floor(Math.random() * MODIFIER_NAMES.length)]\n}\n\nexport interface IGeneData {\n    geneName: GeneName\n    tosses: number\n    geneString: string\n}\n\nexport interface ITwitch {\n    when: number\n    muscle: IMuscle\n    attack: number\n    decay: number\n    twitchNuance: number\n    alternating: boolean\n}\n\nexport function emptyGenome(): Genome {\n    return new Genome(rollTheDice, [])\n}\n\nexport function fromGeneData(geneData: IGeneData[]): Genome {\n    if (geneData.length === 0) {\n        return emptyGenome()\n    }\n    const genes = geneData.map(({geneName, tosses, geneString}) => {\n        const dice = deserializeGene(geneString)\n        return {geneName, tosses, dice}\n    })\n    return new Genome(rollTheDice, genes)\n}\n\nexport interface IGene {\n    geneName: GeneName\n    tosses: number\n    dice: IDie[]\n}\n\nfunction getGene(search: GeneName, genes: IGene[]): IGene {\n    const existing = genes.find(({geneName}) => search === geneName)\n    if (existing) {\n        return existing\n    }\n    const fresh: IGene = {geneName: search, tosses: 0, dice: []}\n    genes.push(fresh)\n    return fresh\n}\n\nexport class Genome {\n    constructor(private roll: () => IDie, private genes: IGene[]) {\n    }\n\n    public createReader(name: GeneName): GeneReader {\n        return new GeneReader(getGene(name, this.genes), this.roll)\n    }\n\n    public get totalTwitches(): number {\n        const maxTosses = this.genes.reduce((max, {tosses}) => Math.max(max, tosses), 0)\n        return Math.floor(Math.pow(maxTosses, 0.66)) + 2\n    }\n\n    public withMutations(directionNames: GeneName[], modifierName?: GeneName): Genome {\n        const genesCopy: IGene[] = this.genes.map(gene => {\n            const {geneName, tosses} = gene\n            const dice = gene.dice.slice() // TODO: tweet this to the world\n            return {geneName, tosses, dice}\n        })\n        directionNames.forEach(directionName => {\n            const directionGene = getGene(directionName, genesCopy)\n            mutateGene(() => this.roll(), directionGene)\n        })\n        if (modifierName) {\n            const modifierGene = getGene(modifierName, genesCopy)\n            modifierGene.tosses++\n        }\n        return new Genome(this.roll, genesCopy)\n    }\n\n    public get geneData(): IGeneData[] {\n        return this.genes.map(gene => {\n            const {geneName, tosses, dice} = gene\n            const geneString = serializeGene(dice)\n            return <IGeneData>{geneName, tosses, geneString}\n        })\n    }\n\n    public get tosses(): number {\n        return this.genes.reduce((sum, {tosses}:IGene) => sum + tosses, 0)\n    }\n\n    public toString(): string {\n        return this.genes.map(gene => `(${gene.geneName}:${gene.tosses})`).join(\", \")\n        // return this.genes.map(gene => serializeGene(gene.dice)).join(\"\\n\")\n    }\n\n}\n\ninterface IDie {\n    index: number\n    numeral: string\n    symbol: string\n    featureDelta: number\n}\n\nconst DELTA = 1.1\n\nconst DICE: IDie[] = [\n    {index: 0, numeral: \"1\", symbol: \"⚀\", featureDelta: 1 / DELTA / DELTA / DELTA},\n    {index: 1, numeral: \"2\", symbol: \"⚁\", featureDelta: 1 / DELTA / DELTA},\n    {index: 2, numeral: \"3\", symbol: \"⚂\", featureDelta: 1 / DELTA},\n    {index: 3, numeral: \"4\", symbol: \"⚃\", featureDelta: DELTA},\n    {index: 4, numeral: \"5\", symbol: \"⚄\", featureDelta: DELTA * DELTA},\n    {index: 5, numeral: \"6\", symbol: \"⚅\", featureDelta: DELTA * DELTA * DELTA},\n]\n\nconst DICE_MAP = ((): { [key: string]: IDie; } => {\n    const map = {}\n    DICE.forEach(die => {\n        map[die.numeral] = die\n        map[die.symbol] = die\n    })\n    return map\n})()\n\nfunction diceToInteger(max: number, ...dice: IDie[]): number {\n    return Math.floor(diceToNuance(dice) * max)\n}\n\nfunction diceToFloat(max: number, ...dice: IDie[]): number {\n    return diceToNuance(dice) * max\n}\n\nfunction mutateGene(roll: () => IDie, gene: IGene): void {\n    if (gene.dice.length === 0) {\n        gene.dice.push(roll())\n    } else {\n        const woops = Math.floor(Math.random() * gene.dice.length)\n        const currentRoll = gene.dice[woops]\n        while (gene.dice[woops] === currentRoll) {\n            gene.dice[woops] = roll()\n        }\n    }\n    gene.tosses++\n}\n\nexport class GeneReader {\n    private cursor = 0\n\n    constructor(private gene: IGene, private roll: () => IDie) {\n    }\n\n    public readMuscleTwitch(muscles: IMuscle[], attackPeriod: number, decayPeriod: number, twitchNuance: number): ITwitch {\n        const doubleMuscle = diceToInteger(muscles.length * 2, this.next(), this.next(), this.next())\n        const alternating = doubleMuscle % 2 === 0\n        const whichMuscle = Math.floor(doubleMuscle / 2)\n        const muscle = muscles[whichMuscle]\n        return {\n            when: diceToInteger(36, this.next(), this.next()),\n            muscle, alternating,\n            attack: (2 + diceToFloat(6, this.next())) * attackPeriod,\n            decay: (2 + diceToFloat(6, this.next())) * decayPeriod,\n            twitchNuance,\n        }\n    }\n\n    public modifyFeature(original: number): number {\n        let value = original\n        const weightOfNew = 0.5\n        if (this.gene.tosses === 0) {\n            this.gene.tosses++\n        }\n        for (let tick = 0; tick < this.gene.tosses; tick++) {\n            value = value * (weightOfNew * this.next().featureDelta + (1 - weightOfNew))\n        }\n        return value\n    }\n\n    public get length(): number {\n        return this.gene.dice.length\n    }\n\n    private next(): IDie {\n        while (this.gene.dice.length < this.cursor + 1) {\n            this.gene.dice.push(this.roll())\n        }\n        return this.gene.dice[this.cursor++]\n    }\n}\n\nfunction rollTheDice(): IDie {\n    return DICE[Math.floor(Math.random() * DICE.length)]\n}\n\nfunction diceToNuance(dice: IDie[]): number {\n    if (dice.length === 0) {\n        throw new Error(\"No dice!\")\n    }\n    const base6 = dice.reduce((sum: number, die: IDie) => sum * 6 + die.index, 0)\n    return base6 / Math.pow(6, dice.length)\n}\n\nfunction serializeGene(dice: IDie[]): string {\n    return dice.map(die => die.symbol).join(\"\")\n}\n\nfunction deserializeGene(s: string): IDie[] {\n    return s.split(\"\").map((numeral: string): IDie => DICE_MAP[numeral]).filter(die => !!die)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { GeneName, GeneReader, Genome, ITwitch } from \"./genome\"\nimport { Direction, directionGene, DIRECTIONS, IGotchiState, IMuscle, oppositeMuscle } from \"./gotchi\"\n\nexport type Twitch = (muscle: IMuscle, attack: number, decay: number, twitchNuance: number) => void\n\nconst MUSCLE_PERIOD = 600\nconst TICKS_PER_SLICE = 4\nconst TWITCH_NUANCE = 0.3\n\ninterface ITwitchConfig {\n    ticksPerSlice: number\n    twitchNuance: number\n    musclePeriod: number\n    attackPeriod: number\n    decayPeriod: number\n}\n\nfunction readTwichConfig(genome: Genome): ITwitchConfig {\n    const musclePeriod = genome.createReader(GeneName.MusclePeriod).modifyFeature(MUSCLE_PERIOD)\n    return <ITwitchConfig>{\n        ticksPerSlice: genome.createReader(GeneName.TicksPerSlice).modifyFeature(TICKS_PER_SLICE),\n        twitchNuance: genome.createReader(GeneName.TwitchNuance).modifyFeature(TWITCH_NUANCE),\n        musclePeriod,\n        attackPeriod: genome.createReader(GeneName.AttackPeriod).modifyFeature(musclePeriod),\n        decayPeriod: genome.createReader(GeneName.DecayPeriod).modifyFeature(musclePeriod),\n    }\n}\n\nexport class Twitcher {\n    public cycleCount = 0\n    public twitchCount = 0\n    private config: ITwitchConfig\n    private ticks: number = 0\n    private twitchCycles: Record<string, TwitchCycle> = {}\n\n    constructor(private state: IGotchiState) {\n        const genome = this.state.genome\n        this.config = readTwichConfig(genome)\n        const totalTwitches = genome.totalTwitches\n        DIRECTIONS.filter(d => d !== Direction.Rest).forEach(direction => {\n            const geneName = directionGene(direction)\n            const reader = genome.createReader(geneName)\n            this.twitchCycles[direction] = new TwitchCycle(reader, this.config, state.muscles, totalTwitches)\n        })\n    }\n\n    public toString(): string {\n        const cycles = Object.keys(this.twitchCycles)\n            .map(k => this.twitchCycles[k]).map(c => c.toString()).join(\"\\n\")\n        return `Twitcher(${cycles})`\n    }\n\n    public tick(twitch: Twitch): boolean {\n        this.ticks--\n        if (this.ticks < 0) {\n            this.ticks = this.config.ticksPerSlice\n            const state = this.state\n            state.timeSlice++\n            if (state.timeSlice >= 36) {\n                state.timeSlice = 0\n                this.cycleCount++\n                return true\n            }\n            const twitchCycle = this.twitchCycles[state.direction]\n            if (twitchCycle) {\n                this.twitchCount += twitchCycle.activate(state.timeSlice, twitch)\n            }\n        }\n        return false\n    }\n}\n\nclass TwitchCycle {\n    private slices: Record<number, ITwitch[]> = {}\n\n    constructor(geneReader: GeneReader, config: ITwitchConfig, muscles: IMuscle[], totalTwitches: number) {\n        let remainingMuscles = [...muscles]\n        const removeMuscle = (muscle: IMuscle) => {\n            remainingMuscles = remainingMuscles.filter(({faceIndex}) => muscle.faceIndex !== faceIndex)\n        }\n        while (totalTwitches-- > 0) {\n            const {attackPeriod, decayPeriod, twitchNuance} = config\n            const twitch = geneReader.readMuscleTwitch(remainingMuscles, attackPeriod, decayPeriod, twitchNuance)\n            this.addTwitch(twitch.when, twitch)\n            removeMuscle(twitch.muscle)\n            const muscle = oppositeMuscle(twitch.muscle, remainingMuscles)\n            const when = twitch.alternating ? (twitch.when + 18) % 36 : twitch.when\n            this.addTwitch(when, {...twitch, muscle, when})\n            removeMuscle(muscle)\n        }\n    }\n\n    public toString(): string {\n        const twitches = Object.keys(this.slices)\n            .map(k => this.slices[k])\n            .map((twitchArray: ITwitch[]) => twitchArray\n                .map(twitch => `${twitch.when}:${twitch.muscle.faceIndex}`)\n                .join(\";\"))\n            .join(\",\")\n        return `Cycle(${twitches})`\n    }\n\n    public activate(timeSlice: number, twitch: Twitch): number {\n        const slice = this.slices[timeSlice]\n        if (!slice) {\n            return 0\n        }\n        slice.forEach(({muscle, attack, decay, twitchNuance}) => twitch(muscle, attack, decay, twitchNuance))\n        return slice.length\n    }\n\n    private addTwitch(index: number, twitch: ITwitch): void {\n        const slice = this.slices[index]\n        if (slice) {\n            slice.push(twitch)\n        } else {\n            this.slices[index] = [twitch]\n        }\n    }\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, Stage, View, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { FORWARD } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { FaceName } from \"../fabric/tensegrity-types\"\n\nimport { fromGeneData, GeneName, Genome, IGeneData, randomModifierName } from \"./genome\"\nimport { Patch } from \"./patch\"\nimport { Twitch, Twitcher } from \"./twitcher\"\n\nexport const GOTCHI_TENSCRIPT = \"'Gorillagotchi':(A(4,S80,Mb0),b(4,S80,Mb0),a(2,S70,Md0),B(2,Md0,S70)):0=face-distance-60\"\nexport const SATOSHI_TREE_TENSCRIPT = \"'Satoshi Tree':(2,S85,b(4,S85,MA0),c(4,S85,MA0),d(4,S85,MA0)):0=subtree(b(3, S85),c(3, S85),d(3, S85))\"\n\nexport enum Direction {\n    Rest = \"Rest\",\n    Forward = \"Forward\",\n    Left = \"Left\",\n    Right = \"Right\",\n}\n\nexport const DIRECTIONS: Direction[] = Object.keys(Direction).map(k => Direction[k])\n\nconst CLOSE_ENOUGH_TO_TARGET = 4\n\nexport function directionGene(direction: Direction): GeneName {\n    switch (direction) {\n        case Direction.Forward:\n            return GeneName.Forward\n        case Direction.Left:\n            return GeneName.Left\n        case Direction.Right:\n            return GeneName.Right\n        default:\n            throw new Error(`No gene for direction ${direction}`)\n    }\n}\n\nexport interface IExtremity {\n    faceIndex: number\n    name: string\n    limb: Limb\n}\n\nexport interface IMuscle {\n    faceIndex: number\n    name: string\n    limb: Limb\n    distance: number\n    group: FaceName\n    faceName: FaceName\n}\n\nexport enum Limb {\n    FrontLeft = \"front-left\",\n    FrontRight = \"front-right\",\n    BackLeft = \"back-left\",\n    BackRight = \"back-right\",\n}\n\nexport interface IGotchiState {\n    patch: Patch\n    targetPatch: Patch\n    instance: FabricInstance\n    muscles: IMuscle[]\n    extremities: IExtremity[]\n    genome: Genome\n    direction: Direction\n    directionHistory: Direction[]\n    autopilot: boolean\n    timeSlice: number\n    twitchesPerCycle: number\n}\n\nexport function freshGotchiState(patch: Patch, instance: FabricInstance, genome: Genome): IGotchiState {\n    return <IGotchiState>{\n        patch,\n        targetPatch: patch.adjacent[patch.rotation],\n        instance,\n        muscles: [],\n        extremities: [],\n        genome,\n        direction: Direction.Rest,\n        directionHistory: [],\n        autopilot: false,\n        timeSlice: 0,\n        reachedTarget: false,\n        twitchesPerCycle: 30,\n    }\n}\n\nexport class Gotchi {\n    private shapingTime = 50\n    private twitcher?: Twitcher\n\n    constructor(public readonly state: IGotchiState, public embryo?: Tensegrity) {\n        if (!embryo) {\n            this.twitcher = new Twitcher(this.state)\n        }\n    }\n\n    public get twitcherString(): string {\n        return this.twitcher ? this.twitcher.toString() : \"no twitcher\"\n    }\n\n    public get growing(): boolean {\n        return !!this.embryo\n    }\n\n    public snapshot(): void {\n        this.state.instance.snapshot()\n    }\n\n    public get genome(): Genome {\n        return this.state.genome\n    }\n\n    public set genome(genome: Genome) {\n        this.state.genome = genome\n    }\n\n    public recycled(instance: FabricInstance, geneData?: IGeneData[]): Gotchi {\n        const genome = fromGeneData(geneData ? geneData : this.patch.storedGenes[0])\n        const state: IGotchiState = {...this.state, instance, genome, directionHistory: []}\n        return new Gotchi(state)\n    }\n\n    public getCycleCount(useTwitches: boolean): number {\n        return !this.twitcher ? 0 : useTwitches ? Math.floor(this.twitcher.twitchCount / this.state.twitchesPerCycle) : this.twitcher.cycleCount\n    }\n\n    public get patch(): Patch {\n        return this.state.patch\n    }\n\n    public get instance(): FabricInstance {\n        return this.state.instance\n    }\n\n    public get autopilot(): boolean {\n        return this.state.autopilot\n    }\n\n    public set autopilot(auto: boolean) {\n        this.state.autopilot = auto\n        if (auto) {\n            this.checkDirection()\n        }\n    }\n\n    public get direction(): Direction {\n        return this.state.direction\n    }\n\n    public set direction(direction: Direction) {\n        this.state.direction = direction\n        this.autopilot = false\n    }\n\n    public get fabricClone(): Fabric {\n        return this.state.instance.fabricClone\n    }\n\n    public adoptFabric(fabric: Fabric): FabricInstance {\n        return this.state.instance.adoptFabric(fabric)\n    }\n\n    public get view(): View {\n        return this.state.instance.view\n    }\n\n    public getExtremity(whichLimb: Limb): IExtremity {\n        const extremity = this.state.extremities.find(({limb}) => limb === whichLimb)\n        if (!extremity) {\n            throw new Error(\"No extremity found\")\n        }\n        return extremity\n    }\n\n    public mutatedGeneData(): IGeneData[] {\n        const counts = DIRECTIONS.map(dir => {\n            const count = this.state.directionHistory.filter(d => d === dir).length\n            return ({dir, count})\n        })\n        const nonzero = counts.filter(count => count.count > 0)\n        const geneNames = nonzero.map(d => d.dir).map(directionGene)\n        const modifierName = Math.random() > 0.95 ? randomModifierName() : undefined\n        return this.state.genome.withMutations(geneNames, modifierName).geneData\n    }\n\n    public get age(): number {\n        return this.state.instance.fabric.age\n    }\n\n    public getMidpoint(midpoint?: Vector3): Vector3 {\n        if (!midpoint) {\n            midpoint = new Vector3()\n        }\n        const view = this.state.instance.view\n        midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        return midpoint\n    }\n\n    public get distanceFromTarget(): number {\n        return this.getMidpoint().distanceTo(this.target)\n    }\n\n    public iterate(midpoint?: Vector3): boolean {\n        const state = this.state\n        const instance = state.instance\n        const view = instance.view\n        if (midpoint) {\n            midpoint.set(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        }\n        const embryo = this.embryo\n        if (embryo) {\n            const nextStage = embryo.iterate()\n            const life = embryo.life$.getValue()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                embryo.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                embryo.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case Stage.Shaping:\n                    if (this.shapingTime <= 0) {\n                        instance.fabric.adopt_lengths()\n                        const faceIntervals = [...embryo.faceIntervals]\n                        faceIntervals.forEach(interval => embryo.removeFaceInterval(interval))\n                        instance.iterate(Stage.Slack)\n                        instance.iterate(Stage.Pretensing)\n                    } else {\n                        this.shapingTime--\n                    }\n                    return false\n                case Stage.Pretensing:\n                    return true\n                case Stage.Pretenst:\n                    extractGotchiFaces(embryo, state.muscles, state.extremities)\n                    embryo.transition = {stage: Stage.Pretenst}\n                    embryo.iterate()\n                    this.embryo = undefined\n                    this.twitcher = new Twitcher(state)\n                    return true\n                default:\n                    return false\n            }\n        } else {\n            instance.iterate(Stage.Pretenst)\n            if (this.twitcher) {\n                const twitch: Twitch = (m, a, d, n) => this.twitch(m, a, d, n)\n                if (this.twitcher.tick(twitch) && this.state.autopilot) {\n                    if (this.reachedTarget) {\n                        this.direction = Direction.Rest\n                    } else {\n                        this.checkDirection()\n                    }\n                }\n            }\n            return true\n        }\n    }\n\n    public showFrozen(): void {\n        this.instance.showFrozen(this.reachedTarget)\n    }\n\n    public get target(): Vector3 {\n        return this.state.targetPatch.center\n    }\n\n    public get showDirection(): boolean {\n        return this.state.direction !== Direction.Rest\n    }\n\n    public get directionQuaternion(): Quaternion {\n        return this.quaternionForDirection(this.state.direction)\n    }\n\n    public get reachedTarget(): boolean {\n        return this.distanceFromTarget < CLOSE_ENOUGH_TO_TARGET\n    }\n\n    public checkDirection(): void {\n        const state = this.state\n        if (this.reachedTarget) {\n            this.direction = Direction.Rest\n        } else {\n            state.direction = this.directionToTarget\n            state.directionHistory.push(state.direction)\n        }\n    }\n\n    private twitch(muscle: IMuscle, attack: number, decay: number, intensity: number): void {\n        this.state.instance.fabric.twitch_face(muscle.faceIndex, attack, decay, intensity)\n        // console.log(`twitch ${muscle.name} ${muscle.faceIndex}: ${attack}, ${decay}`)\n    }\n\n    private quaternionForDirection(direction: Direction): Quaternion {\n        const towards = () => {\n            const instance = this.state.instance\n            switch (direction) {\n                case Direction.Rest:\n                case Direction.Forward:\n                    return instance.forward\n                case Direction.Left:\n                    return instance.left\n                case Direction.Right:\n                    return instance.right\n            }\n        }\n        return new Quaternion().setFromUnitVectors(FORWARD, towards())\n    }\n\n    public get topJointLocation(): Vector3 {\n        const topJoint = 3\n        const loc = this.state.instance.floatView.jointLocations\n        return new Vector3(loc[topJoint * 3], loc[topJoint * 3 + 1], loc[topJoint * 3 + 2])\n    }\n\n    private get directionToTarget(): Direction {\n        const toTarget = this.toTarget\n        const instance = this.state.instance\n        instance.refreshFloatView()\n        const degreeForward = toTarget.dot(instance.forward)\n        const degreeRight = toTarget.dot(instance.right)\n        if (degreeRight > 0) {\n            return degreeForward > degreeRight ? Direction.Forward : Direction.Right\n        } else {\n            return degreeForward > -degreeRight ? Direction.Forward : Direction.Left\n        }\n    }\n\n    private get toTarget(): Vector3 {\n        const toTarget = new Vector3()\n        const view = this.state.instance.view\n        const midpoint = new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        toTarget.subVectors(this.target, midpoint)\n        toTarget.y = 0\n        toTarget.normalize()\n        return toTarget\n    }\n}\n\nexport function oppositeMuscle(muscle: IMuscle, muscles: IMuscle[]): IMuscle {\n    const {name, limb, distance} = muscle\n    const oppositeFace = FaceName.NNN\n    const findLimb = oppositeLimb(limb)\n    const opposite = muscles.find(m => m.limb === findLimb && m.distance === distance && m.faceName === oppositeFace)\n    if (!opposite) {\n        throw new Error(`Unable to find opposite muscle to ${name}`)\n    }\n    // console.log(`opposite of ${name} is ${muscles[oppositeIndex].name}`)\n    return opposite\n}\n\nfunction extractGotchiFaces(tensegrity: Tensegrity, muscles: IMuscle[], extremities: IExtremity[]): void {\n    // tensegrity.brickFaces\n    //     .filter(face => !face.removed && face.brick.parentFace)\n    //     .forEach(face => {\n    //         const gatherAncestors = (f: IBrickFace, faceNames: FaceName[]): Limb => {\n    //             const definition = BRICK_FACE_DEF[f.faceName]\n    //             faceNames.push(definition.negative ? definition.opposite : definition.name)\n    //             const parentFace = f.brick.parentFace\n    //             if (parentFace) {\n    //                 return gatherAncestors(parentFace, faceNames)\n    //             } else {\n    //                 return limbFromFaceName(f.faceName)\n    //             }\n    //         }\n    //         const identities: FaceName[] = []\n    //         const limb = gatherAncestors(face, identities)\n    //         const group = identities.shift()\n    //         const faceName = face.faceName\n    //         if (!group) {\n    //             throw new Error(\"no top!\")\n    //         }\n    //         const distance = identities.length\n    //         const faceIndex = face.index\n    //         if (isExtremity(group)) {\n    //             const name = `[${limb}]`\n    //             extremities.push({faceIndex, name, limb})\n    //         } else {\n    //             const name = `[${limb}]:[${distance}:${FaceName[group]}]:{tri=${FaceName[faceName]}}`\n    //             muscles.push({faceIndex, name, limb, distance, group, faceName})\n    //         }\n    //     })\n}\n\n// function isExtremity(faceName: FaceName): boolean {\n//     const definition = BRICK_FACE_DEF[faceName]\n//     const normalizedFace = definition.negative ? definition.opposite : faceName\n//     return normalizedFace === FaceName.PPP\n// }\n//\n// function limbFromFaceName(face: FaceName): Limb {\n//     switch (face) {\n//         case FaceName.NNN:\n//             return Limb.BackLeft\n//         case FaceName.PNN:\n//             return Limb.BackRight\n//         case FaceName.NPP:\n//             return Limb.FrontLeft\n//         case FaceName.PPP:\n//             return Limb.FrontRight\n//         default:\n//             throw new Error(\"Strange limb\")\n//     }\n// }\n\nfunction oppositeLimb(limb: Limb): Limb {\n    switch (limb) {\n        case Limb.BackRight:\n            return Limb.BackLeft\n        case Limb.BackLeft:\n            return Limb.BackRight\n        case Limb.FrontRight:\n            return Limb.FrontLeft\n        case Limb.FrontLeft:\n            return Limb.FrontRight\n        default:\n            throw new Error(\"Strange limb\")\n    }\n}\n\nexport function gotchiNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.IterationsPerFrame:\n            return defaultValue * 2\n        case WorldFeature.Gravity:\n            return defaultValue\n        case WorldFeature.Drag:\n            return defaultValue * 5\n        case WorldFeature.ShapingStiffnessFactor:\n            return defaultValue * 2\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.5\n        case WorldFeature.PretenstFactor:\n            return defaultValue\n        case WorldFeature.StiffnessFactor:\n            return defaultValue\n        case WorldFeature.PushOverPull:\n            return 0.25\n        default:\n            return defaultValue\n    }\n}\n\nexport function treeNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Gravity:\n            return defaultValue * 5\n        case WorldFeature.IntervalCountdown:\n            return defaultValue * 0.1\n        case WorldFeature.Antigravity:\n            return defaultValue * 0.3\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.PretenstFactor:\n            return defaultValue * 5\n        case WorldFeature.StiffnessFactor:\n            return defaultValue * 8\n        case WorldFeature.PretensingCountdown:\n            return defaultValue * 0.02\n        default:\n            return defaultValue\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { CreateInstance } from \"../fabric/fabric-instance\"\n\nimport { fromGeneData, Genome } from \"./genome\"\nimport { directionGene, Gotchi } from \"./gotchi\"\n\nexport interface IEvolutionParameters {\n    cyclePattern: number[]\n    persistentPopulation: number\n    challengerPopulation: number\n}\n\nexport const EVO_PARAMETERS: IEvolutionParameters = {\n    cyclePattern: [5, 6, 7, 8, 9, 10],\n    persistentPopulation: 8,\n    challengerPopulation: 8,\n}\n\nexport enum EvolutionPhase {\n    WinnersRun = \"Winners run\",\n    ChallengersBorn = \"Challengers born\",\n    ChallengersReborn = \"Challengers reborn\",\n    ChallengersRun = \"Challengers run\",\n    WinnersStored = \"Winners stored\",\n    EvolutionAdvance = \"Evolution advance\",\n    EvolutionDone = \"Evolution done\",\n    EvolutionHarder = \"Evolution harder\",\n}\n\nexport interface IEvolver {\n    name: string\n    gotchi: Gotchi\n    proximityHistory: number[]\n    persisted: boolean\n}\n\nexport interface ISplit {\n    cycleCount: number,\n    winners: IEvolver[],\n    losers: IEvolver[]\n}\n\nexport interface IEvolverSnapshot {\n    name: string,\n    proximity: number\n    tosses: number,\n    reachedTarget: boolean,\n    persisted: boolean\n}\n\nexport interface IEvolutionSnapshot {\n    cyclePattern: number[]\n    cycle: number\n    cycleIndex: number\n    evolverSnapshots: IEvolverSnapshot[]\n}\n\nexport class Evolution {\n    public readonly snapshotsSubject = new BehaviorSubject<IEvolutionSnapshot[]>([])\n    public winners: IEvolver[] = []\n    public challengersVisible = false\n    public challengers: IEvolver[] = []\n    public phase = EvolutionPhase.WinnersRun\n    private cyclePatternIndex: number\n    private currentCycle: number = 0\n    private currentMaxCycles: number\n    private gotchiMidpoint = new Vector3()\n\n    constructor(\n        private evolvingGotchi: Gotchi,\n        private createInstance: CreateInstance,\n        private useTwitches: boolean,\n        private cyclePattern: number[],\n    ) {\n        if (evolvingGotchi.embryo) {\n            throw new Error(\"Cannot create evolution from gotchi which is not pretenst\")\n        }\n        evolvingGotchi.checkDirection()\n        this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex = 0]\n        const winners: Gotchi[] = []\n        const storedGenes = evolvingGotchi.patch.storedGenes\n        while (winners.length < EVO_PARAMETERS.persistentPopulation) {\n            winners.push(this.createAutoGotchi(fromGeneData(storedGenes[winners.length % storedGenes.length])))\n        }\n        this.winners = winners.map((gotchi, index) => ({\n            gotchi,\n            name: letter(index),\n            proximityHistory: [],\n            persisted: true,\n        }))\n    }\n\n    public get withReducedCyclePattern(): Evolution | undefined {\n        const cyclePattern = [...this.cyclePattern]\n        cyclePattern.pop()\n        if (cyclePattern.length < 3) {\n            return undefined\n        }\n        return new Evolution(this.evolvingGotchi, this.createInstance, this.useTwitches, cyclePattern)\n    }\n\n    public iterate(): EvolutionPhase {\n        switch (this.phase) {\n            case EvolutionPhase.WinnersRun:\n                let winnerMinCycles = 0\n                let winnerMoved = false\n                this.winners.forEach(({gotchi}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > winnerMinCycles) {\n                        winnerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        winnerMoved = true\n                    }\n                })\n                if (winnerMinCycles > this.currentCycle) {\n                    rankEvolvers(this.winners, this.currentCycle)\n                    this.currentCycle = winnerMinCycles\n                }\n                if (!winnerMoved) {\n                    const allWinnersReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    if (allWinnersReachedTarget) {\n                        this.phase = EvolutionPhase.EvolutionDone\n                    } else {\n                        this.winners.forEach(winner => winner.gotchi.showFrozen())\n                        this.phase = this.challengers.length === 0 ? EvolutionPhase.ChallengersBorn : EvolutionPhase.ChallengersReborn\n                        this.currentCycle = 0\n                    }\n                }\n                break\n            case EvolutionPhase.ChallengersBorn:\n                const challengers: Gotchi[] = []\n                while (challengers.length < EVO_PARAMETERS.challengerPopulation) {\n                    const genome = fromGeneData(this.winners[challengers.length % this.winners.length].gotchi.genome.geneData)\n                    challengers.push(this.createAutoGotchi(genome.withMutations([directionGene(this.evolvingGotchi.direction)])))\n                }\n                this.challengers = challengers.map((challenger, index) => {\n                    challenger.autopilot = true\n                    const name = `${letter(index + this.winners.length)}${letter(index % this.winners.length)}`\n                    return <IEvolver>{gotchi: challenger, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersReborn:\n                let parentIndex = 0\n                this.challengers = this.challengers.map((challenger, index): IEvolver => {\n                    const survivorIndex = parentIndex++ % this.winners.length\n                    const parent = this.winners[survivorIndex]\n                    const instance = challenger.gotchi.adoptFabric(this.evolvingGotchi.fabricClone)\n                    const gotchi = challenger.gotchi.recycled(instance, parent.gotchi.mutatedGeneData())\n                    const name = `${parent.name}${letter(index)}`\n                    gotchi.autopilot = true\n                    return {gotchi, name, proximityHistory: [], persisted: false}\n                })\n                this.phase = EvolutionPhase.ChallengersRun\n                break\n            case EvolutionPhase.ChallengersRun:\n                this.challengersVisible = true\n                let challengerMoved = false\n                let challengerMinCycles = 0\n                this.challengers.forEach(({gotchi, name}) => {\n                    const cycleCount = gotchi.getCycleCount(this.useTwitches)\n                    if (cycleCount > challengerMinCycles) {\n                        challengerMinCycles = cycleCount\n                    }\n                    if (cycleCount < this.currentMaxCycles) {\n                        gotchi.iterate()\n                        challengerMoved = true\n                    }\n                })\n                if (challengerMinCycles > this.currentCycle) {\n                    const evolvers = [...this.winners, ...this.challengers]\n                    rankEvolvers(evolvers, this.currentCycle)\n                    this.broadcastSnapshot(evolvers.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                    this.currentCycle = challengerMinCycles\n                }\n                if (!challengerMoved) {\n                    this.phase = EvolutionPhase.WinnersStored\n                }\n                break\n            case EvolutionPhase.WinnersStored:\n                const {winners, losers} = this.splitEvolvers(this.currentCycle)\n                this.evolvingGotchi.patch.storedGenes = winners.map(({gotchi}) => gotchi.genome.geneData)\n                winners.forEach(winner => winner.persisted = true)\n                losers.forEach(winner => winner.persisted = false)\n                this.broadcastSnapshot(winners.map(evolver => rankedToSnapshot(evolver, this.currentCycle)))\n                this.winners = winners\n                this.challengers = losers\n                this.challengersVisible = false\n                this.phase = EvolutionPhase.EvolutionAdvance\n                break\n            case EvolutionPhase.EvolutionAdvance:\n                if (this.cyclePatternIndex === this.cyclePattern.length - 1) {\n                    const allReachedTarget = !this.winners.find(({gotchi}) => !gotchi.reachedTarget)\n                    this.phase = allReachedTarget ? EvolutionPhase.EvolutionHarder : EvolutionPhase.EvolutionDone\n                } else {\n                    this.cyclePatternIndex++\n                    this.currentMaxCycles = this.cyclePattern[this.cyclePatternIndex]\n                    this.currentCycle = 0\n                    this.phase = EvolutionPhase.WinnersRun\n                    // todo: maybe they have all reached the target?\n                }\n                break\n            case EvolutionPhase.EvolutionDone:\n                break\n            case EvolutionPhase.EvolutionHarder:\n                break\n        }\n        return this.phase\n    }\n\n    public getMidpoint(midpoint: Vector3): Vector3 {\n        this.winners.forEach(({gotchi}) => midpoint.add(gotchi.getMidpoint(this.gotchiMidpoint)))\n        midpoint.multiplyScalar(1.0 / this.winners.length)\n        return midpoint\n    }\n\n    public get target(): Vector3 {\n        return this.evolvingGotchi.target\n    }\n\n    // Privates =============================================================\n\n    private splitEvolvers(cycleCount: number): ISplit {\n        const winners: IEvolver[] = []\n        const losers: IEvolver[] = []\n        const evolvers = [...this.winners, ...this.challengers]\n        rankEvolvers(evolvers, cycleCount)\n        evolvers.forEach((rankedEvolver, index) => {\n            if (index < EVO_PARAMETERS.persistentPopulation) {\n                winners.push(rankedEvolver)\n            } else {\n                losers.push(rankedEvolver)\n            }\n        })\n        return {cycleCount, winners, losers}\n    }\n\n    private broadcastSnapshot(evolverSnapshots: IEvolverSnapshot[]): void {\n        const cycle = this.currentCycle\n        const cycleIndex = this.cyclePatternIndex\n        const cyclePattern = this.cyclePattern\n        const snapshot = <IEvolutionSnapshot>{cycle, cyclePattern, cycleIndex, evolverSnapshots}\n        const snapshots = this.snapshotsSubject.getValue()\n        const alreadyHere = snapshots.findIndex(s => snapshot.cycleIndex === s.cycleIndex)\n        if (alreadyHere < 0) {\n            this.snapshotsSubject.next([...snapshots, snapshot])\n        } else if (alreadyHere === snapshots.length - 1) {\n            const copy = [...snapshots]\n            copy[alreadyHere] = snapshot\n            this.snapshotsSubject.next(copy)\n        } else {\n            this.snapshotsSubject.next([snapshot])\n        }\n    }\n\n    private createAutoGotchi(genome: Genome): Gotchi {\n        const instance = this.createInstance(false, this.evolvingGotchi.fabricClone)\n        const gotchi = this.evolvingGotchi.recycled(instance, genome.geneData)\n        gotchi.autopilot = true\n        return gotchi\n    }\n}\n\nfunction rankEvolvers(evolvers: IEvolver[], cycleCount: number): void {\n    evolvers.forEach(evolver => {\n        if (evolver.proximityHistory.length === cycleCount) {\n            evolver.proximityHistory.push(evolver.gotchi.distanceFromTarget)\n        }\n    })\n    evolvers.sort((a, b) => a.proximityHistory[cycleCount] - b.proximityHistory[cycleCount])\n}\n\nfunction rankedToSnapshot({gotchi, proximityHistory, persisted, name}: IEvolver, cycleCount: number): IEvolverSnapshot {\n    const proximityForCycle = proximityHistory[cycleCount]\n    if (proximityForCycle === undefined) {\n        throw new Error(\"Cannot snapshot\")\n    }\n    const tosses = gotchi.genome.tosses\n    const reachedTarget = gotchi.reachedTarget\n    return {name, proximity: proximityForCycle, reachedTarget, tosses, persisted}\n}\n\nexport function letter(index: number): string {\n    return String.fromCharCode(65 + index)\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { FaDna, FaYinYang } from \"react-icons/all\"\n\nimport { IEvolutionSnapshot, letter } from \"./evolution\"\n\nexport function EvolutionStats({snapshots}: {\n    snapshots: IEvolutionSnapshot[],\n}): JSX.Element {\n    return (\n        <div className=\"text-monospace d-inline-flex\">\n            {snapshots.map(snapshot => (\n                <div key={snapshot.cycleIndex} className=\"float-left p-1 m-1\" style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"2px\",\n                }}>\n                    <EvolutionInfo snapshot={snapshot}/>\n                    <div className=\"m-2\">\n                        {snapshot.evolverSnapshots.map((evolverSnapshot, index) => {\n                            const {name, reachedTarget, persisted, proximity, tosses} = evolverSnapshot\n                            const mutationSymbols = []\n                            let nameLength = name.length - 1\n                            while (nameLength > 0) {\n                                mutationSymbols.push(<FaDna key={`${name}-${nameLength}`}/>)\n                                nameLength--\n                            }\n                            const reachedSymbol = reachedTarget ? <FaYinYang/> : undefined\n                            return (\n                                <div key={`competitor-${index}`} style={{\n                                    color: persisted ? reachedTarget ? \"#ffffff\" : \"#2cd710\" : \"#c2c2c2\",\n                                    backgroundColor: persisted ? reachedTarget ? \"#b1b1b1\" : \"#848383\" : \"#555454\",\n                                    borderRadius: \"0.2em\",\n                                    marginBottom: \"1px\",\n                                    padding: \"2px\",\n                                    display: \"block\",\n                                    whiteSpace: \"nowrap\",\n                                }}>\n                                    {`${letter(index)} ${proximity.toFixed(3)} ${name}${tosses}`}\n                                    &nbsp;\n                                    {mutationSymbols}{reachedSymbol}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport function EvolutionInfo({snapshot}: { snapshot: IEvolutionSnapshot }): JSX.Element {\n    const {cyclePattern, cycleIndex, cycle} = snapshot\n    return (\n        <div className=\"p-1 my-2 w-100 text-center\">\n            {cyclePattern.map((cycles, index) => (\n                <span\n                    key={`cycle-${index}`}\n                    style={{\n                        color: \"black\",\n                        backgroundColor: index === cycleIndex ? \"#24f00f\" : \"#cbc7c7\",\n                        margin: \"0.1em\",\n                        padding: \"0.2em\",\n                        borderRadius: \"0.3em\",\n                        borderStyle: \"solid\",\n                        borderWidth: \"1px\",\n                    }}\n                >{index === cycleIndex && cycle < cyclePattern[cycleIndex] ? `${cycle + 1}/${cycles}` : cycles}</span>\n            ))}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Color, Geometry, Vector3 } from \"three\"\n\nimport { FORWARD, RIGHT } from \"../fabric/eig-util\"\n\nexport const PATCH_SURROUNDING_SHAPE = [\n    // center\n    {x: 0, y: 0},\n    // layer 1\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n    // layer 2\n    {x: 4, y: 0}, // 7\n    {x: 3, y: -1},\n    {x: 2, y: -2},\n    {x: 0, y: -2},\n    {x: -2, y: -2},\n    {x: -3, y: -1},\n    {x: -4, y: 0},\n    {x: -3, y: 1},\n    {x: -2, y: 2},\n    {x: 0, y: 2},\n    {x: 2, y: 2},\n    {x: 3, y: 1}, // 18\n    // layer 3\n    {x: 6, y: 0}, // 19\n    {x: 5, y: -1},\n    {x: 4, y: -2},\n    {x: 3, y: -3},\n    {x: 1, y: -3},\n    {x: -1, y: -3},\n    {x: -3, y: -3},\n    {x: -4, y: -2},\n    {x: -5, y: -1},\n    {x: -6, y: 0},\n    {x: -5, y: 1},\n    {x: -4, y: 2},\n    {x: -3, y: 3},\n    {x: -1, y: 3},\n    {x: 1, y: 3},\n    {x: 3, y: 3},\n    {x: 4, y: 2},\n    {x: 5, y: 1}, // 36\n]\n\nexport const ADJACENT = [\n    {x: 2, y: 0}, // 1\n    {x: 1, y: -1},\n    {x: -1, y: -1},\n    {x: -2, y: 0},\n    {x: -1, y: 1},\n    {x: 1, y: 1}, // 6\n]\n\nconst PATCH_DISTANCE = 25\n\nexport const SIN_60 = Math.sin(60 * Math.PI / 180)\nexport const SURFACE_SCALE = PATCH_DISTANCE / 2 / SIN_60\nexport const SCALE_X = SURFACE_SCALE * SIN_60\nexport const SCALE_Y = SURFACE_SCALE * 1.5\n\nexport const HEXAGON_POINTS = [\n    new Vector3(0, 0, -SURFACE_SCALE),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n    new Vector3(-SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(0, 0, SURFACE_SCALE),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, SURFACE_SCALE / 2),\n    new Vector3(SIN_60 * SURFACE_SCALE, 0, -SURFACE_SCALE / 2),\n]\nexport const FAUNA_PATCH_COLOR = new Color(\"#4b4b4b\")\nexport const FLORA_PATCH_COLOR = new Color(\"#59431e\")\nexport const SIX = 6\nexport const UP = new Vector3(0, 1, 0)\nexport const NORMAL_SPREAD = 0.9 / PATCH_DISTANCE\nexport const SUN_POSITION = new Vector3(0, 500, 0)\nexport const HEMISPHERE_COLOR = new Color(\"#fff1d1\")\n\nfunction arrowVertices(): Vector3[] {\n    const v = () => new Vector3(0, 0, 0)\n    const ARROW_LENGTH = 3\n    const ARROW_WIDTH = 0.2\n    const ARROW_TIP_LENGTH_FACTOR = 1.3\n    const ARROW_TIP_WIDTH_FACTOR = 1.5\n    const origin = v()\n    const arrowToLx = v().addScaledVector(RIGHT, -ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToL = v().addScaledVector(RIGHT, -ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToR = v().addScaledVector(RIGHT, ARROW_WIDTH).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowToRx = v().addScaledVector(RIGHT, ARROW_WIDTH * ARROW_TIP_WIDTH_FACTOR).addScaledVector(FORWARD, ARROW_LENGTH)\n    const arrowTip = v().addScaledVector(FORWARD, ARROW_LENGTH * ARROW_TIP_LENGTH_FACTOR)\n    return [\n        origin, arrowToL, origin, arrowToR,\n        arrowToRx, arrowTip, arrowToLx, arrowTip,\n        arrowToRx, arrowToR, arrowToLx, arrowToL,\n    ]\n}\n\nfunction arrowGeometry(): Geometry {\n    const geom = new Geometry()\n    geom.vertices = arrowVertices()\n    return geom\n}\n\nexport const ARROW_GEOMETRY = arrowGeometry()\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { Genome } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ADJACENT, PATCH_SURROUNDING_SHAPE } from \"./island-geometry\"\nimport { Patch } from \"./patch\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport interface ICoords {\n    x: number\n    y: number\n}\n\n\nexport enum PatchCharacter {\n    FaunaPatch = \"Fauna\",\n    FloraPatch = \"Flora\",\n}\n\nexport interface ISource {\n    newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi\n    newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree\n}\n\nfunction equals(a: ICoords, b: ICoords): boolean {\n    return a.x === b.x && a.y === b.y\n}\n\nfunction plus(a: ICoords, b: ICoords): ICoords {\n    return {x: a.x + b.x, y: a.y + b.y}\n}\n\nexport class Island {\n    public patches: Patch[] = []\n\n    private _seed: number\n\n    constructor(public readonly source: ISource, public readonly name: string, seed: number) {\n        this._seed = seed % 2147483647\n        this.fill()\n    }\n\n    public get midpoint(): Vector3 {\n        return this.patches\n            .reduce((sum: Vector3, patch: Patch) => sum.add(patch.center), new Vector3())\n            .multiplyScalar(1 / this.patches.length)\n    }\n\n    public findPatch(coords: ICoords): Patch | undefined {\n        return this.patches.find(p => equals(p.coords, coords))\n    }\n\n    // ================================================================================================\n\n    private fill(): void {\n        this.createSurroundedPatch({x: 0, y: 0})\n        // todo: random walk/tree?\n        this.patches.forEach(patch => {\n            const coords = patch.coords\n            ADJACENT.forEach(({x, y}) => {\n                patch.adjacent.push(this.findPatch({x: x + coords.x, y: y + coords.y}))\n            })\n        })\n    }\n\n    private createSurroundedPatch(coords: ICoords): Patch {\n        const patch = this.getOrCreatePatch(coords)\n        PATCH_SURROUNDING_SHAPE.map(c => this.getOrCreatePatch(plus(c, coords)))\n        return patch\n    }\n\n    private getOrCreatePatch(coords: ICoords): Patch {\n        const existing = this.findPatch(coords)\n        if (existing) {\n            return existing\n        }\n        const surface = (this.next() > 0.5) ? PatchCharacter.FaunaPatch : PatchCharacter.FloraPatch\n        const patch = new Patch(this, coords, surface)\n        this.patches.push(patch)\n        return patch\n    }\n\n    private next(): number {\n        this._seed = this._seed * 16807 % 2147483647\n        return (this._seed - 1) / 2147483646\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Vector3 } from \"three\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\n\nimport { emptyGenome, fromGeneData, IGeneData } from \"./genome\"\nimport { Gotchi } from \"./gotchi\"\nimport { ICoords, Island, PatchCharacter } from \"./island\"\nimport { HEXAGON_POINTS, NORMAL_SPREAD, SCALE_X, SCALE_Y, SIX, UP } from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nexport class Patch {\n    public gotchi?: Gotchi\n    public satoshiTree?: SatoshiTree\n    public readonly center: Vector3\n    public readonly name: string\n    public adjacent: (Patch | undefined)[] = []\n    public rotation = 0\n\n    constructor(\n        public readonly island: Island,\n        public readonly coords: ICoords,\n        public patchCharacter: PatchCharacter,\n    ) {\n        this.center = new Vector3(coords.x * SCALE_X, 0, coords.y * SCALE_Y)\n        this.name = `(${coords.x},${coords.y})`\n    }\n\n    public get onClick(): () => void {\n        return () => {\n            if (this.satoshiTree) {\n                this.satoshiTree.removeRandomInterval()\n                console.log(\"remove\", this.name)\n            } else {\n                this.rotation = (this.rotation + 1) % SIX\n                console.log(\"rotate\", this.name, this.rotation)\n            }\n        }\n    }\n\n    public get storedGenes(): IGeneData[][] {\n        const item = localStorage.getItem(this.name)\n        return item ? JSON.parse(item) : [emptyGenome().geneData]\n    }\n\n    public set storedGenes(geneData: IGeneData[][]) {\n        localStorage.setItem(this.name, JSON.stringify(geneData))\n        // console.log(`Saving genome to ${this.name}`, geneData)\n    }\n\n    public createGotchi(instance: FabricInstance): Gotchi | undefined {\n        const gotchi = this.island.source.newGotchi(this, instance, fromGeneData(this.storedGenes[0]))\n        this.gotchi = gotchi\n        return gotchi\n    }\n\n    public createNewSatoshiTree(instance: FabricInstance): SatoshiTree {\n        const satoshiTree = this.island.source.newSatoshiTree(this, instance)\n        this.satoshiTree = satoshiTree\n        return satoshiTree\n    }\n\n    public get positionArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = (point: Vector3) => {\n            const {x, y, z} = new Vector3().copy(this.center).addScaledVector(point, 0.99)\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(new Vector3())\n            add(HEXAGON_POINTS[a])\n            add(HEXAGON_POINTS[b])\n        }\n        return array\n    }\n\n    public get normalArray(): Float32Array {\n        const array = new Float32Array(SIX * 3 * 3)\n        let index = 0\n        const add = ({x, y, z}: Vector3) => {\n            array[index++] = x\n            array[index++] = y\n            array[index++] = z\n        }\n        for (let a = 0; a < SIX; a++) {\n            const b = (a + 1) % SIX\n            add(UP)\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[a], NORMAL_SPREAD).normalize())\n            add(new Vector3().add(UP).addScaledVector(HEXAGON_POINTS[b], NORMAL_SPREAD).normalize())\n        }\n        return array\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaBaby, FaDna, FaEye, FaEyeSlash, FaRunning, FaSignOutAlt, FaYinYang } from \"react-icons/all\"\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { PerspectiveCamera } from \"three\"\n\nimport { stageName, switchToVersion, Version } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { Life } from \"../fabric/life\"\n\nimport { EVO_PARAMETERS, Evolution, EvolutionPhase, IEvolutionSnapshot } from \"./evolution\"\nimport { EvolutionInfo, EvolutionStats } from \"./evolution-stats\"\nimport { Direction, Gotchi } from \"./gotchi\"\nimport { Island, PatchCharacter } from \"./island\"\nimport { IslandView } from \"./island-view\"\nimport { Patch } from \"./patch\"\n\nexport enum Happening {\n    Developing,\n    Resting,\n    Running,\n    Evolving,\n}\n\nexport function GotchiView({island, homePatch, createInstance}: {\n    island: Island,\n    homePatch: Patch,\n    createInstance: CreateInstance,\n}): JSX.Element {\n    // const [cyclePattern, setCyclePattern] = useState<number[]>(EVO_PARAMETERS.cycle)\n    const [satoshiTrees] = useState(() => island.patches\n        .filter(patch => patch.patchCharacter === PatchCharacter.FloraPatch)\n        .map(patch => patch.createNewSatoshiTree(createInstance(true))))\n    const [gotchi, setGotchi] = useState(() => homePatch.createGotchi(createInstance(false)))\n    const [happening, setHappening] = useState(Happening.Developing)\n    const [evoDetails, setEvoDetails] = useState(true)\n    const [snapshots, setSnapshots] = useState<IEvolutionSnapshot[]>([])\n    const [evolutionCountdown, setEvolutionCountdown] = useState(-1)\n    const [evolution, setEvolution] = useState<Evolution | undefined>(undefined)\n    const [phase, setPhase] = useState(EvolutionPhase.WinnersRun)\n    const [life, updateLife] = useState<Life | undefined>(undefined)\n\n    useEffect(() => {\n        if (!gotchi || !gotchi.embryo) {\n            updateLife(undefined)\n            return\n        }\n        setHappening(Happening.Developing)\n        const sub = gotchi.embryo.life$.subscribe((latestLife) => {\n            if (latestLife.stage === Stage.Pretenst) {\n                setHappening(Happening.Resting)\n            }\n            updateLife(latestLife)\n        })\n        return () => sub.unsubscribe()\n    }, [gotchi])\n\n    useEffect(() => {\n        if (!evolution) {\n            return\n        }\n        const sub = evolution.snapshotsSubject.subscribe(setSnapshots)\n        return () => sub.unsubscribe()\n    }, [evolution])\n\n    const evolveWithPattern = (toEvolve: Gotchi, pattern: number[]) => {\n        if (evolution) {\n            setEvolution(evolution.withReducedCyclePattern)\n            // todo: free up current evolution?\n        } else {\n            setEvolution(new Evolution(toEvolve, createInstance, false, pattern))\n        }\n        setHappening(Happening.Evolving)\n    }\n\n    const countdownToEvolution = (countdown: number) => {\n        setEvolutionCountdown(countdown)\n        if (gotchi && countdown === 0) {\n            evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n        }\n    }\n\n    const stopEvolution = (nextEvolution: Evolution) => {\n        // todo: free up current evolution?\n        setEvolution(nextEvolution)\n        if (!nextEvolution) {\n            setGotchi(homePatch.createGotchi(createInstance(false)))\n            setHappening(Happening.Developing)\n        }\n    }\n\n    return (\n        <div id=\"view-container\" style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            height: \"100%\",\n        }}>\n            <Canvas key={island.name} style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                <IslandView\n                    island={island}\n                    satoshiTrees={satoshiTrees}\n                    happening={happening}\n                    gotchi={gotchi}\n                    evolution={evolution}\n                    evolutionPhase={evolutionPhase => {\n                        if (evolutionPhase !== phase) {\n                            setPhase(evolutionPhase)\n                        }\n                    }}\n                    countdownToEvolution={countdownToEvolution}\n                    stopEvolution={stopEvolution}\n                />\n            </Canvas>\n            {!gotchi ? <h1>no gotchi</h1> : (happening === Happening.Developing) ? (\n                !life ? <h1>no life</h1> : (\n                    <div id=\"bottom-middle\">\n                        <div className=\"py-2 px-3 text-center\">\n                            <FaBaby/> {stageName(life.stage)}\n                        </div>\n                    </div>\n                )\n            ) : (\n                <ControlButtons\n                    gotchi={gotchi}\n                    happening={happening}\n                    evolutionCountdown={evolutionCountdown}\n                    evoDetails={evoDetails}\n                    toRunning={() => {\n                        setHappening(Happening.Running)\n                        gotchi.autopilot = true\n                    }}\n                    toEvolving={() => {\n                        setHappening(Happening.Evolving)\n                        setEvolutionCountdown(-1)\n                        evolveWithPattern(gotchi, EVO_PARAMETERS.cyclePattern)\n                    }}\n                    toRebirth={() => {\n                        setGotchi(homePatch.createGotchi(createInstance(false)))\n                        setHappening(Happening.Developing)\n                    }}\n                    toRest={() => {\n                        setHappening(Happening.Resting)\n                        gotchi.direction = Direction.Rest\n                    }}\n                    toggleEvoDetails={() => setEvoDetails(!evoDetails)}\n                />\n            )}\n            {!evolution ? undefined : (\n                <>\n                    <div id=\"top-middle\">\n                        {snapshots.length <= 0 || evoDetails ? (\n                            <strong className=\"p-2\">{phase}</strong>\n                        ) : (\n                            <EvolutionInfo snapshot={snapshots[snapshots.length - 1]}/>\n                        )}\n                    </div>\n                    <EvolutionStatsView\n                        happening={happening}\n                        evolution={evolution}\n                        snapshots={snapshots}\n                        evoDetails={evoDetails}\n                    />\n                </>\n            )}\n            <div id=\"bottom-right\">\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nfunction ControlButtons({gotchi, happening, evoDetails, evolutionCountdown, toRunning, toRest, toEvolving, toRebirth, toggleEvoDetails}: {\n    gotchi?: Gotchi,\n    happening: Happening,\n    evolutionCountdown: number,\n    evoDetails: boolean,\n    toRunning: () => void,\n    toEvolving: () => void,\n    toRebirth: () => void,\n    toRest: () => void,\n    toggleEvoDetails: () => void,\n}): JSX.Element {\n    const createContent = () => {\n        switch (happening) {\n            case Happening.Developing:\n                return <h1>developing</h1>\n            case Happening.Resting:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRunning}>\n                            <FaRunning/>\n                        </Button>\n                        <Button color=\"success\" onClick={toEvolving}>\n                            <FaDna/> {evolutionCountdown >= 0 ? evolutionCountdown : \"\"}\n                        </Button>\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Running:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRest}>\n                            <FaYinYang/> Rest\n                        </Button>\n                    </ButtonGroup>\n                )\n            case Happening.Evolving:\n                return !gotchi ? undefined : (\n                    <ButtonGroup className=\"w-100\">\n                        <Button color=\"success\" onClick={toRebirth}>\n                            <FaBaby/>\n                        </Button>\n                        <Button color={evoDetails ? \"success\" : \"secondary\"} onClick={toggleEvoDetails}>\n                            <FaDna/>&nbsp;{evoDetails ? <FaEye/> : <FaEyeSlash/>}\n                        </Button>\n                    </ButtonGroup>\n                )\n        }\n    }\n    const content = createContent()\n    if (!content) {\n        return <h1>{happening}</h1>\n    }\n    return (\n        <div id=\"bottom-middle\">{content}</div>\n    )\n}\n\nfunction EvolutionStatsView({happening, evolution, snapshots, evoDetails}: {\n    happening: Happening,\n    evolution: Evolution,\n    snapshots: IEvolutionSnapshot[],\n    evoDetails: boolean,\n}): JSX.Element {\n    switch (happening) {\n        case Happening.Developing:\n        case Happening.Running:\n        case Happening.Resting:\n            return <div/>\n        case Happening.Evolving:\n            return !(evolution && snapshots.length > 0 && evoDetails) ? <div/> : (\n                <div id=\"evolution-stats\">\n                    <EvolutionStats snapshots={snapshots}/>\n                </div>\n            )\n    }\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(10, 10, 10)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { DoubleSide, PerspectiveCamera, Vector3 } from \"three\"\n\nimport { SPACE_RADIUS, SPACE_SCALE } from \"../pretenst\"\nimport { Orbit } from \"../view/orbit\"\n\nimport { Evolution, EvolutionPhase } from \"./evolution\"\nimport { Gotchi } from \"./gotchi\"\nimport { Happening } from \"./gotchi-view\"\nimport { Island, PatchCharacter } from \"./island\"\nimport {\n    ARROW_GEOMETRY,\n    FAUNA_PATCH_COLOR,\n    FLORA_PATCH_COLOR,\n    HEMISPHERE_COLOR,\n    SUN_POSITION,\n} from \"./island-geometry\"\nimport { SatoshiTree } from \"./satoshi-tree\"\n\nconst TOWARDS_POSITION = 0.003\nconst TOWARDS_TARGET = 0.01\nconst TARGET_HEIGHT = 3\nconst TOWARDS_HEIGHT = 0.01\nconst SECONDS_UNTIL_EVOLUTION = 20\n\nexport function IslandView({island, satoshiTrees, happening, gotchi, evolution, evolutionPhase, countdownToEvolution, stopEvolution}: {\n    island: Island,\n    satoshiTrees: SatoshiTree[],\n    happening: Happening,\n    gotchi?: Gotchi,\n    evolution?: Evolution,\n    evolutionPhase: (phase: EvolutionPhase) => void,\n    countdownToEvolution: (countdown: number) => void,\n    stopEvolution: (nextEvolution?: Evolution) => void,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [happeningChanged, updateHappeningChanged] = useState(Date.now())\n    const [now, updateNow] = useState(Date.now())\n    const midpoint = new Vector3()\n\n    function developing(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function resting(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 10\n    }\n\n    function running(g: Gotchi): number {\n        g.iterate(midpoint)\n        return 6\n    }\n\n    function evolving(e: Evolution): number {\n        switch (e.iterate()) {\n            case EvolutionPhase.EvolutionDone:\n                console.log(\"Evolution DONE\")\n                stopEvolution()\n                break\n            case EvolutionPhase.EvolutionHarder:\n                console.log(\"Evolution advance...\")\n                stopEvolution(e.withReducedCyclePattern)\n                break\n        }\n        e.getMidpoint(midpoint)\n        return 15\n    }\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        const approachDistance = (distance: number) => {\n            const position = control.object.position\n            const positionToTarget = new Vector3().subVectors(position, control.target)\n            const deltaDistance = distance - positionToTarget.length()\n            positionToTarget.normalize()\n            position.add(positionToTarget.multiplyScalar(deltaDistance * TOWARDS_POSITION))\n            position.y += (TARGET_HEIGHT - position.y) * TOWARDS_HEIGHT\n        }\n        switch (happening) {\n            case Happening.Developing:\n                if (gotchi) {\n                    approachDistance(developing(gotchi))\n                }\n                break\n            case Happening.Resting:\n                if (gotchi) {\n                    approachDistance(resting(gotchi))\n                }\n                break\n            case Happening.Running:\n                if (gotchi) {\n                    approachDistance(running(gotchi))\n                }\n                break\n            case Happening.Evolving:\n                if (evolution) {\n                    approachDistance(evolving(evolution))\n                    evolutionPhase(evolution.phase)\n                }\n                break\n        }\n        control.target.add(new Vector3().subVectors(midpoint, control.target).multiplyScalar(TOWARDS_TARGET))\n        control.update()\n        const treeNumber = Math.floor(Math.random() * satoshiTrees.length)\n        satoshiTrees[treeNumber].iterate()\n        const wasSeconds = Math.floor((now - happeningChanged) / 1000)\n        const time = Date.now()\n        updateNow(time)\n        const isSeconds = Math.floor((time - happeningChanged) / 1000)\n        if (happening === Happening.Resting && wasSeconds < isSeconds) {\n            countdownToEvolution(SECONDS_UNTIL_EVOLUTION - isSeconds)\n        }\n    })\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 0.1\n        orb.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        orb.zoomSpeed = 0.5\n        orb.enableZoom = true\n        orb.target.set(midpoint.x, midpoint.y, midpoint.z)\n        orb.update()\n    }, [])\n\n    useEffect(() => {\n        orbit.current.autoRotate = happening === Happening.Evolving\n        updateHappeningChanged(Date.now())\n        updateNow(Date.now())\n    }, [happening])\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {(evolution && happening === Happening.Evolving) ? (\n                    <EvolutionScene evolution={evolution}/>\n                ) : (gotchi ? (\n                    <GotchiComponent gotchi={gotchi} faces={true}/>\n                ) : undefined)}\n                {island.patches.map(patch => {\n                    const position = patch.positionArray\n                    const normal = patch.normalArray\n                    return (\n                        <mesh key={`patch-${patch.name}`} onClick={patch.onClick}>\n                            <meshPhongMaterial\n                                attach=\"material\"\n                                color={patch.patchCharacter === PatchCharacter.FaunaPatch ? FAUNA_PATCH_COLOR : FLORA_PATCH_COLOR}/>\n                            <bufferGeometry attach=\"geometry\">\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"position\"]}\n                                    array={position}\n                                    count={position.length / 3}\n                                    itemSize={3}\n                                />\n                                <bufferAttribute\n                                    attachObject={[\"attributes\", \"normal\"]}\n                                    array={normal}\n                                    count={normal.length / 3}\n                                    itemSize={3}\n                                />\n                            </bufferGeometry>\n                        </mesh>\n                    )\n                })}\n                {satoshiTrees.map(satoshiTree => (\n                    <SatoshiTreeComponent key={`tree-${satoshiTree.name}`} satoshiTree={satoshiTree}/>\n                ))}\n                <pointLight distance={1000} decay={0.1} position={SUN_POSITION}/>\n                <hemisphereLight name=\"Hemi\" color={HEMISPHERE_COLOR}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction EvolutionScene({evolution}: { evolution: Evolution }): JSX.Element {\n    const height = 6\n    const midpoint = new Vector3()\n    evolution.getMidpoint(midpoint)\n    const target = evolution.target\n    return (\n        <group>\n            {evolution.winners.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index}`} gotchi={gotchi} faces={false}/>\n            ))}\n            {!evolution.challengersVisible ? undefined : evolution.challengers.map(({gotchi}, index) => (\n                <GotchiComponent key={`evolving-${index + evolution.winners.length}`} gotchi={gotchi} faces={false}/>\n            ))}\n            <lineSegments>\n                <bufferGeometry attach=\"geometry\">\n                    <bufferAttribute\n                        attachObject={[\"attributes\", \"position\"]}\n                        array={new Float32Array([\n                            midpoint.x, 0, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            midpoint.x, height, midpoint.z,\n                            target.x, height, target.z,\n                            target.x, height, target.z,\n                            target.x, 0, target.z,\n                        ])}\n                        count={6}\n                        itemSize={3}\n                        onUpdate={self => self.needsUpdate = true}\n                    />\n                </bufferGeometry>\n                <lineBasicMaterial attach=\"material\" color={\"#cace02\"}/>\n            </lineSegments>\n        </group>\n    )\n}\n\nfunction GotchiComponent({gotchi, faces}: {\n    gotchi: Gotchi,\n    faces: boolean,\n}): JSX.Element {\n    const {topJointLocation, target, state, showDirection} = gotchi\n    const floatView = state.instance.floatView\n    return (\n        <group>\n            <lineSegments geometry={floatView.lineGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                <lineBasicMaterial attach=\"material\" vertexColors={true}/>\n            </lineSegments>\n            {!faces ? undefined : (\n                <mesh geometry={floatView.faceGeometry} onUpdate={self => self.geometry.computeBoundingSphere()}>\n                    <meshPhongMaterial\n                        attach=\"material\"\n                        transparent={true}\n                        side={DoubleSide}\n                        opacity={0.6}\n                        color=\"white\"/>\n                </mesh>\n            )}\n            {!showDirection ? undefined : (\n                <group>\n                    <lineSegments>\n                        <bufferGeometry attach=\"geometry\">\n                            <bufferAttribute\n                                attachObject={[\"attributes\", \"position\"]}\n                                array={new Float32Array([\n                                    topJointLocation.x, topJointLocation.y, topJointLocation.z,\n                                    target.x, topJointLocation.y, target.z,\n                                ])}\n                                count={2}\n                                itemSize={3}\n                                onUpdate={self => self.needsUpdate = true}\n                            />\n                        </bufferGeometry>\n                        <lineBasicMaterial attach=\"material\" color={\"#cecb05\"}/>\n                    </lineSegments>\n                    <lineSegments\n                        geometry={ARROW_GEOMETRY}\n                        quaternion={gotchi.directionQuaternion}\n                        position={gotchi.topJointLocation}\n                    >\n                        <lineBasicMaterial attach=\"material\" color={\"#05cec0\"}/>\n                    </lineSegments>\n                </group>\n            )}\n        </group>\n    )\n}\n\nfunction SatoshiTreeComponent({satoshiTree}: { satoshiTree: SatoshiTree }): JSX.Element {\n    const floatView = satoshiTree.instance.floatView\n    return (\n        <mesh geometry={floatView.faceGeometry}>\n            <meshPhongMaterial attach=\"material\" side={DoubleSide} color=\"green\"/>\n        </mesh>\n    )\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\n\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval } from \"../fabric/tensegrity-types\"\n\nexport class SatoshiTree {\n    private shapingTime = 60\n    private deadInterval?: IInterval\n\n    constructor(public readonly name: string, private tensegrity: Tensegrity) {\n    }\n\n    public get instance(): FabricInstance {\n        return this.tensegrity.instance\n    }\n\n    public removeRandomInterval(): void {\n        if (!this.deadInterval && this.tensegrity.life$.getValue().stage === Stage.Pretenst) {\n            this.deadInterval = this.tensegrity.intervals[Math.floor(Math.random() * this.tensegrity.intervals.length)]\n        }\n    }\n\n    public iterate(): boolean {\n        const stage = this.tensegrity.life$.getValue().stage\n        const nextStage = this.tensegrity.iterate()\n        if (stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n            this.tensegrity.transition = {stage: Stage.Pretenst}\n        } else if (nextStage !== undefined && nextStage !== stage && stage !== Stage.Pretensing) {\n            this.tensegrity.transition = {stage: nextStage}\n        }\n        if (this.deadInterval) {\n            this.tensegrity.removeInterval(this.deadInterval)\n            this.deadInterval = undefined\n        }\n        switch (nextStage) {\n            case Stage.Shaping:\n                if (this.shapingTime <= 0) {\n                    const instance = this.instance\n                    instance.fabric.adopt_lengths()\n                    instance.iterate(Stage.Slack)\n                    instance.iterate(Stage.Pretensing)\n                } else {\n                    this.shapingTime--\n                    // console.log(\"shaping\", this.shapingTime)\n                }\n                return false\n            case Stage.Pretensing:\n            case Stage.Pretenst:\n                return true\n            default:\n                return false\n        }\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport default function register(): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\")\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\")\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport { Vector3 } from \"three\"\n\nimport { jointDistance } from \"../fabric/tensegrity-types\"\n\nimport { IHub, TensegritySphere } from \"./tensegrity-sphere\"\n\nexport class SphereBuilder {\n    constructor(private sphere: TensegritySphere) {\n    }\n\n    public build(): TensegritySphere {\n        VERTEX.forEach(loc => this.sphere.hubAt(new Vector3(loc[0], loc[1], loc[2])))\n        switch (this.edgeVertexCount) {\n            case 0:\n                this.build30Edges()\n                break\n            case 1:\n                const sixty = this.build60Edges()\n                this.buildSmallFaces(sixty)\n                break\n            default:\n                const many = this.buildEdges()\n                this.buildFaces(many)\n                break\n        }\n        const push = this.sphere.hubs[0].spokes[0].push\n        const segmentLength = jointDistance(push.alpha, push.omega) * 0.28\n        this.sphere.hubs.forEach(hub => hub.spokes.forEach(spoke => this.sphere.pullsForSpoke(hub, spoke, segmentLength)))\n        this.sphere.fabric.set_altitude(this.sphere.location.y)\n        return this.sphere\n    }\n\n    private push(hubA: IHub, hubB: IHub, withMiddle?: boolean): { hubA: IHub, hubB: IHub, hubMid?: IHub } {\n        if (withMiddle) {\n            const middleLocation = new Vector3().copy(hubA.location).lerp(hubB.location, 0.5)\n            const hubMid = this.sphere.hubAt(middleLocation)\n            this.sphere.pushBetween(hubA, hubMid)\n            this.sphere.pushBetween(hubMid, hubB)\n            return {hubA, hubB, hubMid}\n        } else {\n            this.sphere.pushBetween(hubA, hubB)\n            return {hubA, hubB}\n        }\n    }\n\n    private build60Edges(): IHub[] {\n        const edgeHubs: IHub[] = []\n        EDGE.forEach(edge => {\n            const {hubMid} = this.push(this.vertices[edge[0]], this.vertices[edge[1]], true)\n            if (hubMid) {\n                edgeHubs.push(hubMid)\n            }\n        })\n        return edgeHubs\n    }\n\n    private build30Edges(): void {\n        EDGE.forEach(edge => this.push(this.vertices[edge[0]], this.vertices[edge[1]]))\n    }\n\n    private buildEdges(): IHub[][] {\n        const edgePoints: IHub[][] = []\n        EDGE.forEach(edge => {\n            const edgeVertexRows: IHub[] = []\n            edgePoints.push(edgeVertexRows)\n            let vertex: IHub | undefined\n            let previousVertex: IHub | undefined\n            for (let walkBeads = 0; walkBeads < this.edgeVertexCount; walkBeads++) {\n                previousVertex = vertex\n                const v0 = this.vertices[edge[0]]\n                const v1 = this.vertices[edge[1]]\n                const loc0 = v0.location\n                const loc1 = v1.location\n                const spot = new Vector3().lerpVectors(loc0, loc1, (walkBeads + 1) / this.sphere.frequency)\n                vertex = this.sphere.hubAt(spot)\n                edgeVertexRows.push(vertex)\n                if (previousVertex) {\n                    this.push(vertex, previousVertex)\n                    if (walkBeads === this.edgeVertexCount - 1) {\n                        this.push(vertex, v1)\n                    }\n                } else {\n                    this.push(vertex, v0)\n                }\n            }\n        })\n        PENTA.forEach(penta => {\n            for (let walk = 0; walk < penta.length; walk++) {\n                const next = (walk + 1) % penta.length\n                const walkBead = penta[walk][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const nextBead = penta[next][1] === 1 ? 0 : this.edgeVertexCount - 1\n                const currentVertex = edgePoints[penta[walk][0]][walkBead]\n                const nextVertex = edgePoints[penta[next][0]][nextBead]\n                this.push(currentVertex, nextVertex)\n            }\n        })\n        return edgePoints\n    }\n\n    private buildSmallFaces(vertices: IHub[]): void {\n        FACE_EDGE.forEach(faceEdge => {\n            const side0 = vertices[Math.abs(faceEdge[0])]\n            const side1 = vertices[Math.abs(faceEdge[1])]\n            const side2 = vertices[Math.abs(faceEdge[2])]\n            this.push(side0, side1)\n            this.push(side1, side2)\n            this.push(side2, side0)\n        })\n    }\n\n    private buildFaces(vertices: IHub[][]): void {\n        const v: IHub[][] = []\n        for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n            v.push([])\n        }\n        const vectorA = new Vector3()\n        const vectorB = new Vector3()\n        for (let walkF = 0; walkF < FACE.length; walkF++) {\n            const v0 = this.vertices[FACE[walkF][0]]\n            const origin = v0.location\n            for (let walkA = 1; walkA < this.edgeVertexCount; walkA++) {\n                const v1 = this.vertices[FACE[walkF][1]]\n                vectorA.lerpVectors(origin, v1.location, walkA / this.sphere.frequency)\n                vectorA.sub(origin)\n                v[walkA - 1] = []\n                for (let walkB = 1; walkB < this.edgeVertexCount - walkA + 1; walkB++) {\n                    const v2 = this.vertices[FACE[walkF][2]]\n                    vectorB.lerpVectors(origin, v2.location, walkB / this.sphere.frequency)\n                    vectorB.sub(origin)\n                    const spot = new Vector3().copy(origin)\n                    spot.add(vectorA)\n                    spot.add(vectorB)\n                    v[walkA - 1].push(this.sphere.hubAt(spot))\n                }\n            }\n            for (let walkRow = 0; walkRow < v.length; walkRow++) {\n                for (let walk = 0; walk < v[walkRow].length; walk++) {\n                    if (walk < v[walkRow].length - 1) {\n                        this.push(v[walkRow][walk], v[walkRow][walk + 1])\n                    }\n                    if (walkRow > 0) {\n                        const vert = v[walkRow][walk]\n                        this.push(vert, v[walkRow - 1][walk])\n                        this.push(vert, v[walkRow - 1][walk + 1])\n                    }\n                }\n            }\n            const vv0: IHub[] = []\n            const vv1: IHub[] = []\n            const vv2: IHub[] = []\n            for (let walk = 0; walk < this.edgeVertexCount - 1; walk++) {\n                const antiWalk = v.length - walk - 1\n                vv0.push(v[FACE_EDGE[walkF][0] >= 0 ? walk : antiWalk][0])\n                const ee = v[(FACE_EDGE[walkF][1] < 0) ? walk : antiWalk]\n                vv1.push(ee[ee.length - 1])\n                vv2.push(v[0][(FACE_EDGE[walkF][2] < 0) ? walk : antiWalk])\n            }\n            const vs: IHub[] [] = []\n            vs.push(vv0)\n            vs.push(vv1)\n            vs.push(vv2)\n            for (let walkSide = 0; walkSide < vs.length; walkSide++) {\n                const edge = vertices[Math.abs(FACE_EDGE[walkF][walkSide])]\n                for (let walk = 0; walk < v.length; walk++) {\n                    const vsVertex = vs[walkSide][walk]\n                    this.push(vsVertex, edge[walk])\n                    this.push(vsVertex, edge[walk + 1])\n                }\n            }\n        }\n    }\n\n    private get vertices(): IHub[] {\n        return this.sphere.hubs\n    }\n\n    private get edgeVertexCount(): number {\n        return this.sphere.frequency - 1\n    }\n}\n\nconst NUL = 0.0\nconst ONE = 0.5257311121191336\nconst PHI = 0.8506508083520400\n\nconst VERTEX = [\n    [+ONE, NUL, +PHI], [+ONE, NUL, -PHI],\n    [+PHI, +ONE, NUL], [-PHI, +ONE, NUL],\n    [NUL, +PHI, +ONE], [NUL, -PHI, +ONE],\n    [-ONE, NUL, -PHI], [-ONE, NUL, +PHI],\n    [-PHI, -ONE, NUL], [+PHI, -ONE, NUL],\n    [NUL, -PHI, -ONE], [NUL, +PHI, -ONE],\n]\n\nconst EDGE = [\n    [0, 2], [0, 4], [0, 5], [0, 7], [0, 9],\n    [1, 10], [1, 11], [1, 2], [1, 6], [1, 9],\n    [2, 11], [2, 4], [2, 9], [3, 11], [3, 4],\n    [3, 6], [3, 7], [3, 8], [4, 11], [4, 7],\n    [5, 10], [5, 7], [5, 8], [5, 9], [6, 10],\n    [6, 11], [6, 8], [7, 8], [8, 10], [9, 10],\n]\n\nconst FACE = [\n    [0, 2, 4], [0, 2, 9], [0, 4, 7], [0, 5, 7], [0, 5, 9],\n    [1, 2, 11], [1, 2, 9], [1, 6, 10], [1, 6, 11], [1, 9, 10],\n    [2, 4, 11], [3, 4, 11], [3, 4, 7], [3, 6, 11], [3, 6, 8],\n    [3, 7, 8], [5, 7, 8], [5, 8, 10], [5, 9, 10], [6, 8, 10],\n]\n\nconst FACE_EDGE = [\n    [0, 11, -1], [0, 12, -4], [1, 19, -3], [2, 21, -3], [2, 23, -4],\n    [7, 10, -6], [7, 12, -9], [8, 24, -5], [8, 25, -6], [9, 29, -5],\n    [11, 18, -10], [14, 18, -13], [14, 19, -16], [15, 25, -13], [15, 26, -17],\n    [16, 27, -17], [21, 27, -22], [22, 28, -20], [23, 29, -20], [26, 28, -24],\n]\n\nconst PENTA = [\n    [[0, 1], [1, 1], [3, 1], [2, 1], [4, 1]],\n    [[7, 1], [6, 1], [8, 1], [5, 1], [9, 1]],\n    [[10, 1], [11, 1], [0, -1], [12, 1], [7, -1]],\n    [[14, 1], [13, 1], [15, 1], [17, 1], [16, 1]],\n    [[18, 1], [11, -1], [1, -1], [19, 1], [14, -1]],\n    [[21, 1], [22, 1], [20, 1], [23, 1], [2, -1]],\n    [[26, 1], [24, 1], [8, -1], [25, 1], [15, -1]],\n    [[27, 1], [16, -1], [19, -1], [3, -1], [21, -1]],\n    [[28, 1], [22, -1], [27, -1], [17, -1], [26, -1]],\n    [[4, -1], [23, -1], [29, 1], [9, -1], [12, -1]],\n    [[28, -1], [20, -1], [29, -1], [5, -1], [24, -1]],\n    [[6, -1], [10, -1], [18, -1], [13, -1], [25, -1]],\n]\n\nexport function sphereNumeric(feature: WorldFeature, defaultValue: number): number {\n    switch (feature) {\n        case WorldFeature.Drag:\n            return 0\n        case WorldFeature.VisualStrain:\n            return 0\n        default:\n            return defaultValue\n    }\n}\n","\n/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as THREE from \"three\"\nimport { Matrix4, PerspectiveCamera } from \"three\"\n\nconst STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5,\n}\n\nconst CHANGE_EVENT = {type: \"change\"}\nconst START_EVENT = {type: \"start\"}\nconst END_EVENT = {type: \"end\"}\nconst EPS = 0.000001\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author nicolaspanel / http://github.com/nicolaspanel\n *\n * This set of controls performs orbiting, dollying (zooming), and panning.\n * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n *    Orbit - left mouse / touch: one finger move\n *    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n *    Pan - right mouse, or arrow keys / touch: three finger swipe\n */\nexport class Orbit extends THREE.EventDispatcher {\n    public object: PerspectiveCamera\n    public element: HTMLElement\n    public window: Window\n\n    // API\n    public enabled: boolean\n    public target: THREE.Vector3\n\n    public enableZoom: boolean\n    public zoomSpeed: number\n    public minDistance: number\n    public maxDistance: number\n    public enableRotate: boolean\n    public rotateSpeed: number\n    public enablePan: boolean\n    public keyPanSpeed: number\n    public autoRotate: boolean\n    public autoRotateSpeed: number\n    public minZoom: number\n    public maxZoom: number\n    public minPolarAngle: number\n    public maxPolarAngle: number\n    public minAzimuthAngle: number\n    public maxAzimuthAngle: number\n    public keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; }\n    public mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; }\n    public enableDamping: boolean\n    public dampingFactor: number\n\n    private readonly spherical: THREE.Spherical\n    private sphericalDelta: THREE.Spherical\n    private scale: number\n    private readonly target0: THREE.Vector3\n    private readonly position0: THREE.Vector3\n    private readonly zoom0: number\n    private state: number\n    private readonly panOffset: THREE.Vector3\n    private zoomChanged: boolean\n\n    private readonly rotateStart: THREE.Vector2\n    private readonly rotateEnd: THREE.Vector2\n    private rotateDelta: THREE.Vector2\n\n    private readonly panStart: THREE.Vector2\n    private readonly panEnd: THREE.Vector2\n    private panDelta: THREE.Vector2\n\n    private readonly dollyStart: THREE.Vector2\n    private readonly dollyEnd: THREE.Vector2\n    private dollyDelta: THREE.Vector2\n\n    private updateLastPosition: THREE.Vector3\n    private readonly updateOffset: THREE.Vector3\n    private readonly updateQuat: THREE.Quaternion\n    private updateLastQuaternion: THREE.Quaternion\n    private readonly updateQuatInverse: THREE.Quaternion\n\n    private readonly panLeftV: THREE.Vector3\n    private readonly panUpV: THREE.Vector3\n    private panInternalOffset: THREE.Vector3\n\n    private readonly onMouseUp: EventListener\n    private readonly onMouseDown: EventListener\n    private readonly onMouseMove: EventListener\n    private readonly onMouseWheel: EventListener\n    private readonly onTouchStart: EventListener\n    private readonly onTouchEnd: EventListener\n    private readonly onTouchMove: EventListener\n\n    constructor(camera: THREE.PerspectiveCamera, element: HTMLElement) {\n        super()\n        this.object = camera\n        this.element = element\n        this.window = window\n\n        // Set to false to disable this control\n        this.enabled = true\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3()\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0\n        this.maxDistance = Infinity\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0 // radians\n        this.maxPolarAngle = Math.PI // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity // radians\n        this.maxAzimuthAngle = Infinity // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false\n        this.dampingFactor = 0.25\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true\n        this.zoomSpeed = 0.5\n\n        // Set to false to disable rotating\n        this.enableRotate = true\n        this.rotateSpeed = 1.0\n\n        // Set to false to disable panning\n        this.enablePan = true\n        this.keyPanSpeed = 7.0\t// pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false\n        this.autoRotateSpeed = 1.0 // 30 seconds per round when fps is 60\n\n        // The four arrow keys\n        this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}\n\n        // Mouse buttons\n        this.mouseButtons = {ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT}\n\n        // for reset\n        this.target0 = this.target.clone()\n        this.position0 = this.object.position.clone()\n        this.zoom0 = (this.object as PerspectiveCamera).zoom\n\n        // for update speedup\n        this.updateOffset = new THREE.Vector3()\n        // so camera.up is the orbit axis\n        this.updateQuat = new THREE.Quaternion().setFromUnitVectors(this.object.up, new THREE.Vector3(0, 1, 0))\n        this.updateQuatInverse = this.updateQuat.clone().inverse()\n        this.updateLastPosition = new THREE.Vector3()\n        this.updateLastQuaternion = new THREE.Quaternion()\n\n        this.state = STATE.NONE\n        this.scale = 1\n\n        // current position in spherical coordinates\n        this.spherical = new THREE.Spherical()\n        this.sphericalDelta = new THREE.Spherical()\n\n        this.panOffset = new THREE.Vector3()\n        this.zoomChanged = false\n\n        this.rotateStart = new THREE.Vector2()\n        this.rotateEnd = new THREE.Vector2()\n        this.rotateDelta = new THREE.Vector2()\n\n        this.panStart = new THREE.Vector2()\n        this.panEnd = new THREE.Vector2()\n        this.panDelta = new THREE.Vector2()\n\n        this.dollyStart = new THREE.Vector2()\n        this.dollyEnd = new THREE.Vector2()\n        this.dollyDelta = new THREE.Vector2()\n\n        this.panLeftV = new THREE.Vector3()\n        this.panUpV = new THREE.Vector3()\n        this.panInternalOffset = new THREE.Vector3()\n\n        // event handlers - FSM: listen for events and reset state\n\n        this.onMouseDown = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (event.button === this.mouseButtons.ORBIT) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateStart.set(event.clientX, event.clientY)\n                this.state = STATE.ROTATE\n            } else if (event.button === this.mouseButtons.ZOOM) {\n                if (!this.enableZoom) {\n                    return\n                }\n                this.dollyStart.set(event.clientX, event.clientY)\n                this.state = STATE.DOLLY\n            } else if (event.button === this.mouseButtons.PAN) {\n                if (!this.enablePan) {\n                    return\n                }\n                this.panStart.set(event.clientX, event.clientY)\n                this.state = STATE.PAN\n            }\n            if (this.state !== STATE.NONE) {\n                document.addEventListener(\"mousemove\", this.onMouseMove, false)\n                document.addEventListener(\"mouseup\", this.onMouseUp, false)\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onMouseMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            if (this.state === STATE.ROTATE) {\n                if (!this.enableRotate) {\n                    return\n                }\n                this.rotateEnd.set(event.clientX, event.clientY)\n                this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n                this.rotateStart.copy(this.rotateEnd)\n\n                this.update()\n            } else if (this.state === STATE.DOLLY) {\n\n                if (!this.enableZoom) {\n                    return\n                }\n\n                this.dollyEnd.set(event.clientX, event.clientY)\n                this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                if (this.dollyDelta.y > 0) {\n                    this.dollyIn(this.getZoomScale())\n                } else if (this.dollyDelta.y < 0) {\n                    this.dollyOut(this.getZoomScale())\n                }\n\n                this.dollyStart.copy(this.dollyEnd)\n                this.update()\n            } else if (this.state === STATE.PAN) {\n\n                if (!this.enablePan) {\n                    return\n                }\n\n                this.panEnd.set(event.clientX, event.clientY)\n                this.panDelta.subVectors(this.panEnd, this.panStart)\n                this.pan(this.panDelta.x, this.panDelta.y)\n                this.panStart.copy(this.panEnd)\n                this.update()\n            }\n        }\n\n        this.onMouseUp = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n            document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.onMouseWheel = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled || !this.enableZoom || (this.state !== STATE.NONE && this.state !== STATE.ROTATE)) {\n                return\n            }\n            event.stopPropagation()\n            if (event.deltaY < 0) {\n                this.dollyOut(this.getZoomScale())\n            } else if (event.deltaY > 0) {\n                this.dollyIn(this.getZoomScale())\n            }\n            this.update()\n            this.dispatchEvent(START_EVENT) // not sure why these are here...\n            this.dispatchEvent(END_EVENT)\n        }\n\n        this.onTouchStart = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_ROTATE\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n                    this.dollyStart.set(0, distance)\n                    this.state = STATE.TOUCH_DOLLY\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n\n                    this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.state = STATE.TOUCH_PAN\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n\n            if (this.state !== STATE.NONE) {\n                this.dispatchEvent(START_EVENT)\n            }\n        }\n\n        this.onTouchMove = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1: {\n                    if (!this.enableRotate) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_ROTATE) {\n                        return\n                    } // is this needed?...\n\n                    this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart)\n\n                    // rotating across whole screen goes 360 degrees around\n                    this.rotateLeft(2 * Math.PI * this.rotateDelta.x / this.element.clientWidth * this.rotateSpeed)\n\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    this.rotateUp(2 * Math.PI * this.rotateDelta.y / this.element.clientHeight * this.rotateSpeed)\n\n                    this.rotateStart.copy(this.rotateEnd)\n\n                    this.update()\n                }\n                    break\n                // two-fingered touch: dolly\n                case 2: {\n                    if (!this.enableZoom) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_DOLLY) {\n                        return\n                    } // is this needed?...\n\n                    const dx = event.touches[0].pageX - event.touches[1].pageX\n                    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n                    const distance = Math.sqrt(dx * dx + dy * dy)\n\n                    this.dollyEnd.set(0, distance)\n\n                    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n                    if (this.dollyDelta.y > 0) {\n                        this.dollyOut(this.getZoomScale())\n                    } else if (this.dollyDelta.y < 0) {\n                        this.dollyIn(this.getZoomScale())\n                    }\n\n                    this.dollyStart.copy(this.dollyEnd)\n                    this.update()\n                }\n                    break\n                // three-fingered touch: pan\n                case 3: {\n                    if (!this.enablePan) {\n                        return\n                    }\n                    if (this.state !== STATE.TOUCH_PAN) {\n                        return\n                    } // is this needed?...\n                    this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n                    this.panDelta.subVectors(this.panEnd, this.panStart)\n                    this.pan(this.panDelta.x, this.panDelta.y)\n                    this.panStart.copy(this.panEnd)\n                    this.update()\n                }\n                    break\n                default: {\n                    this.state = STATE.NONE\n                }\n            }\n        }\n\n        this.onTouchEnd = (event: IThreeEvent) => {\n            event.preventDefault()\n            if (!this.enabled) {\n                return\n            }\n            this.dispatchEvent(END_EVENT)\n            this.state = STATE.NONE\n        }\n\n        this.element.addEventListener(\"mousedown\", this.onMouseDown, {capture: true})\n        this.element.addEventListener(\"wheel\", this.onMouseWheel, {capture: true})\n        this.element.addEventListener(\"touchstart\", this.onTouchStart, {capture: true})\n        this.element.addEventListener(\"touchend\", this.onTouchEnd, {capture: true})\n        this.element.addEventListener(\"touchmove\", this.onTouchMove, {capture: true})\n\n        // force an update at start\n        this.update()\n    }\n\n    public update(): boolean {\n        const position = this.object.position\n        this.updateOffset.copy(position).sub(this.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat)\n\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset)\n\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle())\n        }\n\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n        this.spherical.makeSafe()\n\n        this.spherical.radius *= this.scale\n\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n        // move target to panned location\n        this.target.add(this.panOffset)\n\n        this.updateOffset.setFromSpherical(this.spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse)\n\n        position.copy(this.target).add(this.updateOffset)\n\n        this.object.lookAt(this.target)\n\n        if (this.enableDamping) {\n\n            this.sphericalDelta.theta *= (1 - this.dampingFactor)\n            this.sphericalDelta.phi *= (1 - this.dampingFactor)\n\n        } else {\n\n            this.sphericalDelta.set(0, 0, 0)\n\n        }\n\n        this.scale = 1\n        this.panOffset.set(0, 0, 0)\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n            this.dispatchEvent(CHANGE_EVENT)\n            this.updateLastPosition.copy(this.object.position)\n            this.updateLastQuaternion.copy(this.object.quaternion)\n            this.zoomChanged = false\n            return true\n        }\n        return false\n    }\n\n    public panLeft(distance: number, objectMatrix: Matrix4): void {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance)\n        this.panOffset.add(this.panLeftV)\n    }\n\n    public panUp(distance: number, objectMatrix: Matrix4): void {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1) // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance)\n        this.panOffset.add(this.panUpV)\n    }\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    public pan(deltaX: number, deltaY: number): void {\n        const element: HTMLElement = this.element as HTMLElement\n\n        const position = this.object.position\n        this.panInternalOffset.copy(position).sub(this.target)\n        let targetDistance = this.panInternalOffset.length()\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0)\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix)\n        this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix)\n    }\n\n    public dollyIn(dollyScale: number): void {\n        this.scale /= dollyScale\n    }\n\n    public dollyOut(dollyScale: number): void {\n        this.scale *= dollyScale\n    }\n\n    public getAutoRotationAngle(): number {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed\n    }\n\n    public getZoomScale(): number {\n        return Math.pow(0.95, this.zoomSpeed)\n    }\n\n    public rotateLeft(angle: number): void {\n        this.sphericalDelta.theta -= angle\n    }\n\n    public rotateUp(angle: number): void {\n        this.sphericalDelta.phi -= angle\n    }\n\n    public getPolarAngle(): number {\n        return this.spherical.phi\n    }\n\n    public getAzimuthalAngle(): number {\n        return this.spherical.theta\n    }\n\n    public dispose(): void {\n        this.element.removeEventListener(\"mousedown\", this.onMouseDown, false)\n        this.element.removeEventListener(\"wheel\", this.onMouseWheel, false)\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart, false)\n        this.element.removeEventListener(\"touchend\", this.onTouchEnd, false)\n        this.element.removeEventListener(\"touchmove\", this.onTouchMove, false)\n        document.removeEventListener(\"mousemove\", this.onMouseMove, false)\n        document.removeEventListener(\"mouseup\", this.onMouseUp, false)\n    }\n\n    public reset(): void {\n        this.target.copy(this.target0)\n        this.object.position.copy(this.position0)\n        this.object.zoom = this.zoom0\n        this.object.updateProjectionMatrix()\n        this.dispatchEvent(CHANGE_EVENT)\n        this.update()\n        this.state = STATE.NONE\n    }\n}\n\ninterface ITouch {\n    pageX: number\n    pageY: number\n}\n\ninterface IThreeEvent extends Event {\n    clientX: number\n    clientY: number\n    deltaY: number\n    button: THREE.MOUSE\n    touches: ITouch[]\n    keyCode: number\n}\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { FaCamera, FaDownload, FaSignOutAlt } from \"react-icons/all\"\nimport { Canvas, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { Color, CylinderGeometry, Euler, PerspectiveCamera, Quaternion, Vector3 } from \"three\"\n\nimport { switchToVersion, UP, Version } from \"../fabric/eig-util\"\nimport { jointDistance } from \"../fabric/tensegrity-types\"\nimport { PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { saveJSONZip } from \"../storage/download\"\nimport { LINE_VERTEX_COLORS, roleMaterial } from \"../view/materials\"\nimport { Orbit } from \"../view/orbit\"\nimport { SurfaceComponent } from \"../view/surface-component\"\n\nimport { IPull, IPush, TensegritySphere } from \"./tensegrity-sphere\"\n\nextend({Orbit})\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst FREQUENCIES = [1, 2, 3, 4, 5, 6, 7, 8]\nconst PREFIX = \"#sphere-\"\n\nexport function SphereView({createSphere}: { createSphere: (frequency: number) => TensegritySphere }): JSX.Element {\n    const [polygons, setPolygons] = useState(false)\n    const [frequency, setFrequency] = useState(() => {\n        if (location.hash.startsWith(PREFIX)) {\n            const freq = parseInt(location.hash.substring(PREFIX.length), 10)\n            if (FREQUENCIES.find(f => f === freq)) {\n                return freq\n            }\n        }\n        return 1\n    })\n    const [sphere, setSphere] = useState(() => createSphere(frequency))\n    useEffect(() => {\n        location.hash = `sphere-${sphere.frequency}`\n    }, [sphere])\n    useEffect(() => {\n        setSphere(createSphere(frequency))\n    }, [frequency])\n    return (\n        <div id=\"view-container\" style={{position: \"absolute\", left: 0, right: 0, height: \"100%\"}}>\n            <div id=\"bottom-middle\">\n                <ButtonGroup>\n                    {FREQUENCIES.map(f => (\n                        <Button color=\"info\" key={`Frequency${f}`}\n                                disabled={f === frequency}\n                                onClick={() => setFrequency(f)}>{f}</Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n            <div id=\"bottom-right\">\n                <ButtonGroup>\n                    <Button onClick={() => saveJSONZip(sphere.fabricOutput)}><FaDownload/></Button>\n                    <Button onClick={() => setPolygons(!polygons)}><FaCamera/></Button>\n                    <Button onClick={() => switchToVersion(Version.Design)}><FaSignOutAlt/></Button>\n                </ButtonGroup>\n            </div>\n            <Canvas style={{backgroundColor: \"black\"}}>\n                <Camera/>\n                {!sphere ? <h1>No Sphere</h1> : <SphereScene sphere={sphere} polygons={polygons}/>}\n            </Canvas>\n        </div>\n    )\n}\n\nexport function SphereScene({sphere, polygons}: {\n    sphere: TensegritySphere,\n    polygons: boolean,\n}): JSX.Element {\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n\n    const orbit = useUpdate<Orbit>(orb => {\n        orb.minPolarAngle = 0\n        orb.maxPolarAngle = Math.PI / 2\n        orb.minDistance = 1\n        orb.maxDistance = 10000\n        orb.enableZoom = true\n        orb.update()\n    }, [])\n\n    const [tick, setTick] = useState(0)\n\n    useFrame(() => {\n        const control: Orbit = orbit.current\n        if (tick === 0) {\n            control.autoRotate = true\n            control.target.copy(sphere.location)\n        }\n        if (!polygons) {\n            sphere.iterate()\n        }\n        const toMidpoint = new Vector3().subVectors(sphere.instance.midpoint, control.target).multiplyScalar(0.1)\n        control.target.add(toMidpoint)\n        control.update()\n        setTick(tick + 1)\n    })\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <PolygonView sphere={sphere}/>\n                ) : (\n                    <lineSegments\n                        key=\"lines\"\n                        geometry={sphere.instance.floatView.lineGeometry}\n                        material={LINE_VERTEX_COLORS}\n                        onUpdate={self => self.geometry.computeBoundingSphere()}\n                    />\n                )}\n                <SurfaceComponent/>\n                <ambientLight color={new Color(\"white\")} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\nfunction PolygonView({sphere}: {\n    sphere: TensegritySphere,\n}): JSX.Element {\n    return (\n        <group>\n            {sphere.pulls.map((pull: IPull) => {\n                const unit = sphere.instance.unitVector(pull.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(pull.alpha, pull.omega)\n                const intervalScale = new Vector3(PULL_RADIUS, length, PULL_RADIUS)\n                return (\n                    <mesh\n                        key={`T${pull.index}`}\n                        geometry={CYLINDER}\n                        position={pull.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.PhiTriangle)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n            {sphere.pushes.map((push: IPush) => {\n                const unit = sphere.instance.unitVector(push.index)\n                const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n                const length = jointDistance(push.alpha, push.omega)\n                const intervalScale = new Vector3(PUSH_RADIUS, length, PUSH_RADIUS)\n                return (\n                    <mesh\n                        key={`C${push.index}`}\n                        geometry={CYLINDER}\n                        position={push.location()}\n                        rotation={new Euler().setFromQuaternion(rotation)}\n                        scale={intervalScale}\n                        material={roleMaterial(IntervalRole.RootPush)}\n                        matrixWorldNeedsUpdate={true}\n                    />\n                )\n            })}}\n        </group>\n    )\n}\n\nfunction Camera(props: object): JSX.Element {\n    const ref = useRef<PerspectiveCamera>()\n    const {setDefaultCamera} = useThree()\n    // Make the camera known to the system\n    useEffect(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.fov = 50\n        camera.position.set(0, 4, 2.5)\n        setDefaultCamera(camera)\n    }, [])\n    // Update it every frame\n    useFrame(() => {\n        const camera = ref.current\n        if (!camera) {\n            throw new Error(\"No camera\")\n        }\n        camera.updateMatrixWorld()\n    })\n    return <perspectiveCamera ref={ref} {...props} />\n}\n\n","/*\n * Copyright (c) 2020. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Fabric, IntervalRole, Stage, WorldFeature } from \"eig\"\nimport { Quaternion, Vector3 } from \"three\"\n\nimport { intervalRoleName, sub } from \"../fabric/eig-util\"\nimport { FabricInstance } from \"../fabric/fabric-instance\"\nimport { IJoint, jointDistance, jointLocation } from \"../fabric/tensegrity-types\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { IFabricOutput, IOutputInterval, IOutputJoint } from \"../storage/download\"\n\nimport { SphereBuilder } from \"./sphere-builder\"\n\nexport interface IHub {\n    index: number\n    location: Vector3\n    spokes: ISpoke[]\n}\n\nexport interface ISpoke {\n    push: IPush\n    reverse: boolean\n}\n\nexport function spokeLength({push}: ISpoke): number {\n    return push.omegaHub.location.distanceTo(push.alphaHub.location)\n}\n\nexport function nearJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.omega : push.alpha\n}\n\nexport function farJoint({push, reverse}: ISpoke): IJoint {\n    return reverse ? push.alpha : push.omega\n}\n\nexport function nearHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.omegaHub : push.alphaHub\n}\n\nexport function farHub({push, reverse}: ISpoke): IHub {\n    return reverse ? push.alphaHub : push.omegaHub\n}\n\nexport interface IPush {\n    index: number\n    alphaHub: IHub\n    omegaHub: IHub\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport interface IPull {\n    index: number\n    alpha: IJoint\n    omega: IJoint\n    location: () => Vector3\n}\n\nexport class TensegritySphere {\n\n    public joints: IJoint[] = []\n    public pushes: IPush[] = []\n    public pulls: IPull[] = []\n    public hubs: IHub[] = []\n\n    private stage = Stage.Growing\n\n    constructor(\n        public readonly location: Vector3,\n        public readonly radius: number,\n        public readonly frequency: number,\n        public readonly twist: number,\n        public readonly numericFeature: (worldFeature: WorldFeature) => number,\n        public readonly instance: FabricInstance,\n    ) {\n        this.instance.clear()\n    }\n\n    public get fabric(): Fabric {\n        return this.instance.fabric\n    }\n\n    public hubAt(location: Vector3): IHub {\n        location.normalize().multiplyScalar(this.radius)\n        const index = this.hubs.length\n        const vertex: IHub = {index, location, spokes: []}\n        this.hubs.push(vertex)\n        return vertex\n    }\n\n    public pushBetween(alphaHub: IHub, omegaHub: IHub): IPush {\n        const midpoint = new Vector3().addVectors(alphaHub.location, omegaHub.location).normalize()\n        const quaternion = new Quaternion().setFromAxisAngle(midpoint, this.twist)\n        const alphaLocation = new Vector3().copy(alphaHub.location).applyQuaternion(quaternion)\n        const omegaLocation = new Vector3().copy(omegaHub.location).applyQuaternion(quaternion)\n        const stiffness = 0.00001\n        const linearDensity = Math.sqrt(stiffness)\n        const idealLength = alphaHub.location.distanceTo(omegaHub.location)\n        const alpha = this.createJoint(alphaLocation)\n        const omega = this.createJoint(omegaLocation)\n        const index = this.fabric.create_interval(\n            alpha.index, omega.index, IntervalRole.SpherePush,\n            idealLength, idealLength, stiffness, linearDensity, 0)\n        const push: IPush = {\n            index, alpha, omega, alphaHub, omegaHub,\n            location: () => new Vector3()\n                .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                .multiplyScalar(0.5),\n        }\n        this.pushes.push(push)\n        alphaHub.spokes.push({reverse: false, push})\n        omegaHub.spokes.push({reverse: true, push})\n        return push\n    }\n\n    public pullsForSpoke(hub: IHub, spoke: ISpoke, segmentLength: number): IPull[] {\n        const pulls: IPull[] = []\n        const pull = (alpha: IJoint, omega: IJoint, restLength: number) => {\n            if (this.pullExists(alpha, omega)) {\n                return\n            }\n            const stiffness = 0.000001\n            const linearDensity = Math.sqrt(stiffness)\n            const idealLength = jointDistance(alpha, omega)\n            const index = this.fabric.create_interval(\n                alpha.index, omega.index, IntervalRole.SpherePull,\n                idealLength, restLength, stiffness, linearDensity, 100)\n            const interval: IPull = {\n                index, alpha, omega,\n                location: () => new Vector3()\n                    .addVectors(this.instance.jointLocation(alpha.index), this.instance.jointLocation(omega.index))\n                    .multiplyScalar(0.5),\n            }\n            pulls.push(interval)\n            this.pulls.push(interval)\n        }\n        const nextSpoke = this.nextSpoke(hub, spoke, false)\n        const nextNear = nearJoint(nextSpoke)\n        const oppositeNext = this.nextSpoke(farHub(spoke), spoke, false)\n        pull(nearJoint(spoke), nextNear, segmentLength)\n        pull(nextNear, nearJoint(oppositeNext), spokeLength(spoke) - segmentLength * 2)\n        return pulls\n    }\n\n    public iterate(): void {\n        const stage = this.instance.iterate(this.stage)\n        if (stage === undefined) {\n            return\n        }\n        switch (stage) {\n            case Stage.Growing:\n                new SphereBuilder(this).build()\n                this.stage = this.fabric.finish_growing()\n                break\n            case Stage.Shaping:\n                if (this.fabric.age > 8000) {\n                    this.fabric.adopt_lengths()\n                    this.stage = Stage.Slack\n                }\n                break\n            case Stage.Slack:\n                this.stage = Stage.Pretensing\n                break\n        }\n    }\n\n    public get fabricOutput(): IFabricOutput {\n        this.instance.refreshFloatView()\n        const idealLengths = this.instance.floatView.idealLengths\n        const strains = this.instance.floatView.strains\n        const stiffnesses = this.instance.floatView.stiffnesses\n        const linearDensities = this.instance.floatView.linearDensities\n        return {\n            name: \"sphere\",\n            joints: this.joints.map(joint => {\n                const vector = jointLocation(joint)\n                const anchor = this.instance.fabric.is_anchor_joint(joint.index)\n                return <IOutputJoint>{\n                    index: joint.index,\n                    x: vector.x, y: vector.z, z: vector.y,\n                    anchor,\n                }\n            }),\n            intervals: [\n                ...this.pushes.map(push => {\n                    const radius = PUSH_RADIUS / this.frequency\n                    const jointRadius = radius * JOINT_RADIUS / PUSH_RADIUS\n                    const currentLength = jointDistance(push.alpha, push.omega)\n                    const length = currentLength - jointRadius * 2\n                    const alphaIndex = push.alpha.index\n                    const omegaIndex = push.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: push.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Push\",\n                        strain: strains[push.index],\n                        stiffness: stiffnesses[push.index],\n                        linearDensity: linearDensities[push.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        scale: 1,\n                        idealLength: idealLengths[push.index],\n                        isPush: true,\n                        length, radius, jointRadius,\n                    }\n                }),\n                ...this.pulls.map(interval => {\n                    const radius = PULL_RADIUS / this.frequency\n                    const jointRadius = JOINT_RADIUS\n                    const currentLength = jointDistance(interval.alpha, interval.omega)\n                    const length = currentLength + jointRadius * 2\n                    const alphaIndex = interval.alpha.index\n                    const omegaIndex = interval.omega.index\n                    if (alphaIndex >= this.joints.length || omegaIndex >= this.joints.length) {\n                        throw new Error(`Joint not found ${alphaIndex},${omegaIndex}:${this.joints.length}`)\n                    }\n                    return <IOutputInterval>{\n                        index: interval.index,\n                        joints: [alphaIndex, omegaIndex],\n                        type: \"Pull\",\n                        strain: strains[interval.index],\n                        stiffness: stiffnesses[interval.index],\n                        linearDensity: linearDensities[interval.index],\n                        role: intervalRoleName(IntervalRole.SpherePush),\n                        scale: 1,\n                        idealLength: idealLengths[interval.index],\n                        isPush: false,\n                        length, radius, jointRadius,\n                    }\n                }),\n            ],\n        }\n    }\n\n    private createJoint(location: Vector3): IJoint {\n        const index = this.fabric.create_joint(location.x, location.y, location.z)\n        const joint: IJoint = {index, instance: this.instance}\n        this.joints.push(joint) // TODO: have the thing create a real joint?\n        this.instance.refreshFloatView()\n        return joint\n    }\n\n    private nextSpoke(hub: IHub, {push}: ISpoke, reverse: boolean): ISpoke {\n        const currentSpoke = hub.spokes.find(spoke => spoke.push.index === push.index)\n        if (!currentSpoke) {\n            throw new Error(\"Cannot find current spoke when looking for next\")\n        }\n        const currentFarHub = farHub(currentSpoke)\n        const currentLocation = currentFarHub.location\n        const toCurrent = sub(currentLocation, hub.location)\n        const cross = new Vector3().crossVectors(hub.location, toCurrent).normalize()\n        if (this.twist < 0 !== reverse) {\n            cross.multiplyScalar(-1)\n        }\n        const otherSpokes = hub.spokes.filter((spoke: ISpoke) => spoke.push.index !== currentSpoke.push.index)\n        if (hub.spokes.length !== otherSpokes.length + 1) {\n            throw new Error(\"Did not delete\")\n        }\n        const sameSideSpokes = otherSpokes.filter((spoke: ISpoke) => sub(farHub(spoke).location, hub.location).dot(cross) > 0)\n        const farToClose = sameSideSpokes.sort((a: ISpoke, b: ISpoke) => {\n            const distanceA = farHub(a).location.distanceToSquared(currentLocation)\n            const distanceB = farHub(b).location.distanceToSquared(currentLocation)\n            return distanceB - distanceA\n        })\n        const closest = farToClose.pop()\n        if (!closest) {\n            throw new Error(\"Couldn't find closest!\")\n        }\n        return closest\n    }\n\n    private pullExists(alpha: IJoint, omega: IJoint): boolean {\n        return !!this.pulls.find(p =>\n            p.alpha.index === alpha.index && p.omega.index === omega.index ||\n            p.alpha.index === omega.index && p.omega.index === alpha.index)\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { GetHandleProps, GetTrackProps, Handles, Rail, Slider, SliderItem, Tracks } from \"react-compound-slider\"\nimport { FaDownload, FaEye, FaFile, FaFileCsv, FaRunning } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, floatString, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { JOINT_RADIUS, PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { IFabricOutput, saveCSVZip, saveJSONZip } from \"../storage/download\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { roleColorString } from \"./materials\"\n\nconst MAX_SLIDER = 1000\n\nexport function FrozenTab({tensegrity, worldFeatures, storedState$}: {\n    tensegrity?: Tensegrity,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    const [visibleRoles, updateVisibleRoles] = useState(storedState$.getValue().visibleRoles)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n            updateVisibleRoles(newState.visibleRoles)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function getFabricOutput(): IFabricOutput {\n        if (!tensegrity) {\n            throw new Error(\"No tensegrity\")\n        }\n        return tensegrity.getFabricOutput(PUSH_RADIUS, PULL_RADIUS, JOINT_RADIUS)\n    }\n\n    return (\n        <>\n            {!tensegrity ? undefined : (\n                <Grouping>\n                    <h6 className=\"w-100 text-center\"><FaRunning/> Take</h6>\n                    <ButtonGroup vertical={false} className=\"w-100 my-2\">\n                        <Button onClick={() => saveCSVZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download CSV <FaFileCsv/>\n                        </Button>\n                        <Button onClick={() => saveJSONZip(getFabricOutput())} disabled={!polygons}>\n                            <FaDownload/> Download JSON <FaFile/>\n                        </Button>\n                    </ButtonGroup>\n                </Grouping>\n            )}\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaEye/> Show/Hide</h6>\n                <div>Roles</div>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    {ADJUSTABLE_INTERVAL_ROLES.map(intervalRole => (\n                        <Button\n                            key={`viz${intervalRole}`}\n                            style={{backgroundColor: visibleRoles.indexOf(intervalRole) >= 0 ? roleColorString(intervalRole) : \"#747474\"}}\n                            disabled={!polygons}\n                            onClick={() => {\n                                if (visibleRoles.indexOf(intervalRole) < 0) {\n                                    transition(storedState$, {visibleRoles: [...visibleRoles, intervalRole]})\n                                } else {\n                                    transition(storedState$, {visibleRoles: visibleRoles.filter(role => role !== intervalRole)})\n                                }\n                            }}\n                        >\n                            {intervalRoleName(intervalRole)}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n                {!tensegrity ? undefined : (\n                    <>\n                        <StrainSlider push={true} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                        <StrainSlider push={false} disabled={!polygons} storedState$={storedState$}\n                                      strainLimits={tensegrity.instance.floatView.strainLimits}/>\n                    </>\n                )}\n            </Grouping>\n        </>\n    )\n}\n\nfunction StrainSlider({push, disabled, strainLimits, storedState$}: {\n    push: boolean,\n    disabled: boolean,\n    strainLimits: Float32Array,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n    const domain = [0, MAX_SLIDER]\n    const [values, setValues] = useState([\n        MAX_SLIDER * (push ? storedState$.getValue().pushBottom : storedState$.getValue().pullBottom),\n        MAX_SLIDER * (push ? storedState$.getValue().pushTop : storedState$.getValue().pullTop),\n    ])\n    const [bottom, setBottom] = useState(0)\n    const [top, setTop] = useState(0)\n    useEffect(() => {\n        function nuanceToStrain(nuance: number): number {\n            const min = push ? strainLimits[1] : strainLimits[2]\n            const max = push ? strainLimits[0] : strainLimits[3]\n            return min + nuance * (max - min)\n        }\n\n        if (push) {\n            const pushBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pushBottom))\n            const pushTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pushTop))\n            storedState$.next({...storedState$.getValue(), pushBottom, pushTop})\n        } else {\n            const pullBottom = values[0] / MAX_SLIDER\n            setBottom(nuanceToStrain(pullBottom))\n            const pullTop = values[1] / MAX_SLIDER\n            setTop(nuanceToStrain(pullTop))\n            storedState$.next({...storedState$.getValue(), pullBottom, pullTop})\n        }\n    }, [values])\n\n    return (\n        <div style={{height: \"4em\", width: \"100%\"}} className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {`${floatString(bottom)} ${floatString(top)}`}\n            </div>\n            <div>\n                {push ? \"Push\" : \"Pull\"} Strain\n            </div>\n            <Slider\n                disabled={disabled}\n                mode={1}\n                step={1}\n                domain={domain}\n                rootStyle={sliderStyle}\n                onChange={(newValues: number[]) => setValues(newValues)}\n                values={values}\n            >\n                <Rail>\n                    {({getRailProps}) => <div style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: 14,\n                        borderRadius: 7,\n                        cursor: \"pointer\",\n                        backgroundColor: disabled ? railDisabledBackground : railBackground,\n                    }} {...getRailProps()}/>}\n                </Rail>\n                <Handles>\n                    {({handles, getHandleProps}) => (\n                        <div className=\"slider-handles\">\n                            {handles.map((handle, index) => (\n                                <Handle\n                                    key={handle.id}\n                                    handle={handle}\n                                    domain={domain}\n                                    getHandleProps={getHandleProps}\n                                    top={index === 1}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Handles>\n                <Tracks right={false}>\n                    {({tracks, getTrackProps}) => (\n                        <div className=\"slider-tracks\">\n                            {tracks.map(({id, source, target}, index) => (\n                                <Track\n                                    key={id}\n                                    source={source}\n                                    target={target}\n                                    getTrackProps={getTrackProps}\n                                    color={trackColor(index, disabled)}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </Tracks>\n            </Slider>\n        </div>\n    )\n}\n\nfunction Handle({domain, handle, getHandleProps, top}: {\n    domain: number[],\n    handle: SliderItem,\n    getHandleProps: GetHandleProps,\n    top: boolean,\n}): JSX.Element {\n    const min = domain[0]\n    const max = domain[1]\n    const {id, value, percent} = handle\n    return (\n        <div\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={value}\n            style={{\n                left: `${percent}%`,\n                position: \"absolute\",\n                marginLeft: \"-11px\",\n                marginTop: \"-6px\",\n                zIndex: 2,\n                width: 24,\n                height: 24,\n                cursor: \"pointer\",\n                borderRadius: 2,\n                boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n                backgroundColor: handleColor(top),\n            }}\n            {...getHandleProps(id)}\n        />\n    )\n}\n\nfunction Track({source, target, getTrackProps, color}: {\n    source: SliderItem,\n    target: SliderItem,\n    getTrackProps: GetTrackProps,\n    color: string,\n}): JSX.Element {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                height: 14,\n                zIndex: 1,\n                backgroundColor: color,\n                borderRadius: 2,\n                cursor: \"pointer\",\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()}\n        />\n    )\n}\n\nconst railBackground = \"#9B9B9B\"\nconst railDisabledBackground = \"#767676\"\n\nfunction handleColor(top: boolean): string {\n    return top ? \"#c6161690\" : \"#597fe790\"\n}\n\nfunction trackColor(index: number, disabled: boolean): string {\n    return disabled ? railDisabledBackground : index === 0 ? railBackground : \"white\"\n}\n\nconst sliderStyle: React.CSSProperties = {\n    margin: \"4%\",\n    position: \"relative\",\n    width: \"92%\",\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowLeft,\n    FaArrowRight,\n    FaBaby,\n    FaCamera,\n    FaChartBar,\n    FaClock,\n    FaHandSpock,\n    FaList,\n    FaSeedling,\n    FaSlidersH,\n    FaYinYang,\n} from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { Tensegrity } from \"../fabric/tensegrity\"\n\nexport enum StageTransition {\n    CaptureLengthsToSlack,\n    SlackToPretensing,\n    SlackToShaping,\n    CapturePretenstToSlack,\n    CaptureStrainForStiffness,\n}\n\nexport function LifeStageButton({tensegrity, stageTransition, disabled}: {\n    tensegrity: Tensegrity,\n    stageTransition: StageTransition,\n    disabled: boolean,\n}): JSX.Element {\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function allDisabledExcept(stageAccepted: Stage): boolean {\n        if (disabled || life.stage === Stage.Pretensing) {\n            return true\n        }\n        return life.stage !== stageAccepted\n    }\n\n    switch (stageTransition) {\n        case StageTransition.CaptureLengthsToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Shaping)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture Lengths <FaCamera/>( <Symbol stage={Stage.Shaping}/> )\n                    <FaArrowRight/>\n                    ( <FaBaby/><Symbol stage={Stage.Slack}/> )\n                    New Slack\n                </Button>\n            )\n        case StageTransition.SlackToPretensing:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Slack)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Pretensing}}\n                >\n                    Slack <Symbol stage={Stage.Slack}/> <FaArrowRight/> <Symbol stage={Stage.Pretenst}/> Pretenst\n                </Button>\n            )\n        case StageTransition.SlackToShaping:\n            return (\n                <ButtonGroup vertical={true} className=\"w-100 my-1\">\n                    <Button\n                        className=\"my-1 w-100\"\n                        disabled={allDisabledExcept(Stage.Slack)}\n                        onClick={() => tensegrity.transition = {stage: Stage.Shaping}}\n                    >\n                        <Symbol stage={Stage.Shaping}/> Shaping <FaArrowLeft/> Slack <Symbol stage={Stage.Slack}/>\n                    </Button>\n                </ButtonGroup>\n            )\n        case StageTransition.CapturePretenstToSlack:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, adoptLengths: true}}\n                >\n                    Capture pretenst <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> ) <FaArrowRight/> ( <FaBaby/>\n                    <Symbol stage={Stage.Slack}/> ) New Slack\n                </Button>\n            )\n        case StageTransition.CaptureStrainForStiffness:\n            return (\n                <Button\n                    className=\"my-1 w-100\"\n                    disabled={allDisabledExcept(Stage.Pretenst)}\n                    onClick={() => tensegrity.transition = {stage: Stage.Slack, strainToStiffness: true}}\n                >\n                    Capture Strain <FaCamera/> ( <Symbol stage={Stage.Pretenst}/> <FaList/> ) <FaArrowRight/>\n                    ( <Symbol stage={Stage.Slack}/> <FaChartBar/> ) Slack Stiffness\n                </Button>\n            )\n    }\n}\n\nfunction Symbol({stage}: { stage: Stage }): JSX.Element {\n    switch (stage) {\n        case Stage.Growing:\n            return <FaSeedling/>\n        case Stage.Shaping:\n            return <FaSlidersH/>\n        case Stage.Slack:\n            return <FaYinYang/>\n        case Stage.Pretensing:\n            return <FaClock/>\n        case Stage.Pretenst:\n            return <FaHandSpock/>\n        default:\n            throw new Error(\"Stage?\")\n    }\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { Button, ButtonGroup } from \"reactstrap\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\n\nexport function FeaturePanel({feature, disabled}: {\n    feature: FloatFeature,\n    disabled?: boolean,\n}): JSX.Element {\n\n    const [featurePercent, setFeaturePercent] = useState(() => feature.percent)\n    useEffect(() => {\n        const subscription = feature.observable.subscribe(({percent}) => setFeaturePercent(percent))\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function percentLabel(percent: number): string {\n        if (percent <= 100) {\n            return `${percent}%`\n        } else {\n            return `${percent / 100}x`\n        }\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                {feature.formatted}\n            </div>\n            <div>\n                {feature.config.name}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                {feature.percentChoices.map(percent => {\n                    const backgroundColor = featurePercent === percent ? \"#000000\" : \"#919191\"\n                    return (\n                        <Button\n                            disabled={disabled}\n                            size=\"sm\"\n                            style={{\n                                color: \"white\",\n                                backgroundColor,\n                            }}\n                            key={`${feature.config.name}:${percent}`}\n                            onClick={() => feature.percent = percent}\n                        >{percentLabel(percent)}</Button>\n                    )\n                })}\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaClock, FaCompressArrowsAlt, FaFistRaised, FaHandRock, FaParachuteBox } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\n\nexport function LiveTab(\n    {\n        worldFeatures, tensegrity,\n        storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(newState => {\n            updatePolygons(newState.polygons)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaClock/> Time</h6>\n                <FeaturePanel key=\"it\" feature={worldFeatures[WorldFeature.IterationsPerFrame]}/>\n                <FeaturePanel key=\"ic\" feature={worldFeatures[WorldFeature.IntervalCountdown]}/>\n                <FeaturePanel key=\"pc\" feature={worldFeatures[WorldFeature.PretensingCountdown]}/>\n            </Grouping>\n            <Grouping>\n                <FeaturePanel\n                    feature={worldFeatures[WorldFeature.VisualStrain]}\n                    disabled={polygons}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaFistRaised/> Perturb</h6>\n                <ButtonGroup className=\"w-100\">\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(1)}>\n                        <FaHandRock/> Nudge\n                    </Button>\n                    <Button disabled={life.stage !== Stage.Pretenst}\n                            onClick={() => tensegrity.fabric.set_altitude(10)}>\n                        <FaParachuteBox/> Drop\n                    </Button>\n                    <Button disabled={polygons}\n                            onClick={() => tensegrity.fabric.centralize()}>\n                        <FaCompressArrowsAlt/> Centralize\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { IntervalRole, Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaArrowAltCircleRight,\n    FaArrowDown,\n    FaArrowUp,\n    FaCheck,\n    FaDragon,\n    FaHandPointUp,\n    FaList,\n    FaMagic,\n    FaMinusSquare,\n    FaPlusSquare,\n    FaSlidersH,\n    FaTimesCircle,\n    FaTools,\n    FaUndoAlt,\n} from \"react-icons/fa/index\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { ADJUSTABLE_INTERVAL_ROLES, floatString, intervalRoleName } from \"../fabric/eig-util\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityOptimizer } from \"../fabric/tensegrity-optimizer\"\nimport { IInterval, IJoint, percentOrHundred } from \"../fabric/tensegrity-types\"\nimport { roleDefaultLength } from \"../pretenst\"\nimport { IStoredState } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\n\nexport enum ShapeSelection {\n    None,\n    Joints,\n    Intervals,\n}\n\nexport function ShapeTab(\n    {\n        worldFeatures, tensegrity, selectedIntervals,\n        setFabric, shapeSelection, setShapeSelection,\n        selectedJoints, clearSelection, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        tensegrity: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        selectedIntervals: IInterval[],\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        selectedJoints: IJoint[],\n        clearSelection: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [pushAndPull, setPushAndPull] = useState(false)\n    useEffect(() => {\n        tensegrity.instance.world.set_push_and_pull(pushAndPull)\n    }, [pushAndPull])\n\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => updatePolygons(newState.polygons)),\n        ]\n        return () => subscriptions.forEach(sub => sub.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [currentRole, setCurrentRole] = useState(IntervalRole.Twist)\n\n    const adjustValue = (up: boolean, pushes: boolean, pulls: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        if (!selectedIntervals) {\n            return\n        }\n        selectedIntervals.forEach(interval => {\n            if (interval.isPush && !pushes || !interval.isPush && !pulls) {\n                return\n            }\n            tensegrity.changeIntervalScale(interval, adjustment())\n        })\n    }\n\n    function disabled(): boolean {\n        return polygons || life.stage !== Stage.Shaping\n    }\n\n    function disableUnlessFaceCount(faceCount: number, mode: ShapeSelection): boolean {\n        if (disabled() || shapeSelection !== mode) {\n            return true\n        }\n        return selectedJoints.length < faceCount || polygons\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureLengthsToSlack}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaHandPointUp/> Manual</h6>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        color={shapeSelection === ShapeSelection.Joints ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None}\n                        onClick={() => {\n                            clearSelection()\n                            setShapeSelection(shapeSelection !== ShapeSelection.Joints ? ShapeSelection.Joints : ShapeSelection.None)\n                        }}\n                    >\n                        <span><FaHandPointUp/> Selection Mode </span>\n                    </Button>\n                    <Button\n                        color={shapeSelection === ShapeSelection.Intervals ? \"warning\" : \"secondary\"}\n                        disabled={polygons && shapeSelection === ShapeSelection.None || selectedJoints.length === 0}\n                        onClick={() => {\n                            if (shapeSelection === ShapeSelection.Intervals) {\n                                clearSelection()\n                            }\n                            setShapeSelection(shapeSelection === ShapeSelection.Intervals ? ShapeSelection.None : ShapeSelection.Intervals)\n                        }}\n                    >\n                        <span><FaSlidersH/> Make length adjustments</span>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, true)}>\n                        TC <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, true)}>\n                        TC <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, false, true)}>\n                        T<FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, false, true)}>\n                        T <FaArrowDown/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(true, true, false)}>\n                        C <FaArrowUp/>\n                    </Button>\n                    <Button disabled={disableUnlessFaceCount(1, ShapeSelection.Intervals)}\n                            onClick={adjustValue(false, true, false)}>\n                        C <FaArrowDown/>\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={selectedJoints.length === 0 || disabled() && shapeSelection !== ShapeSelection.None}\n                        onClick={() => clearSelection()}\n                    >\n                        <FaTimesCircle/> Clear selection\n                    </Button>\n                    <Button\n                        disabled={disabled()}\n                        onClick={() => new TensegrityOptimizer(tensegrity)\n                            .replaceCrosses(tensegrity.numericFeature(WorldFeature.IntervalCountdown))\n                        }>\n                        <FaMagic/><span> Optimize</span>\n                    </Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaTools/> Adjustments</h6>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingPretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingDrag]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.ShapingStiffnessFactor]} disabled={disabled()}/>\n                <ButtonGroup size=\"sm\" className=\"w-100 my-2\">\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"secondary\" : \"success\"}\n                        onClick={() => setPushAndPull(false)}\n                    ><FaCheck/>: T or C</Button>\n                    <Button\n                        disabled={disabled()}\n                        color={pushAndPull ? \"success\" : \"secondary\"}\n                        onClick={() => setPushAndPull(true)}\n                    ><FaDragon/>: T=C</Button>\n                </ButtonGroup>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaList/> Interval Lengths</h6>\n                <ButtonGroup className=\"my-2 w-100\">{\n                    ADJUSTABLE_INTERVAL_ROLES\n                        .map((intervalRole, index) => (\n                            <Button size=\"sm\" key={`IntervalRole[${index}]`}\n                                    onClick={() => setCurrentRole(intervalRole)}\n                                    color={currentRole === intervalRole ? \"success\" : \"secondary\"}\n                            >\n                                {intervalRoleName(intervalRole)}\n                            </Button>\n                        ))\n                }</ButtonGroup>\n                <RolePanel tensegrity={tensegrity} intervalRole={currentRole} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction RolePanel({tensegrity, intervalRole, disabled}: {\n    tensegrity: Tensegrity,\n    intervalRole: IntervalRole,\n    disabled?: boolean,\n}): JSX.Element {\n\n    function defaultLength(): number {\n        return roleDefaultLength(intervalRole)\n    }\n\n    function intervals(): IInterval[] {\n        return tensegrity.intervals.filter(interval => interval.intervalRole === intervalRole)\n    }\n\n    function setDefaultLength(): void {\n        intervals().forEach(interval => tensegrity.changeIntervalRole(interval, interval.intervalRole, percentOrHundred(), 100))\n    }\n\n    const adjustValue = (up: boolean) => () => {\n        function adjustment(): number {\n            const factor = 1.03\n            return up ? factor : (1 / factor)\n        }\n\n        intervals().forEach(interval => tensegrity.changeIntervalScale(interval, adjustment()))\n    }\n\n    return (\n        <div className=\"my-2\">\n            <div className=\"float-right\" style={{color: disabled ? \"gray\" : \"white\"}}>\n                [{floatString(defaultLength())}]\n            </div>\n            <div>\n                {intervalRoleName(intervalRole, true)}\n            </div>\n            <ButtonGroup className=\"w-100\">\n                <Button disabled={disabled} onClick={adjustValue(true)}><FaPlusSquare/></Button>\n                <Button disabled={disabled} onClick={adjustValue(false)}><FaMinusSquare/></Button>\n                <Button disabled={disabled} color=\"info\" onClick={setDefaultLength}><FaUndoAlt/></Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, SurfaceCharacter, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowAltCircleRight, FaBalanceScale, FaGlobe } from \"react-icons/all\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\nimport { FeaturePanel } from \"./feature-panel\"\nimport { LifeStageButton, StageTransition } from \"./life-stage-button\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nexport function RealizeTab({worldFeatures, tensegrity, shapeSelection, storedState$}: {\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    tensegrity: Tensegrity,\n    shapeSelection: ShapeSelection,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [storedState, updateFabricState] = useState(storedState$.getValue())\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscriptions = [\n            storedState$.subscribe(newState => {\n                updatePolygons(storedState.polygons)\n                updateFabricState(newState)\n            }),\n        ]\n        return () => subscriptions.forEach(s => s.unsubscribe())\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    function disabled(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None || life.stage < Stage.Slack\n    }\n\n    function disabledLifeStage(): boolean {\n        return polygons || shapeSelection !== ShapeSelection.None\n    }\n\n    return (\n        <div>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaArrowAltCircleRight/> Phase</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToPretensing}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CapturePretenstToSlack}\n                    disabled={disabledLifeStage()}\n                />\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.SlackToShaping}\n                    disabled={disabledLifeStage()}\n                />\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaGlobe/> Environment</h6>\n                <div>Surface</div>\n                <ButtonGroup size=\"sm\" className=\"w-100\">\n                    {Object.keys(SurfaceCharacter).map(key => (\n                        <Button\n                            key={`SurfaceCharacter[${key}]`}\n                            disabled={disabled()}\n                            active={storedState.surfaceCharacter === SurfaceCharacter[key]}\n                            onClick={() => transition(storedState$, {surfaceCharacter: SurfaceCharacter[key]})}\n                        >{key}</Button>\n                    ))}\n                </ButtonGroup>\n                <FeaturePanel feature={worldFeatures[WorldFeature.PretenstFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.StiffnessFactor]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Gravity]} disabled={disabled()}/>\n                <FeaturePanel feature={worldFeatures[WorldFeature.Drag]} disabled={disabled()}/>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaBalanceScale/> Compression vs Tension</h6>\n                <LifeStageButton\n                    tensegrity={tensegrity}\n                    stageTransition={StageTransition.CaptureStrainForStiffness}\n                    disabled={disabledLifeStage()}\n                />\n                <FeaturePanel feature={worldFeatures[WorldFeature.PushOverPull]} disabled={disabled()}/>\n            </Grouping>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport {\n    FaBug,\n    FaFutbol,\n    FaHeart,\n    FaHiking,\n    FaPlay,\n    FaRegFolder,\n    FaRegFolderOpen,\n    FaRocket,\n    FaSeedling,\n} from \"react-icons/all\"\nimport { Button, ButtonDropdown, ButtonGroup, DropdownItem, DropdownMenu, DropdownToggle, Input } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { switchToVersion, Version } from \"../fabric/eig-util\"\nimport { BOOTSTRAP, codeToTenscript, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { addRecentCode, getRecentTenscript, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { Grouping } from \"./control-tabs\"\n\nexport function TenscriptTab({rootTenscript, setRootTenscript, tensegrity, runTenscript, storedState$}: {\n    rootTenscript: ITenscript,\n    setRootTenscript: (tenscript: ITenscript) => void,\n    tensegrity?: Tensegrity,\n    runTenscript: (tenscript: ITenscript) => void,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const [tenscript, setTenscript] = useState<ITenscript>(tensegrity && !tensegrity.tenscript.fromUrl ? tensegrity.tenscript : rootTenscript)\n    const [error, setError] = useState(\"\")\n\n    const [recentOpen, setRecentOpen] = useState(false)\n    const [recentPrograms, setRecentPrograms] = useState<ITenscript[]>(getRecentTenscript(storedState$.getValue()))\n    const [bootstrapOpen, setBootstrapOpen] = useState(false)\n\n    function addToRecentPrograms(newCode: ITenscript): void {\n        setRecentPrograms(addRecentCode(storedState$, newCode))\n    }\n\n    return (\n        <div id=\"tenscript-panel\" style={{\n            flexDirection: \"column\",\n            position: \"relative\",\n            backgroundColor: \"rgba(0,0,0,1)\",\n            height: \"100%\",\n        }}>\n            <Grouping>\n                <h6 className=\"w-100 text-center\"><FaSeedling/> Tenscript</h6>\n                <div id=\"code-and-run\" style={{\n                    flexDirection: \"column\",\n                    height: \"available\",\n                }}>\n                    <CodeArea\n                        tenscript={tenscript}\n                        setTenscript={setTenscript}\n                        error={error}\n                        setError={setError}\n                    />\n                    <ButtonGroup className=\"w-100 my-2\">\n                        <Button\n                            color={error.length > 0 ? \"warning\" : \"success\"}\n                            disabled={error.length > 0}\n                            onClick={() => runTenscript(tenscript)}\n                        >\n                            {error.length === 0 ? (\n                                <span>Execute <FaPlay/> tenscript</span>\n                            ) : (\n                                <span><FaBug/> {error}</span>\n                            )}\n                        </Button>\n                    </ButtonGroup>\n                </div>\n                <ButtonGroup className=\"w-100 my-2\">\n                    <Button\n                        disabled={tenscript.code === rootTenscript.code}\n                        onClick={() => {\n                            setRootTenscript(tenscript)\n                            addToRecentPrograms(tenscript)\n                        }}\n                    >\n                        Save <FaHeart/> for later\n                    </Button>\n                </ButtonGroup>\n                {recentPrograms.length === 0 ? undefined : (\n                    <ButtonDropdown\n                        className=\"w-100 my-2\"\n                        isOpen={recentOpen}\n                        toggle={() => setRecentOpen(!recentOpen)}\n                    >\n                        <DropdownToggle style={{borderRadius: \"1.078em\"}}>\n                            {recentOpen ? <FaRegFolderOpen/> : <FaRegFolder/>} Recent\n                        </DropdownToggle>\n                        <DropdownMenu>{recentPrograms.map((recentCode, index) => (\n                            <DropdownItem key={`Recent${index}`} onClick={() => runTenscript(recentCode)}>\n                                {recentCode.name}\n                            </DropdownItem>\n                        ))}</DropdownMenu>\n                    </ButtonDropdown>\n                )}\n                <ButtonDropdown\n                    className=\"w-100 my-2\"\n                    isOpen={bootstrapOpen}\n                    toggle={() => setBootstrapOpen(!bootstrapOpen)}\n                >\n                    <DropdownToggle color=\"info\" style={{borderRadius: \"1.078em\"}}>\n                        Explore <FaHiking/> existing designs\n                    </DropdownToggle>\n                    <DropdownMenu>{BOOTSTRAP.map((bootstrapProgram, index) => (\n                        <DropdownItem key={`Boot${index}`} onClick={() => runTenscript(bootstrapProgram)}>\n                            {bootstrapProgram.name}\n                        </DropdownItem>\n                    ))}</DropdownMenu>\n                </ButtonDropdown>\n            </Grouping>\n            <Grouping>\n                <h6 className=\"w-100 text-center\">Special <FaRocket/> versions</h6>\n                <ButtonGroup vertical={false} className=\"w-100\">\n                    <Button onClick={() => switchToVersion(Version.Sphere)}>\n                        <FaFutbol/>\n                    </Button>\n                    <Button onClick={() => {\n                        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n                        runTenscript(BOOTSTRAP[0])\n                    }}>\n                        <FaPlay/>\n                    </Button>\n                    {/*<Button onClick={() => switchToVersion(Version.Bridge)}>*/}\n                    {/*    <FaDungeon/>*/}\n                    {/*</Button>*/}\n                    {/*<Button onClick={() => switchToVersion(Version.Gotchi)}>*/}\n                    {/*    <FaBug/>*/}\n                    {/*</Button>*/}\n                </ButtonGroup>\n            </Grouping>\n        </div>\n    )\n}\n\nfunction CodeArea({tenscript, setTenscript, error, setError}: {\n    tenscript: ITenscript,\n    setTenscript: (tenscript: ITenscript) => void,\n    error: string,\n    setError: (message: string) => void,\n}): JSX.Element {\n\n    const [tenscriptCode, setTenscriptCode] = useState(\"\")\n    useEffect(() => setTenscriptCode(tenscript.code), [])\n\n    function compile(newCode: string): void {\n        const compiled = codeToTenscript(setError, false, newCode)\n        if (compiled) {\n            setError(\"\")\n            setTenscript(compiled)\n        }\n    }\n\n    function onCodeChange(newCode: string): void {\n        setTenscriptCode(newCode)\n        compile(newCode)\n    }\n\n    return (\n        <div\n            className=\"my-2 p-2 w-100\"\n            style={{\n                backgroundColor: \"#757575\",\n                color: \"#ffffff\",\n                borderStyle: \"solid\",\n                borderRadius: \"1em\",\n                borderColor: error.length === 0 ? \"black\" : \"#f0ad4e\",\n                borderWidth: \"2px\",\n            }}\n        >\n            <h6 className=\"w-100 text-center\">\n                <i>\"{tenscript.name}\"</i>\n            </h6>\n            <Input\n                style={{\n                    borderRadius: \"1em\",\n                    height: \"17em\",\n                }}\n                type=\"textarea\" id=\"tenscript\"\n                value={tenscriptCode}\n                onChange={changeEvent => onCodeChange(changeEvent.target.value)}\n            />\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { FaArrowLeft } from \"react-icons/all\"\nimport { Alert, Button, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\n\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { Life } from \"../fabric/life\"\nimport { ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IJoint } from \"../fabric/tensegrity-types\"\nimport { ControlTab, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { FrozenTab } from \"./frozen-tab\"\nimport { LiveTab } from \"./live-tab\"\nimport { RealizeTab } from \"./realize-tab\"\nimport { ShapeSelection, ShapeTab } from \"./shape-tab\"\nimport { TenscriptTab } from \"./tenscript-tab\"\n\nconst SPLIT_LEFT = \"25em\"\n\nexport function ControlTabs(\n    {\n        worldFeatures,\n        rootTenscript, setRootTenscript,\n        shapeSelection, setShapeSelection,\n        selectedJoints, clearSelection, selectedIntervals,\n        tensegrity, setFabric, runTenscript,\n        toFullScreen, storedState$,\n    }: {\n        worldFeatures: Record<WorldFeature, FloatFeature>,\n        rootTenscript: ITenscript,\n        setRootTenscript: (tenscript: ITenscript) => void,\n        selectedJoints: IJoint[],\n        selectedIntervals: IInterval[],\n        clearSelection: () => void,\n        runTenscript: (tenscript: ITenscript) => void,\n        tensegrity?: Tensegrity,\n        setFabric: (tensegrity: Tensegrity) => void,\n        shapeSelection: ShapeSelection,\n        setShapeSelection: (shapeSelection: ShapeSelection) => void,\n        toFullScreen: () => void,\n        storedState$: BehaviorSubject<IStoredState>,\n    }): JSX.Element {\n\n    const [life, updateLife] = useState<Life | undefined>(tensegrity ? tensegrity.life$.getValue() : undefined)\n    useEffect(() => {\n        const sub = tensegrity ? tensegrity.life$.subscribe(updateLife) : undefined\n        return () => {\n            if (sub) {\n                sub.unsubscribe()\n            }\n        }\n    }, [tensegrity])\n\n    const [controlTab, updateControlTab] = useState(storedState$.getValue().controlTab)\n    useEffect(() => {\n        if (controlTab !== ControlTab.Shape) {\n            clearSelection()\n        }\n    }, [controlTab, life])\n\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateControlTab(newState.controlTab))\n        return () => sub.unsubscribe()\n    }, [])\n\n    function Link({tab}: { tab: ControlTab }): JSX.Element {\n        return (\n            <NavItem>\n                <NavLink\n                    active={controlTab === tab}\n                    onClick={() => transition(storedState$, {controlTab: tab})}\n                >{tab}</NavLink>\n            </NavItem>\n        )\n    }\n\n    function Pane({tab}: { tab: ControlTab }): JSX.Element {\n\n        const NO_FABRIC = <Alert color=\"warning\">No fabric</Alert>\n\n        function Content(): JSX.Element {\n            switch (tab) {\n                case ControlTab.Grow:\n                    return (\n                        <TenscriptTab\n                            rootTenscript={rootTenscript}\n                            setRootTenscript={setRootTenscript}\n                            tensegrity={tensegrity}\n                            runTenscript={runTenscript}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Shape:\n                    return !tensegrity ? NO_FABRIC : (\n                        <ShapeTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            setFabric={setFabric}\n                            selectedIntervals={selectedIntervals}\n                            shapeSelection={shapeSelection}\n                            setShapeSelection={setShapeSelection}\n                            selectedJoints={selectedJoints}\n                            clearSelection={clearSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Live:\n                    return !tensegrity ? NO_FABRIC : (\n                        <LiveTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Realize:\n                    return !tensegrity ? NO_FABRIC : (\n                        <RealizeTab\n                            worldFeatures={worldFeatures}\n                            tensegrity={tensegrity}\n                            shapeSelection={shapeSelection}\n                            storedState$={storedState$}\n                        />\n                    )\n                case ControlTab.Frozen:\n                    return !tensegrity ? NO_FABRIC : (\n                        <FrozenTab\n                            tensegrity={tensegrity}\n                            worldFeatures={worldFeatures}\n                            storedState$={storedState$}\n                        />\n                    )\n            }\n        }\n\n        return (\n            <TabPane id=\"tab-pane\" style={{height: \"100%\"}} tabId={tab}><Content/></TabPane>\n        )\n    }\n\n    function FullScreenButton(): JSX.Element {\n        return (\n            <Button\n                style={{\n                    padding: 0,\n                    margin: 0,\n                    borderRadius: 0,\n                    width: \"1em\",\n                }}\n                className=\"w-100 h-100\" color=\"dark\"\n                onClick={toFullScreen}\n            >\n                <FaArrowLeft/>\n            </Button>\n        )\n    }\n\n    return (\n        <div className=\"h-100\">\n            <Nav tabs={true} style={{backgroundColor: \"#b2b2b2\"}}>\n                {Object.keys(ControlTab).map(tab => <Link key={`T${tab}`} tab={ControlTab[tab]}/>)}\n            </Nav>\n            <TabContent style={{flex: 1, flexFlow: \"auto\", height: \"100%\"}} id=\"tab-content\" activeTab={controlTab}>\n                {Object.keys(ControlTab).map(tab => <Pane key={tab} tab={ControlTab[tab]}/>)}\n            </TabContent>\n            <div style={{\n                position: \"absolute\",\n                top: 0,\n                height: \"100%\",\n                left: SPLIT_LEFT,\n                zIndex: 10,\n                width: \"1em\",\n            }}>\n                <FullScreenButton/>\n            </div>\n        </div>\n    )\n}\n\nexport function Grouping({children, height}: {\n    children: JSX.Element | (JSX.Element[] | JSX.Element | undefined)[],\n    height?: string,\n}): JSX.Element {\n    return (\n        <div className=\"m-3 p-2\" style={{\n            height,\n            borderRadius: \"1em\",\n            borderStyle: \"solid\",\n            borderWidth: \"0.1em\",\n            borderColor: \"#45782e\",\n        }}>\n            {children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { DomEvent, extend, ReactThreeFiber, useFrame, useThree, useUpdate } from \"react-three-fiber\"\nimport { BehaviorSubject } from \"rxjs\"\nimport {\n    BackSide,\n    Color,\n    CylinderGeometry,\n    Euler,\n    FrontSide,\n    MeshPhongMaterial,\n    Object3D,\n    PerspectiveCamera,\n    Quaternion,\n    SphereGeometry,\n    TextureLoader,\n    Vector3,\n} from \"three\"\n\nimport { doNotClick, UP } from \"../fabric/eig-util\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { TensegrityBuilder } from \"../fabric/tensegrity-builder\"\nimport {\n    IFace,\n    IInterval,\n    IJoint,\n    intervalLength,\n    intervalLocation,\n    jointLocation,\n    locationFromJoints,\n} from \"../fabric/tensegrity-types\"\nimport { PULL_RADIUS, PUSH_RADIUS } from \"../pretenst\"\nimport { isIntervalVisible, IStoredState, transition } from \"../storage/stored-state\"\n\nimport { JOINT_MATERIAL, LINE_VERTEX_COLORS, roleMaterial, SELECT_MATERIAL, SUBDUED_MATERIAL } from \"./materials\"\nimport { Orbit } from \"./orbit\"\nimport { ShapeSelection } from \"./shape-tab\"\nimport { SurfaceComponent } from \"./surface-component\"\n\nextend({Orbit})\n\nconst SPHERE = new SphereGeometry(0.05, 32, 8)\nconst SELECTION_SCALE = new Vector3(1.1, 1.1, 1.1)\nconst CYLINDER = new CylinderGeometry(1, 1, 1, 12, 1, false)\n\ndeclare global {\n    namespace JSX {\n        /* eslint-disable @typescript-eslint/interface-name-prefix */\n        interface IntrinsicElements {\n            orbit: ReactThreeFiber.Object3DNode<Orbit, typeof Orbit>\n        }\n\n        /* eslint-enable @typescript-eslint/interface-name-prefix */\n    }\n}\n\nconst AMBIENT_COLOR = new Color(\"#ffffff\")\nconst SPACE_RADIUS = 100\nconst SPACE_SCALE = 1\nconst SPACE_GEOMETRY = new SphereGeometry(SPACE_RADIUS, 25, 25)\n    .scale(SPACE_SCALE, SPACE_SCALE, SPACE_SCALE)\n\nconst TOWARDS_TARGET = 0.01\nconst TOWARDS_POSITION = 0.01\nconst ALTITUDE = 1\n\nexport function FabricView({\n                               tensegrity,\n                               selectedIntervals, toggleSelectedInterval,\n                               selectedJoints, setSelectedJoints, storedState$,\n                               shapeSelection, polygons,\n                           }: {\n    tensegrity: Tensegrity,\n    selectedIntervals: IInterval[],\n    toggleSelectedInterval: (interval: IInterval) => void,\n    selectedJoints: IJoint[],\n    setSelectedJoints: (joints: IJoint[]) => void,\n    shapeSelection: ShapeSelection,\n    polygons: boolean,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const viewContainer = document.getElementById(\"view-container\") as HTMLElement\n    const [whyThis, updateWhyThis] = useState(0)\n    const {camera} = useThree()\n    const perspective = camera as PerspectiveCamera\n    if (!perspective) {\n        throw new Error(\"Wheres the camera tenseg?\")\n    }\n    const spaceMaterial = useMemo(() => {\n        const spaceTexture = new TextureLoader().load(\"space.jpg\")\n        return new MeshPhongMaterial({map: spaceTexture, side: BackSide})\n    }, [])\n\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    const [instance, updateInstance] = useState(tensegrity.instance)\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        updateInstance(tensegrity.instance)\n        updateWhyThis(0)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n\n    const [storedState, updateStoredState] = useState(storedState$.getValue())\n    useEffect(() => {\n        const sub = storedState$.subscribe(newState => updateStoredState(newState))\n        return () => sub.unsubscribe()\n    }, [])\n    useEffect(() => {\n        orbit.current.autoRotate = storedState.rotating\n    }, [storedState])\n\n    const orbit = useUpdate<Orbit>(updatedOrbit => {\n        const midpoint = new Vector3(0, ALTITUDE, 0)\n        perspective.position.set(midpoint.x, ALTITUDE, midpoint.z + ALTITUDE * 4)\n        perspective.lookAt(updatedOrbit.target)\n        perspective.fov = 60\n        perspective.far = SPACE_RADIUS * 2\n        perspective.near = 0.001\n        updatedOrbit.object = perspective\n        updatedOrbit.minPolarAngle = -0.98 * Math.PI / 2\n        updatedOrbit.maxPolarAngle = 0.8 * Math.PI\n        updatedOrbit.maxDistance = SPACE_RADIUS * SPACE_SCALE * 0.9\n        updatedOrbit.zoomSpeed = 0.5\n        updatedOrbit.enableZoom = true\n        updatedOrbit.target.set(midpoint.x, midpoint.y, midpoint.z)\n        updatedOrbit.update()\n    }, [])\n\n    useFrame(() => {\n        const view = instance.view\n        const target = selectedJoints.length > 0 ? locationFromJoints(selectedJoints) :\n            new Vector3(view.midpoint_x(), view.midpoint_y(), view.midpoint_z())\n        const towardsTarget = new Vector3().subVectors(target, orbit.current.target).multiplyScalar(TOWARDS_TARGET)\n        orbit.current.target.add(towardsTarget)\n        if (storedState.demoCount >= 0) {\n            const eye = camera.position\n            eye.y += (target.y - eye.y) * TOWARDS_POSITION\n            const distanceChange = eye.distanceTo(target) - view.radius() * 1.7\n            const towardsDistance = new Vector3().subVectors(target,eye).normalize().multiplyScalar(distanceChange * TOWARDS_POSITION)\n            eye.add(towardsDistance)\n        }\n        orbit.current.update()\n        if (!polygons && shapeSelection !== ShapeSelection.Joints) {\n            const nextStage = tensegrity.iterate()\n            if (life.stage === Stage.Pretensing && nextStage === Stage.Pretenst) {\n                tensegrity.transition = {stage: Stage.Pretenst}\n            } else if (nextStage !== undefined && nextStage !== life.stage && life.stage !== Stage.Pretensing) {\n                tensegrity.transition = {stage: nextStage}\n            }\n            switch (nextStage) {\n                case undefined:\n                case Stage.Growing:\n                    updateWhyThis(whyThis - 1)\n                    break\n                case Stage.Shaping:\n                    if (whyThis < 0) {\n                        updateWhyThis(0)\n                    } else {\n                        updateWhyThis(whyThis + 1)\n                    }\n                    if (whyThis === 500 && storedState.demoCount >= 0) {\n                        transition(storedState$, {demoCount: storedState.demoCount + 1, rotating: true})\n                    }\n                    break\n            }\n        }\n    })\n\n    function toggleSelectedJoint(jointToToggle: IJoint): void {\n        if (selectedJoints.some(selected => selected.index === jointToToggle.index)) {\n            setSelectedJoints(selectedJoints.filter(b => b.index !== jointToToggle.index))\n        } else {\n            setSelectedJoints([...selectedJoints, jointToToggle])\n        }\n    }\n\n    return (\n        <group>\n            <orbit ref={orbit} args={[perspective, viewContainer]}/>\n            <scene>\n                {polygons ? (\n                    <group>\n                        {tensegrity.intervals\n                            .map(interval => (\n                                <IntervalMesh\n                                    key={`I${interval.index}`}\n                                    tensegrity={tensegrity}\n                                    interval={interval}\n                                    selected={false}\n                                    storedState={storedState}\n                                />\n                            ))}\n                        }\n                    </group>\n                ) : (\n                    <>\n                        <lineSegments\n                            key=\"lines\"\n                            geometry={tensegrity.instance.floatView.lineGeometry}\n                            material={LINE_VERTEX_COLORS}\n                        />\n                        <Faces\n                            tensegrity={tensegrity}\n                            stage={life.stage}\n                            clickFace={face => {\n                                const builder = new TensegrityBuilder(tensegrity)\n                                builder.createTwistOn(face, face.scale, false)\n                            }}\n                        />\n                    </>\n                )}\n                {selectedIntervals.map(interval => (\n                    <IntervalMesh\n                        key={`SI${interval.index}`}\n                        tensegrity={tensegrity}\n                        interval={interval}\n                        selected={true}\n                        storedState={storedState}\n                        toggleInterval={() => toggleSelectedInterval(interval)}\n                    />\n                ))}\n                {shapeSelection !== ShapeSelection.Joints ? undefined : tensegrity.joints.map(joint => (\n                    <JointMesh\n                        key={`J${joint.index}`}\n                        joint={joint}\n                        selected={false}\n                        toggleJoint={() => toggleSelectedJoint(joint)}\n                    />\n                ))}\n                {shapeSelection !== ShapeSelection.Joints ? undefined : selectedJoints.map(joint => (\n                    <JointMesh\n                        key={`SJ${joint.index}`}\n                        joint={joint}\n                        selected={true}\n                        toggleJoint={() => toggleSelectedJoint(joint)}\n                    />\n                ))}\n                <SurfaceComponent/>\n                <mesh key=\"space\" geometry={SPACE_GEOMETRY} material={spaceMaterial}/>\n                <ambientLight color={AMBIENT_COLOR} intensity={0.8}/>\n                <directionalLight color={new Color(\"#FFFFFF\")} intensity={2}/>\n            </scene>\n        </group>\n    )\n}\n\nfunction JointMesh({joint, selected, toggleJoint}: { joint: IJoint, selected: boolean, toggleJoint: () => void }): JSX.Element {\n    return (\n        <mesh\n            key={`SJ${joint.index}`}\n            geometry={SPHERE}\n            position={jointLocation(joint)}\n            material={selected ? SELECT_MATERIAL : JOINT_MATERIAL}\n            matrixWorldNeedsUpdate={true}\n            scale={selected ? SELECTION_SCALE : undefined}\n            onPointerDown={toggleJoint}\n        />\n    )\n}\n\nfunction IntervalMesh({tensegrity, interval, selected, storedState, toggleInterval}: {\n    tensegrity: Tensegrity,\n    interval: IInterval,\n    selected: boolean,\n    storedState: IStoredState,\n    toggleInterval?: (event: DomEvent) => void,\n}): JSX.Element | null {\n\n    const material = selected ? SELECT_MATERIAL :\n        isIntervalVisible(interval, storedState) ? roleMaterial(interval.intervalRole) : SUBDUED_MATERIAL\n    const radius = interval.isPush ? PUSH_RADIUS : PULL_RADIUS\n    const unit = tensegrity.instance.unitVector(interval.index)\n    const rotation = new Quaternion().setFromUnitVectors(UP, unit)\n    const length = intervalLength(interval)\n    const intervalScale = new Vector3(radius, length, radius)\n    return (\n        <mesh\n            geometry={CYLINDER}\n            position={intervalLocation(interval)}\n            rotation={new Euler().setFromQuaternion(rotation)}\n            scale={intervalScale}\n            material={material}\n            matrixWorldNeedsUpdate={true}\n            onPointerDown={toggleInterval}\n        />\n    )\n}\n\nfunction Faces({tensegrity, stage, clickFace}: {\n    tensegrity: Tensegrity,\n    stage: Stage,\n    clickFace: (face: IFace) => void,\n}): JSX.Element {\n    const {raycaster} = useThree()\n    const meshRef = useRef<Object3D>()\n    const [downEvent, setDownEvent] = useState<DomEvent | undefined>()\n    const onPointerDown = (event: DomEvent) => setDownEvent(event)\n    const onPointerUp = (event: DomEvent) => {\n        const mesh = meshRef.current\n        if (doNotClick(stage) || !downEvent || !mesh) {\n            return\n        }\n        const dx = downEvent.clientX - event.clientX\n        const dy = downEvent.clientY - event.clientY\n        const distanceSq = dx * dx + dy * dy\n        if (distanceSq > 100) {\n            return\n        }\n        const intersections = raycaster.intersectObjects([mesh], true)\n        const faces = intersections.map(intersection => intersection.faceIndex).map(faceIndex => {\n            if (faceIndex === undefined) {\n                return undefined\n            }\n            return tensegrity.faces[faceIndex]\n        })\n        const face = faces.reverse().pop()\n        setDownEvent(undefined)\n        if (!face) {\n            return\n        }\n        clickFace(face)\n    }\n    return (\n        <mesh\n            key=\"faces\"\n            ref={meshRef}\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            geometry={tensegrity.instance.floatView.faceGeometry}\n        >\n            <meshPhongMaterial\n                attach=\"material\"\n                transparent={true}\n                side={FrontSide}\n                opacity={0.4}\n                color=\"white\"/>\n        </mesh>\n    )\n}\n\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { Stage, WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { FaArrowRight, FaMale, FaPlay, FaRunning, FaSignOutAlt, FaSyncAlt, FaToolbox } from \"react-icons/all\"\nimport { Canvas } from \"react-three-fiber\"\nimport { Button, ButtonGroup } from \"reactstrap\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { switchToVersion, Version, versionFromUrl } from \"../fabric/eig-util\"\nimport { CreateInstance } from \"../fabric/fabric-instance\"\nimport { FloatFeature } from \"../fabric/float-feature\"\nimport { BOOTSTRAP, getCodeFromUrl, ITenscript } from \"../fabric/tenscript\"\nimport { Tensegrity } from \"../fabric/tensegrity\"\nimport { IInterval, IJoint, intervalsTouching, percentOrHundred } from \"../fabric/tensegrity-types\"\nimport { IStoredState, transition } from \"../storage/stored-state\"\n\nimport { ControlTabs } from \"./control-tabs\"\nimport { FabricView } from \"./fabric-view\"\nimport { ShapeSelection } from \"./shape-tab\"\n\nconst SPLIT_LEFT = \"25em\"\nconst SPLIT_RIGHT = \"26em\"\n\nfunction getCodeToRun(state: IStoredState): ITenscript | undefined {\n    if (versionFromUrl() !== Version.Design) {\n        switchToVersion(versionFromUrl())\n    } else {\n        const fromUrl = getCodeFromUrl()\n        if (fromUrl) {\n            return fromUrl\n        }\n        if (state.demoCount >= 0) {\n            return BOOTSTRAP[state.demoCount % BOOTSTRAP.length]\n        }\n    }\n    return undefined\n}\n\nexport function TensegrityView({createInstance, worldFeatures, storedState$}: {\n    createInstance: CreateInstance,\n    worldFeatures: Record<WorldFeature, FloatFeature>,\n    storedState$: BehaviorSubject<IStoredState>,\n}): JSX.Element {\n\n    const mainInstance = useMemo(() => createInstance(false), [])\n\n    const [tensegrity, setTensegrity] = useState<Tensegrity | undefined>()\n    const [selectedJoints, setSelectedJoints] = useState<IJoint[]>([])\n    const [selectedIntervals, setSelectedIntervals] = useState<IInterval[]>([])\n\n    useEffect(() => {\n        if (!tensegrity) {\n            return\n        }\n        const selected = tensegrity.intervals.filter(intervalsTouching(selectedJoints))\n        setSelectedIntervals(selected)\n    }, [selectedJoints, tensegrity])\n\n    const [rootTenscript, setRootTenscript] = useState(() => {\n        const codeToRun = getCodeToRun(storedState$.getValue())\n        if (codeToRun) {\n            return codeToRun\n        }\n        transition(storedState$, {demoCount: 0, fullScreen: true, rotating: true})\n        return BOOTSTRAP[0]\n    })\n    useEffect(() => {\n        if (!location.hash.startsWith(\"#`\")) {\n            location.hash = rootTenscript.code\n        }\n    }, [rootTenscript])\n\n    const [rotating, updateRotating] = useState(storedState$.getValue().rotating)\n    const [shapeSelection, setShapeSelection] = useState(ShapeSelection.None)\n    const [fullScreen, updateFullScreen] = useState(storedState$.getValue().fullScreen)\n    const [demoCount, updateDemoCount] = useState(storedState$.getValue().demoCount)\n    const [polygons, updatePolygons] = useState(storedState$.getValue().polygons)\n    useEffect(() => {\n        const subscription = storedState$.subscribe(storedState => {\n            updateFullScreen(storedState.fullScreen)\n            if (storedState.demoCount < 0) {\n                updateDemoCount(storedState.demoCount)\n            } else if (storedState.demoCount > demoCount) {\n                if (demoCount + 1 === BOOTSTRAP.length) {\n                    setRootTenscript(BOOTSTRAP[0])\n                    setTimeout(() => {\n                        transition(storedState$, {demoCount: -1, fullScreen: false, rotating: false})\n                    }, 200)\n                } else {\n                    updateDemoCount(storedState.demoCount)\n                    setRootTenscript(BOOTSTRAP[storedState.demoCount])\n                }\n            }\n            updatePolygons(storedState.polygons)\n            updateRotating(storedState.rotating)\n            mainInstance.world.set_surface_character(storedState.surfaceCharacter)\n        })\n        return () => subscription.unsubscribe()\n    }, [tensegrity])\n\n    useEffect(() => {\n        const featureSubscriptions = Object.keys(worldFeatures).map(k => worldFeatures[k]).map((feature: FloatFeature) =>\n            feature.observable.subscribe(() => {\n                if (tensegrity) {\n                    tensegrity.instance.applyFeature(feature)\n                }\n            }))\n        return () => featureSubscriptions.forEach(sub => sub.unsubscribe())\n    }, [tensegrity])\n\n    function runTenscript(newTenscript: ITenscript): void {\n        if (!mainInstance) {\n            return\n        }\n        location.hash = newTenscript.code\n        worldFeatures[WorldFeature.ShapingPretenstFactor].percent = 100\n        worldFeatures[WorldFeature.ShapingDrag].percent = 100\n        worldFeatures[WorldFeature.ShapingStiffnessFactor].percent = 100\n        transition(storedState$, {polygons: false})\n        const numericFeature = (feature: WorldFeature) => storedState$.getValue().featureValues[feature].numeric\n        setTensegrity(new Tensegrity(new Vector3(), percentOrHundred(), numericFeature, mainInstance, newTenscript))\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => runTenscript(rootTenscript), 200)\n        return () => clearTimeout(timer)\n    }, [rootTenscript])\n\n    function toFullScreen(value: boolean): void {\n        transition(storedState$, {fullScreen: value})\n    }\n\n    return (\n        <>\n            {fullScreen ? demoCount >= 0 ? undefined : (\n                <Button id=\"to-full-screen\" color=\"dark\" onClick={() => toFullScreen(false)}>\n                    <FaArrowRight/><br/><FaToolbox/><br/><FaArrowRight/>\n                </Button>\n            ) : (\n                <div\n                    id=\"left-side\"\n                    style={{\n                        visibility: fullScreen ? \"collapse\" : \"visible\",\n                        width: SPLIT_LEFT,\n                    }}\n                >\n                    <ControlTabs\n                        worldFeatures={worldFeatures}\n                        rootTenscript={rootTenscript}\n                        setRootTenscript={setRootTenscript}\n                        tensegrity={tensegrity}\n                        setFabric={setTensegrity}\n                        selectedIntervals={selectedIntervals}\n                        shapeSelection={shapeSelection}\n                        setShapeSelection={setShapeSelection}\n                        selectedJoints={selectedJoints}\n                        clearSelection={() => {\n                            setSelectedJoints([])\n                            setSelectedIntervals([])\n                        }}\n                        runTenscript={runTenscript}\n                        toFullScreen={() => toFullScreen(true)}\n                        storedState$={storedState$}\n                    />\n                </div>\n            )}\n            <div style={{\n                position: \"absolute\",\n                left: fullScreen ? 0 : SPLIT_RIGHT,\n                right: 0,\n                height: \"100%\",\n            }}>\n                {!tensegrity ? (\n                    <div id=\"tensegrity-view\" className=\"h-100\">\n                        <div style={{position: \"relative\", top: \"50%\", left: \"50%\"}}>\n                            <Button onClick={() => runTenscript(rootTenscript)}>\n                                <h6>{rootTenscript.name}</h6>\n                                <h1><FaPlay/></h1>\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"h-100\">\n                        <TopMiddle tensegrity={tensegrity}/>\n                        {demoCount >= 0 ? (\n                            <div id=\"bottom-right\">\n                                <ButtonGroup>\n                                    <Button\n                                        color=\"success\"\n                                        onClick={() => {\n                                            transition(storedState$, {\n                                                demoCount: -1,\n                                                fullScreen: false,\n                                                rotating: false,\n                                            })\n                                        }}\n                                    >\n                                        <FaSignOutAlt/> Exit demo\n                                    </Button>\n                                </ButtonGroup>\n                            </div>\n                        ) : (\n                            <div>\n                                <div id=\"bottom-right\">\n                                    <ButtonGroup>\n                                        <Button\n                                            color={rotating ? \"warning\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {rotating: !rotating})}\n                                        >\n                                            <FaSyncAlt/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                                <div id=\"bottom-left\">\n                                    <ButtonGroup>\n                                        <Button\n                                            disabled={!polygons}\n                                            color={!polygons ? \"success\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {polygons: false})}\n                                        >\n                                            <FaRunning/>\n                                        </Button>\n                                        <Button\n                                            disabled={polygons}\n                                            color={polygons ? \"success\" : \"secondary\"}\n                                            onClick={() => transition(storedState$, {polygons: true})}\n                                        >\n                                            <FaMale/>\n                                        </Button>\n                                    </ButtonGroup>\n                                </div>\n                            </div>\n                        )}\n                        <div id=\"view-container\" className=\"h-100\">\n                            <Canvas style={{\n                                backgroundColor: \"black\",\n                                borderStyle: \"solid\",\n                                borderColor: polygons ? \"#f0ad4e\" : \"black\",\n                                cursor: shapeSelection === ShapeSelection.Joints ? \"pointer\" : \"all-scroll\",\n                                borderWidth: \"2px\",\n                            }}>\n                                <FabricView\n                                    tensegrity={tensegrity}\n                                    selectedIntervals={selectedIntervals}\n                                    toggleSelectedInterval={interval => setSelectedIntervals(intervals => intervals.filter(i => i.index !== interval.index))}\n                                    selectedJoints={selectedJoints}\n                                    setSelectedJoints={setSelectedJoints}\n                                    shapeSelection={shapeSelection}\n                                    polygons={polygons}\n                                    storedState$={storedState$}\n                                />\n                            </Canvas>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    )\n}\n\nfunction TopMiddle({tensegrity}: { tensegrity: Tensegrity }): JSX.Element {\n    const [life, updateLife] = useState(tensegrity.life$.getValue())\n    useEffect(() => {\n        const sub = tensegrity.life$.subscribe(updateLife)\n        return () => sub.unsubscribe()\n    }, [tensegrity])\n    return (\n        <div id=\"top-middle\">\n            <span>{Stage[life.stage]}</span> <i>\"{tensegrity.tenscript.name}\"</i>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2019. Beautiful Code BV, Rotterdam, Netherlands\n * Licensed under GNU GENERAL PUBLIC LICENSE Version 3.\n */\n\nimport { WorldFeature } from \"eig\"\nimport * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport { BehaviorSubject } from \"rxjs\"\nimport { Vector3 } from \"three\"\n\nimport { bridgeNumeric, bridgeTenscript } from \"./bridge/bridge-logic\"\nimport { BridgeView } from \"./bridge/bridge-view\"\nimport { FABRIC_FEATURES, Version, versionFromUrl } from \"./fabric/eig-util\"\nimport { CreateInstance, FabricInstance } from \"./fabric/fabric-instance\"\nimport { createFloatFeatures, featureConfig } from \"./fabric/float-feature\"\nimport { codeToTenscript } from \"./fabric/tenscript\"\nimport { Tensegrity } from \"./fabric/tensegrity\"\nimport { percentFromFactor, percentOrHundred } from \"./fabric/tensegrity-types\"\nimport { Genome } from \"./gotchi/genome\"\nimport {\n    freshGotchiState,\n    Gotchi,\n    GOTCHI_TENSCRIPT,\n    gotchiNumeric,\n    IGotchiState,\n    SATOSHI_TREE_TENSCRIPT,\n    treeNumeric,\n} from \"./gotchi/gotchi\"\nimport { GotchiView } from \"./gotchi/gotchi-view\"\nimport { Island, ISource } from \"./gotchi/island\"\nimport { Patch } from \"./gotchi/patch\"\nimport { SatoshiTree } from \"./gotchi/satoshi-tree\"\nimport registerServiceWorker from \"./service-worker\"\nimport { sphereNumeric } from \"./sphere/sphere-builder\"\nimport { SphereView } from \"./sphere/sphere-view\"\nimport { TensegritySphere } from \"./sphere/tensegrity-sphere\"\nimport { loadState, saveState } from \"./storage/stored-state\"\nimport { TensegrityView } from \"./view/tensegrity-view\"\n\nconst tenscriptError = (error: string) => {\n    throw new Error(`Unable to compile: ${error}`)\n}\nconst toTenscript = (code: string) => {\n    const tenscript = codeToTenscript(tenscriptError, false, code)\n    if (!tenscript) {\n        throw new Error(\"Unable to build body\")\n    }\n    return tenscript\n}\n\nfunction render(element: JSX.Element): void {\n    const root = document.getElementById(\"root\") as HTMLElement\n    ReactDOM.render(element, root)\n}\n\nexport async function startReact(\n    eig: typeof import(\"eig\"),\n    stickyWorld: typeof import(\"eig\").World,\n    frozenWorld: typeof import(\"eig\").World,\n): Promise<void> {\n    const createInstance: CreateInstance = (frozen: boolean, fabric?: object) => (\n        new FabricInstance(eig, 200, frozen ? frozenWorld : stickyWorld, fabric)\n    )\n    switch (versionFromUrl()) {\n        case Version.Gotchi:\n            location.hash = \"gotchi\"\n            const createTensegrity = (\n                instance: FabricInstance,\n                gotchiValue: (feature: WorldFeature) => number,\n                gotchiLocation: Vector3,\n                code: string,\n            ) => {\n                FABRIC_FEATURES.forEach(feature => instance.world.set_float_value(feature, gotchiValue(feature)))\n                return new Tensegrity(gotchiLocation, percentOrHundred(), gotchiValue, instance, toTenscript(code))\n            }\n            const source: ISource = {\n                newGotchi(patch: Patch, instance: FabricInstance, genome: Genome): Gotchi {\n                    const state: IGotchiState = freshGotchiState(patch, instance, genome)\n                    return new Gotchi(state, instance.fabric.age !== 0 ? undefined :\n                        createTensegrity(\n                            instance, (feature: WorldFeature) => gotchiNumeric(feature, eig.default_world_feature(feature)),\n                            patch.center, GOTCHI_TENSCRIPT,\n                        ))\n                },\n                newSatoshiTree(patch: Patch, instance: FabricInstance): SatoshiTree {\n                    return new SatoshiTree(patch.name, createTensegrity(\n                        instance, (feature: WorldFeature) => treeNumeric(feature, eig.default_world_feature(feature)),\n                        patch.center, SATOSHI_TREE_TENSCRIPT,\n                    ))\n                },\n            }\n            const island = new Island(source, \"Pretenst Island\", 1001010)\n            render(<GotchiView island={island}\n                               homePatch={island.patches[0]}\n                               createInstance={createInstance}/>)\n            break\n        case Version.Bridge:\n            location.hash = \"bridge\"\n            const numericFeature = (feature: WorldFeature) => bridgeNumeric(feature, eig.default_world_feature(feature))\n            const bridgeInstance = createInstance(true)\n            FABRIC_FEATURES.forEach(feature => bridgeInstance.world.set_float_value(feature, numericFeature(feature)))\n            const tenscript = toTenscript(bridgeTenscript())\n            const scale = percentFromFactor(3.5)\n            const tensegrity = new Tensegrity(new Vector3(), scale, numericFeature, bridgeInstance, tenscript)\n            render(<BridgeView tensegrity={tensegrity}/>)\n            break\n        case Version.Sphere:\n            const numeric = (feature: WorldFeature) => sphereNumeric(feature, eig.default_world_feature(feature))\n            const sphereInstance = createInstance(false)\n            FABRIC_FEATURES.forEach(feature => sphereInstance.world.set_float_value(feature, numeric(feature)))\n            const at = new Vector3(0, 3, 0)\n            const createSphere = (frequency: number) => new TensegritySphere(at, 0.7, frequency, 0.52, numeric, sphereInstance)\n            render(<SphereView createSphere={createSphere}/>)\n            break\n        default:\n            const storedState$ = new BehaviorSubject(loadState(featureConfig, eig.default_world_feature))\n            storedState$.subscribe(newState => saveState(newState))\n            const floatFeatures = createFloatFeatures(storedState$, eig.default_world_feature)\n            render(<TensegrityView createInstance={createInstance}\n                                   worldFeatures={floatFeatures}\n                                   storedState$={storedState$}/>)\n            break\n    }\n    registerServiceWorker()\n}\n"],"sourceRoot":""}