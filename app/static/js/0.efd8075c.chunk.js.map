{"version":3,"sources":["../../eig/pkg/eig.js"],"names":["cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","Uint8Array","subarray","_assertClass","instance","klass","Error","concat","name","cachegetFloat32Memory0","getFloat32Memory0","Float32Array","WASM_VECTOR_LEN","passArrayF32ToWasm0","arg","malloc","length","set","default_fabric_feature","fabric_feature","Stage","Object","freeze","Busy","Growing","Shaping","Slack","Realizing","Realized","SurfaceCharacter","Frozen","Sticky","Slippery","Bouncy","FabricFeature","Gravity","Drag","PretenstFactor","IterationsPerFrame","IntervalCountdown","RealizingCountdown","SlackThreshold","ShapingPretenstFactor","ShapingStiffnessFactor","ShapingDrag","MaxStrain","VisualStrain","NexusPushLength","ColumnPushLength","TriangleLength","RingLength","NexusCrossLength","ColumnCrossLength","BowMidLength","BowEndLength","PushOverPull","PushRadius","PullRadius","JointRadius","MaxStiffness","IntervalRole","NexusPush","ColumnPush","Triangle","Ring","NexusCross","ColumnCross","BowMid","BowEnd","FacePull","Fabric","this","key","value","ret","__wrap","fabric","x","y","z","alpha_index","omega_index","interval_role","ideal_length","rest_length","stiffness","linear_density","countdown","index","joint0","joint1","joint2","requested_stage","world","World","altitude","factor","m","ptr0","len0","view","View","get","arg0","obj","create","prototype","joint_count","joint_locations","joint_velocities","line_locations","line_colors","face_midpoints","face_normals","face_vertex_locations","unit_vectors","ideal_lengths","strains","strain_nuances","stiffnesses","linear_densities","pushes","pulls","surface_character","push_and_pull","feature","percent","__wbindgen_throw","arg1"],"mappings":"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","file":"static/js/0.efd8075c.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/fluxe/pretenst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fluxe/pretenst/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as wasm from './eig_bg.wasm';\nvar cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(\"expected instance of \".concat(klass.name));\n  }\n\n  return instance.ptr;\n}\n\nvar cachegetFloat32Memory0 = null;\n\nfunction getFloat32Memory0() {\n  if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n  }\n\n  return cachegetFloat32Memory0;\n}\n\nvar WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n  var ptr = malloc(arg.length * 4);\n  getFloat32Memory0().set(arg, ptr / 4);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n/**\n* @param {number} fabric_feature\n* @returns {number}\n*/\n\n\nexport function default_fabric_feature(fabric_feature) {\n  var ret = wasm.default_fabric_feature(fabric_feature);\n  return ret;\n}\n/**\n*/\n\nexport var Stage = Object.freeze({\n  Busy: 0,\n  Growing: 1,\n  Shaping: 2,\n  Slack: 3,\n  Realizing: 4,\n  Realized: 5\n});\n/**\n*/\n\nexport var SurfaceCharacter = Object.freeze({\n  Frozen: 0,\n  Sticky: 1,\n  Slippery: 2,\n  Bouncy: 3\n});\n/**\n*/\n\nexport var FabricFeature = Object.freeze({\n  Gravity: 0,\n  Drag: 1,\n  PretenstFactor: 2,\n  IterationsPerFrame: 3,\n  IntervalCountdown: 4,\n  RealizingCountdown: 5,\n  SlackThreshold: 6,\n  ShapingPretenstFactor: 7,\n  ShapingStiffnessFactor: 8,\n  ShapingDrag: 9,\n  MaxStrain: 10,\n  VisualStrain: 11,\n  NexusPushLength: 12,\n  ColumnPushLength: 13,\n  TriangleLength: 14,\n  RingLength: 15,\n  NexusCrossLength: 16,\n  ColumnCrossLength: 17,\n  BowMidLength: 18,\n  BowEndLength: 19,\n  PushOverPull: 20,\n  PushRadius: 21,\n  PullRadius: 22,\n  JointRadius: 23,\n  MaxStiffness: 24\n});\n/**\n*/\n\nexport var IntervalRole = Object.freeze({\n  NexusPush: 0,\n  ColumnPush: 1,\n  Triangle: 2,\n  Ring: 3,\n  NexusCross: 4,\n  ColumnCross: 5,\n  BowMid: 6,\n  BowEnd: 7,\n  FacePull: 8\n});\n/**\n*/\n\nexport var Fabric =\n/*#__PURE__*/\nfunction () {\n  function Fabric() {\n    _classCallCheck(this, Fabric);\n  }\n\n  _createClass(Fabric, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_fabric_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"clear\",\n\n    /**\n    */\n    value: function clear() {\n      wasm.fabric_clear(this.ptr);\n    }\n    /**\n    * @returns {Fabric}\n    */\n\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var ret = wasm.fabric_copy(this.ptr);\n      return Fabric.__wrap(ret);\n    }\n    /**\n    * @param {Fabric} fabric\n    */\n\n  }, {\n    key: \"restore\",\n    value: function restore(fabric) {\n      _assertClass(fabric, Fabric);\n\n      wasm.fabric_restore(this.ptr, fabric.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_joint_count\",\n    value: function get_joint_count() {\n      var ret = wasm.fabric_get_joint_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_interval_count\",\n    value: function get_interval_count() {\n      var ret = wasm.fabric_get_interval_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"get_face_count\",\n    value: function get_face_count() {\n      var ret = wasm.fabric_get_face_count(this.ptr);\n      return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_joint\",\n    value: function create_joint(x, y, z) {\n      var ret = wasm.fabric_create_joint(this.ptr, x, y, z);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} alpha_index\n    * @param {number} omega_index\n    * @param {number} interval_role\n    * @param {number} ideal_length\n    * @param {number} rest_length\n    * @param {number} stiffness\n    * @param {number} linear_density\n    * @param {number} countdown\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_interval\",\n    value: function create_interval(alpha_index, omega_index, interval_role, ideal_length, rest_length, stiffness, linear_density, countdown) {\n      var ret = wasm.fabric_create_interval(this.ptr, alpha_index, omega_index, interval_role, ideal_length, rest_length, stiffness, linear_density, countdown);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    */\n\n  }, {\n    key: \"remove_interval\",\n    value: function remove_interval(index) {\n      wasm.fabric_remove_interval(this.ptr, index);\n    }\n    /**\n    * @param {number} joint0\n    * @param {number} joint1\n    * @param {number} joint2\n    * @returns {number}\n    */\n\n  }, {\n    key: \"create_face\",\n    value: function create_face(joint0, joint1, joint2) {\n      var ret = wasm.fabric_create_face(this.ptr, joint0, joint1, joint2);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    */\n\n  }, {\n    key: \"remove_face\",\n    value: function remove_face(index) {\n      wasm.fabric_remove_face(this.ptr, index);\n    }\n    /**\n    * @param {number} requested_stage\n    * @param {World} world\n    * @returns {number}\n    */\n\n  }, {\n    key: \"iterate\",\n    value: function iterate(requested_stage, world) {\n      _assertClass(world, World);\n\n      var ret = wasm.fabric_iterate(this.ptr, requested_stage, world.ptr);\n      return ret >>> 0;\n    }\n    /**\n    */\n\n  }, {\n    key: \"centralize\",\n    value: function centralize() {\n      wasm.fabric_centralize(this.ptr);\n    }\n    /**\n    * @param {number} altitude\n    * @returns {number}\n    */\n\n  }, {\n    key: \"set_altitude\",\n    value: function set_altitude(altitude) {\n      var ret = wasm.fabric_set_altitude(this.ptr, altitude);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"adopt_lengths\",\n    value: function adopt_lengths() {\n      var ret = wasm.fabric_adopt_lengths(this.ptr);\n      return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"finish_growing\",\n    value: function finish_growing() {\n      var ret = wasm.fabric_finish_growing(this.ptr);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} index\n    * @param {number} factor\n    * @param {number} countdown\n    */\n\n  }, {\n    key: \"multiply_rest_length\",\n    value: function multiply_rest_length(index, factor, countdown) {\n      wasm.fabric_multiply_rest_length(this.ptr, index, factor, countdown);\n    }\n    /**\n    * @param {number} index\n    * @param {number} rest_length\n    * @param {number} countdown\n    */\n\n  }, {\n    key: \"change_rest_length\",\n    value: function change_rest_length(index, rest_length, countdown) {\n      wasm.fabric_change_rest_length(this.ptr, index, rest_length, countdown);\n    }\n    /**\n    * @param {number} index\n    * @param {number} interval_role\n    */\n\n  }, {\n    key: \"set_interval_role\",\n    value: function set_interval_role(index, interval_role) {\n      wasm.fabric_set_interval_role(this.ptr, index, interval_role);\n    }\n    /**\n    * @param {Float32Array} m\n    */\n\n  }, {\n    key: \"apply_matrix4\",\n    value: function apply_matrix4(m) {\n      var ptr0 = passArrayF32ToWasm0(m, wasm.__wbindgen_malloc);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.fabric_apply_matrix4(this.ptr, ptr0, len0);\n    }\n    /**\n    * @param {View} view\n    * @param {World} world\n    */\n\n  }, {\n    key: \"render_to\",\n    value: function render_to(view, world) {\n      _assertClass(view, View);\n\n      _assertClass(world, World);\n\n      wasm.fabric_render_to(this.ptr, view.ptr, world.ptr);\n    }\n  }, {\n    key: \"age\",\n    get: function get() {\n      var ret = wasm.__wbg_get_fabric_age(this.ptr);\n\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    ,\n    set: function set(arg0) {\n      wasm.__wbg_set_fabric_age(this.ptr, arg0);\n    }\n    /**\n    * @param {number} joint_count\n    * @returns {Fabric}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Fabric.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(joint_count) {\n      var ret = wasm.fabric_new(joint_count);\n      return Fabric.__wrap(ret);\n    }\n  }]);\n\n  return Fabric;\n}();\n/**\n*/\n\nexport var View =\n/*#__PURE__*/\nfunction () {\n  function View() {\n    _classCallCheck(this, View);\n  }\n\n  _createClass(View, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_view_free(ptr);\n    }\n    /**\n    * @param {Fabric} fabric\n    * @returns {View}\n    */\n\n  }, {\n    key: \"clear\",\n\n    /**\n    */\n    value: function clear() {\n      wasm.view_clear(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_x\",\n    value: function midpoint_x() {\n      var ret = wasm.view_midpoint_x(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_y\",\n    value: function midpoint_y() {\n      var ret = wasm.view_midpoint_y(this.ptr);\n      return ret;\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"midpoint_z\",\n    value: function midpoint_z() {\n      var ret = wasm.view_midpoint_z(this.ptr);\n      return ret;\n    }\n    /**\n    * @param {Float32Array} joint_locations\n    */\n\n  }, {\n    key: \"copy_joint_locations_to\",\n    value: function copy_joint_locations_to(joint_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(joint_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_joint_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        joint_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} joint_velocities\n    */\n\n  }, {\n    key: \"copy_joint_velocities_to\",\n    value: function copy_joint_velocities_to(joint_velocities) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(joint_velocities, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_joint_velocities_to(this.ptr, ptr0, len0);\n      } finally {\n        joint_velocities.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} line_locations\n    */\n\n  }, {\n    key: \"copy_line_locations_to\",\n    value: function copy_line_locations_to(line_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(line_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_line_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        line_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} line_colors\n    */\n\n  }, {\n    key: \"copy_line_colors_to\",\n    value: function copy_line_colors_to(line_colors) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(line_colors, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_line_colors_to(this.ptr, ptr0, len0);\n      } finally {\n        line_colors.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_midpoints\n    */\n\n  }, {\n    key: \"copy_face_midpoints_to\",\n    value: function copy_face_midpoints_to(face_midpoints) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_midpoints, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_midpoints_to(this.ptr, ptr0, len0);\n      } finally {\n        face_midpoints.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_normals\n    */\n\n  }, {\n    key: \"copy_face_normals_to\",\n    value: function copy_face_normals_to(face_normals) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_normals, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_normals_to(this.ptr, ptr0, len0);\n      } finally {\n        face_normals.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} face_vertex_locations\n    */\n\n  }, {\n    key: \"copy_face_vertex_locations_to\",\n    value: function copy_face_vertex_locations_to(face_vertex_locations) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(face_vertex_locations, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_face_vertex_locations_to(this.ptr, ptr0, len0);\n      } finally {\n        face_vertex_locations.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} unit_vectors\n    */\n\n  }, {\n    key: \"copy_unit_vectors_to\",\n    value: function copy_unit_vectors_to(unit_vectors) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(unit_vectors, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_unit_vectors_to(this.ptr, ptr0, len0);\n      } finally {\n        unit_vectors.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} ideal_lengths\n    */\n\n  }, {\n    key: \"copy_ideal_lengths_to\",\n    value: function copy_ideal_lengths_to(ideal_lengths) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(ideal_lengths, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_ideal_lengths_to(this.ptr, ptr0, len0);\n      } finally {\n        ideal_lengths.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} strains\n    */\n\n  }, {\n    key: \"copy_strains_to\",\n    value: function copy_strains_to(strains) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(strains, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_strains_to(this.ptr, ptr0, len0);\n      } finally {\n        strains.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} strain_nuances\n    */\n\n  }, {\n    key: \"copy_strain_nuances_to\",\n    value: function copy_strain_nuances_to(strain_nuances) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(strain_nuances, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_strain_nuances_to(this.ptr, ptr0, len0);\n      } finally {\n        strain_nuances.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} stiffnesses\n    */\n\n  }, {\n    key: \"copy_stiffnesses_to\",\n    value: function copy_stiffnesses_to(stiffnesses) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(stiffnesses, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_stiffnesses_to(this.ptr, ptr0, len0);\n      } finally {\n        stiffnesses.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n    /**\n    * @param {Float32Array} linear_densities\n    */\n\n  }, {\n    key: \"copy_linear_densities_to\",\n    value: function copy_linear_densities_to(linear_densities) {\n      try {\n        var ptr0 = passArrayF32ToWasm0(linear_densities, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.view_copy_linear_densities_to(this.ptr, ptr0, len0);\n      } finally {\n        linear_densities.set(getFloat32Memory0().subarray(ptr0 / 4, ptr0 / 4 + len0));\n\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(View.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"on_fabric\",\n    value: function on_fabric(fabric) {\n      _assertClass(fabric, Fabric);\n\n      var ret = wasm.view_on_fabric(fabric.ptr);\n      return View.__wrap(ret);\n    }\n  }]);\n\n  return View;\n}();\n/**\n*/\n\nexport var World =\n/*#__PURE__*/\nfunction () {\n  function World() {\n    _classCallCheck(this, World);\n  }\n\n  _createClass(World, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_world_free(ptr);\n    }\n    /**\n    * @returns {World}\n    */\n\n  }, {\n    key: \"set_coloring\",\n\n    /**\n    * @param {boolean} pushes\n    * @param {boolean} pulls\n    */\n    value: function set_coloring(pushes, pulls) {\n      wasm.world_set_coloring(this.ptr, pushes, pulls);\n    }\n    /**\n    * @param {number} surface_character\n    */\n\n  }, {\n    key: \"set_surface_character\",\n    value: function set_surface_character(surface_character) {\n      wasm.world_set_surface_character(this.ptr, surface_character);\n    }\n    /**\n    * @param {boolean} push_and_pull\n    */\n\n  }, {\n    key: \"set_push_and_pull\",\n    value: function set_push_and_pull(push_and_pull) {\n      wasm.world_set_push_and_pull(this.ptr, push_and_pull);\n    }\n    /**\n    * @param {number} feature\n    * @param {number} value\n    * @returns {number}\n    */\n\n  }, {\n    key: \"set_float_value\",\n    value: function set_float_value(feature, value) {\n      var ret = wasm.world_set_float_value(this.ptr, feature, value);\n      return ret;\n    }\n    /**\n    * @param {number} feature\n    * @param {number} percent\n    * @returns {number}\n    */\n\n  }, {\n    key: \"set_float_percent\",\n    value: function set_float_percent(feature, percent) {\n      var ret = wasm.world_set_float_percent(this.ptr, feature, percent);\n      return ret;\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(World.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new() {\n      var ret = wasm.world_new();\n      return World.__wrap(ret);\n    }\n  }]);\n\n  return World;\n}();\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};"],"sourceRoot":""}